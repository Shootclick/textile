!function(e) {
    var t = {};
    function i(r) {
        if (t[r])
            return t[r].exports;
        var s = t[r] = {
            i: r,
            l: !1,
            exports: {}
        };
        return e[r].call(s.exports, s, s.exports, i),
        s.l = !0,
        s.exports
    }
    i.m = e,
    i.c = t,
    i.d = function(e, t, r) {
        i.o(e, t) || Object.defineProperty(e, t, {
            enumerable: !0,
            get: r
        })
    }
    ,
    i.r = function(e) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }),
        Object.defineProperty(e, "__esModule", {
            value: !0
        })
    }
    ,
    i.t = function(e, t) {
        if (1 & t && (e = i(e)),
        8 & t)
            return e;
        if (4 & t && "object" == typeof e && e && e.__esModule)
            return e;
        var r = Object.create(null);
        if (i.r(r),
        Object.defineProperty(r, "default", {
            enumerable: !0,
            value: e
        }),
        2 & t && "string" != typeof e)
            for (var s in e)
                i.d(r, s, function(t) {
                    return e[t]
                }
                .bind(null, s));
        return r
    }
    ,
    i.n = function(e) {
        var t = e && e.__esModule ? function() {
            return e.default
        }
        : function() {
            return e
        }
        ;
        return i.d(t, "a", t),
        t
    }
    ,
    i.o = function(e, t) {
        return Object.prototype.hasOwnProperty.call(e, t)
    }
    ,
    i.p = "",
    i(i.s = 86)
}([function(e, t, i) {
    "use strict";
    function r(e, t, i, r, s, n, o, a) {
        var l, d = "function" == typeof e ? e.options : e;
        if (t && (d.render = t,
        d.staticRenderFns = i,
        d._compiled = !0),
        r && (d.functional = !0),
        n && (d._scopeId = "data-v-" + n),
        o ? (l = function(e) {
            (e = e || this.$vnode && this.$vnode.ssrContext || this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) || "undefined" == typeof __VUE_SSR_CONTEXT__ || (e = __VUE_SSR_CONTEXT__),
            s && s.call(this, e),
            e && e._registeredComponents && e._registeredComponents.add(o)
        }
        ,
        d._ssrRegister = l) : s && (l = a ? function() {
            s.call(this, this.$root.$options.shadowRoot)
        }
        : s),
        l)
            if (d.functional) {
                d._injectStyles = l;
                var h = d.render;
                d.render = function(e, t) {
                    return l.call(t),
                    h(e, t)
                }
            } else {
                var c = d.beforeCreate;
                d.beforeCreate = c ? [].concat(c, l) : [l]
            }
        return {
            exports: e,
            options: d
        }
    }
    i.d(t, "a", function() {
        return r
    })
}
, function(e, t) {
    var i;
    i = function() {
        return this
    }();
    try {
        i = i || new Function("return this")()
    } catch (e) {
        "object" == typeof window && (i = window)
    }
    e.exports = i
}
, function(e, t, i) {
    "use strict";
    (function(e, i) {
        /*!
 * Vue.js v2.6.10
 * (c) 2014-2019 Evan You
 * Released under the MIT License.
 */
        var r = Object.freeze({});
        function s(e) {
            return null == e
        }
        function n(e) {
            return null != e
        }
        function o(e) {
            return !0 === e
        }
        function a(e) {
            return "string" == typeof e || "number" == typeof e || "symbol" == typeof e || "boolean" == typeof e
        }
        function l(e) {
            return null !== e && "object" == typeof e
        }
        var d = Object.prototype.toString;
        function h(e) {
            return "[object Object]" === d.call(e)
        }
        function c(e) {
            return "[object RegExp]" === d.call(e)
        }
        function u(e) {
            var t = parseFloat(String(e));
            return t >= 0 && Math.floor(t) === t && isFinite(e)
        }
        function p(e) {
            return n(e) && "function" == typeof e.then && "function" == typeof e.catch
        }
        function f(e) {
            return null == e ? "" : Array.isArray(e) || h(e) && e.toString === d ? JSON.stringify(e, null, 2) : String(e)
        }
        function m(e) {
            var t = parseFloat(e);
            return isNaN(t) ? e : t
        }
        function g(e, t) {
            for (var i = Object.create(null), r = e.split(","), s = 0; s < r.length; s++)
                i[r[s]] = !0;
            return t ? function(e) {
                return i[e.toLowerCase()]
            }
            : function(e) {
                return i[e]
            }
        }
        var v = g("slot,component", !0)
          , w = g("key,ref,slot,slot-scope,is");
        function x(e, t) {
            if (e.length) {
                var i = e.indexOf(t);
                if (i > -1)
                    return e.splice(i, 1)
            }
        }
        var b = Object.prototype.hasOwnProperty;
        function y(e, t) {
            return b.call(e, t)
        }
        function _(e) {
            var t = Object.create(null);
            return function(i) {
                return t[i] || (t[i] = e(i))
            }
        }
        var q = /-(\w)/g
          , j = _(function(e) {
            return e.replace(q, function(e, t) {
                return t ? t.toUpperCase() : ""
            })
        })
          , S = _(function(e) {
            return e.charAt(0).toUpperCase() + e.slice(1)
        })
          , C = /\B([A-Z])/g
          , T = _(function(e) {
            return e.replace(C, "-$1").toLowerCase()
        });
        var I = Function.prototype.bind ? function(e, t) {
            return e.bind(t)
        }
        : function(e, t) {
            function i(i) {
                var r = arguments.length;
                return r ? r > 1 ? e.apply(t, arguments) : e.call(t, i) : e.call(t)
            }
            return i._length = e.length,
            i
        }
        ;
        function k(e, t) {
            t = t || 0;
            for (var i = e.length - t, r = new Array(i); i--; )
                r[i] = e[i + t];
            return r
        }
        function D(e, t) {
            for (var i in t)
                e[i] = t[i];
            return e
        }
        function P(e) {
            for (var t = {}, i = 0; i < e.length; i++)
                e[i] && D(t, e[i]);
            return t
        }
        function B(e, t, i) {}
        var M = function(e, t, i) {
            return !1
        }
          , H = function(e) {
            return e
        };
        function O(e, t) {
            if (e === t)
                return !0;
            var i = l(e)
              , r = l(t);
            if (!i || !r)
                return !i && !r && String(e) === String(t);
            try {
                var s = Array.isArray(e)
                  , n = Array.isArray(t);
                if (s && n)
                    return e.length === t.length && e.every(function(e, i) {
                        return O(e, t[i])
                    });
                if (e instanceof Date && t instanceof Date)
                    return e.getTime() === t.getTime();
                if (s || n)
                    return !1;
                var o = Object.keys(e)
                  , a = Object.keys(t);
                return o.length === a.length && o.every(function(i) {
                    return O(e[i], t[i])
                })
            } catch (e) {
                return !1
            }
        }
        function z(e, t) {
            for (var i = 0; i < e.length; i++)
                if (O(e[i], t))
                    return i;
            return -1
        }
        function A(e) {
            var t = !1;
            return function() {
                t || (t = !0,
                e.apply(this, arguments))
            }
        }
        var L = "data-server-rendered"
          , E = ["component", "directive", "filter"]
          , N = ["beforeCreate", "created", "beforeMount", "mounted", "beforeUpdate", "updated", "beforeDestroy", "destroyed", "activated", "deactivated", "errorCaptured", "serverPrefetch"]
          , F = {
            optionMergeStrategies: Object.create(null),
            silent: !1,
            productionTip: !1,
            devtools: !1,
            performance: !1,
            errorHandler: null,
            warnHandler: null,
            ignoredElements: [],
            keyCodes: Object.create(null),
            isReservedTag: M,
            isReservedAttr: M,
            isUnknownElement: M,
            getTagNamespace: B,
            parsePlatformTagName: H,
            mustUseProp: M,
            async: !0,
            _lifecycleHooks: N
        }
          , V = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;
        function R(e, t, i, r) {
            Object.defineProperty(e, t, {
                value: i,
                enumerable: !!r,
                writable: !0,
                configurable: !0
            })
        }
        var W = new RegExp("[^" + V.source + ".$_\\d]");
        var G, X = "__proto__"in {}, J = "undefined" != typeof window, Q = "undefined" != typeof WXEnvironment && !!WXEnvironment.platform, U = Q && WXEnvironment.platform.toLowerCase(), $ = J && window.navigator.userAgent.toLowerCase(), Y = $ && /msie|trident/.test($), K = $ && $.indexOf("msie 9.0") > 0, Z = $ && $.indexOf("edge/") > 0, ee = ($ && $.indexOf("android"),
        $ && /iphone|ipad|ipod|ios/.test($) || "ios" === U), te = ($ && /chrome\/\d+/.test($),
        $ && /phantomjs/.test($),
        $ && $.match(/firefox\/(\d+)/)), ie = {}.watch, re = !1;
        if (J)
            try {
                var se = {};
                Object.defineProperty(se, "passive", {
                    get: function() {
                        re = !0
                    }
                }),
                window.addEventListener("test-passive", null, se)
            } catch (e) {}
        var ne = function() {
            return void 0 === G && (G = !J && !Q && void 0 !== e && (e.process && "server" === e.process.env.VUE_ENV)),
            G
        }
          , oe = J && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;
        function ae(e) {
            return "function" == typeof e && /native code/.test(e.toString())
        }
        var le, de = "undefined" != typeof Symbol && ae(Symbol) && "undefined" != typeof Reflect && ae(Reflect.ownKeys);
        le = "undefined" != typeof Set && ae(Set) ? Set : function() {
            function e() {
                this.set = Object.create(null)
            }
            return e.prototype.has = function(e) {
                return !0 === this.set[e]
            }
            ,
            e.prototype.add = function(e) {
                this.set[e] = !0
            }
            ,
            e.prototype.clear = function() {
                this.set = Object.create(null)
            }
            ,
            e
        }();
        var he = B
          , ce = 0
          , ue = function() {
            this.id = ce++,
            this.subs = []
        };
        ue.prototype.addSub = function(e) {
            this.subs.push(e)
        }
        ,
        ue.prototype.removeSub = function(e) {
            x(this.subs, e)
        }
        ,
        ue.prototype.depend = function() {
            ue.target && ue.target.addDep(this)
        }
        ,
        ue.prototype.notify = function() {
            var e = this.subs.slice();
            for (var t = 0, i = e.length; t < i; t++)
                e[t].update()
        }
        ,
        ue.target = null;
        var pe = [];
        function fe(e) {
            pe.push(e),
            ue.target = e
        }
        function me() {
            pe.pop(),
            ue.target = pe[pe.length - 1]
        }
        var ge = function(e, t, i, r, s, n, o, a) {
            this.tag = e,
            this.data = t,
            this.children = i,
            this.text = r,
            this.elm = s,
            this.ns = void 0,
            this.context = n,
            this.fnContext = void 0,
            this.fnOptions = void 0,
            this.fnScopeId = void 0,
            this.key = t && t.key,
            this.componentOptions = o,
            this.componentInstance = void 0,
            this.parent = void 0,
            this.raw = !1,
            this.isStatic = !1,
            this.isRootInsert = !0,
            this.isComment = !1,
            this.isCloned = !1,
            this.isOnce = !1,
            this.asyncFactory = a,
            this.asyncMeta = void 0,
            this.isAsyncPlaceholder = !1
        }
          , ve = {
            child: {
                configurable: !0
            }
        };
        ve.child.get = function() {
            return this.componentInstance
        }
        ,
        Object.defineProperties(ge.prototype, ve);
        var we = function(e) {
            void 0 === e && (e = "");
            var t = new ge;
            return t.text = e,
            t.isComment = !0,
            t
        };
        function xe(e) {
            return new ge(void 0,void 0,void 0,String(e))
        }
        function be(e) {
            var t = new ge(e.tag,e.data,e.children && e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);
            return t.ns = e.ns,
            t.isStatic = e.isStatic,
            t.key = e.key,
            t.isComment = e.isComment,
            t.fnContext = e.fnContext,
            t.fnOptions = e.fnOptions,
            t.fnScopeId = e.fnScopeId,
            t.asyncMeta = e.asyncMeta,
            t.isCloned = !0,
            t
        }
        var ye = Array.prototype
          , _e = Object.create(ye);
        ["push", "pop", "shift", "unshift", "splice", "sort", "reverse"].forEach(function(e) {
            var t = ye[e];
            R(_e, e, function() {
                for (var i = [], r = arguments.length; r--; )
                    i[r] = arguments[r];
                var s, n = t.apply(this, i), o = this.__ob__;
                switch (e) {
                case "push":
                case "unshift":
                    s = i;
                    break;
                case "splice":
                    s = i.slice(2)
                }
                return s && o.observeArray(s),
                o.dep.notify(),
                n
            })
        });
        var qe = Object.getOwnPropertyNames(_e)
          , je = !0;
        function Se(e) {
            je = e
        }
        var Ce = function(e) {
            var t;
            this.value = e,
            this.dep = new ue,
            this.vmCount = 0,
            R(e, "__ob__", this),
            Array.isArray(e) ? (X ? (t = _e,
            e.__proto__ = t) : function(e, t, i) {
                for (var r = 0, s = i.length; r < s; r++) {
                    var n = i[r];
                    R(e, n, t[n])
                }
            }(e, _e, qe),
            this.observeArray(e)) : this.walk(e)
        };
        function Te(e, t) {
            var i;
            if (l(e) && !(e instanceof ge))
                return y(e, "__ob__") && e.__ob__ instanceof Ce ? i = e.__ob__ : je && !ne() && (Array.isArray(e) || h(e)) && Object.isExtensible(e) && !e._isVue && (i = new Ce(e)),
                t && i && i.vmCount++,
                i
        }
        function Ie(e, t, i, r, s) {
            var n = new ue
              , o = Object.getOwnPropertyDescriptor(e, t);
            if (!o || !1 !== o.configurable) {
                var a = o && o.get
                  , l = o && o.set;
                a && !l || 2 !== arguments.length || (i = e[t]);
                var d = !s && Te(i);
                Object.defineProperty(e, t, {
                    enumerable: !0,
                    configurable: !0,
                    get: function() {
                        var t = a ? a.call(e) : i;
                        return ue.target && (n.depend(),
                        d && (d.dep.depend(),
                        Array.isArray(t) && function e(t) {
                            for (var i = void 0, r = 0, s = t.length; r < s; r++)
                                (i = t[r]) && i.__ob__ && i.__ob__.dep.depend(),
                                Array.isArray(i) && e(i)
                        }(t))),
                        t
                    },
                    set: function(t) {
                        var r = a ? a.call(e) : i;
                        t === r || t != t && r != r || a && !l || (l ? l.call(e, t) : i = t,
                        d = !s && Te(t),
                        n.notify())
                    }
                })
            }
        }
        function ke(e, t, i) {
            if (Array.isArray(e) && u(t))
                return e.length = Math.max(e.length, t),
                e.splice(t, 1, i),
                i;
            if (t in e && !(t in Object.prototype))
                return e[t] = i,
                i;
            var r = e.__ob__;
            return e._isVue || r && r.vmCount ? i : r ? (Ie(r.value, t, i),
            r.dep.notify(),
            i) : (e[t] = i,
            i)
        }
        function De(e, t) {
            if (Array.isArray(e) && u(t))
                e.splice(t, 1);
            else {
                var i = e.__ob__;
                e._isVue || i && i.vmCount || y(e, t) && (delete e[t],
                i && i.dep.notify())
            }
        }
        Ce.prototype.walk = function(e) {
            for (var t = Object.keys(e), i = 0; i < t.length; i++)
                Ie(e, t[i])
        }
        ,
        Ce.prototype.observeArray = function(e) {
            for (var t = 0, i = e.length; t < i; t++)
                Te(e[t])
        }
        ;
        var Pe = F.optionMergeStrategies;
        function Be(e, t) {
            if (!t)
                return e;
            for (var i, r, s, n = de ? Reflect.ownKeys(t) : Object.keys(t), o = 0; o < n.length; o++)
                "__ob__" !== (i = n[o]) && (r = e[i],
                s = t[i],
                y(e, i) ? r !== s && h(r) && h(s) && Be(r, s) : ke(e, i, s));
            return e
        }
        function Me(e, t, i) {
            return i ? function() {
                var r = "function" == typeof t ? t.call(i, i) : t
                  , s = "function" == typeof e ? e.call(i, i) : e;
                return r ? Be(r, s) : s
            }
            : t ? e ? function() {
                return Be("function" == typeof t ? t.call(this, this) : t, "function" == typeof e ? e.call(this, this) : e)
            }
            : t : e
        }
        function He(e, t) {
            var i = t ? e ? e.concat(t) : Array.isArray(t) ? t : [t] : e;
            return i ? function(e) {
                for (var t = [], i = 0; i < e.length; i++)
                    -1 === t.indexOf(e[i]) && t.push(e[i]);
                return t
            }(i) : i
        }
        function Oe(e, t, i, r) {
            var s = Object.create(e || null);
            return t ? D(s, t) : s
        }
        Pe.data = function(e, t, i) {
            return i ? Me(e, t, i) : t && "function" != typeof t ? e : Me(e, t)
        }
        ,
        N.forEach(function(e) {
            Pe[e] = He
        }),
        E.forEach(function(e) {
            Pe[e + "s"] = Oe
        }),
        Pe.watch = function(e, t, i, r) {
            if (e === ie && (e = void 0),
            t === ie && (t = void 0),
            !t)
                return Object.create(e || null);
            if (!e)
                return t;
            var s = {};
            for (var n in D(s, e),
            t) {
                var o = s[n]
                  , a = t[n];
                o && !Array.isArray(o) && (o = [o]),
                s[n] = o ? o.concat(a) : Array.isArray(a) ? a : [a]
            }
            return s
        }
        ,
        Pe.props = Pe.methods = Pe.inject = Pe.computed = function(e, t, i, r) {
            if (!e)
                return t;
            var s = Object.create(null);
            return D(s, e),
            t && D(s, t),
            s
        }
        ,
        Pe.provide = Me;
        var ze = function(e, t) {
            return void 0 === t ? e : t
        };
        function Ae(e, t, i) {
            if ("function" == typeof t && (t = t.options),
            function(e, t) {
                var i = e.props;
                if (i) {
                    var r, s, n = {};
                    if (Array.isArray(i))
                        for (r = i.length; r--; )
                            "string" == typeof (s = i[r]) && (n[j(s)] = {
                                type: null
                            });
                    else if (h(i))
                        for (var o in i)
                            s = i[o],
                            n[j(o)] = h(s) ? s : {
                                type: s
                            };
                    e.props = n
                }
            }(t),
            function(e, t) {
                var i = e.inject;
                if (i) {
                    var r = e.inject = {};
                    if (Array.isArray(i))
                        for (var s = 0; s < i.length; s++)
                            r[i[s]] = {
                                from: i[s]
                            };
                    else if (h(i))
                        for (var n in i) {
                            var o = i[n];
                            r[n] = h(o) ? D({
                                from: n
                            }, o) : {
                                from: o
                            }
                        }
                }
            }(t),
            function(e) {
                var t = e.directives;
                if (t)
                    for (var i in t) {
                        var r = t[i];
                        "function" == typeof r && (t[i] = {
                            bind: r,
                            update: r
                        })
                    }
            }(t),
            !t._base && (t.extends && (e = Ae(e, t.extends, i)),
            t.mixins))
                for (var r = 0, s = t.mixins.length; r < s; r++)
                    e = Ae(e, t.mixins[r], i);
            var n, o = {};
            for (n in e)
                a(n);
            for (n in t)
                y(e, n) || a(n);
            function a(r) {
                var s = Pe[r] || ze;
                o[r] = s(e[r], t[r], i, r)
            }
            return o
        }
        function Le(e, t, i, r) {
            if ("string" == typeof i) {
                var s = e[t];
                if (y(s, i))
                    return s[i];
                var n = j(i);
                if (y(s, n))
                    return s[n];
                var o = S(n);
                return y(s, o) ? s[o] : s[i] || s[n] || s[o]
            }
        }
        function Ee(e, t, i, r) {
            var s = t[e]
              , n = !y(i, e)
              , o = i[e]
              , a = Ve(Boolean, s.type);
            if (a > -1)
                if (n && !y(s, "default"))
                    o = !1;
                else if ("" === o || o === T(e)) {
                    var l = Ve(String, s.type);
                    (l < 0 || a < l) && (o = !0)
                }
            if (void 0 === o) {
                o = function(e, t, i) {
                    if (!y(t, "default"))
                        return;
                    var r = t.default;
                    0;
                    if (e && e.$options.propsData && void 0 === e.$options.propsData[i] && void 0 !== e._props[i])
                        return e._props[i];
                    return "function" == typeof r && "Function" !== Ne(t.type) ? r.call(e) : r
                }(r, s, e);
                var d = je;
                Se(!0),
                Te(o),
                Se(d)
            }
            return o
        }
        function Ne(e) {
            var t = e && e.toString().match(/^\s*function (\w+)/);
            return t ? t[1] : ""
        }
        function Fe(e, t) {
            return Ne(e) === Ne(t)
        }
        function Ve(e, t) {
            if (!Array.isArray(t))
                return Fe(t, e) ? 0 : -1;
            for (var i = 0, r = t.length; i < r; i++)
                if (Fe(t[i], e))
                    return i;
            return -1
        }
        function Re(e, t, i) {
            fe();
            try {
                if (t)
                    for (var r = t; r = r.$parent; ) {
                        var s = r.$options.errorCaptured;
                        if (s)
                            for (var n = 0; n < s.length; n++)
                                try {
                                    if (!1 === s[n].call(r, e, t, i))
                                        return
                                } catch (e) {
                                    Ge(e, r, "errorCaptured hook")
                                }
                    }
                Ge(e, t, i)
            } finally {
                me()
            }
        }
        function We(e, t, i, r, s) {
            var n;
            try {
                (n = i ? e.apply(t, i) : e.call(t)) && !n._isVue && p(n) && !n._handled && (n.catch(function(e) {
                    return Re(e, r, s + " (Promise/async)")
                }),
                n._handled = !0)
            } catch (e) {
                Re(e, r, s)
            }
            return n
        }
        function Ge(e, t, i) {
            if (F.errorHandler)
                try {
                    return F.errorHandler.call(null, e, t, i)
                } catch (t) {
                    t !== e && Xe(t, null, "config.errorHandler")
                }
            Xe(e, t, i)
        }
        function Xe(e, t, i) {
            if (!J && !Q || "undefined" == typeof console)
                throw e;
            console.error(e)
        }
        var Je, Qe = !1, Ue = [], $e = !1;
        function Ye() {
            $e = !1;
            var e = Ue.slice(0);
            Ue.length = 0;
            for (var t = 0; t < e.length; t++)
                e[t]()
        }
        if ("undefined" != typeof Promise && ae(Promise)) {
            var Ke = Promise.resolve();
            Je = function() {
                Ke.then(Ye),
                ee && setTimeout(B)
            }
            ,
            Qe = !0
        } else if (Y || "undefined" == typeof MutationObserver || !ae(MutationObserver) && "[object MutationObserverConstructor]" !== MutationObserver.toString())
            Je = void 0 !== i && ae(i) ? function() {
                i(Ye)
            }
            : function() {
                setTimeout(Ye, 0)
            }
            ;
        else {
            var Ze = 1
              , et = new MutationObserver(Ye)
              , tt = document.createTextNode(String(Ze));
            et.observe(tt, {
                characterData: !0
            }),
            Je = function() {
                Ze = (Ze + 1) % 2,
                tt.data = String(Ze)
            }
            ,
            Qe = !0
        }
        function it(e, t) {
            var i;
            if (Ue.push(function() {
                if (e)
                    try {
                        e.call(t)
                    } catch (e) {
                        Re(e, t, "nextTick")
                    }
                else
                    i && i(t)
            }),
            $e || ($e = !0,
            Je()),
            !e && "undefined" != typeof Promise)
                return new Promise(function(e) {
                    i = e
                }
                )
        }
        var rt = new le;
        function st(e) {
            !function e(t, i) {
                var r, s;
                var n = Array.isArray(t);
                if (!n && !l(t) || Object.isFrozen(t) || t instanceof ge)
                    return;
                if (t.__ob__) {
                    var o = t.__ob__.dep.id;
                    if (i.has(o))
                        return;
                    i.add(o)
                }
                if (n)
                    for (r = t.length; r--; )
                        e(t[r], i);
                else
                    for (s = Object.keys(t),
                    r = s.length; r--; )
                        e(t[s[r]], i)
            }(e, rt),
            rt.clear()
        }
        var nt = _(function(e) {
            var t = "&" === e.charAt(0)
              , i = "~" === (e = t ? e.slice(1) : e).charAt(0)
              , r = "!" === (e = i ? e.slice(1) : e).charAt(0);
            return {
                name: e = r ? e.slice(1) : e,
                once: i,
                capture: r,
                passive: t
            }
        });
        function ot(e, t) {
            function i() {
                var e = arguments
                  , r = i.fns;
                if (!Array.isArray(r))
                    return We(r, null, arguments, t, "v-on handler");
                for (var s = r.slice(), n = 0; n < s.length; n++)
                    We(s[n], null, e, t, "v-on handler")
            }
            return i.fns = e,
            i
        }
        function at(e, t, i, r, n, a) {
            var l, d, h, c;
            for (l in e)
                d = e[l],
                h = t[l],
                c = nt(l),
                s(d) || (s(h) ? (s(d.fns) && (d = e[l] = ot(d, a)),
                o(c.once) && (d = e[l] = n(c.name, d, c.capture)),
                i(c.name, d, c.capture, c.passive, c.params)) : d !== h && (h.fns = d,
                e[l] = h));
            for (l in t)
                s(e[l]) && r((c = nt(l)).name, t[l], c.capture)
        }
        function lt(e, t, i) {
            var r;
            e instanceof ge && (e = e.data.hook || (e.data.hook = {}));
            var a = e[t];
            function l() {
                i.apply(this, arguments),
                x(r.fns, l)
            }
            s(a) ? r = ot([l]) : n(a.fns) && o(a.merged) ? (r = a).fns.push(l) : r = ot([a, l]),
            r.merged = !0,
            e[t] = r
        }
        function dt(e, t, i, r, s) {
            if (n(t)) {
                if (y(t, i))
                    return e[i] = t[i],
                    s || delete t[i],
                    !0;
                if (y(t, r))
                    return e[i] = t[r],
                    s || delete t[r],
                    !0
            }
            return !1
        }
        function ht(e) {
            return a(e) ? [xe(e)] : Array.isArray(e) ? function e(t, i) {
                var r = [];
                var l, d, h, c;
                for (l = 0; l < t.length; l++)
                    s(d = t[l]) || "boolean" == typeof d || (h = r.length - 1,
                    c = r[h],
                    Array.isArray(d) ? d.length > 0 && (ct((d = e(d, (i || "") + "_" + l))[0]) && ct(c) && (r[h] = xe(c.text + d[0].text),
                    d.shift()),
                    r.push.apply(r, d)) : a(d) ? ct(c) ? r[h] = xe(c.text + d) : "" !== d && r.push(xe(d)) : ct(d) && ct(c) ? r[h] = xe(c.text + d.text) : (o(t._isVList) && n(d.tag) && s(d.key) && n(i) && (d.key = "__vlist" + i + "_" + l + "__"),
                    r.push(d)));
                return r
            }(e) : void 0
        }
        function ct(e) {
            return n(e) && n(e.text) && !1 === e.isComment
        }
        function ut(e, t) {
            if (e) {
                for (var i = Object.create(null), r = de ? Reflect.ownKeys(e) : Object.keys(e), s = 0; s < r.length; s++) {
                    var n = r[s];
                    if ("__ob__" !== n) {
                        for (var o = e[n].from, a = t; a; ) {
                            if (a._provided && y(a._provided, o)) {
                                i[n] = a._provided[o];
                                break
                            }
                            a = a.$parent
                        }
                        if (!a)
                            if ("default"in e[n]) {
                                var l = e[n].default;
                                i[n] = "function" == typeof l ? l.call(t) : l
                            } else
                                0
                    }
                }
                return i
            }
        }
        function pt(e, t) {
            if (!e || !e.length)
                return {};
            for (var i = {}, r = 0, s = e.length; r < s; r++) {
                var n = e[r]
                  , o = n.data;
                if (o && o.attrs && o.attrs.slot && delete o.attrs.slot,
                n.context !== t && n.fnContext !== t || !o || null == o.slot)
                    (i.default || (i.default = [])).push(n);
                else {
                    var a = o.slot
                      , l = i[a] || (i[a] = []);
                    "template" === n.tag ? l.push.apply(l, n.children || []) : l.push(n)
                }
            }
            for (var d in i)
                i[d].every(ft) && delete i[d];
            return i
        }
        function ft(e) {
            return e.isComment && !e.asyncFactory || " " === e.text
        }
        function mt(e, t, i) {
            var s, n = Object.keys(t).length > 0, o = e ? !!e.$stable : !n, a = e && e.$key;
            if (e) {
                if (e._normalized)
                    return e._normalized;
                if (o && i && i !== r && a === i.$key && !n && !i.$hasNormal)
                    return i;
                for (var l in s = {},
                e)
                    e[l] && "$" !== l[0] && (s[l] = gt(t, l, e[l]))
            } else
                s = {};
            for (var d in t)
                d in s || (s[d] = vt(t, d));
            return e && Object.isExtensible(e) && (e._normalized = s),
            R(s, "$stable", o),
            R(s, "$key", a),
            R(s, "$hasNormal", n),
            s
        }
        function gt(e, t, i) {
            var r = function() {
                var e = arguments.length ? i.apply(null, arguments) : i({});
                return (e = e && "object" == typeof e && !Array.isArray(e) ? [e] : ht(e)) && (0 === e.length || 1 === e.length && e[0].isComment) ? void 0 : e
            };
            return i.proxy && Object.defineProperty(e, t, {
                get: r,
                enumerable: !0,
                configurable: !0
            }),
            r
        }
        function vt(e, t) {
            return function() {
                return e[t]
            }
        }
        function wt(e, t) {
            var i, r, s, o, a;
            if (Array.isArray(e) || "string" == typeof e)
                for (i = new Array(e.length),
                r = 0,
                s = e.length; r < s; r++)
                    i[r] = t(e[r], r);
            else if ("number" == typeof e)
                for (i = new Array(e),
                r = 0; r < e; r++)
                    i[r] = t(r + 1, r);
            else if (l(e))
                if (de && e[Symbol.iterator]) {
                    i = [];
                    for (var d = e[Symbol.iterator](), h = d.next(); !h.done; )
                        i.push(t(h.value, i.length)),
                        h = d.next()
                } else
                    for (o = Object.keys(e),
                    i = new Array(o.length),
                    r = 0,
                    s = o.length; r < s; r++)
                        a = o[r],
                        i[r] = t(e[a], a, r);
            return n(i) || (i = []),
            i._isVList = !0,
            i
        }
        function xt(e, t, i, r) {
            var s, n = this.$scopedSlots[e];
            n ? (i = i || {},
            r && (i = D(D({}, r), i)),
            s = n(i) || t) : s = this.$slots[e] || t;
            var o = i && i.slot;
            return o ? this.$createElement("template", {
                slot: o
            }, s) : s
        }
        function bt(e) {
            return Le(this.$options, "filters", e) || H
        }
        function yt(e, t) {
            return Array.isArray(e) ? -1 === e.indexOf(t) : e !== t
        }
        function _t(e, t, i, r, s) {
            var n = F.keyCodes[t] || i;
            return s && r && !F.keyCodes[t] ? yt(s, r) : n ? yt(n, e) : r ? T(r) !== t : void 0
        }
        function qt(e, t, i, r, s) {
            if (i)
                if (l(i)) {
                    var n;
                    Array.isArray(i) && (i = P(i));
                    var o = function(o) {
                        if ("class" === o || "style" === o || w(o))
                            n = e;
                        else {
                            var a = e.attrs && e.attrs.type;
                            n = r || F.mustUseProp(t, a, o) ? e.domProps || (e.domProps = {}) : e.attrs || (e.attrs = {})
                        }
                        var l = j(o)
                          , d = T(o);
                        l in n || d in n || (n[o] = i[o],
                        s && ((e.on || (e.on = {}))["update:" + o] = function(e) {
                            i[o] = e
                        }
                        ))
                    };
                    for (var a in i)
                        o(a)
                } else
                    ;return e
        }
        function jt(e, t) {
            var i = this._staticTrees || (this._staticTrees = [])
              , r = i[e];
            return r && !t ? r : (Ct(r = i[e] = this.$options.staticRenderFns[e].call(this._renderProxy, null, this), "__static__" + e, !1),
            r)
        }
        function St(e, t, i) {
            return Ct(e, "__once__" + t + (i ? "_" + i : ""), !0),
            e
        }
        function Ct(e, t, i) {
            if (Array.isArray(e))
                for (var r = 0; r < e.length; r++)
                    e[r] && "string" != typeof e[r] && Tt(e[r], t + "_" + r, i);
            else
                Tt(e, t, i)
        }
        function Tt(e, t, i) {
            e.isStatic = !0,
            e.key = t,
            e.isOnce = i
        }
        function It(e, t) {
            if (t)
                if (h(t)) {
                    var i = e.on = e.on ? D({}, e.on) : {};
                    for (var r in t) {
                        var s = i[r]
                          , n = t[r];
                        i[r] = s ? [].concat(s, n) : n
                    }
                } else
                    ;return e
        }
        function kt(e, t, i, r) {
            t = t || {
                $stable: !i
            };
            for (var s = 0; s < e.length; s++) {
                var n = e[s];
                Array.isArray(n) ? kt(n, t, i) : n && (n.proxy && (n.fn.proxy = !0),
                t[n.key] = n.fn)
            }
            return r && (t.$key = r),
            t
        }
        function Dt(e, t) {
            for (var i = 0; i < t.length; i += 2) {
                var r = t[i];
                "string" == typeof r && r && (e[t[i]] = t[i + 1])
            }
            return e
        }
        function Pt(e, t) {
            return "string" == typeof e ? t + e : e
        }
        function Bt(e) {
            e._o = St,
            e._n = m,
            e._s = f,
            e._l = wt,
            e._t = xt,
            e._q = O,
            e._i = z,
            e._m = jt,
            e._f = bt,
            e._k = _t,
            e._b = qt,
            e._v = xe,
            e._e = we,
            e._u = kt,
            e._g = It,
            e._d = Dt,
            e._p = Pt
        }
        function Mt(e, t, i, s, n) {
            var a, l = this, d = n.options;
            y(s, "_uid") ? (a = Object.create(s))._original = s : (a = s,
            s = s._original);
            var h = o(d._compiled)
              , c = !h;
            this.data = e,
            this.props = t,
            this.children = i,
            this.parent = s,
            this.listeners = e.on || r,
            this.injections = ut(d.inject, s),
            this.slots = function() {
                return l.$slots || mt(e.scopedSlots, l.$slots = pt(i, s)),
                l.$slots
            }
            ,
            Object.defineProperty(this, "scopedSlots", {
                enumerable: !0,
                get: function() {
                    return mt(e.scopedSlots, this.slots())
                }
            }),
            h && (this.$options = d,
            this.$slots = this.slots(),
            this.$scopedSlots = mt(e.scopedSlots, this.$slots)),
            d._scopeId ? this._c = function(e, t, i, r) {
                var n = Vt(a, e, t, i, r, c);
                return n && !Array.isArray(n) && (n.fnScopeId = d._scopeId,
                n.fnContext = s),
                n
            }
            : this._c = function(e, t, i, r) {
                return Vt(a, e, t, i, r, c)
            }
        }
        function Ht(e, t, i, r, s) {
            var n = be(e);
            return n.fnContext = i,
            n.fnOptions = r,
            t.slot && ((n.data || (n.data = {})).slot = t.slot),
            n
        }
        function Ot(e, t) {
            for (var i in t)
                e[j(i)] = t[i]
        }
        Bt(Mt.prototype);
        var zt = {
            init: function(e, t) {
                if (e.componentInstance && !e.componentInstance._isDestroyed && e.data.keepAlive) {
                    var i = e;
                    zt.prepatch(i, i)
                } else {
                    (e.componentInstance = function(e, t) {
                        var i = {
                            _isComponent: !0,
                            _parentVnode: e,
                            parent: t
                        }
                          , r = e.data.inlineTemplate;
                        n(r) && (i.render = r.render,
                        i.staticRenderFns = r.staticRenderFns);
                        return new e.componentOptions.Ctor(i)
                    }(e, Kt)).$mount(t ? e.elm : void 0, t)
                }
            },
            prepatch: function(e, t) {
                var i = t.componentOptions;
                !function(e, t, i, s, n) {
                    0;
                    var o = s.data.scopedSlots
                      , a = e.$scopedSlots
                      , l = !!(o && !o.$stable || a !== r && !a.$stable || o && e.$scopedSlots.$key !== o.$key)
                      , d = !!(n || e.$options._renderChildren || l);
                    e.$options._parentVnode = s,
                    e.$vnode = s,
                    e._vnode && (e._vnode.parent = s);
                    if (e.$options._renderChildren = n,
                    e.$attrs = s.data.attrs || r,
                    e.$listeners = i || r,
                    t && e.$options.props) {
                        Se(!1);
                        for (var h = e._props, c = e.$options._propKeys || [], u = 0; u < c.length; u++) {
                            var p = c[u]
                              , f = e.$options.props;
                            h[p] = Ee(p, f, t, e)
                        }
                        Se(!0),
                        e.$options.propsData = t
                    }
                    i = i || r;
                    var m = e.$options._parentListeners;
                    e.$options._parentListeners = i,
                    Yt(e, i, m),
                    d && (e.$slots = pt(n, s.context),
                    e.$forceUpdate());
                    0
                }(t.componentInstance = e.componentInstance, i.propsData, i.listeners, t, i.children)
            },
            insert: function(e) {
                var t, i = e.context, r = e.componentInstance;
                r._isMounted || (r._isMounted = !0,
                ii(r, "mounted")),
                e.data.keepAlive && (i._isMounted ? ((t = r)._inactive = !1,
                si.push(t)) : ti(r, !0))
            },
            destroy: function(e) {
                var t = e.componentInstance;
                t._isDestroyed || (e.data.keepAlive ? function e(t, i) {
                    if (i && (t._directInactive = !0,
                    ei(t)))
                        return;
                    if (!t._inactive) {
                        t._inactive = !0;
                        for (var r = 0; r < t.$children.length; r++)
                            e(t.$children[r]);
                        ii(t, "deactivated")
                    }
                }(t, !0) : t.$destroy())
            }
        }
          , At = Object.keys(zt);
        function Lt(e, t, i, a, d) {
            if (!s(e)) {
                var h = i.$options._base;
                if (l(e) && (e = h.extend(e)),
                "function" == typeof e) {
                    var c;
                    if (s(e.cid) && void 0 === (e = function(e, t) {
                        if (o(e.error) && n(e.errorComp))
                            return e.errorComp;
                        if (n(e.resolved))
                            return e.resolved;
                        var i = Wt;
                        i && n(e.owners) && -1 === e.owners.indexOf(i) && e.owners.push(i);
                        if (o(e.loading) && n(e.loadingComp))
                            return e.loadingComp;
                        if (i && !n(e.owners)) {
                            var r = e.owners = [i]
                              , a = !0
                              , d = null
                              , h = null;
                            i.$on("hook:destroyed", function() {
                                return x(r, i)
                            });
                            var c = function(e) {
                                for (var t = 0, i = r.length; t < i; t++)
                                    r[t].$forceUpdate();
                                e && (r.length = 0,
                                null !== d && (clearTimeout(d),
                                d = null),
                                null !== h && (clearTimeout(h),
                                h = null))
                            }
                              , u = A(function(i) {
                                e.resolved = Gt(i, t),
                                a ? r.length = 0 : c(!0)
                            })
                              , f = A(function(t) {
                                n(e.errorComp) && (e.error = !0,
                                c(!0))
                            })
                              , m = e(u, f);
                            return l(m) && (p(m) ? s(e.resolved) && m.then(u, f) : p(m.component) && (m.component.then(u, f),
                            n(m.error) && (e.errorComp = Gt(m.error, t)),
                            n(m.loading) && (e.loadingComp = Gt(m.loading, t),
                            0 === m.delay ? e.loading = !0 : d = setTimeout(function() {
                                d = null,
                                s(e.resolved) && s(e.error) && (e.loading = !0,
                                c(!1))
                            }, m.delay || 200)),
                            n(m.timeout) && (h = setTimeout(function() {
                                h = null,
                                s(e.resolved) && f(null)
                            }, m.timeout)))),
                            a = !1,
                            e.loading ? e.loadingComp : e.resolved
                        }
                    }(c = e, h)))
                        return function(e, t, i, r, s) {
                            var n = we();
                            return n.asyncFactory = e,
                            n.asyncMeta = {
                                data: t,
                                context: i,
                                children: r,
                                tag: s
                            },
                            n
                        }(c, t, i, a, d);
                    t = t || {},
                    ji(e),
                    n(t.model) && function(e, t) {
                        var i = e.model && e.model.prop || "value"
                          , r = e.model && e.model.event || "input";
                        (t.attrs || (t.attrs = {}))[i] = t.model.value;
                        var s = t.on || (t.on = {})
                          , o = s[r]
                          , a = t.model.callback;
                        n(o) ? (Array.isArray(o) ? -1 === o.indexOf(a) : o !== a) && (s[r] = [a].concat(o)) : s[r] = a
                    }(e.options, t);
                    var u = function(e, t, i) {
                        var r = t.options.props;
                        if (!s(r)) {
                            var o = {}
                              , a = e.attrs
                              , l = e.props;
                            if (n(a) || n(l))
                                for (var d in r) {
                                    var h = T(d);
                                    dt(o, l, d, h, !0) || dt(o, a, d, h, !1)
                                }
                            return o
                        }
                    }(t, e);
                    if (o(e.options.functional))
                        return function(e, t, i, s, o) {
                            var a = e.options
                              , l = {}
                              , d = a.props;
                            if (n(d))
                                for (var h in d)
                                    l[h] = Ee(h, d, t || r);
                            else
                                n(i.attrs) && Ot(l, i.attrs),
                                n(i.props) && Ot(l, i.props);
                            var c = new Mt(i,l,o,s,e)
                              , u = a.render.call(null, c._c, c);
                            if (u instanceof ge)
                                return Ht(u, i, c.parent, a);
                            if (Array.isArray(u)) {
                                for (var p = ht(u) || [], f = new Array(p.length), m = 0; m < p.length; m++)
                                    f[m] = Ht(p[m], i, c.parent, a);
                                return f
                            }
                        }(e, u, t, i, a);
                    var f = t.on;
                    if (t.on = t.nativeOn,
                    o(e.options.abstract)) {
                        var m = t.slot;
                        t = {},
                        m && (t.slot = m)
                    }
                    !function(e) {
                        for (var t = e.hook || (e.hook = {}), i = 0; i < At.length; i++) {
                            var r = At[i]
                              , s = t[r]
                              , n = zt[r];
                            s === n || s && s._merged || (t[r] = s ? Et(n, s) : n)
                        }
                    }(t);
                    var g = e.options.name || d;
                    return new ge("vue-component-" + e.cid + (g ? "-" + g : ""),t,void 0,void 0,void 0,i,{
                        Ctor: e,
                        propsData: u,
                        listeners: f,
                        tag: d,
                        children: a
                    },c)
                }
            }
        }
        function Et(e, t) {
            var i = function(i, r) {
                e(i, r),
                t(i, r)
            };
            return i._merged = !0,
            i
        }
        var Nt = 1
          , Ft = 2;
        function Vt(e, t, i, r, d, h) {
            return (Array.isArray(i) || a(i)) && (d = r,
            r = i,
            i = void 0),
            o(h) && (d = Ft),
            function(e, t, i, r, a) {
                if (n(i) && n(i.__ob__))
                    return we();
                n(i) && n(i.is) && (t = i.is);
                if (!t)
                    return we();
                0;
                Array.isArray(r) && "function" == typeof r[0] && ((i = i || {}).scopedSlots = {
                    default: r[0]
                },
                r.length = 0);
                a === Ft ? r = ht(r) : a === Nt && (r = function(e) {
                    for (var t = 0; t < e.length; t++)
                        if (Array.isArray(e[t]))
                            return Array.prototype.concat.apply([], e);
                    return e
                }(r));
                var d, h;
                if ("string" == typeof t) {
                    var c;
                    h = e.$vnode && e.$vnode.ns || F.getTagNamespace(t),
                    d = F.isReservedTag(t) ? new ge(F.parsePlatformTagName(t),i,r,void 0,void 0,e) : i && i.pre || !n(c = Le(e.$options, "components", t)) ? new ge(t,i,r,void 0,void 0,e) : Lt(c, i, e, r, t)
                } else
                    d = Lt(t, i, e, r);
                return Array.isArray(d) ? d : n(d) ? (n(h) && function e(t, i, r) {
                    t.ns = i;
                    "foreignObject" === t.tag && (i = void 0,
                    r = !0);
                    if (n(t.children))
                        for (var a = 0, l = t.children.length; a < l; a++) {
                            var d = t.children[a];
                            n(d.tag) && (s(d.ns) || o(r) && "svg" !== d.tag) && e(d, i, r)
                        }
                }(d, h),
                n(i) && function(e) {
                    l(e.style) && st(e.style);
                    l(e.class) && st(e.class)
                }(i),
                d) : we()
            }(e, t, i, r, d)
        }
        var Rt, Wt = null;
        function Gt(e, t) {
            return (e.__esModule || de && "Module" === e[Symbol.toStringTag]) && (e = e.default),
            l(e) ? t.extend(e) : e
        }
        function Xt(e) {
            return e.isComment && e.asyncFactory
        }
        function Jt(e) {
            if (Array.isArray(e))
                for (var t = 0; t < e.length; t++) {
                    var i = e[t];
                    if (n(i) && (n(i.componentOptions) || Xt(i)))
                        return i
                }
        }
        function Qt(e, t) {
            Rt.$on(e, t)
        }
        function Ut(e, t) {
            Rt.$off(e, t)
        }
        function $t(e, t) {
            var i = Rt;
            return function r() {
                null !== t.apply(null, arguments) && i.$off(e, r)
            }
        }
        function Yt(e, t, i) {
            Rt = e,
            at(t, i || {}, Qt, Ut, $t, e),
            Rt = void 0
        }
        var Kt = null;
        function Zt(e) {
            var t = Kt;
            return Kt = e,
            function() {
                Kt = t
            }
        }
        function ei(e) {
            for (; e && (e = e.$parent); )
                if (e._inactive)
                    return !0;
            return !1
        }
        function ti(e, t) {
            if (t) {
                if (e._directInactive = !1,
                ei(e))
                    return
            } else if (e._directInactive)
                return;
            if (e._inactive || null === e._inactive) {
                e._inactive = !1;
                for (var i = 0; i < e.$children.length; i++)
                    ti(e.$children[i]);
                ii(e, "activated")
            }
        }
        function ii(e, t) {
            fe();
            var i = e.$options[t]
              , r = t + " hook";
            if (i)
                for (var s = 0, n = i.length; s < n; s++)
                    We(i[s], e, null, e, r);
            e._hasHookEvent && e.$emit("hook:" + t),
            me()
        }
        var ri = []
          , si = []
          , ni = {}
          , oi = !1
          , ai = !1
          , li = 0;
        var di = 0
          , hi = Date.now;
        if (J && !Y) {
            var ci = window.performance;
            ci && "function" == typeof ci.now && hi() > document.createEvent("Event").timeStamp && (hi = function() {
                return ci.now()
            }
            )
        }
        function ui() {
            var e, t;
            for (di = hi(),
            ai = !0,
            ri.sort(function(e, t) {
                return e.id - t.id
            }),
            li = 0; li < ri.length; li++)
                (e = ri[li]).before && e.before(),
                t = e.id,
                ni[t] = null,
                e.run();
            var i = si.slice()
              , r = ri.slice();
            li = ri.length = si.length = 0,
            ni = {},
            oi = ai = !1,
            function(e) {
                for (var t = 0; t < e.length; t++)
                    e[t]._inactive = !0,
                    ti(e[t], !0)
            }(i),
            function(e) {
                var t = e.length;
                for (; t--; ) {
                    var i = e[t]
                      , r = i.vm;
                    r._watcher === i && r._isMounted && !r._isDestroyed && ii(r, "updated")
                }
            }(r),
            oe && F.devtools && oe.emit("flush")
        }
        var pi = 0
          , fi = function(e, t, i, r, s) {
            this.vm = e,
            s && (e._watcher = this),
            e._watchers.push(this),
            r ? (this.deep = !!r.deep,
            this.user = !!r.user,
            this.lazy = !!r.lazy,
            this.sync = !!r.sync,
            this.before = r.before) : this.deep = this.user = this.lazy = this.sync = !1,
            this.cb = i,
            this.id = ++pi,
            this.active = !0,
            this.dirty = this.lazy,
            this.deps = [],
            this.newDeps = [],
            this.depIds = new le,
            this.newDepIds = new le,
            this.expression = "",
            "function" == typeof t ? this.getter = t : (this.getter = function(e) {
                if (!W.test(e)) {
                    var t = e.split(".");
                    return function(e) {
                        for (var i = 0; i < t.length; i++) {
                            if (!e)
                                return;
                            e = e[t[i]]
                        }
                        return e
                    }
                }
            }(t),
            this.getter || (this.getter = B)),
            this.value = this.lazy ? void 0 : this.get()
        };
        fi.prototype.get = function() {
            var e;
            fe(this);
            var t = this.vm;
            try {
                e = this.getter.call(t, t)
            } catch (e) {
                if (!this.user)
                    throw e;
                Re(e, t, 'getter for watcher "' + this.expression + '"')
            } finally {
                this.deep && st(e),
                me(),
                this.cleanupDeps()
            }
            return e
        }
        ,
        fi.prototype.addDep = function(e) {
            var t = e.id;
            this.newDepIds.has(t) || (this.newDepIds.add(t),
            this.newDeps.push(e),
            this.depIds.has(t) || e.addSub(this))
        }
        ,
        fi.prototype.cleanupDeps = function() {
            for (var e = this.deps.length; e--; ) {
                var t = this.deps[e];
                this.newDepIds.has(t.id) || t.removeSub(this)
            }
            var i = this.depIds;
            this.depIds = this.newDepIds,
            this.newDepIds = i,
            this.newDepIds.clear(),
            i = this.deps,
            this.deps = this.newDeps,
            this.newDeps = i,
            this.newDeps.length = 0
        }
        ,
        fi.prototype.update = function() {
            this.lazy ? this.dirty = !0 : this.sync ? this.run() : function(e) {
                var t = e.id;
                if (null == ni[t]) {
                    if (ni[t] = !0,
                    ai) {
                        for (var i = ri.length - 1; i > li && ri[i].id > e.id; )
                            i--;
                        ri.splice(i + 1, 0, e)
                    } else
                        ri.push(e);
                    oi || (oi = !0,
                    it(ui))
                }
            }(this)
        }
        ,
        fi.prototype.run = function() {
            if (this.active) {
                var e = this.get();
                if (e !== this.value || l(e) || this.deep) {
                    var t = this.value;
                    if (this.value = e,
                    this.user)
                        try {
                            this.cb.call(this.vm, e, t)
                        } catch (e) {
                            Re(e, this.vm, 'callback for watcher "' + this.expression + '"')
                        }
                    else
                        this.cb.call(this.vm, e, t)
                }
            }
        }
        ,
        fi.prototype.evaluate = function() {
            this.value = this.get(),
            this.dirty = !1
        }
        ,
        fi.prototype.depend = function() {
            for (var e = this.deps.length; e--; )
                this.deps[e].depend()
        }
        ,
        fi.prototype.teardown = function() {
            if (this.active) {
                this.vm._isBeingDestroyed || x(this.vm._watchers, this);
                for (var e = this.deps.length; e--; )
                    this.deps[e].removeSub(this);
                this.active = !1
            }
        }
        ;
        var mi = {
            enumerable: !0,
            configurable: !0,
            get: B,
            set: B
        };
        function gi(e, t, i) {
            mi.get = function() {
                return this[t][i]
            }
            ,
            mi.set = function(e) {
                this[t][i] = e
            }
            ,
            Object.defineProperty(e, i, mi)
        }
        function vi(e) {
            e._watchers = [];
            var t = e.$options;
            t.props && function(e, t) {
                var i = e.$options.propsData || {}
                  , r = e._props = {}
                  , s = e.$options._propKeys = [];
                e.$parent && Se(!1);
                var n = function(n) {
                    s.push(n);
                    var o = Ee(n, t, i, e);
                    Ie(r, n, o),
                    n in e || gi(e, "_props", n)
                };
                for (var o in t)
                    n(o);
                Se(!0)
            }(e, t.props),
            t.methods && function(e, t) {
                e.$options.props;
                for (var i in t)
                    e[i] = "function" != typeof t[i] ? B : I(t[i], e)
            }(e, t.methods),
            t.data ? function(e) {
                var t = e.$options.data;
                h(t = e._data = "function" == typeof t ? function(e, t) {
                    fe();
                    try {
                        return e.call(t, t)
                    } catch (e) {
                        return Re(e, t, "data()"),
                        {}
                    } finally {
                        me()
                    }
                }(t, e) : t || {}) || (t = {});
                var i = Object.keys(t)
                  , r = e.$options.props
                  , s = (e.$options.methods,
                i.length);
                for (; s--; ) {
                    var n = i[s];
                    0,
                    r && y(r, n) || (o = void 0,
                    36 !== (o = (n + "").charCodeAt(0)) && 95 !== o && gi(e, "_data", n))
                }
                var o;
                Te(t, !0)
            }(e) : Te(e._data = {}, !0),
            t.computed && function(e, t) {
                var i = e._computedWatchers = Object.create(null)
                  , r = ne();
                for (var s in t) {
                    var n = t[s]
                      , o = "function" == typeof n ? n : n.get;
                    0,
                    r || (i[s] = new fi(e,o || B,B,wi)),
                    s in e || xi(e, s, n)
                }
            }(e, t.computed),
            t.watch && t.watch !== ie && function(e, t) {
                for (var i in t) {
                    var r = t[i];
                    if (Array.isArray(r))
                        for (var s = 0; s < r.length; s++)
                            _i(e, i, r[s]);
                    else
                        _i(e, i, r)
                }
            }(e, t.watch)
        }
        var wi = {
            lazy: !0
        };
        function xi(e, t, i) {
            var r = !ne();
            "function" == typeof i ? (mi.get = r ? bi(t) : yi(i),
            mi.set = B) : (mi.get = i.get ? r && !1 !== i.cache ? bi(t) : yi(i.get) : B,
            mi.set = i.set || B),
            Object.defineProperty(e, t, mi)
        }
        function bi(e) {
            return function() {
                var t = this._computedWatchers && this._computedWatchers[e];
                if (t)
                    return t.dirty && t.evaluate(),
                    ue.target && t.depend(),
                    t.value
            }
        }
        function yi(e) {
            return function() {
                return e.call(this, this)
            }
        }
        function _i(e, t, i, r) {
            return h(i) && (r = i,
            i = i.handler),
            "string" == typeof i && (i = e[i]),
            e.$watch(t, i, r)
        }
        var qi = 0;
        function ji(e) {
            var t = e.options;
            if (e.super) {
                var i = ji(e.super);
                if (i !== e.superOptions) {
                    e.superOptions = i;
                    var r = function(e) {
                        var t, i = e.options, r = e.sealedOptions;
                        for (var s in i)
                            i[s] !== r[s] && (t || (t = {}),
                            t[s] = i[s]);
                        return t
                    }(e);
                    r && D(e.extendOptions, r),
                    (t = e.options = Ae(i, e.extendOptions)).name && (t.components[t.name] = e)
                }
            }
            return t
        }
        function Si(e) {
            this._init(e)
        }
        function Ci(e) {
            e.cid = 0;
            var t = 1;
            e.extend = function(e) {
                e = e || {};
                var i = this
                  , r = i.cid
                  , s = e._Ctor || (e._Ctor = {});
                if (s[r])
                    return s[r];
                var n = e.name || i.options.name;
                var o = function(e) {
                    this._init(e)
                };
                return (o.prototype = Object.create(i.prototype)).constructor = o,
                o.cid = t++,
                o.options = Ae(i.options, e),
                o.super = i,
                o.options.props && function(e) {
                    var t = e.options.props;
                    for (var i in t)
                        gi(e.prototype, "_props", i)
                }(o),
                o.options.computed && function(e) {
                    var t = e.options.computed;
                    for (var i in t)
                        xi(e.prototype, i, t[i])
                }(o),
                o.extend = i.extend,
                o.mixin = i.mixin,
                o.use = i.use,
                E.forEach(function(e) {
                    o[e] = i[e]
                }),
                n && (o.options.components[n] = o),
                o.superOptions = i.options,
                o.extendOptions = e,
                o.sealedOptions = D({}, o.options),
                s[r] = o,
                o
            }
        }
        function Ti(e) {
            return e && (e.Ctor.options.name || e.tag)
        }
        function Ii(e, t) {
            return Array.isArray(e) ? e.indexOf(t) > -1 : "string" == typeof e ? e.split(",").indexOf(t) > -1 : !!c(e) && e.test(t)
        }
        function ki(e, t) {
            var i = e.cache
              , r = e.keys
              , s = e._vnode;
            for (var n in i) {
                var o = i[n];
                if (o) {
                    var a = Ti(o.componentOptions);
                    a && !t(a) && Di(i, n, r, s)
                }
            }
        }
        function Di(e, t, i, r) {
            var s = e[t];
            !s || r && s.tag === r.tag || s.componentInstance.$destroy(),
            e[t] = null,
            x(i, t)
        }
        !function(e) {
            e.prototype._init = function(e) {
                var t = this;
                t._uid = qi++,
                t._isVue = !0,
                e && e._isComponent ? function(e, t) {
                    var i = e.$options = Object.create(e.constructor.options)
                      , r = t._parentVnode;
                    i.parent = t.parent,
                    i._parentVnode = r;
                    var s = r.componentOptions;
                    i.propsData = s.propsData,
                    i._parentListeners = s.listeners,
                    i._renderChildren = s.children,
                    i._componentTag = s.tag,
                    t.render && (i.render = t.render,
                    i.staticRenderFns = t.staticRenderFns)
                }(t, e) : t.$options = Ae(ji(t.constructor), e || {}, t),
                t._renderProxy = t,
                t._self = t,
                function(e) {
                    var t = e.$options
                      , i = t.parent;
                    if (i && !t.abstract) {
                        for (; i.$options.abstract && i.$parent; )
                            i = i.$parent;
                        i.$children.push(e)
                    }
                    e.$parent = i,
                    e.$root = i ? i.$root : e,
                    e.$children = [],
                    e.$refs = {},
                    e._watcher = null,
                    e._inactive = null,
                    e._directInactive = !1,
                    e._isMounted = !1,
                    e._isDestroyed = !1,
                    e._isBeingDestroyed = !1
                }(t),
                function(e) {
                    e._events = Object.create(null),
                    e._hasHookEvent = !1;
                    var t = e.$options._parentListeners;
                    t && Yt(e, t)
                }(t),
                function(e) {
                    e._vnode = null,
                    e._staticTrees = null;
                    var t = e.$options
                      , i = e.$vnode = t._parentVnode
                      , s = i && i.context;
                    e.$slots = pt(t._renderChildren, s),
                    e.$scopedSlots = r,
                    e._c = function(t, i, r, s) {
                        return Vt(e, t, i, r, s, !1)
                    }
                    ,
                    e.$createElement = function(t, i, r, s) {
                        return Vt(e, t, i, r, s, !0)
                    }
                    ;
                    var n = i && i.data;
                    Ie(e, "$attrs", n && n.attrs || r, null, !0),
                    Ie(e, "$listeners", t._parentListeners || r, null, !0)
                }(t),
                ii(t, "beforeCreate"),
                function(e) {
                    var t = ut(e.$options.inject, e);
                    t && (Se(!1),
                    Object.keys(t).forEach(function(i) {
                        Ie(e, i, t[i])
                    }),
                    Se(!0))
                }(t),
                vi(t),
                function(e) {
                    var t = e.$options.provide;
                    t && (e._provided = "function" == typeof t ? t.call(e) : t)
                }(t),
                ii(t, "created"),
                t.$options.el && t.$mount(t.$options.el)
            }
        }(Si),
        function(e) {
            var t = {
                get: function() {
                    return this._data
                }
            }
              , i = {
                get: function() {
                    return this._props
                }
            };
            Object.defineProperty(e.prototype, "$data", t),
            Object.defineProperty(e.prototype, "$props", i),
            e.prototype.$set = ke,
            e.prototype.$delete = De,
            e.prototype.$watch = function(e, t, i) {
                if (h(t))
                    return _i(this, e, t, i);
                (i = i || {}).user = !0;
                var r = new fi(this,e,t,i);
                if (i.immediate)
                    try {
                        t.call(this, r.value)
                    } catch (e) {
                        Re(e, this, 'callback for immediate watcher "' + r.expression + '"')
                    }
                return function() {
                    r.teardown()
                }
            }
        }(Si),
        function(e) {
            var t = /^hook:/;
            e.prototype.$on = function(e, i) {
                var r = this;
                if (Array.isArray(e))
                    for (var s = 0, n = e.length; s < n; s++)
                        r.$on(e[s], i);
                else
                    (r._events[e] || (r._events[e] = [])).push(i),
                    t.test(e) && (r._hasHookEvent = !0);
                return r
            }
            ,
            e.prototype.$once = function(e, t) {
                var i = this;
                function r() {
                    i.$off(e, r),
                    t.apply(i, arguments)
                }
                return r.fn = t,
                i.$on(e, r),
                i
            }
            ,
            e.prototype.$off = function(e, t) {
                var i = this;
                if (!arguments.length)
                    return i._events = Object.create(null),
                    i;
                if (Array.isArray(e)) {
                    for (var r = 0, s = e.length; r < s; r++)
                        i.$off(e[r], t);
                    return i
                }
                var n, o = i._events[e];
                if (!o)
                    return i;
                if (!t)
                    return i._events[e] = null,
                    i;
                for (var a = o.length; a--; )
                    if ((n = o[a]) === t || n.fn === t) {
                        o.splice(a, 1);
                        break
                    }
                return i
            }
            ,
            e.prototype.$emit = function(e) {
                var t = this._events[e];
                if (t) {
                    t = t.length > 1 ? k(t) : t;
                    for (var i = k(arguments, 1), r = 'event handler for "' + e + '"', s = 0, n = t.length; s < n; s++)
                        We(t[s], this, i, this, r)
                }
                return this
            }
        }(Si),
        function(e) {
            e.prototype._update = function(e, t) {
                var i = this
                  , r = i.$el
                  , s = i._vnode
                  , n = Zt(i);
                i._vnode = e,
                i.$el = s ? i.__patch__(s, e) : i.__patch__(i.$el, e, t, !1),
                n(),
                r && (r.__vue__ = null),
                i.$el && (i.$el.__vue__ = i),
                i.$vnode && i.$parent && i.$vnode === i.$parent._vnode && (i.$parent.$el = i.$el)
            }
            ,
            e.prototype.$forceUpdate = function() {
                this._watcher && this._watcher.update()
            }
            ,
            e.prototype.$destroy = function() {
                var e = this;
                if (!e._isBeingDestroyed) {
                    ii(e, "beforeDestroy"),
                    e._isBeingDestroyed = !0;
                    var t = e.$parent;
                    !t || t._isBeingDestroyed || e.$options.abstract || x(t.$children, e),
                    e._watcher && e._watcher.teardown();
                    for (var i = e._watchers.length; i--; )
                        e._watchers[i].teardown();
                    e._data.__ob__ && e._data.__ob__.vmCount--,
                    e._isDestroyed = !0,
                    e.__patch__(e._vnode, null),
                    ii(e, "destroyed"),
                    e.$off(),
                    e.$el && (e.$el.__vue__ = null),
                    e.$vnode && (e.$vnode.parent = null)
                }
            }
        }(Si),
        function(e) {
            Bt(e.prototype),
            e.prototype.$nextTick = function(e) {
                return it(e, this)
            }
            ,
            e.prototype._render = function() {
                var e, t = this, i = t.$options, r = i.render, s = i._parentVnode;
                s && (t.$scopedSlots = mt(s.data.scopedSlots, t.$slots, t.$scopedSlots)),
                t.$vnode = s;
                try {
                    Wt = t,
                    e = r.call(t._renderProxy, t.$createElement)
                } catch (i) {
                    Re(i, t, "render"),
                    e = t._vnode
                } finally {
                    Wt = null
                }
                return Array.isArray(e) && 1 === e.length && (e = e[0]),
                e instanceof ge || (e = we()),
                e.parent = s,
                e
            }
        }(Si);
        var Pi = [String, RegExp, Array]
          , Bi = {
            KeepAlive: {
                name: "keep-alive",
                abstract: !0,
                props: {
                    include: Pi,
                    exclude: Pi,
                    max: [String, Number]
                },
                created: function() {
                    this.cache = Object.create(null),
                    this.keys = []
                },
                destroyed: function() {
                    for (var e in this.cache)
                        Di(this.cache, e, this.keys)
                },
                mounted: function() {
                    var e = this;
                    this.$watch("include", function(t) {
                        ki(e, function(e) {
                            return Ii(t, e)
                        })
                    }),
                    this.$watch("exclude", function(t) {
                        ki(e, function(e) {
                            return !Ii(t, e)
                        })
                    })
                },
                render: function() {
                    var e = this.$slots.default
                      , t = Jt(e)
                      , i = t && t.componentOptions;
                    if (i) {
                        var r = Ti(i)
                          , s = this.include
                          , n = this.exclude;
                        if (s && (!r || !Ii(s, r)) || n && r && Ii(n, r))
                            return t;
                        var o = this.cache
                          , a = this.keys
                          , l = null == t.key ? i.Ctor.cid + (i.tag ? "::" + i.tag : "") : t.key;
                        o[l] ? (t.componentInstance = o[l].componentInstance,
                        x(a, l),
                        a.push(l)) : (o[l] = t,
                        a.push(l),
                        this.max && a.length > parseInt(this.max) && Di(o, a[0], a, this._vnode)),
                        t.data.keepAlive = !0
                    }
                    return t || e && e[0]
                }
            }
        };
        !function(e) {
            var t = {
                get: function() {
                    return F
                }
            };
            Object.defineProperty(e, "config", t),
            e.util = {
                warn: he,
                extend: D,
                mergeOptions: Ae,
                defineReactive: Ie
            },
            e.set = ke,
            e.delete = De,
            e.nextTick = it,
            e.observable = function(e) {
                return Te(e),
                e
            }
            ,
            e.options = Object.create(null),
            E.forEach(function(t) {
                e.options[t + "s"] = Object.create(null)
            }),
            e.options._base = e,
            D(e.options.components, Bi),
            function(e) {
                e.use = function(e) {
                    var t = this._installedPlugins || (this._installedPlugins = []);
                    if (t.indexOf(e) > -1)
                        return this;
                    var i = k(arguments, 1);
                    return i.unshift(this),
                    "function" == typeof e.install ? e.install.apply(e, i) : "function" == typeof e && e.apply(null, i),
                    t.push(e),
                    this
                }
            }(e),
            function(e) {
                e.mixin = function(e) {
                    return this.options = Ae(this.options, e),
                    this
                }
            }(e),
            Ci(e),
            function(e) {
                E.forEach(function(t) {
                    e[t] = function(e, i) {
                        return i ? ("component" === t && h(i) && (i.name = i.name || e,
                        i = this.options._base.extend(i)),
                        "directive" === t && "function" == typeof i && (i = {
                            bind: i,
                            update: i
                        }),
                        this.options[t + "s"][e] = i,
                        i) : this.options[t + "s"][e]
                    }
                })
            }(e)
        }(Si),
        Object.defineProperty(Si.prototype, "$isServer", {
            get: ne
        }),
        Object.defineProperty(Si.prototype, "$ssrContext", {
            get: function() {
                return this.$vnode && this.$vnode.ssrContext
            }
        }),
        Object.defineProperty(Si, "FunctionalRenderContext", {
            value: Mt
        }),
        Si.version = "2.6.10";
        var Mi = g("style,class")
          , Hi = g("input,textarea,option,select,progress")
          , Oi = function(e, t, i) {
            return "value" === i && Hi(e) && "button" !== t || "selected" === i && "option" === e || "checked" === i && "input" === e || "muted" === i && "video" === e
        }
          , zi = g("contenteditable,draggable,spellcheck")
          , Ai = g("events,caret,typing,plaintext-only")
          , Li = function(e, t) {
            return Ri(t) || "false" === t ? "false" : "contenteditable" === e && Ai(t) ? t : "true"
        }
          , Ei = g("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible")
          , Ni = "http://www.w3.org/1999/xlink"
          , Fi = function(e) {
            return ":" === e.charAt(5) && "xlink" === e.slice(0, 5)
        }
          , Vi = function(e) {
            return Fi(e) ? e.slice(6, e.length) : ""
        }
          , Ri = function(e) {
            return null == e || !1 === e
        };
        function Wi(e) {
            for (var t = e.data, i = e, r = e; n(r.componentInstance); )
                (r = r.componentInstance._vnode) && r.data && (t = Gi(r.data, t));
            for (; n(i = i.parent); )
                i && i.data && (t = Gi(t, i.data));
            return function(e, t) {
                if (n(e) || n(t))
                    return Xi(e, Ji(t));
                return ""
            }(t.staticClass, t.class)
        }
        function Gi(e, t) {
            return {
                staticClass: Xi(e.staticClass, t.staticClass),
                class: n(e.class) ? [e.class, t.class] : t.class
            }
        }
        function Xi(e, t) {
            return e ? t ? e + " " + t : e : t || ""
        }
        function Ji(e) {
            return Array.isArray(e) ? function(e) {
                for (var t, i = "", r = 0, s = e.length; r < s; r++)
                    n(t = Ji(e[r])) && "" !== t && (i && (i += " "),
                    i += t);
                return i
            }(e) : l(e) ? function(e) {
                var t = "";
                for (var i in e)
                    e[i] && (t && (t += " "),
                    t += i);
                return t
            }(e) : "string" == typeof e ? e : ""
        }
        var Qi = {
            svg: "http://www.w3.org/2000/svg",
            math: "http://www.w3.org/1998/Math/MathML"
        }
          , Ui = g("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot")
          , $i = g("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view", !0)
          , Yi = function(e) {
            return Ui(e) || $i(e)
        };
        function Ki(e) {
            return $i(e) ? "svg" : "math" === e ? "math" : void 0
        }
        var Zi = Object.create(null);
        var er = g("text,number,password,search,email,tel,url");
        function tr(e) {
            if ("string" == typeof e) {
                var t = document.querySelector(e);
                return t || document.createElement("div")
            }
            return e
        }
        var ir = Object.freeze({
            createElement: function(e, t) {
                var i = document.createElement(e);
                return "select" !== e ? i : (t.data && t.data.attrs && void 0 !== t.data.attrs.multiple && i.setAttribute("multiple", "multiple"),
                i)
            },
            createElementNS: function(e, t) {
                return document.createElementNS(Qi[e], t)
            },
            createTextNode: function(e) {
                return document.createTextNode(e)
            },
            createComment: function(e) {
                return document.createComment(e)
            },
            insertBefore: function(e, t, i) {
                e.insertBefore(t, i)
            },
            removeChild: function(e, t) {
                e.removeChild(t)
            },
            appendChild: function(e, t) {
                e.appendChild(t)
            },
            parentNode: function(e) {
                return e.parentNode
            },
            nextSibling: function(e) {
                return e.nextSibling
            },
            tagName: function(e) {
                return e.tagName
            },
            setTextContent: function(e, t) {
                e.textContent = t
            },
            setStyleScope: function(e, t) {
                e.setAttribute(t, "")
            }
        })
          , rr = {
            create: function(e, t) {
                sr(t)
            },
            update: function(e, t) {
                e.data.ref !== t.data.ref && (sr(e, !0),
                sr(t))
            },
            destroy: function(e) {
                sr(e, !0)
            }
        };
        function sr(e, t) {
            var i = e.data.ref;
            if (n(i)) {
                var r = e.context
                  , s = e.componentInstance || e.elm
                  , o = r.$refs;
                t ? Array.isArray(o[i]) ? x(o[i], s) : o[i] === s && (o[i] = void 0) : e.data.refInFor ? Array.isArray(o[i]) ? o[i].indexOf(s) < 0 && o[i].push(s) : o[i] = [s] : o[i] = s
            }
        }
        var nr = new ge("",{},[])
          , or = ["create", "activate", "update", "remove", "destroy"];
        function ar(e, t) {
            return e.key === t.key && (e.tag === t.tag && e.isComment === t.isComment && n(e.data) === n(t.data) && function(e, t) {
                if ("input" !== e.tag)
                    return !0;
                var i, r = n(i = e.data) && n(i = i.attrs) && i.type, s = n(i = t.data) && n(i = i.attrs) && i.type;
                return r === s || er(r) && er(s)
            }(e, t) || o(e.isAsyncPlaceholder) && e.asyncFactory === t.asyncFactory && s(t.asyncFactory.error))
        }
        function lr(e, t, i) {
            var r, s, o = {};
            for (r = t; r <= i; ++r)
                n(s = e[r].key) && (o[s] = r);
            return o
        }
        var dr = {
            create: hr,
            update: hr,
            destroy: function(e) {
                hr(e, nr)
            }
        };
        function hr(e, t) {
            (e.data.directives || t.data.directives) && function(e, t) {
                var i, r, s, n = e === nr, o = t === nr, a = ur(e.data.directives, e.context), l = ur(t.data.directives, t.context), d = [], h = [];
                for (i in l)
                    r = a[i],
                    s = l[i],
                    r ? (s.oldValue = r.value,
                    s.oldArg = r.arg,
                    fr(s, "update", t, e),
                    s.def && s.def.componentUpdated && h.push(s)) : (fr(s, "bind", t, e),
                    s.def && s.def.inserted && d.push(s));
                if (d.length) {
                    var c = function() {
                        for (var i = 0; i < d.length; i++)
                            fr(d[i], "inserted", t, e)
                    };
                    n ? lt(t, "insert", c) : c()
                }
                h.length && lt(t, "postpatch", function() {
                    for (var i = 0; i < h.length; i++)
                        fr(h[i], "componentUpdated", t, e)
                });
                if (!n)
                    for (i in a)
                        l[i] || fr(a[i], "unbind", e, e, o)
            }(e, t)
        }
        var cr = Object.create(null);
        function ur(e, t) {
            var i, r, s = Object.create(null);
            if (!e)
                return s;
            for (i = 0; i < e.length; i++)
                (r = e[i]).modifiers || (r.modifiers = cr),
                s[pr(r)] = r,
                r.def = Le(t.$options, "directives", r.name);
            return s
        }
        function pr(e) {
            return e.rawName || e.name + "." + Object.keys(e.modifiers || {}).join(".")
        }
        function fr(e, t, i, r, s) {
            var n = e.def && e.def[t];
            if (n)
                try {
                    n(i.elm, e, i, r, s)
                } catch (r) {
                    Re(r, i.context, "directive " + e.name + " " + t + " hook")
                }
        }
        var mr = [rr, dr];
        function gr(e, t) {
            var i = t.componentOptions;
            if (!(n(i) && !1 === i.Ctor.options.inheritAttrs || s(e.data.attrs) && s(t.data.attrs))) {
                var r, o, a = t.elm, l = e.data.attrs || {}, d = t.data.attrs || {};
                for (r in n(d.__ob__) && (d = t.data.attrs = D({}, d)),
                d)
                    o = d[r],
                    l[r] !== o && vr(a, r, o);
                for (r in (Y || Z) && d.value !== l.value && vr(a, "value", d.value),
                l)
                    s(d[r]) && (Fi(r) ? a.removeAttributeNS(Ni, Vi(r)) : zi(r) || a.removeAttribute(r))
            }
        }
        function vr(e, t, i) {
            e.tagName.indexOf("-") > -1 ? wr(e, t, i) : Ei(t) ? Ri(i) ? e.removeAttribute(t) : (i = "allowfullscreen" === t && "EMBED" === e.tagName ? "true" : t,
            e.setAttribute(t, i)) : zi(t) ? e.setAttribute(t, Li(t, i)) : Fi(t) ? Ri(i) ? e.removeAttributeNS(Ni, Vi(t)) : e.setAttributeNS(Ni, t, i) : wr(e, t, i)
        }
        function wr(e, t, i) {
            if (Ri(i))
                e.removeAttribute(t);
            else {
                if (Y && !K && "TEXTAREA" === e.tagName && "placeholder" === t && "" !== i && !e.__ieph) {
                    var r = function(t) {
                        t.stopImmediatePropagation(),
                        e.removeEventListener("input", r)
                    };
                    e.addEventListener("input", r),
                    e.__ieph = !0
                }
                e.setAttribute(t, i)
            }
        }
        var xr = {
            create: gr,
            update: gr
        };
        function br(e, t) {
            var i = t.elm
              , r = t.data
              , o = e.data;
            if (!(s(r.staticClass) && s(r.class) && (s(o) || s(o.staticClass) && s(o.class)))) {
                var a = Wi(t)
                  , l = i._transitionClasses;
                n(l) && (a = Xi(a, Ji(l))),
                a !== i._prevClass && (i.setAttribute("class", a),
                i._prevClass = a)
            }
        }
        var yr, _r, qr, jr, Sr, Cr, Tr = {
            create: br,
            update: br
        }, Ir = /[\w).+\-_$\]]/;
        function kr(e) {
            var t, i, r, s, n, o = !1, a = !1, l = !1, d = !1, h = 0, c = 0, u = 0, p = 0;
            for (r = 0; r < e.length; r++)
                if (i = t,
                t = e.charCodeAt(r),
                o)
                    39 === t && 92 !== i && (o = !1);
                else if (a)
                    34 === t && 92 !== i && (a = !1);
                else if (l)
                    96 === t && 92 !== i && (l = !1);
                else if (d)
                    47 === t && 92 !== i && (d = !1);
                else if (124 !== t || 124 === e.charCodeAt(r + 1) || 124 === e.charCodeAt(r - 1) || h || c || u) {
                    switch (t) {
                    case 34:
                        a = !0;
                        break;
                    case 39:
                        o = !0;
                        break;
                    case 96:
                        l = !0;
                        break;
                    case 40:
                        u++;
                        break;
                    case 41:
                        u--;
                        break;
                    case 91:
                        c++;
                        break;
                    case 93:
                        c--;
                        break;
                    case 123:
                        h++;
                        break;
                    case 125:
                        h--
                    }
                    if (47 === t) {
                        for (var f = r - 1, m = void 0; f >= 0 && " " === (m = e.charAt(f)); f--)
                            ;
                        m && Ir.test(m) || (d = !0)
                    }
                } else
                    void 0 === s ? (p = r + 1,
                    s = e.slice(0, r).trim()) : g();
            function g() {
                (n || (n = [])).push(e.slice(p, r).trim()),
                p = r + 1
            }
            if (void 0 === s ? s = e.slice(0, r).trim() : 0 !== p && g(),
            n)
                for (r = 0; r < n.length; r++)
                    s = Dr(s, n[r]);
            return s
        }
        function Dr(e, t) {
            var i = t.indexOf("(");
            if (i < 0)
                return '_f("' + t + '")(' + e + ")";
            var r = t.slice(0, i)
              , s = t.slice(i + 1);
            return '_f("' + r + '")(' + e + (")" !== s ? "," + s : s)
        }
        function Pr(e, t) {
            console.error("[Vue compiler]: " + e)
        }
        function Br(e, t) {
            return e ? e.map(function(e) {
                return e[t]
            }).filter(function(e) {
                return e
            }) : []
        }
        function Mr(e, t, i, r, s) {
            (e.props || (e.props = [])).push(Vr({
                name: t,
                value: i,
                dynamic: s
            }, r)),
            e.plain = !1
        }
        function Hr(e, t, i, r, s) {
            (s ? e.dynamicAttrs || (e.dynamicAttrs = []) : e.attrs || (e.attrs = [])).push(Vr({
                name: t,
                value: i,
                dynamic: s
            }, r)),
            e.plain = !1
        }
        function Or(e, t, i, r) {
            e.attrsMap[t] = i,
            e.attrsList.push(Vr({
                name: t,
                value: i
            }, r))
        }
        function zr(e, t, i, r, s, n, o, a) {
            (e.directives || (e.directives = [])).push(Vr({
                name: t,
                rawName: i,
                value: r,
                arg: s,
                isDynamicArg: n,
                modifiers: o
            }, a)),
            e.plain = !1
        }
        function Ar(e, t, i) {
            return i ? "_p(" + t + ',"' + e + '")' : e + t
        }
        function Lr(e, t, i, s, n, o, a, l) {
            var d;
            (s = s || r).right ? l ? t = "(" + t + ")==='click'?'contextmenu':(" + t + ")" : "click" === t && (t = "contextmenu",
            delete s.right) : s.middle && (l ? t = "(" + t + ")==='click'?'mouseup':(" + t + ")" : "click" === t && (t = "mouseup")),
            s.capture && (delete s.capture,
            t = Ar("!", t, l)),
            s.once && (delete s.once,
            t = Ar("~", t, l)),
            s.passive && (delete s.passive,
            t = Ar("&", t, l)),
            s.native ? (delete s.native,
            d = e.nativeEvents || (e.nativeEvents = {})) : d = e.events || (e.events = {});
            var h = Vr({
                value: i.trim(),
                dynamic: l
            }, a);
            s !== r && (h.modifiers = s);
            var c = d[t];
            Array.isArray(c) ? n ? c.unshift(h) : c.push(h) : d[t] = c ? n ? [h, c] : [c, h] : h,
            e.plain = !1
        }
        function Er(e, t, i) {
            var r = Nr(e, ":" + t) || Nr(e, "v-bind:" + t);
            if (null != r)
                return kr(r);
            if (!1 !== i) {
                var s = Nr(e, t);
                if (null != s)
                    return JSON.stringify(s)
            }
        }
        function Nr(e, t, i) {
            var r;
            if (null != (r = e.attrsMap[t]))
                for (var s = e.attrsList, n = 0, o = s.length; n < o; n++)
                    if (s[n].name === t) {
                        s.splice(n, 1);
                        break
                    }
            return i && delete e.attrsMap[t],
            r
        }
        function Fr(e, t) {
            for (var i = e.attrsList, r = 0, s = i.length; r < s; r++) {
                var n = i[r];
                if (t.test(n.name))
                    return i.splice(r, 1),
                    n
            }
        }
        function Vr(e, t) {
            return t && (null != t.start && (e.start = t.start),
            null != t.end && (e.end = t.end)),
            e
        }
        function Rr(e, t, i) {
            var r = i || {}
              , s = r.number
              , n = "$$v";
            r.trim && (n = "(typeof $$v === 'string'? $$v.trim(): $$v)"),
            s && (n = "_n(" + n + ")");
            var o = Wr(t, n);
            e.model = {
                value: "(" + t + ")",
                expression: JSON.stringify(t),
                callback: "function ($$v) {" + o + "}"
            }
        }
        function Wr(e, t) {
            var i = function(e) {
                if (e = e.trim(),
                yr = e.length,
                e.indexOf("[") < 0 || e.lastIndexOf("]") < yr - 1)
                    return (jr = e.lastIndexOf(".")) > -1 ? {
                        exp: e.slice(0, jr),
                        key: '"' + e.slice(jr + 1) + '"'
                    } : {
                        exp: e,
                        key: null
                    };
                _r = e,
                jr = Sr = Cr = 0;
                for (; !Xr(); )
                    Jr(qr = Gr()) ? Ur(qr) : 91 === qr && Qr(qr);
                return {
                    exp: e.slice(0, Sr),
                    key: e.slice(Sr + 1, Cr)
                }
            }(e);
            return null === i.key ? e + "=" + t : "$set(" + i.exp + ", " + i.key + ", " + t + ")"
        }
        function Gr() {
            return _r.charCodeAt(++jr)
        }
        function Xr() {
            return jr >= yr
        }
        function Jr(e) {
            return 34 === e || 39 === e
        }
        function Qr(e) {
            var t = 1;
            for (Sr = jr; !Xr(); )
                if (Jr(e = Gr()))
                    Ur(e);
                else if (91 === e && t++,
                93 === e && t--,
                0 === t) {
                    Cr = jr;
                    break
                }
        }
        function Ur(e) {
            for (var t = e; !Xr() && (e = Gr()) !== t; )
                ;
        }
        var $r, Yr = "__r", Kr = "__c";
        function Zr(e, t, i) {
            var r = $r;
            return function s() {
                null !== t.apply(null, arguments) && is(e, s, i, r)
            }
        }
        var es = Qe && !(te && Number(te[1]) <= 53);
        function ts(e, t, i, r) {
            if (es) {
                var s = di
                  , n = t;
                t = n._wrapper = function(e) {
                    if (e.target === e.currentTarget || e.timeStamp >= s || e.timeStamp <= 0 || e.target.ownerDocument !== document)
                        return n.apply(this, arguments)
                }
            }
            $r.addEventListener(e, t, re ? {
                capture: i,
                passive: r
            } : i)
        }
        function is(e, t, i, r) {
            (r || $r).removeEventListener(e, t._wrapper || t, i)
        }
        function rs(e, t) {
            if (!s(e.data.on) || !s(t.data.on)) {
                var i = t.data.on || {}
                  , r = e.data.on || {};
                $r = t.elm,
                function(e) {
                    if (n(e[Yr])) {
                        var t = Y ? "change" : "input";
                        e[t] = [].concat(e[Yr], e[t] || []),
                        delete e[Yr]
                    }
                    n(e[Kr]) && (e.change = [].concat(e[Kr], e.change || []),
                    delete e[Kr])
                }(i),
                at(i, r, ts, is, Zr, t.context),
                $r = void 0
            }
        }
        var ss, ns = {
            create: rs,
            update: rs
        };
        function os(e, t) {
            if (!s(e.data.domProps) || !s(t.data.domProps)) {
                var i, r, o = t.elm, a = e.data.domProps || {}, l = t.data.domProps || {};
                for (i in n(l.__ob__) && (l = t.data.domProps = D({}, l)),
                a)
                    i in l || (o[i] = "");
                for (i in l) {
                    if (r = l[i],
                    "textContent" === i || "innerHTML" === i) {
                        if (t.children && (t.children.length = 0),
                        r === a[i])
                            continue;
                        1 === o.childNodes.length && o.removeChild(o.childNodes[0])
                    }
                    if ("value" === i && "PROGRESS" !== o.tagName) {
                        o._value = r;
                        var d = s(r) ? "" : String(r);
                        as(o, d) && (o.value = d)
                    } else if ("innerHTML" === i && $i(o.tagName) && s(o.innerHTML)) {
                        (ss = ss || document.createElement("div")).innerHTML = "<svg>" + r + "</svg>";
                        for (var h = ss.firstChild; o.firstChild; )
                            o.removeChild(o.firstChild);
                        for (; h.firstChild; )
                            o.appendChild(h.firstChild)
                    } else if (r !== a[i])
                        try {
                            o[i] = r
                        } catch (e) {}
                }
            }
        }
        function as(e, t) {
            return !e.composing && ("OPTION" === e.tagName || function(e, t) {
                var i = !0;
                try {
                    i = document.activeElement !== e
                } catch (e) {}
                return i && e.value !== t
            }(e, t) || function(e, t) {
                var i = e.value
                  , r = e._vModifiers;
                if (n(r)) {
                    if (r.number)
                        return m(i) !== m(t);
                    if (r.trim)
                        return i.trim() !== t.trim()
                }
                return i !== t
            }(e, t))
        }
        var ls = {
            create: os,
            update: os
        }
          , ds = _(function(e) {
            var t = {}
              , i = /:(.+)/;
            return e.split(/;(?![^(]*\))/g).forEach(function(e) {
                if (e) {
                    var r = e.split(i);
                    r.length > 1 && (t[r[0].trim()] = r[1].trim())
                }
            }),
            t
        });
        function hs(e) {
            var t = cs(e.style);
            return e.staticStyle ? D(e.staticStyle, t) : t
        }
        function cs(e) {
            return Array.isArray(e) ? P(e) : "string" == typeof e ? ds(e) : e
        }
        var us, ps = /^--/, fs = /\s*!important$/, ms = function(e, t, i) {
            if (ps.test(t))
                e.style.setProperty(t, i);
            else if (fs.test(i))
                e.style.setProperty(T(t), i.replace(fs, ""), "important");
            else {
                var r = vs(t);
                if (Array.isArray(i))
                    for (var s = 0, n = i.length; s < n; s++)
                        e.style[r] = i[s];
                else
                    e.style[r] = i
            }
        }, gs = ["Webkit", "Moz", "ms"], vs = _(function(e) {
            if (us = us || document.createElement("div").style,
            "filter" !== (e = j(e)) && e in us)
                return e;
            for (var t = e.charAt(0).toUpperCase() + e.slice(1), i = 0; i < gs.length; i++) {
                var r = gs[i] + t;
                if (r in us)
                    return r
            }
        });
        function ws(e, t) {
            var i = t.data
              , r = e.data;
            if (!(s(i.staticStyle) && s(i.style) && s(r.staticStyle) && s(r.style))) {
                var o, a, l = t.elm, d = r.staticStyle, h = r.normalizedStyle || r.style || {}, c = d || h, u = cs(t.data.style) || {};
                t.data.normalizedStyle = n(u.__ob__) ? D({}, u) : u;
                var p = function(e, t) {
                    var i, r = {};
                    if (t)
                        for (var s = e; s.componentInstance; )
                            (s = s.componentInstance._vnode) && s.data && (i = hs(s.data)) && D(r, i);
                    (i = hs(e.data)) && D(r, i);
                    for (var n = e; n = n.parent; )
                        n.data && (i = hs(n.data)) && D(r, i);
                    return r
                }(t, !0);
                for (a in c)
                    s(p[a]) && ms(l, a, "");
                for (a in p)
                    (o = p[a]) !== c[a] && ms(l, a, null == o ? "" : o)
            }
        }
        var xs = {
            create: ws,
            update: ws
        }
          , bs = /\s+/;
        function ys(e, t) {
            if (t && (t = t.trim()))
                if (e.classList)
                    t.indexOf(" ") > -1 ? t.split(bs).forEach(function(t) {
                        return e.classList.add(t)
                    }) : e.classList.add(t);
                else {
                    var i = " " + (e.getAttribute("class") || "") + " ";
                    i.indexOf(" " + t + " ") < 0 && e.setAttribute("class", (i + t).trim())
                }
        }
        function _s(e, t) {
            if (t && (t = t.trim()))
                if (e.classList)
                    t.indexOf(" ") > -1 ? t.split(bs).forEach(function(t) {
                        return e.classList.remove(t)
                    }) : e.classList.remove(t),
                    e.classList.length || e.removeAttribute("class");
                else {
                    for (var i = " " + (e.getAttribute("class") || "") + " ", r = " " + t + " "; i.indexOf(r) >= 0; )
                        i = i.replace(r, " ");
                    (i = i.trim()) ? e.setAttribute("class", i) : e.removeAttribute("class")
                }
        }
        function qs(e) {
            if (e) {
                if ("object" == typeof e) {
                    var t = {};
                    return !1 !== e.css && D(t, js(e.name || "v")),
                    D(t, e),
                    t
                }
                return "string" == typeof e ? js(e) : void 0
            }
        }
        var js = _(function(e) {
            return {
                enterClass: e + "-enter",
                enterToClass: e + "-enter-to",
                enterActiveClass: e + "-enter-active",
                leaveClass: e + "-leave",
                leaveToClass: e + "-leave-to",
                leaveActiveClass: e + "-leave-active"
            }
        })
          , Ss = J && !K
          , Cs = "transition"
          , Ts = "animation"
          , Is = "transition"
          , ks = "transitionend"
          , Ds = "animation"
          , Ps = "animationend";
        Ss && (void 0 === window.ontransitionend && void 0 !== window.onwebkittransitionend && (Is = "WebkitTransition",
        ks = "webkitTransitionEnd"),
        void 0 === window.onanimationend && void 0 !== window.onwebkitanimationend && (Ds = "WebkitAnimation",
        Ps = "webkitAnimationEnd"));
        var Bs = J ? window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : setTimeout : function(e) {
            return e()
        }
        ;
        function Ms(e) {
            Bs(function() {
                Bs(e)
            })
        }
        function Hs(e, t) {
            var i = e._transitionClasses || (e._transitionClasses = []);
            i.indexOf(t) < 0 && (i.push(t),
            ys(e, t))
        }
        function Os(e, t) {
            e._transitionClasses && x(e._transitionClasses, t),
            _s(e, t)
        }
        function zs(e, t, i) {
            var r = Ls(e, t)
              , s = r.type
              , n = r.timeout
              , o = r.propCount;
            if (!s)
                return i();
            var a = s === Cs ? ks : Ps
              , l = 0
              , d = function() {
                e.removeEventListener(a, h),
                i()
            }
              , h = function(t) {
                t.target === e && ++l >= o && d()
            };
            setTimeout(function() {
                l < o && d()
            }, n + 1),
            e.addEventListener(a, h)
        }
        var As = /\b(transform|all)(,|$)/;
        function Ls(e, t) {
            var i, r = window.getComputedStyle(e), s = (r[Is + "Delay"] || "").split(", "), n = (r[Is + "Duration"] || "").split(", "), o = Es(s, n), a = (r[Ds + "Delay"] || "").split(", "), l = (r[Ds + "Duration"] || "").split(", "), d = Es(a, l), h = 0, c = 0;
            return t === Cs ? o > 0 && (i = Cs,
            h = o,
            c = n.length) : t === Ts ? d > 0 && (i = Ts,
            h = d,
            c = l.length) : c = (i = (h = Math.max(o, d)) > 0 ? o > d ? Cs : Ts : null) ? i === Cs ? n.length : l.length : 0,
            {
                type: i,
                timeout: h,
                propCount: c,
                hasTransform: i === Cs && As.test(r[Is + "Property"])
            }
        }
        function Es(e, t) {
            for (; e.length < t.length; )
                e = e.concat(e);
            return Math.max.apply(null, t.map(function(t, i) {
                return Ns(t) + Ns(e[i])
            }))
        }
        function Ns(e) {
            return 1e3 * Number(e.slice(0, -1).replace(",", "."))
        }
        function Fs(e, t) {
            var i = e.elm;
            n(i._leaveCb) && (i._leaveCb.cancelled = !0,
            i._leaveCb());
            var r = qs(e.data.transition);
            if (!s(r) && !n(i._enterCb) && 1 === i.nodeType) {
                for (var o = r.css, a = r.type, d = r.enterClass, h = r.enterToClass, c = r.enterActiveClass, u = r.appearClass, p = r.appearToClass, f = r.appearActiveClass, g = r.beforeEnter, v = r.enter, w = r.afterEnter, x = r.enterCancelled, b = r.beforeAppear, y = r.appear, _ = r.afterAppear, q = r.appearCancelled, j = r.duration, S = Kt, C = Kt.$vnode; C && C.parent; )
                    S = C.context,
                    C = C.parent;
                var T = !S._isMounted || !e.isRootInsert;
                if (!T || y || "" === y) {
                    var I = T && u ? u : d
                      , k = T && f ? f : c
                      , D = T && p ? p : h
                      , P = T && b || g
                      , B = T && "function" == typeof y ? y : v
                      , M = T && _ || w
                      , H = T && q || x
                      , O = m(l(j) ? j.enter : j);
                    0;
                    var z = !1 !== o && !K
                      , L = Ws(B)
                      , E = i._enterCb = A(function() {
                        z && (Os(i, D),
                        Os(i, k)),
                        E.cancelled ? (z && Os(i, I),
                        H && H(i)) : M && M(i),
                        i._enterCb = null
                    });
                    e.data.show || lt(e, "insert", function() {
                        var t = i.parentNode
                          , r = t && t._pending && t._pending[e.key];
                        r && r.tag === e.tag && r.elm._leaveCb && r.elm._leaveCb(),
                        B && B(i, E)
                    }),
                    P && P(i),
                    z && (Hs(i, I),
                    Hs(i, k),
                    Ms(function() {
                        Os(i, I),
                        E.cancelled || (Hs(i, D),
                        L || (Rs(O) ? setTimeout(E, O) : zs(i, a, E)))
                    })),
                    e.data.show && (t && t(),
                    B && B(i, E)),
                    z || L || E()
                }
            }
        }
        function Vs(e, t) {
            var i = e.elm;
            n(i._enterCb) && (i._enterCb.cancelled = !0,
            i._enterCb());
            var r = qs(e.data.transition);
            if (s(r) || 1 !== i.nodeType)
                return t();
            if (!n(i._leaveCb)) {
                var o = r.css
                  , a = r.type
                  , d = r.leaveClass
                  , h = r.leaveToClass
                  , c = r.leaveActiveClass
                  , u = r.beforeLeave
                  , p = r.leave
                  , f = r.afterLeave
                  , g = r.leaveCancelled
                  , v = r.delayLeave
                  , w = r.duration
                  , x = !1 !== o && !K
                  , b = Ws(p)
                  , y = m(l(w) ? w.leave : w);
                0;
                var _ = i._leaveCb = A(function() {
                    i.parentNode && i.parentNode._pending && (i.parentNode._pending[e.key] = null),
                    x && (Os(i, h),
                    Os(i, c)),
                    _.cancelled ? (x && Os(i, d),
                    g && g(i)) : (t(),
                    f && f(i)),
                    i._leaveCb = null
                });
                v ? v(q) : q()
            }
            function q() {
                _.cancelled || (!e.data.show && i.parentNode && ((i.parentNode._pending || (i.parentNode._pending = {}))[e.key] = e),
                u && u(i),
                x && (Hs(i, d),
                Hs(i, c),
                Ms(function() {
                    Os(i, d),
                    _.cancelled || (Hs(i, h),
                    b || (Rs(y) ? setTimeout(_, y) : zs(i, a, _)))
                })),
                p && p(i, _),
                x || b || _())
            }
        }
        function Rs(e) {
            return "number" == typeof e && !isNaN(e)
        }
        function Ws(e) {
            if (s(e))
                return !1;
            var t = e.fns;
            return n(t) ? Ws(Array.isArray(t) ? t[0] : t) : (e._length || e.length) > 1
        }
        function Gs(e, t) {
            !0 !== t.data.show && Fs(t)
        }
        var Xs = function(e) {
            var t, i, r = {}, l = e.modules, d = e.nodeOps;
            for (t = 0; t < or.length; ++t)
                for (r[or[t]] = [],
                i = 0; i < l.length; ++i)
                    n(l[i][or[t]]) && r[or[t]].push(l[i][or[t]]);
            function h(e) {
                var t = d.parentNode(e);
                n(t) && d.removeChild(t, e)
            }
            function c(e, t, i, s, a, l, h) {
                if (n(e.elm) && n(l) && (e = l[h] = be(e)),
                e.isRootInsert = !a,
                !function(e, t, i, s) {
                    var a = e.data;
                    if (n(a)) {
                        var l = n(e.componentInstance) && a.keepAlive;
                        if (n(a = a.hook) && n(a = a.init) && a(e, !1),
                        n(e.componentInstance))
                            return u(e, t),
                            p(i, e.elm, s),
                            o(l) && function(e, t, i, s) {
                                for (var o, a = e; a.componentInstance; )
                                    if (a = a.componentInstance._vnode,
                                    n(o = a.data) && n(o = o.transition)) {
                                        for (o = 0; o < r.activate.length; ++o)
                                            r.activate[o](nr, a);
                                        t.push(a);
                                        break
                                    }
                                p(i, e.elm, s)
                            }(e, t, i, s),
                            !0
                    }
                }(e, t, i, s)) {
                    var c = e.data
                      , m = e.children
                      , g = e.tag;
                    n(g) ? (e.elm = e.ns ? d.createElementNS(e.ns, g) : d.createElement(g, e),
                    w(e),
                    f(e, m, t),
                    n(c) && v(e, t),
                    p(i, e.elm, s)) : o(e.isComment) ? (e.elm = d.createComment(e.text),
                    p(i, e.elm, s)) : (e.elm = d.createTextNode(e.text),
                    p(i, e.elm, s))
                }
            }
            function u(e, t) {
                n(e.data.pendingInsert) && (t.push.apply(t, e.data.pendingInsert),
                e.data.pendingInsert = null),
                e.elm = e.componentInstance.$el,
                m(e) ? (v(e, t),
                w(e)) : (sr(e),
                t.push(e))
            }
            function p(e, t, i) {
                n(e) && (n(i) ? d.parentNode(i) === e && d.insertBefore(e, t, i) : d.appendChild(e, t))
            }
            function f(e, t, i) {
                if (Array.isArray(t))
                    for (var r = 0; r < t.length; ++r)
                        c(t[r], i, e.elm, null, !0, t, r);
                else
                    a(e.text) && d.appendChild(e.elm, d.createTextNode(String(e.text)))
            }
            function m(e) {
                for (; e.componentInstance; )
                    e = e.componentInstance._vnode;
                return n(e.tag)
            }
            function v(e, i) {
                for (var s = 0; s < r.create.length; ++s)
                    r.create[s](nr, e);
                n(t = e.data.hook) && (n(t.create) && t.create(nr, e),
                n(t.insert) && i.push(e))
            }
            function w(e) {
                var t;
                if (n(t = e.fnScopeId))
                    d.setStyleScope(e.elm, t);
                else
                    for (var i = e; i; )
                        n(t = i.context) && n(t = t.$options._scopeId) && d.setStyleScope(e.elm, t),
                        i = i.parent;
                n(t = Kt) && t !== e.context && t !== e.fnContext && n(t = t.$options._scopeId) && d.setStyleScope(e.elm, t)
            }
            function x(e, t, i, r, s, n) {
                for (; r <= s; ++r)
                    c(i[r], n, e, t, !1, i, r)
            }
            function b(e) {
                var t, i, s = e.data;
                if (n(s))
                    for (n(t = s.hook) && n(t = t.destroy) && t(e),
                    t = 0; t < r.destroy.length; ++t)
                        r.destroy[t](e);
                if (n(t = e.children))
                    for (i = 0; i < e.children.length; ++i)
                        b(e.children[i])
            }
            function y(e, t, i, r) {
                for (; i <= r; ++i) {
                    var s = t[i];
                    n(s) && (n(s.tag) ? (_(s),
                    b(s)) : h(s.elm))
                }
            }
            function _(e, t) {
                if (n(t) || n(e.data)) {
                    var i, s = r.remove.length + 1;
                    for (n(t) ? t.listeners += s : t = function(e, t) {
                        function i() {
                            0 == --i.listeners && h(e)
                        }
                        return i.listeners = t,
                        i
                    }(e.elm, s),
                    n(i = e.componentInstance) && n(i = i._vnode) && n(i.data) && _(i, t),
                    i = 0; i < r.remove.length; ++i)
                        r.remove[i](e, t);
                    n(i = e.data.hook) && n(i = i.remove) ? i(e, t) : t()
                } else
                    h(e.elm)
            }
            function q(e, t, i, r) {
                for (var s = i; s < r; s++) {
                    var o = t[s];
                    if (n(o) && ar(e, o))
                        return s
                }
            }
            function j(e, t, i, a, l, h) {
                if (e !== t) {
                    n(t.elm) && n(a) && (t = a[l] = be(t));
                    var u = t.elm = e.elm;
                    if (o(e.isAsyncPlaceholder))
                        n(t.asyncFactory.resolved) ? T(e.elm, t, i) : t.isAsyncPlaceholder = !0;
                    else if (o(t.isStatic) && o(e.isStatic) && t.key === e.key && (o(t.isCloned) || o(t.isOnce)))
                        t.componentInstance = e.componentInstance;
                    else {
                        var p, f = t.data;
                        n(f) && n(p = f.hook) && n(p = p.prepatch) && p(e, t);
                        var g = e.children
                          , v = t.children;
                        if (n(f) && m(t)) {
                            for (p = 0; p < r.update.length; ++p)
                                r.update[p](e, t);
                            n(p = f.hook) && n(p = p.update) && p(e, t)
                        }
                        s(t.text) ? n(g) && n(v) ? g !== v && function(e, t, i, r, o) {
                            for (var a, l, h, u = 0, p = 0, f = t.length - 1, m = t[0], g = t[f], v = i.length - 1, w = i[0], b = i[v], _ = !o; u <= f && p <= v; )
                                s(m) ? m = t[++u] : s(g) ? g = t[--f] : ar(m, w) ? (j(m, w, r, i, p),
                                m = t[++u],
                                w = i[++p]) : ar(g, b) ? (j(g, b, r, i, v),
                                g = t[--f],
                                b = i[--v]) : ar(m, b) ? (j(m, b, r, i, v),
                                _ && d.insertBefore(e, m.elm, d.nextSibling(g.elm)),
                                m = t[++u],
                                b = i[--v]) : ar(g, w) ? (j(g, w, r, i, p),
                                _ && d.insertBefore(e, g.elm, m.elm),
                                g = t[--f],
                                w = i[++p]) : (s(a) && (a = lr(t, u, f)),
                                s(l = n(w.key) ? a[w.key] : q(w, t, u, f)) ? c(w, r, e, m.elm, !1, i, p) : ar(h = t[l], w) ? (j(h, w, r, i, p),
                                t[l] = void 0,
                                _ && d.insertBefore(e, h.elm, m.elm)) : c(w, r, e, m.elm, !1, i, p),
                                w = i[++p]);
                            u > f ? x(e, s(i[v + 1]) ? null : i[v + 1].elm, i, p, v, r) : p > v && y(0, t, u, f)
                        }(u, g, v, i, h) : n(v) ? (n(e.text) && d.setTextContent(u, ""),
                        x(u, null, v, 0, v.length - 1, i)) : n(g) ? y(0, g, 0, g.length - 1) : n(e.text) && d.setTextContent(u, "") : e.text !== t.text && d.setTextContent(u, t.text),
                        n(f) && n(p = f.hook) && n(p = p.postpatch) && p(e, t)
                    }
                }
            }
            function S(e, t, i) {
                if (o(i) && n(e.parent))
                    e.parent.data.pendingInsert = t;
                else
                    for (var r = 0; r < t.length; ++r)
                        t[r].data.hook.insert(t[r])
            }
            var C = g("attrs,class,staticClass,staticStyle,key");
            function T(e, t, i, r) {
                var s, a = t.tag, l = t.data, d = t.children;
                if (r = r || l && l.pre,
                t.elm = e,
                o(t.isComment) && n(t.asyncFactory))
                    return t.isAsyncPlaceholder = !0,
                    !0;
                if (n(l) && (n(s = l.hook) && n(s = s.init) && s(t, !0),
                n(s = t.componentInstance)))
                    return u(t, i),
                    !0;
                if (n(a)) {
                    if (n(d))
                        if (e.hasChildNodes())
                            if (n(s = l) && n(s = s.domProps) && n(s = s.innerHTML)) {
                                if (s !== e.innerHTML)
                                    return !1
                            } else {
                                for (var h = !0, c = e.firstChild, p = 0; p < d.length; p++) {
                                    if (!c || !T(c, d[p], i, r)) {
                                        h = !1;
                                        break
                                    }
                                    c = c.nextSibling
                                }
                                if (!h || c)
                                    return !1
                            }
                        else
                            f(t, d, i);
                    if (n(l)) {
                        var m = !1;
                        for (var g in l)
                            if (!C(g)) {
                                m = !0,
                                v(t, i);
                                break
                            }
                        !m && l.class && st(l.class)
                    }
                } else
                    e.data !== t.text && (e.data = t.text);
                return !0
            }
            return function(e, t, i, a) {
                if (!s(t)) {
                    var l, h = !1, u = [];
                    if (s(e))
                        h = !0,
                        c(t, u);
                    else {
                        var p = n(e.nodeType);
                        if (!p && ar(e, t))
                            j(e, t, u, null, null, a);
                        else {
                            if (p) {
                                if (1 === e.nodeType && e.hasAttribute(L) && (e.removeAttribute(L),
                                i = !0),
                                o(i) && T(e, t, u))
                                    return S(t, u, !0),
                                    e;
                                l = e,
                                e = new ge(d.tagName(l).toLowerCase(),{},[],void 0,l)
                            }
                            var f = e.elm
                              , g = d.parentNode(f);
                            if (c(t, u, f._leaveCb ? null : g, d.nextSibling(f)),
                            n(t.parent))
                                for (var v = t.parent, w = m(t); v; ) {
                                    for (var x = 0; x < r.destroy.length; ++x)
                                        r.destroy[x](v);
                                    if (v.elm = t.elm,
                                    w) {
                                        for (var _ = 0; _ < r.create.length; ++_)
                                            r.create[_](nr, v);
                                        var q = v.data.hook.insert;
                                        if (q.merged)
                                            for (var C = 1; C < q.fns.length; C++)
                                                q.fns[C]()
                                    } else
                                        sr(v);
                                    v = v.parent
                                }
                            n(g) ? y(0, [e], 0, 0) : n(e.tag) && b(e)
                        }
                    }
                    return S(t, u, h),
                    t.elm
                }
                n(e) && b(e)
            }
        }({
            nodeOps: ir,
            modules: [xr, Tr, ns, ls, xs, J ? {
                create: Gs,
                activate: Gs,
                remove: function(e, t) {
                    !0 !== e.data.show ? Vs(e, t) : t()
                }
            } : {}].concat(mr)
        });
        K && document.addEventListener("selectionchange", function() {
            var e = document.activeElement;
            e && e.vmodel && en(e, "input")
        });
        var Js = {
            inserted: function(e, t, i, r) {
                "select" === i.tag ? (r.elm && !r.elm._vOptions ? lt(i, "postpatch", function() {
                    Js.componentUpdated(e, t, i)
                }) : Qs(e, t, i.context),
                e._vOptions = [].map.call(e.options, Ys)) : ("textarea" === i.tag || er(e.type)) && (e._vModifiers = t.modifiers,
                t.modifiers.lazy || (e.addEventListener("compositionstart", Ks),
                e.addEventListener("compositionend", Zs),
                e.addEventListener("change", Zs),
                K && (e.vmodel = !0)))
            },
            componentUpdated: function(e, t, i) {
                if ("select" === i.tag) {
                    Qs(e, t, i.context);
                    var r = e._vOptions
                      , s = e._vOptions = [].map.call(e.options, Ys);
                    if (s.some(function(e, t) {
                        return !O(e, r[t])
                    }))
                        (e.multiple ? t.value.some(function(e) {
                            return $s(e, s)
                        }) : t.value !== t.oldValue && $s(t.value, s)) && en(e, "change")
                }
            }
        };
        function Qs(e, t, i) {
            Us(e, t, i),
            (Y || Z) && setTimeout(function() {
                Us(e, t, i)
            }, 0)
        }
        function Us(e, t, i) {
            var r = t.value
              , s = e.multiple;
            if (!s || Array.isArray(r)) {
                for (var n, o, a = 0, l = e.options.length; a < l; a++)
                    if (o = e.options[a],
                    s)
                        n = z(r, Ys(o)) > -1,
                        o.selected !== n && (o.selected = n);
                    else if (O(Ys(o), r))
                        return void (e.selectedIndex !== a && (e.selectedIndex = a));
                s || (e.selectedIndex = -1)
            }
        }
        function $s(e, t) {
            return t.every(function(t) {
                return !O(t, e)
            })
        }
        function Ys(e) {
            return "_value"in e ? e._value : e.value
        }
        function Ks(e) {
            e.target.composing = !0
        }
        function Zs(e) {
            e.target.composing && (e.target.composing = !1,
            en(e.target, "input"))
        }
        function en(e, t) {
            var i = document.createEvent("HTMLEvents");
            i.initEvent(t, !0, !0),
            e.dispatchEvent(i)
        }
        function tn(e) {
            return !e.componentInstance || e.data && e.data.transition ? e : tn(e.componentInstance._vnode)
        }
        var rn = {
            model: Js,
            show: {
                bind: function(e, t, i) {
                    var r = t.value
                      , s = (i = tn(i)).data && i.data.transition
                      , n = e.__vOriginalDisplay = "none" === e.style.display ? "" : e.style.display;
                    r && s ? (i.data.show = !0,
                    Fs(i, function() {
                        e.style.display = n
                    })) : e.style.display = r ? n : "none"
                },
                update: function(e, t, i) {
                    var r = t.value;
                    !r != !t.oldValue && ((i = tn(i)).data && i.data.transition ? (i.data.show = !0,
                    r ? Fs(i, function() {
                        e.style.display = e.__vOriginalDisplay
                    }) : Vs(i, function() {
                        e.style.display = "none"
                    })) : e.style.display = r ? e.__vOriginalDisplay : "none")
                },
                unbind: function(e, t, i, r, s) {
                    s || (e.style.display = e.__vOriginalDisplay)
                }
            }
        }
          , sn = {
            name: String,
            appear: Boolean,
            css: Boolean,
            mode: String,
            type: String,
            enterClass: String,
            leaveClass: String,
            enterToClass: String,
            leaveToClass: String,
            enterActiveClass: String,
            leaveActiveClass: String,
            appearClass: String,
            appearActiveClass: String,
            appearToClass: String,
            duration: [Number, String, Object]
        };
        function nn(e) {
            var t = e && e.componentOptions;
            return t && t.Ctor.options.abstract ? nn(Jt(t.children)) : e
        }
        function on(e) {
            var t = {}
              , i = e.$options;
            for (var r in i.propsData)
                t[r] = e[r];
            var s = i._parentListeners;
            for (var n in s)
                t[j(n)] = s[n];
            return t
        }
        function an(e, t) {
            if (/\d-keep-alive$/.test(t.tag))
                return e("keep-alive", {
                    props: t.componentOptions.propsData
                })
        }
        var ln = function(e) {
            return e.tag || Xt(e)
        }
          , dn = function(e) {
            return "show" === e.name
        }
          , hn = {
            name: "transition",
            props: sn,
            abstract: !0,
            render: function(e) {
                var t = this
                  , i = this.$slots.default;
                if (i && (i = i.filter(ln)).length) {
                    0;
                    var r = this.mode;
                    0;
                    var s = i[0];
                    if (function(e) {
                        for (; e = e.parent; )
                            if (e.data.transition)
                                return !0
                    }(this.$vnode))
                        return s;
                    var n = nn(s);
                    if (!n)
                        return s;
                    if (this._leaving)
                        return an(e, s);
                    var o = "__transition-" + this._uid + "-";
                    n.key = null == n.key ? n.isComment ? o + "comment" : o + n.tag : a(n.key) ? 0 === String(n.key).indexOf(o) ? n.key : o + n.key : n.key;
                    var l = (n.data || (n.data = {})).transition = on(this)
                      , d = this._vnode
                      , h = nn(d);
                    if (n.data.directives && n.data.directives.some(dn) && (n.data.show = !0),
                    h && h.data && !function(e, t) {
                        return t.key === e.key && t.tag === e.tag
                    }(n, h) && !Xt(h) && (!h.componentInstance || !h.componentInstance._vnode.isComment)) {
                        var c = h.data.transition = D({}, l);
                        if ("out-in" === r)
                            return this._leaving = !0,
                            lt(c, "afterLeave", function() {
                                t._leaving = !1,
                                t.$forceUpdate()
                            }),
                            an(e, s);
                        if ("in-out" === r) {
                            if (Xt(n))
                                return d;
                            var u, p = function() {
                                u()
                            };
                            lt(l, "afterEnter", p),
                            lt(l, "enterCancelled", p),
                            lt(c, "delayLeave", function(e) {
                                u = e
                            })
                        }
                    }
                    return s
                }
            }
        }
          , cn = D({
            tag: String,
            moveClass: String
        }, sn);
        function un(e) {
            e.elm._moveCb && e.elm._moveCb(),
            e.elm._enterCb && e.elm._enterCb()
        }
        function pn(e) {
            e.data.newPos = e.elm.getBoundingClientRect()
        }
        function fn(e) {
            var t = e.data.pos
              , i = e.data.newPos
              , r = t.left - i.left
              , s = t.top - i.top;
            if (r || s) {
                e.data.moved = !0;
                var n = e.elm.style;
                n.transform = n.WebkitTransform = "translate(" + r + "px," + s + "px)",
                n.transitionDuration = "0s"
            }
        }
        delete cn.mode;
        var mn = {
            Transition: hn,
            TransitionGroup: {
                props: cn,
                beforeMount: function() {
                    var e = this
                      , t = this._update;
                    this._update = function(i, r) {
                        var s = Zt(e);
                        e.__patch__(e._vnode, e.kept, !1, !0),
                        e._vnode = e.kept,
                        s(),
                        t.call(e, i, r)
                    }
                },
                render: function(e) {
                    for (var t = this.tag || this.$vnode.data.tag || "span", i = Object.create(null), r = this.prevChildren = this.children, s = this.$slots.default || [], n = this.children = [], o = on(this), a = 0; a < s.length; a++) {
                        var l = s[a];
                        if (l.tag)
                            if (null != l.key && 0 !== String(l.key).indexOf("__vlist"))
                                n.push(l),
                                i[l.key] = l,
                                (l.data || (l.data = {})).transition = o;
                            else
                                ;
                    }
                    if (r) {
                        for (var d = [], h = [], c = 0; c < r.length; c++) {
                            var u = r[c];
                            u.data.transition = o,
                            u.data.pos = u.elm.getBoundingClientRect(),
                            i[u.key] ? d.push(u) : h.push(u)
                        }
                        this.kept = e(t, null, d),
                        this.removed = h
                    }
                    return e(t, null, n)
                },
                updated: function() {
                    var e = this.prevChildren
                      , t = this.moveClass || (this.name || "v") + "-move";
                    e.length && this.hasMove(e[0].elm, t) && (e.forEach(un),
                    e.forEach(pn),
                    e.forEach(fn),
                    this._reflow = document.body.offsetHeight,
                    e.forEach(function(e) {
                        if (e.data.moved) {
                            var i = e.elm
                              , r = i.style;
                            Hs(i, t),
                            r.transform = r.WebkitTransform = r.transitionDuration = "",
                            i.addEventListener(ks, i._moveCb = function e(r) {
                                r && r.target !== i || r && !/transform$/.test(r.propertyName) || (i.removeEventListener(ks, e),
                                i._moveCb = null,
                                Os(i, t))
                            }
                            )
                        }
                    }))
                },
                methods: {
                    hasMove: function(e, t) {
                        if (!Ss)
                            return !1;
                        if (this._hasMove)
                            return this._hasMove;
                        var i = e.cloneNode();
                        e._transitionClasses && e._transitionClasses.forEach(function(e) {
                            _s(i, e)
                        }),
                        ys(i, t),
                        i.style.display = "none",
                        this.$el.appendChild(i);
                        var r = Ls(i);
                        return this.$el.removeChild(i),
                        this._hasMove = r.hasTransform
                    }
                }
            }
        };
        Si.config.mustUseProp = Oi,
        Si.config.isReservedTag = Yi,
        Si.config.isReservedAttr = Mi,
        Si.config.getTagNamespace = Ki,
        Si.config.isUnknownElement = function(e) {
            if (!J)
                return !0;
            if (Yi(e))
                return !1;
            if (e = e.toLowerCase(),
            null != Zi[e])
                return Zi[e];
            var t = document.createElement(e);
            return e.indexOf("-") > -1 ? Zi[e] = t.constructor === window.HTMLUnknownElement || t.constructor === window.HTMLElement : Zi[e] = /HTMLUnknownElement/.test(t.toString())
        }
        ,
        D(Si.options.directives, rn),
        D(Si.options.components, mn),
        Si.prototype.__patch__ = J ? Xs : B,
        Si.prototype.$mount = function(e, t) {
            return function(e, t, i) {
                var r;
                return e.$el = t,
                e.$options.render || (e.$options.render = we),
                ii(e, "beforeMount"),
                r = function() {
                    e._update(e._render(), i)
                }
                ,
                new fi(e,r,B,{
                    before: function() {
                        e._isMounted && !e._isDestroyed && ii(e, "beforeUpdate")
                    }
                },!0),
                i = !1,
                null == e.$vnode && (e._isMounted = !0,
                ii(e, "mounted")),
                e
            }(this, e = e && J ? tr(e) : void 0, t)
        }
        ,
        J && setTimeout(function() {
            F.devtools && oe && oe.emit("init", Si)
        }, 0);
        var gn = /\{\{((?:.|\r?\n)+?)\}\}/g
          , vn = /[-.*+?^${}()|[\]\/\\]/g
          , wn = _(function(e) {
            var t = e[0].replace(vn, "\\$&")
              , i = e[1].replace(vn, "\\$&");
            return new RegExp(t + "((?:.|\\n)+?)" + i,"g")
        });
        var xn = {
            staticKeys: ["staticClass"],
            transformNode: function(e, t) {
                t.warn;
                var i = Nr(e, "class");
                i && (e.staticClass = JSON.stringify(i));
                var r = Er(e, "class", !1);
                r && (e.classBinding = r)
            },
            genData: function(e) {
                var t = "";
                return e.staticClass && (t += "staticClass:" + e.staticClass + ","),
                e.classBinding && (t += "class:" + e.classBinding + ","),
                t
            }
        };
        var bn, yn = {
            staticKeys: ["staticStyle"],
            transformNode: function(e, t) {
                t.warn;
                var i = Nr(e, "style");
                i && (e.staticStyle = JSON.stringify(ds(i)));
                var r = Er(e, "style", !1);
                r && (e.styleBinding = r)
            },
            genData: function(e) {
                var t = "";
                return e.staticStyle && (t += "staticStyle:" + e.staticStyle + ","),
                e.styleBinding && (t += "style:(" + e.styleBinding + "),"),
                t
            }
        }, _n = function(e) {
            return (bn = bn || document.createElement("div")).innerHTML = e,
            bn.textContent
        }, qn = g("area,base,br,col,embed,frame,hr,img,input,isindex,keygen,link,meta,param,source,track,wbr"), jn = g("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source"), Sn = g("address,article,aside,base,blockquote,body,caption,col,colgroup,dd,details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,title,tr,track"), Cn = /^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/, Tn = /^\s*((?:v-[\w-]+:|@|:|#)\[[^=]+\][^\s"'<>\/=]*)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/, In = "[a-zA-Z_][\\-\\.0-9_a-zA-Z" + V.source + "]*", kn = "((?:" + In + "\\:)?" + In + ")", Dn = new RegExp("^<" + kn), Pn = /^\s*(\/?)>/, Bn = new RegExp("^<\\/" + kn + "[^>]*>"), Mn = /^<!DOCTYPE [^>]+>/i, Hn = /^<!\--/, On = /^<!\[/, zn = g("script,style,textarea", !0), An = {}, Ln = {
            "&lt;": "<",
            "&gt;": ">",
            "&quot;": '"',
            "&amp;": "&",
            "&#10;": "\n",
            "&#9;": "\t",
            "&#39;": "'"
        }, En = /&(?:lt|gt|quot|amp|#39);/g, Nn = /&(?:lt|gt|quot|amp|#39|#10|#9);/g, Fn = g("pre,textarea", !0), Vn = function(e, t) {
            return e && Fn(e) && "\n" === t[0]
        };
        function Rn(e, t) {
            var i = t ? Nn : En;
            return e.replace(i, function(e) {
                return Ln[e]
            })
        }
        var Wn, Gn, Xn, Jn, Qn, Un, $n, Yn, Kn = /^@|^v-on:/, Zn = /^v-|^@|^:/, eo = /([\s\S]*?)\s+(?:in|of)\s+([\s\S]*)/, to = /,([^,\}\]]*)(?:,([^,\}\]]*))?$/, io = /^\(|\)$/g, ro = /^\[.*\]$/, so = /:(.*)$/, no = /^:|^\.|^v-bind:/, oo = /\.[^.\]]+(?=[^\]]*$)/g, ao = /^v-slot(:|$)|^#/, lo = /[\r\n]/, ho = /\s+/g, co = _(_n), uo = "_empty_";
        function po(e, t, i) {
            return {
                type: 1,
                tag: e,
                attrsList: t,
                attrsMap: bo(t),
                rawAttrsMap: {},
                parent: i,
                children: []
            }
        }
        function fo(e, t) {
            Wn = t.warn || Pr,
            Un = t.isPreTag || M,
            $n = t.mustUseProp || M,
            Yn = t.getTagNamespace || M;
            var i = t.isReservedTag || M;
            (function(e) {
                return !!e.component || !i(e.tag)
            }
            ),
            Xn = Br(t.modules, "transformNode"),
            Jn = Br(t.modules, "preTransformNode"),
            Qn = Br(t.modules, "postTransformNode"),
            Gn = t.delimiters;
            var r, s, n = [], o = !1 !== t.preserveWhitespace, a = t.whitespace, l = !1, d = !1;
            function h(e) {
                if (c(e),
                l || e.processed || (e = mo(e, t)),
                n.length || e === r || r.if && (e.elseif || e.else) && vo(r, {
                    exp: e.elseif,
                    block: e
                }),
                s && !e.forbidden)
                    if (e.elseif || e.else)
                        o = e,
                        (a = function(e) {
                            var t = e.length;
                            for (; t--; ) {
                                if (1 === e[t].type)
                                    return e[t];
                                e.pop()
                            }
                        }(s.children)) && a.if && vo(a, {
                            exp: o.elseif,
                            block: o
                        });
                    else {
                        if (e.slotScope) {
                            var i = e.slotTarget || '"default"';
                            (s.scopedSlots || (s.scopedSlots = {}))[i] = e
                        }
                        s.children.push(e),
                        e.parent = s
                    }
                var o, a;
                e.children = e.children.filter(function(e) {
                    return !e.slotScope
                }),
                c(e),
                e.pre && (l = !1),
                Un(e.tag) && (d = !1);
                for (var h = 0; h < Qn.length; h++)
                    Qn[h](e, t)
            }
            function c(e) {
                if (!d)
                    for (var t; (t = e.children[e.children.length - 1]) && 3 === t.type && " " === t.text; )
                        e.children.pop()
            }
            return function(e, t) {
                for (var i, r, s = [], n = t.expectHTML, o = t.isUnaryTag || M, a = t.canBeLeftOpenTag || M, l = 0; e; ) {
                    if (i = e,
                    r && zn(r)) {
                        var d = 0
                          , h = r.toLowerCase()
                          , c = An[h] || (An[h] = new RegExp("([\\s\\S]*?)(</" + h + "[^>]*>)","i"))
                          , u = e.replace(c, function(e, i, r) {
                            return d = r.length,
                            zn(h) || "noscript" === h || (i = i.replace(/<!\--([\s\S]*?)-->/g, "$1").replace(/<!\[CDATA\[([\s\S]*?)]]>/g, "$1")),
                            Vn(h, i) && (i = i.slice(1)),
                            t.chars && t.chars(i),
                            ""
                        });
                        l += e.length - u.length,
                        e = u,
                        C(h, l - d, l)
                    } else {
                        var p = e.indexOf("<");
                        if (0 === p) {
                            if (Hn.test(e)) {
                                var f = e.indexOf("--\x3e");
                                if (f >= 0) {
                                    t.shouldKeepComment && t.comment(e.substring(4, f), l, l + f + 3),
                                    q(f + 3);
                                    continue
                                }
                            }
                            if (On.test(e)) {
                                var m = e.indexOf("]>");
                                if (m >= 0) {
                                    q(m + 2);
                                    continue
                                }
                            }
                            var g = e.match(Mn);
                            if (g) {
                                q(g[0].length);
                                continue
                            }
                            var v = e.match(Bn);
                            if (v) {
                                var w = l;
                                q(v[0].length),
                                C(v[1], w, l);
                                continue
                            }
                            var x = j();
                            if (x) {
                                S(x),
                                Vn(x.tagName, e) && q(1);
                                continue
                            }
                        }
                        var b = void 0
                          , y = void 0
                          , _ = void 0;
                        if (p >= 0) {
                            for (y = e.slice(p); !(Bn.test(y) || Dn.test(y) || Hn.test(y) || On.test(y) || (_ = y.indexOf("<", 1)) < 0); )
                                p += _,
                                y = e.slice(p);
                            b = e.substring(0, p)
                        }
                        p < 0 && (b = e),
                        b && q(b.length),
                        t.chars && b && t.chars(b, l - b.length, l)
                    }
                    if (e === i) {
                        t.chars && t.chars(e);
                        break
                    }
                }
                function q(t) {
                    l += t,
                    e = e.substring(t)
                }
                function j() {
                    var t = e.match(Dn);
                    if (t) {
                        var i, r, s = {
                            tagName: t[1],
                            attrs: [],
                            start: l
                        };
                        for (q(t[0].length); !(i = e.match(Pn)) && (r = e.match(Tn) || e.match(Cn)); )
                            r.start = l,
                            q(r[0].length),
                            r.end = l,
                            s.attrs.push(r);
                        if (i)
                            return s.unarySlash = i[1],
                            q(i[0].length),
                            s.end = l,
                            s
                    }
                }
                function S(e) {
                    var i = e.tagName
                      , l = e.unarySlash;
                    n && ("p" === r && Sn(i) && C(r),
                    a(i) && r === i && C(i));
                    for (var d = o(i) || !!l, h = e.attrs.length, c = new Array(h), u = 0; u < h; u++) {
                        var p = e.attrs[u]
                          , f = p[3] || p[4] || p[5] || ""
                          , m = "a" === i && "href" === p[1] ? t.shouldDecodeNewlinesForHref : t.shouldDecodeNewlines;
                        c[u] = {
                            name: p[1],
                            value: Rn(f, m)
                        }
                    }
                    d || (s.push({
                        tag: i,
                        lowerCasedTag: i.toLowerCase(),
                        attrs: c,
                        start: e.start,
                        end: e.end
                    }),
                    r = i),
                    t.start && t.start(i, c, d, e.start, e.end)
                }
                function C(e, i, n) {
                    var o, a;
                    if (null == i && (i = l),
                    null == n && (n = l),
                    e)
                        for (a = e.toLowerCase(),
                        o = s.length - 1; o >= 0 && s[o].lowerCasedTag !== a; o--)
                            ;
                    else
                        o = 0;
                    if (o >= 0) {
                        for (var d = s.length - 1; d >= o; d--)
                            t.end && t.end(s[d].tag, i, n);
                        s.length = o,
                        r = o && s[o - 1].tag
                    } else
                        "br" === a ? t.start && t.start(e, [], !0, i, n) : "p" === a && (t.start && t.start(e, [], !1, i, n),
                        t.end && t.end(e, i, n))
                }
                C()
            }(e, {
                warn: Wn,
                expectHTML: t.expectHTML,
                isUnaryTag: t.isUnaryTag,
                canBeLeftOpenTag: t.canBeLeftOpenTag,
                shouldDecodeNewlines: t.shouldDecodeNewlines,
                shouldDecodeNewlinesForHref: t.shouldDecodeNewlinesForHref,
                shouldKeepComment: t.comments,
                outputSourceRange: t.outputSourceRange,
                start: function(e, i, o, a, c) {
                    var u = s && s.ns || Yn(e);
                    Y && "svg" === u && (i = function(e) {
                        for (var t = [], i = 0; i < e.length; i++) {
                            var r = e[i];
                            yo.test(r.name) || (r.name = r.name.replace(_o, ""),
                            t.push(r))
                        }
                        return t
                    }(i));
                    var p, f = po(e, i, s);
                    u && (f.ns = u),
                    "style" !== (p = f).tag && ("script" !== p.tag || p.attrsMap.type && "text/javascript" !== p.attrsMap.type) || ne() || (f.forbidden = !0);
                    for (var m = 0; m < Jn.length; m++)
                        f = Jn[m](f, t) || f;
                    l || (!function(e) {
                        null != Nr(e, "v-pre") && (e.pre = !0)
                    }(f),
                    f.pre && (l = !0)),
                    Un(f.tag) && (d = !0),
                    l ? function(e) {
                        var t = e.attrsList
                          , i = t.length;
                        if (i)
                            for (var r = e.attrs = new Array(i), s = 0; s < i; s++)
                                r[s] = {
                                    name: t[s].name,
                                    value: JSON.stringify(t[s].value)
                                },
                                null != t[s].start && (r[s].start = t[s].start,
                                r[s].end = t[s].end);
                        else
                            e.pre || (e.plain = !0)
                    }(f) : f.processed || (go(f),
                    function(e) {
                        var t = Nr(e, "v-if");
                        if (t)
                            e.if = t,
                            vo(e, {
                                exp: t,
                                block: e
                            });
                        else {
                            null != Nr(e, "v-else") && (e.else = !0);
                            var i = Nr(e, "v-else-if");
                            i && (e.elseif = i)
                        }
                    }(f),
                    function(e) {
                        null != Nr(e, "v-once") && (e.once = !0)
                    }(f)),
                    r || (r = f),
                    o ? h(f) : (s = f,
                    n.push(f))
                },
                end: function(e, t, i) {
                    var r = n[n.length - 1];
                    n.length -= 1,
                    s = n[n.length - 1],
                    h(r)
                },
                chars: function(e, t, i) {
                    if (s && (!Y || "textarea" !== s.tag || s.attrsMap.placeholder !== e)) {
                        var r, n, h, c = s.children;
                        if (e = d || e.trim() ? "script" === (r = s).tag || "style" === r.tag ? e : co(e) : c.length ? a ? "condense" === a && lo.test(e) ? "" : " " : o ? " " : "" : "")
                            d || "condense" !== a || (e = e.replace(ho, " ")),
                            !l && " " !== e && (n = function(e, t) {
                                var i = t ? wn(t) : gn;
                                if (i.test(e)) {
                                    for (var r, s, n, o = [], a = [], l = i.lastIndex = 0; r = i.exec(e); ) {
                                        (s = r.index) > l && (a.push(n = e.slice(l, s)),
                                        o.push(JSON.stringify(n)));
                                        var d = kr(r[1].trim());
                                        o.push("_s(" + d + ")"),
                                        a.push({
                                            "@binding": d
                                        }),
                                        l = s + r[0].length
                                    }
                                    return l < e.length && (a.push(n = e.slice(l)),
                                    o.push(JSON.stringify(n))),
                                    {
                                        expression: o.join("+"),
                                        tokens: a
                                    }
                                }
                            }(e, Gn)) ? h = {
                                type: 2,
                                expression: n.expression,
                                tokens: n.tokens,
                                text: e
                            } : " " === e && c.length && " " === c[c.length - 1].text || (h = {
                                type: 3,
                                text: e
                            }),
                            h && c.push(h)
                    }
                },
                comment: function(e, t, i) {
                    if (s) {
                        var r = {
                            type: 3,
                            text: e,
                            isComment: !0
                        };
                        0,
                        s.children.push(r)
                    }
                }
            }),
            r
        }
        function mo(e, t) {
            var i, r;
            !function(e) {
                var t = Er(e, "key");
                if (t) {
                    e.key = t
                }
            }(e),
            e.plain = !e.key && !e.scopedSlots && !e.attrsList.length,
            (r = Er(i = e, "ref")) && (i.ref = r,
            i.refInFor = function(e) {
                for (var t = e; t; ) {
                    if (void 0 !== t.for)
                        return !0;
                    t = t.parent
                }
                return !1
            }(i)),
            function(e) {
                var t;
                "template" === e.tag ? (t = Nr(e, "scope"),
                e.slotScope = t || Nr(e, "slot-scope")) : (t = Nr(e, "slot-scope")) && (e.slotScope = t);
                var i = Er(e, "slot");
                i && (e.slotTarget = '""' === i ? '"default"' : i,
                e.slotTargetDynamic = !(!e.attrsMap[":slot"] && !e.attrsMap["v-bind:slot"]),
                "template" === e.tag || e.slotScope || Hr(e, "slot", i, function(e, t) {
                    return e.rawAttrsMap[":" + t] || e.rawAttrsMap["v-bind:" + t] || e.rawAttrsMap[t]
                }(e, "slot")));
                if ("template" === e.tag) {
                    var r = Fr(e, ao);
                    if (r) {
                        0;
                        var s = wo(r)
                          , n = s.name
                          , o = s.dynamic;
                        e.slotTarget = n,
                        e.slotTargetDynamic = o,
                        e.slotScope = r.value || uo
                    }
                } else {
                    var a = Fr(e, ao);
                    if (a) {
                        0;
                        var l = e.scopedSlots || (e.scopedSlots = {})
                          , d = wo(a)
                          , h = d.name
                          , c = d.dynamic
                          , u = l[h] = po("template", [], e);
                        u.slotTarget = h,
                        u.slotTargetDynamic = c,
                        u.children = e.children.filter(function(e) {
                            if (!e.slotScope)
                                return e.parent = u,
                                !0
                        }),
                        u.slotScope = a.value || uo,
                        e.children = [],
                        e.plain = !1
                    }
                }
            }(e),
            function(e) {
                "slot" === e.tag && (e.slotName = Er(e, "name"))
            }(e),
            function(e) {
                var t;
                (t = Er(e, "is")) && (e.component = t);
                null != Nr(e, "inline-template") && (e.inlineTemplate = !0)
            }(e);
            for (var s = 0; s < Xn.length; s++)
                e = Xn[s](e, t) || e;
            return function(e) {
                var t, i, r, s, n, o, a, l, d = e.attrsList;
                for (t = 0,
                i = d.length; t < i; t++) {
                    if (r = s = d[t].name,
                    n = d[t].value,
                    Zn.test(r))
                        if (e.hasBindings = !0,
                        (o = xo(r.replace(Zn, ""))) && (r = r.replace(oo, "")),
                        no.test(r))
                            r = r.replace(no, ""),
                            n = kr(n),
                            (l = ro.test(r)) && (r = r.slice(1, -1)),
                            o && (o.prop && !l && "innerHtml" === (r = j(r)) && (r = "innerHTML"),
                            o.camel && !l && (r = j(r)),
                            o.sync && (a = Wr(n, "$event"),
                            l ? Lr(e, '"update:"+(' + r + ")", a, null, !1, 0, d[t], !0) : (Lr(e, "update:" + j(r), a, null, !1, 0, d[t]),
                            T(r) !== j(r) && Lr(e, "update:" + T(r), a, null, !1, 0, d[t])))),
                            o && o.prop || !e.component && $n(e.tag, e.attrsMap.type, r) ? Mr(e, r, n, d[t], l) : Hr(e, r, n, d[t], l);
                        else if (Kn.test(r))
                            r = r.replace(Kn, ""),
                            (l = ro.test(r)) && (r = r.slice(1, -1)),
                            Lr(e, r, n, o, !1, 0, d[t], l);
                        else {
                            var h = (r = r.replace(Zn, "")).match(so)
                              , c = h && h[1];
                            l = !1,
                            c && (r = r.slice(0, -(c.length + 1)),
                            ro.test(c) && (c = c.slice(1, -1),
                            l = !0)),
                            zr(e, r, s, n, c, l, o, d[t])
                        }
                    else
                        Hr(e, r, JSON.stringify(n), d[t]),
                        !e.component && "muted" === r && $n(e.tag, e.attrsMap.type, r) && Mr(e, r, "true", d[t])
                }
            }(e),
            e
        }
        function go(e) {
            var t;
            if (t = Nr(e, "v-for")) {
                var i = function(e) {
                    var t = e.match(eo);
                    if (!t)
                        return;
                    var i = {};
                    i.for = t[2].trim();
                    var r = t[1].trim().replace(io, "")
                      , s = r.match(to);
                    s ? (i.alias = r.replace(to, "").trim(),
                    i.iterator1 = s[1].trim(),
                    s[2] && (i.iterator2 = s[2].trim())) : i.alias = r;
                    return i
                }(t);
                i && D(e, i)
            }
        }
        function vo(e, t) {
            e.ifConditions || (e.ifConditions = []),
            e.ifConditions.push(t)
        }
        function wo(e) {
            var t = e.name.replace(ao, "");
            return t || "#" !== e.name[0] && (t = "default"),
            ro.test(t) ? {
                name: t.slice(1, -1),
                dynamic: !0
            } : {
                name: '"' + t + '"',
                dynamic: !1
            }
        }
        function xo(e) {
            var t = e.match(oo);
            if (t) {
                var i = {};
                return t.forEach(function(e) {
                    i[e.slice(1)] = !0
                }),
                i
            }
        }
        function bo(e) {
            for (var t = {}, i = 0, r = e.length; i < r; i++)
                t[e[i].name] = e[i].value;
            return t
        }
        var yo = /^xmlns:NS\d+/
          , _o = /^NS\d+:/;
        function qo(e) {
            return po(e.tag, e.attrsList.slice(), e.parent)
        }
        var jo = [xn, yn, {
            preTransformNode: function(e, t) {
                if ("input" === e.tag) {
                    var i, r = e.attrsMap;
                    if (!r["v-model"])
                        return;
                    if ((r[":type"] || r["v-bind:type"]) && (i = Er(e, "type")),
                    r.type || i || !r["v-bind"] || (i = "(" + r["v-bind"] + ").type"),
                    i) {
                        var s = Nr(e, "v-if", !0)
                          , n = s ? "&&(" + s + ")" : ""
                          , o = null != Nr(e, "v-else", !0)
                          , a = Nr(e, "v-else-if", !0)
                          , l = qo(e);
                        go(l),
                        Or(l, "type", "checkbox"),
                        mo(l, t),
                        l.processed = !0,
                        l.if = "(" + i + ")==='checkbox'" + n,
                        vo(l, {
                            exp: l.if,
                            block: l
                        });
                        var d = qo(e);
                        Nr(d, "v-for", !0),
                        Or(d, "type", "radio"),
                        mo(d, t),
                        vo(l, {
                            exp: "(" + i + ")==='radio'" + n,
                            block: d
                        });
                        var h = qo(e);
                        return Nr(h, "v-for", !0),
                        Or(h, ":type", i),
                        mo(h, t),
                        vo(l, {
                            exp: s,
                            block: h
                        }),
                        o ? l.else = !0 : a && (l.elseif = a),
                        l
                    }
                }
            }
        }];
        var So, Co, To = {
            expectHTML: !0,
            modules: jo,
            directives: {
                model: function(e, t, i) {
                    i;
                    var r = t.value
                      , s = t.modifiers
                      , n = e.tag
                      , o = e.attrsMap.type;
                    if (e.component)
                        return Rr(e, r, s),
                        !1;
                    if ("select" === n)
                        !function(e, t, i) {
                            var r = 'var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return ' + (i && i.number ? "_n(val)" : "val") + "});";
                            r = r + " " + Wr(t, "$event.target.multiple ? $$selectedVal : $$selectedVal[0]"),
                            Lr(e, "change", r, null, !0)
                        }(e, r, s);
                    else if ("input" === n && "checkbox" === o)
                        !function(e, t, i) {
                            var r = i && i.number
                              , s = Er(e, "value") || "null"
                              , n = Er(e, "true-value") || "true"
                              , o = Er(e, "false-value") || "false";
                            Mr(e, "checked", "Array.isArray(" + t + ")?_i(" + t + "," + s + ")>-1" + ("true" === n ? ":(" + t + ")" : ":_q(" + t + "," + n + ")")),
                            Lr(e, "change", "var $$a=" + t + ",$$el=$event.target,$$c=$$el.checked?(" + n + "):(" + o + ");if(Array.isArray($$a)){var $$v=" + (r ? "_n(" + s + ")" : s) + ",$$i=_i($$a,$$v);if($$el.checked){$$i<0&&(" + Wr(t, "$$a.concat([$$v])") + ")}else{$$i>-1&&(" + Wr(t, "$$a.slice(0,$$i).concat($$a.slice($$i+1))") + ")}}else{" + Wr(t, "$$c") + "}", null, !0)
                        }(e, r, s);
                    else if ("input" === n && "radio" === o)
                        !function(e, t, i) {
                            var r = i && i.number
                              , s = Er(e, "value") || "null";
                            Mr(e, "checked", "_q(" + t + "," + (s = r ? "_n(" + s + ")" : s) + ")"),
                            Lr(e, "change", Wr(t, s), null, !0)
                        }(e, r, s);
                    else if ("input" === n || "textarea" === n)
                        !function(e, t, i) {
                            var r = e.attrsMap.type
                              , s = i || {}
                              , n = s.lazy
                              , o = s.number
                              , a = s.trim
                              , l = !n && "range" !== r
                              , d = n ? "change" : "range" === r ? Yr : "input"
                              , h = "$event.target.value";
                            a && (h = "$event.target.value.trim()"),
                            o && (h = "_n(" + h + ")");
                            var c = Wr(t, h);
                            l && (c = "if($event.target.composing)return;" + c),
                            Mr(e, "value", "(" + t + ")"),
                            Lr(e, d, c, null, !0),
                            (a || o) && Lr(e, "blur", "$forceUpdate()")
                        }(e, r, s);
                    else if (!F.isReservedTag(n))
                        return Rr(e, r, s),
                        !1;
                    return !0
                },
                text: function(e, t) {
                    t.value && Mr(e, "textContent", "_s(" + t.value + ")", t)
                },
                html: function(e, t) {
                    t.value && Mr(e, "innerHTML", "_s(" + t.value + ")", t)
                }
            },
            isPreTag: function(e) {
                return "pre" === e
            },
            isUnaryTag: qn,
            mustUseProp: Oi,
            canBeLeftOpenTag: jn,
            isReservedTag: Yi,
            getTagNamespace: Ki,
            staticKeys: function(e) {
                return e.reduce(function(e, t) {
                    return e.concat(t.staticKeys || [])
                }, []).join(",")
            }(jo)
        }, Io = _(function(e) {
            return g("type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap" + (e ? "," + e : ""))
        });
        function ko(e, t) {
            e && (So = Io(t.staticKeys || ""),
            Co = t.isReservedTag || M,
            function e(t) {
                t.static = function(e) {
                    if (2 === e.type)
                        return !1;
                    if (3 === e.type)
                        return !0;
                    return !(!e.pre && (e.hasBindings || e.if || e.for || v(e.tag) || !Co(e.tag) || function(e) {
                        for (; e.parent; ) {
                            if ("template" !== (e = e.parent).tag)
                                return !1;
                            if (e.for)
                                return !0
                        }
                        return !1
                    }(e) || !Object.keys(e).every(So)))
                }(t);
                if (1 === t.type) {
                    if (!Co(t.tag) && "slot" !== t.tag && null == t.attrsMap["inline-template"])
                        return;
                    for (var i = 0, r = t.children.length; i < r; i++) {
                        var s = t.children[i];
                        e(s),
                        s.static || (t.static = !1)
                    }
                    if (t.ifConditions)
                        for (var n = 1, o = t.ifConditions.length; n < o; n++) {
                            var a = t.ifConditions[n].block;
                            e(a),
                            a.static || (t.static = !1)
                        }
                }
            }(e),
            function e(t, i) {
                if (1 === t.type) {
                    if ((t.static || t.once) && (t.staticInFor = i),
                    t.static && t.children.length && (1 !== t.children.length || 3 !== t.children[0].type))
                        return void (t.staticRoot = !0);
                    if (t.staticRoot = !1,
                    t.children)
                        for (var r = 0, s = t.children.length; r < s; r++)
                            e(t.children[r], i || !!t.for);
                    if (t.ifConditions)
                        for (var n = 1, o = t.ifConditions.length; n < o; n++)
                            e(t.ifConditions[n].block, i)
                }
            }(e, !1))
        }
        var Do = /^([\w$_]+|\([^)]*?\))\s*=>|^function\s*(?:[\w$]+)?\s*\(/
          , Po = /\([^)]*?\);*$/
          , Bo = /^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*$/
          , Mo = {
            esc: 27,
            tab: 9,
            enter: 13,
            space: 32,
            up: 38,
            left: 37,
            right: 39,
            down: 40,
            delete: [8, 46]
        }
          , Ho = {
            esc: ["Esc", "Escape"],
            tab: "Tab",
            enter: "Enter",
            space: [" ", "Spacebar"],
            up: ["Up", "ArrowUp"],
            left: ["Left", "ArrowLeft"],
            right: ["Right", "ArrowRight"],
            down: ["Down", "ArrowDown"],
            delete: ["Backspace", "Delete", "Del"]
        }
          , Oo = function(e) {
            return "if(" + e + ")return null;"
        }
          , zo = {
            stop: "$event.stopPropagation();",
            prevent: "$event.preventDefault();",
            self: Oo("$event.target !== $event.currentTarget"),
            ctrl: Oo("!$event.ctrlKey"),
            shift: Oo("!$event.shiftKey"),
            alt: Oo("!$event.altKey"),
            meta: Oo("!$event.metaKey"),
            left: Oo("'button' in $event && $event.button !== 0"),
            middle: Oo("'button' in $event && $event.button !== 1"),
            right: Oo("'button' in $event && $event.button !== 2")
        };
        function Ao(e, t) {
            var i = t ? "nativeOn:" : "on:"
              , r = ""
              , s = "";
            for (var n in e) {
                var o = Lo(e[n]);
                e[n] && e[n].dynamic ? s += n + "," + o + "," : r += '"' + n + '":' + o + ","
            }
            return r = "{" + r.slice(0, -1) + "}",
            s ? i + "_d(" + r + ",[" + s.slice(0, -1) + "])" : i + r
        }
        function Lo(e) {
            if (!e)
                return "function(){}";
            if (Array.isArray(e))
                return "[" + e.map(function(e) {
                    return Lo(e)
                }).join(",") + "]";
            var t = Bo.test(e.value)
              , i = Do.test(e.value)
              , r = Bo.test(e.value.replace(Po, ""));
            if (e.modifiers) {
                var s = ""
                  , n = ""
                  , o = [];
                for (var a in e.modifiers)
                    if (zo[a])
                        n += zo[a],
                        Mo[a] && o.push(a);
                    else if ("exact" === a) {
                        var l = e.modifiers;
                        n += Oo(["ctrl", "shift", "alt", "meta"].filter(function(e) {
                            return !l[e]
                        }).map(function(e) {
                            return "$event." + e + "Key"
                        }).join("||"))
                    } else
                        o.push(a);
                return o.length && (s += function(e) {
                    return "if(!$event.type.indexOf('key')&&" + e.map(Eo).join("&&") + ")return null;"
                }(o)),
                n && (s += n),
                "function($event){" + s + (t ? "return " + e.value + "($event)" : i ? "return (" + e.value + ")($event)" : r ? "return " + e.value : e.value) + "}"
            }
            return t || i ? e.value : "function($event){" + (r ? "return " + e.value : e.value) + "}"
        }
        function Eo(e) {
            var t = parseInt(e, 10);
            if (t)
                return "$event.keyCode!==" + t;
            var i = Mo[e]
              , r = Ho[e];
            return "_k($event.keyCode," + JSON.stringify(e) + "," + JSON.stringify(i) + ",$event.key," + JSON.stringify(r) + ")"
        }
        var No = {
            on: function(e, t) {
                e.wrapListeners = function(e) {
                    return "_g(" + e + "," + t.value + ")"
                }
            },
            bind: function(e, t) {
                e.wrapData = function(i) {
                    return "_b(" + i + ",'" + e.tag + "'," + t.value + "," + (t.modifiers && t.modifiers.prop ? "true" : "false") + (t.modifiers && t.modifiers.sync ? ",true" : "") + ")"
                }
            },
            cloak: B
        }
          , Fo = function(e) {
            this.options = e,
            this.warn = e.warn || Pr,
            this.transforms = Br(e.modules, "transformCode"),
            this.dataGenFns = Br(e.modules, "genData"),
            this.directives = D(D({}, No), e.directives);
            var t = e.isReservedTag || M;
            this.maybeComponent = function(e) {
                return !!e.component || !t(e.tag)
            }
            ,
            this.onceId = 0,
            this.staticRenderFns = [],
            this.pre = !1
        };
        function Vo(e, t) {
            var i = new Fo(t);
            return {
                render: "with(this){return " + (e ? Ro(e, i) : '_c("div")') + "}",
                staticRenderFns: i.staticRenderFns
            }
        }
        function Ro(e, t) {
            if (e.parent && (e.pre = e.pre || e.parent.pre),
            e.staticRoot && !e.staticProcessed)
                return Wo(e, t);
            if (e.once && !e.onceProcessed)
                return Go(e, t);
            if (e.for && !e.forProcessed)
                return Jo(e, t);
            if (e.if && !e.ifProcessed)
                return Xo(e, t);
            if ("template" !== e.tag || e.slotTarget || t.pre) {
                if ("slot" === e.tag)
                    return function(e, t) {
                        var i = e.slotName || '"default"'
                          , r = Yo(e, t)
                          , s = "_t(" + i + (r ? "," + r : "")
                          , n = e.attrs || e.dynamicAttrs ? ea((e.attrs || []).concat(e.dynamicAttrs || []).map(function(e) {
                            return {
                                name: j(e.name),
                                value: e.value,
                                dynamic: e.dynamic
                            }
                        })) : null
                          , o = e.attrsMap["v-bind"];
                        !n && !o || r || (s += ",null");
                        n && (s += "," + n);
                        o && (s += (n ? "" : ",null") + "," + o);
                        return s + ")"
                    }(e, t);
                var i;
                if (e.component)
                    i = function(e, t, i) {
                        var r = t.inlineTemplate ? null : Yo(t, i, !0);
                        return "_c(" + e + "," + Qo(t, i) + (r ? "," + r : "") + ")"
                    }(e.component, e, t);
                else {
                    var r;
                    (!e.plain || e.pre && t.maybeComponent(e)) && (r = Qo(e, t));
                    var s = e.inlineTemplate ? null : Yo(e, t, !0);
                    i = "_c('" + e.tag + "'" + (r ? "," + r : "") + (s ? "," + s : "") + ")"
                }
                for (var n = 0; n < t.transforms.length; n++)
                    i = t.transforms[n](e, i);
                return i
            }
            return Yo(e, t) || "void 0"
        }
        function Wo(e, t) {
            e.staticProcessed = !0;
            var i = t.pre;
            return e.pre && (t.pre = e.pre),
            t.staticRenderFns.push("with(this){return " + Ro(e, t) + "}"),
            t.pre = i,
            "_m(" + (t.staticRenderFns.length - 1) + (e.staticInFor ? ",true" : "") + ")"
        }
        function Go(e, t) {
            if (e.onceProcessed = !0,
            e.if && !e.ifProcessed)
                return Xo(e, t);
            if (e.staticInFor) {
                for (var i = "", r = e.parent; r; ) {
                    if (r.for) {
                        i = r.key;
                        break
                    }
                    r = r.parent
                }
                return i ? "_o(" + Ro(e, t) + "," + t.onceId++ + "," + i + ")" : Ro(e, t)
            }
            return Wo(e, t)
        }
        function Xo(e, t, i, r) {
            return e.ifProcessed = !0,
            function e(t, i, r, s) {
                if (!t.length)
                    return s || "_e()";
                var n = t.shift();
                return n.exp ? "(" + n.exp + ")?" + o(n.block) + ":" + e(t, i, r, s) : "" + o(n.block);
                function o(e) {
                    return r ? r(e, i) : e.once ? Go(e, i) : Ro(e, i)
                }
            }(e.ifConditions.slice(), t, i, r)
        }
        function Jo(e, t, i, r) {
            var s = e.for
              , n = e.alias
              , o = e.iterator1 ? "," + e.iterator1 : ""
              , a = e.iterator2 ? "," + e.iterator2 : "";
            return e.forProcessed = !0,
            (r || "_l") + "((" + s + "),function(" + n + o + a + "){return " + (i || Ro)(e, t) + "})"
        }
        function Qo(e, t) {
            var i = "{"
              , r = function(e, t) {
                var i = e.directives;
                if (!i)
                    return;
                var r, s, n, o, a = "directives:[", l = !1;
                for (r = 0,
                s = i.length; r < s; r++) {
                    n = i[r],
                    o = !0;
                    var d = t.directives[n.name];
                    d && (o = !!d(e, n, t.warn)),
                    o && (l = !0,
                    a += '{name:"' + n.name + '",rawName:"' + n.rawName + '"' + (n.value ? ",value:(" + n.value + "),expression:" + JSON.stringify(n.value) : "") + (n.arg ? ",arg:" + (n.isDynamicArg ? n.arg : '"' + n.arg + '"') : "") + (n.modifiers ? ",modifiers:" + JSON.stringify(n.modifiers) : "") + "},")
                }
                if (l)
                    return a.slice(0, -1) + "]"
            }(e, t);
            r && (i += r + ","),
            e.key && (i += "key:" + e.key + ","),
            e.ref && (i += "ref:" + e.ref + ","),
            e.refInFor && (i += "refInFor:true,"),
            e.pre && (i += "pre:true,"),
            e.component && (i += 'tag:"' + e.tag + '",');
            for (var s = 0; s < t.dataGenFns.length; s++)
                i += t.dataGenFns[s](e);
            if (e.attrs && (i += "attrs:" + ea(e.attrs) + ","),
            e.props && (i += "domProps:" + ea(e.props) + ","),
            e.events && (i += Ao(e.events, !1) + ","),
            e.nativeEvents && (i += Ao(e.nativeEvents, !0) + ","),
            e.slotTarget && !e.slotScope && (i += "slot:" + e.slotTarget + ","),
            e.scopedSlots && (i += function(e, t, i) {
                var r = e.for || Object.keys(t).some(function(e) {
                    var i = t[e];
                    return i.slotTargetDynamic || i.if || i.for || Uo(i)
                })
                  , s = !!e.if;
                if (!r)
                    for (var n = e.parent; n; ) {
                        if (n.slotScope && n.slotScope !== uo || n.for) {
                            r = !0;
                            break
                        }
                        n.if && (s = !0),
                        n = n.parent
                    }
                var o = Object.keys(t).map(function(e) {
                    return $o(t[e], i)
                }).join(",");
                return "scopedSlots:_u([" + o + "]" + (r ? ",null,true" : "") + (!r && s ? ",null,false," + function(e) {
                    var t = 5381
                      , i = e.length;
                    for (; i; )
                        t = 33 * t ^ e.charCodeAt(--i);
                    return t >>> 0
                }(o) : "") + ")"
            }(e, e.scopedSlots, t) + ","),
            e.model && (i += "model:{value:" + e.model.value + ",callback:" + e.model.callback + ",expression:" + e.model.expression + "},"),
            e.inlineTemplate) {
                var n = function(e, t) {
                    var i = e.children[0];
                    0;
                    if (i && 1 === i.type) {
                        var r = Vo(i, t.options);
                        return "inlineTemplate:{render:function(){" + r.render + "},staticRenderFns:[" + r.staticRenderFns.map(function(e) {
                            return "function(){" + e + "}"
                        }).join(",") + "]}"
                    }
                }(e, t);
                n && (i += n + ",")
            }
            return i = i.replace(/,$/, "") + "}",
            e.dynamicAttrs && (i = "_b(" + i + ',"' + e.tag + '",' + ea(e.dynamicAttrs) + ")"),
            e.wrapData && (i = e.wrapData(i)),
            e.wrapListeners && (i = e.wrapListeners(i)),
            i
        }
        function Uo(e) {
            return 1 === e.type && ("slot" === e.tag || e.children.some(Uo))
        }
        function $o(e, t) {
            var i = e.attrsMap["slot-scope"];
            if (e.if && !e.ifProcessed && !i)
                return Xo(e, t, $o, "null");
            if (e.for && !e.forProcessed)
                return Jo(e, t, $o);
            var r = e.slotScope === uo ? "" : String(e.slotScope)
              , s = "function(" + r + "){return " + ("template" === e.tag ? e.if && i ? "(" + e.if + ")?" + (Yo(e, t) || "undefined") + ":undefined" : Yo(e, t) || "undefined" : Ro(e, t)) + "}"
              , n = r ? "" : ",proxy:true";
            return "{key:" + (e.slotTarget || '"default"') + ",fn:" + s + n + "}"
        }
        function Yo(e, t, i, r, s) {
            var n = e.children;
            if (n.length) {
                var o = n[0];
                if (1 === n.length && o.for && "template" !== o.tag && "slot" !== o.tag) {
                    var a = i ? t.maybeComponent(o) ? ",1" : ",0" : "";
                    return "" + (r || Ro)(o, t) + a
                }
                var l = i ? function(e, t) {
                    for (var i = 0, r = 0; r < e.length; r++) {
                        var s = e[r];
                        if (1 === s.type) {
                            if (Ko(s) || s.ifConditions && s.ifConditions.some(function(e) {
                                return Ko(e.block)
                            })) {
                                i = 2;
                                break
                            }
                            (t(s) || s.ifConditions && s.ifConditions.some(function(e) {
                                return t(e.block)
                            })) && (i = 1)
                        }
                    }
                    return i
                }(n, t.maybeComponent) : 0
                  , d = s || Zo;
                return "[" + n.map(function(e) {
                    return d(e, t)
                }).join(",") + "]" + (l ? "," + l : "")
            }
        }
        function Ko(e) {
            return void 0 !== e.for || "template" === e.tag || "slot" === e.tag
        }
        function Zo(e, t) {
            return 1 === e.type ? Ro(e, t) : 3 === e.type && e.isComment ? (r = e,
            "_e(" + JSON.stringify(r.text) + ")") : "_v(" + (2 === (i = e).type ? i.expression : ta(JSON.stringify(i.text))) + ")";
            var i, r
        }
        function ea(e) {
            for (var t = "", i = "", r = 0; r < e.length; r++) {
                var s = e[r]
                  , n = ta(s.value);
                s.dynamic ? i += s.name + "," + n + "," : t += '"' + s.name + '":' + n + ","
            }
            return t = "{" + t.slice(0, -1) + "}",
            i ? "_d(" + t + ",[" + i.slice(0, -1) + "])" : t
        }
        function ta(e) {
            return e.replace(/\u2028/g, "\\u2028").replace(/\u2029/g, "\\u2029")
        }
        new RegExp("\\b" + "do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,super,throw,while,yield,delete,export,import,return,switch,default,extends,finally,continue,debugger,function,arguments".split(",").join("\\b|\\b") + "\\b"),
        new RegExp("\\b" + "delete,typeof,void".split(",").join("\\s*\\([^\\)]*\\)|\\b") + "\\s*\\([^\\)]*\\)");
        function ia(e, t) {
            try {
                return new Function(e)
            } catch (i) {
                return t.push({
                    err: i,
                    code: e
                }),
                B
            }
        }
        function ra(e) {
            var t = Object.create(null);
            return function(i, r, s) {
                (r = D({}, r)).warn;
                delete r.warn;
                var n = r.delimiters ? String(r.delimiters) + i : i;
                if (t[n])
                    return t[n];
                var o = e(i, r);
                var a = {}
                  , l = [];
                return a.render = ia(o.render, l),
                a.staticRenderFns = o.staticRenderFns.map(function(e) {
                    return ia(e, l)
                }),
                t[n] = a
            }
        }
        var sa, na, oa = (sa = function(e, t) {
            var i = fo(e.trim(), t);
            !1 !== t.optimize && ko(i, t);
            var r = Vo(i, t);
            return {
                ast: i,
                render: r.render,
                staticRenderFns: r.staticRenderFns
            }
        }
        ,
        function(e) {
            function t(t, i) {
                var r = Object.create(e)
                  , s = []
                  , n = [];
                if (i)
                    for (var o in i.modules && (r.modules = (e.modules || []).concat(i.modules)),
                    i.directives && (r.directives = D(Object.create(e.directives || null), i.directives)),
                    i)
                        "modules" !== o && "directives" !== o && (r[o] = i[o]);
                r.warn = function(e, t, i) {
                    (i ? n : s).push(e)
                }
                ;
                var a = sa(t.trim(), r);
                return a.errors = s,
                a.tips = n,
                a
            }
            return {
                compile: t,
                compileToFunctions: ra(t)
            }
        }
        )(To), aa = (oa.compile,
        oa.compileToFunctions);
        function la(e) {
            return (na = na || document.createElement("div")).innerHTML = e ? '<a href="\n"/>' : '<div a="\n"/>',
            na.innerHTML.indexOf("&#10;") > 0
        }
        var da = !!J && la(!1)
          , ha = !!J && la(!0)
          , ca = _(function(e) {
            var t = tr(e);
            return t && t.innerHTML
        })
          , ua = Si.prototype.$mount;
        Si.prototype.$mount = function(e, t) {
            if ((e = e && tr(e)) === document.body || e === document.documentElement)
                return this;
            var i = this.$options;
            if (!i.render) {
                var r = i.template;
                if (r)
                    if ("string" == typeof r)
                        "#" === r.charAt(0) && (r = ca(r));
                    else {
                        if (!r.nodeType)
                            return this;
                        r = r.innerHTML
                    }
                else
                    e && (r = function(e) {
                        if (e.outerHTML)
                            return e.outerHTML;
                        var t = document.createElement("div");
                        return t.appendChild(e.cloneNode(!0)),
                        t.innerHTML
                    }(e));
                if (r) {
                    0;
                    var s = aa(r, {
                        outputSourceRange: !1,
                        shouldDecodeNewlines: da,
                        shouldDecodeNewlinesForHref: ha,
                        delimiters: i.delimiters,
                        comments: i.comments
                    }, this)
                      , n = s.render
                      , o = s.staticRenderFns;
                    i.render = n,
                    i.staticRenderFns = o
                }
            }
            return ua.call(this, e, t)
        }
        ,
        Si.compile = aa,
        t.a = Si
    }
    ).call(this, i(1), i(32).setImmediate)
}
, function(e, t) {
    var r;
    (r = jqxBaseFramework).jqx.jqxWidget("jqxNumberInput", "", {}),
    r.extend(r.jqx._jqxNumberInput.prototype, {
        defineInstance: function() {
            var e = {
                value: 0,
                decimal: 0,
                min: -99999999,
                max: 99999999,
                width: 200,
                validationMessage: "Invalid value",
                height: 25,
                textAlign: "right",
                readOnly: !1,
                promptChar: "_",
                decimalDigits: 2,
                decimalSeparator: ".",
                groupSeparator: ",",
                groupSize: 3,
                symbol: "",
                symbolPosition: "left",
                digits: 8,
                negative: !1,
                negativeSymbol: "-",
                disabled: !1,
                inputMode: "advanced",
                spinButtons: !1,
                spinButtonsWidth: 18,
                spinButtonsStep: 1,
                autoValidate: !0,
                spinMode: "advanced",
                enableMouseWheel: !0,
                touchMode: "auto",
                allowNull: !0,
                placeHolder: "",
                changeType: null,
                template: "",
                rtl: !1,
                hint: !0,
                events: ["valueChanged", "textchanged", "mousedown", "mouseup", "keydown", "keyup", "keypress", "change"],
                aria: {
                    "aria-valuenow": {
                        name: "decimal",
                        type: "number"
                    },
                    "aria-valuemin": {
                        name: "min",
                        type: "number"
                    },
                    "aria-valuemax": {
                        name: "max",
                        type: "number"
                    },
                    "aria-disabled": {
                        name: "disabled",
                        type: "boolean"
                    }
                },
                invalidArgumentExceptions: ["invalid argument exception"]
            };
            return this === r.jqx._jqxNumberInput.prototype ? e : (r.extend(!0, this, e),
            e)
        },
        createInstance: function(e) {
            "" === this.promptChar && (this.promptChar = " ");
            var t = this.host.attr("value");
            null != t && (this.decimal = t),
            0 === this.decimal && (null != this.value ? this.decimal = this.value : null === this.value && 0 !== this.decimal && (this.value = this.decimal)),
            this._createFromInput("jqxNumberInput"),
            this.render()
        },
        _updateHint: function() {
            var e = this;
            e.hint && e.isMaterialized() && setTimeout(function() {
                0 === e.numberInput[0].value.length ? (e.element.removeAttribute("hint"),
                e.label[0].innerHTML = e.placeHolder) : e.element.setAttribute("hint", !0)
            })
        },
        _createFromInput: function(e) {
            var t = this;
            if ("input" == t.element.nodeName.toLowerCase()) {
                t.field = t.element,
                t.field.className && (t._className = t.field.className);
                var i = {
                    title: t.field.title
                };
                if (t.field.value && (t.decimal = parseFloat(t.field.value)),
                t.field.getAttribute("min")) {
                    var s = t.field.getAttribute("min");
                    t.min = parseFloat(s)
                }
                if (t.field.getAttribute("step")) {
                    var n = t.field.getAttribute("step");
                    t.spinButtonsStep = parseFloat(n)
                }
                if (t.field.getAttribute("max")) {
                    var o = t.field.getAttribute("max");
                    t.max = parseFloat(o)
                }
                t.field.id.length ? i.id = t.field.id.replace(/[^\w]/g, "_") + "_" + e : i.id = r.jqx.utilities.createId() + "_" + e;
                var a = r("<div></div>", i);
                a[0].style.cssText = t.field.style.cssText,
                t.width || (t.width = r(t.field).width()),
                t.height || (t.height = r(t.field).outerHeight()),
                r(t.field).hide().after(a);
                var l = t.host.data();
                if (t.host = a,
                t.host.data(l),
                t.element = a[0],
                t.element.id = t.field.id,
                t.field.id = i.id,
                t._className && (t.host.addClass(t._className),
                r(t.field).removeClass(t._className)),
                t.field.tabIndex) {
                    var d = t.field.tabIndex;
                    t.field.tabIndex = -1,
                    t.element.tabIndex = d
                }
            }
        },
        _doTouchHandling: function() {
            var e = this
              , t = e.savedValue;
            if (e.parsing || (e.parsing = !0),
            e.parsing) {
                e.numberInput.val() && 0 == e.numberInput.val().indexOf("-") ? e.setvalue("negative", !0) : e.setvalue("negative", !1);
                for (var i = e.numberInput.val(), r = 0; r < i.length - 1; r++) {
                    var s = i.substring(r, r + 1);
                    if (isNaN(parseFloat(s)) && -1 === e.symbol.toString().indexOf(s) && "%" != s && "$" != s && "." != s && "," != s && "-" != s)
                        return e.numberInput[0].value = t,
                        void (e.parsing = !1)
                }
                e.ValueString = e.GetValueString(e.numberInput.val(), e.decimalSeparator, "" != e.decimalSeparator),
                e._parseDecimalInSimpleMode(),
                e.decimal = e.ValueString,
                e.getvalue("negative") && (e.decimal = "-" + e.ValueString),
                e.parsing = !1
            }
        },
        render: function() {
            this.host.attr({
                role: "spinbutton"
            }),
            this.host.attr("data-role", "input"),
            r.jqx.aria(this),
            r.jqx.aria(this, "aria-multiline", !1);
            var e = this;
            (this.officeMode || this.theme && -1 != this.theme.indexOf("office")) && 18 == this.spinButtonsWidth && (this.spinButtonsWidth = 15),
            (r.jqx.mobile.isTouchDevice() || !0 === this.touchMode) && (this.inputMode = "textbox",
            this.spinMode = "simple"),
            "" == this.decimalSeparator && (this.decimalSeparator = " "),
            this.host.addClass(this.toThemeProperty("jqx-input")),
            this.host.addClass(this.toThemeProperty("jqx-rc-all")),
            this.host.addClass(this.toThemeProperty("jqx-widget")),
            this.host.addClass(this.toThemeProperty("jqx-widget-content")),
            this.host.addClass(this.toThemeProperty("jqx-numberinput")),
            this.spinButtons ? this._spinButtons() : (this.numberInput = r("<input style='border:none;' autocomplete='off' type='textarea'/>").appendTo(this.host),
            this.numberInput.addClass(this.toThemeProperty("jqx-input-content")),
            this.numberInput.addClass(this.toThemeProperty("jqx-widget-content"))),
            this.isMaterialized() || this.numberInput.attr("placeholder", this.placeHolder);
            var t = this.host.attr("name");
            t && this.numberInput.attr("name", t),
            this.host.attr("tabindex") && (this.numberInput.attr("tabindex", this.host.attr("tabindex")),
            this.host.removeAttr("tabindex")),
            (r.jqx.mobile.isTouchDevice() || !0 === this.touchMode || "textbox" == this.inputMode) && ((e = this).savedValue = "",
            this.addHandler(this.numberInput, "focus", function() {
                e.savedValue = e.numberInput[0].value
            }),
            this.addHandler(this.numberInput, "change", function() {
                e._doTouchHandling()
            })),
            r.data(this.host[0], "jqxNumberInput").jqxNumberInput = this,
            e = this,
            this.host.parents("form").length > 0 && this.addHandler(this.host.parents("form"), "reset", function() {
                setTimeout(function() {
                    e.setDecimal(0)
                }, 10)
            }),
            this.propertyChangeMap.disabled = function(e, t, r, s) {
                s ? (e.numberInput.addClass(i.toThemeProperty("jqx-input-disabled")),
                e.numberInput.attr("disabled", !0)) : (e.host.removeClass(i.toThemeProperty("jqx-input-disabled")),
                e.numberInput.attr("disabled", !1)),
                e.spinButtons && e.host.jqxRepeatButton && (e.upbutton.jqxRepeatButton({
                    disabled: s
                }),
                e.downbutton.jqxRepeatButton({
                    disabled: s
                }))
            }
            ,
            this.disabled && (this.numberInput.addClass(this.toThemeProperty("jqx-input-disabled")),
            this.numberInput.attr("disabled", !0),
            this.host.addClass(this.toThemeProperty("jqx-fill-state-disabled"))),
            this.selectedText = "",
            this.decimalSeparatorPosition = -1,
            this.element.id,
            this.element;
            var i = this;
            this.oldValue = this._value(),
            this.items = new Array;
            var s = this.value
              , n = this.decimal;
            this._initializeLiterals(),
            this._render(),
            this.setDecimal(null !== s ? n : null),
            e = this,
            setTimeout(function() {}, 100),
            this._addHandlers(),
            r.jqx.utilities.resize(this.host, function() {
                e._render()
            })
        },
        refresh: function(e) {
            e || this._render()
        },
        wheel: function(e, t) {
            if (t.enableMouseWheel) {
                t.changeType = "mouse";
                var i = 0;
                if (e || (e = window.event),
                e.originalEvent && e.originalEvent.wheelDelta && (e.wheelDelta = e.originalEvent.wheelDelta),
                e.wheelDelta ? i = e.wheelDelta / 120 : e.detail && (i = -e.detail / 3),
                i) {
                    var r = t._handleDelta(i);
                    return e.preventDefault && e.preventDefault(),
                    null != e.originalEvent && (e.originalEvent.mouseHandled = !0),
                    null != e.stopPropagation && e.stopPropagation(),
                    !!r && (r = !1,
                    e.returnValue = r,
                    r)
                }
                e.preventDefault && e.preventDefault(),
                e.returnValue = !1
            }
        },
        _handleDelta: function(e) {
            return e < 0 ? this.spinDown() : this.spinUp(),
            !0
        },
        _addHandlers: function() {
            var e = this;
            this.addHandler(this.numberInput, "paste", function(t) {
                var i = e._selection();
                t.preventDefault(),
                t.originalEvent.clipboardData ? content = (t.originalEvent || t).clipboardData.getData("text/plain") : window.clipboardData && (content = window.clipboardData.getData("Text")),
                this.selectedText = content,
                r.data(document.body, "jqxSelection", this.selectedText),
                "simple" != e.inputMode ? e._pasteSelectedText() : e.val(content),
                setTimeout(function() {
                    e._setSelectionStart(i.start)
                })
            }),
            this.addHandler(this.numberInput, "mousedown", function(t) {
                return e._raiseEvent(2, t)
            }),
            this._mousewheelfunc = this._mousewheelfunc || function(t) {
                if (!e.editcell)
                    return e.wheel(t, e),
                    !1
            }
            ,
            this.removeHandler(this.host, "mousewheel", this._mousewheelfunc),
            this.addHandler(this.host, "mousewheel", this._mousewheelfunc);
            var t = "";
            this.addHandler(this.numberInput, "focus", function(i) {
                r.data(e.numberInput, "selectionstart", e._selection().start),
                e.host.addClass(e.toThemeProperty("jqx-fill-state-focus")),
                e.spincontainer && e.spincontainer.addClass(e.toThemeProperty("jqx-numberinput-focus")),
                t = e.numberInput.val(),
                e._savedValue = e.decimal
            }),
            this.addHandler(this.numberInput, "blur", function(i) {
                if ("simple" == e.inputMode && e._exitSimpleInputMode(i, e, !1, t),
                e.autoValidate) {
                    var s = parseFloat(e.decimal);
                    e.getvalue("negative") && e.decimal > 0 && (s = -parseFloat(e.decimal)),
                    s > e.max && (e._disableSetSelection = !0,
                    e.setDecimal(e.max),
                    e._disableSetSelection = !1),
                    s < e.min && (e._disableSetSelection = !0,
                    e.setDecimal(e.min),
                    e._disableSetSelection = !1)
                }
                return e.host.removeClass(e.toThemeProperty("jqx-fill-state-focus")),
                e.spincontainer && e.spincontainer.removeClass(e.toThemeProperty("jqx-numberinput-focus")),
                e.numberInput.val() != t && (e._raiseEvent(7, i),
                r.jqx.aria(e, "aria-valuenow", e.decimal),
                e.element.value = e.decimal),
                !0
            }),
            this.addHandler(this.numberInput, "mouseup", function(t) {
                return e._raiseEvent(3, t)
            }),
            this.addHandler(this.numberInput, "keydown", function(t) {
                return e.changeType = "keyboard",
                e._raiseEvent(4, t)
            }),
            this.addHandler(this.numberInput, "keyup", function(t) {
                return e._raiseEvent(5, t)
            }),
            this.addHandler(this.numberInput, "keypress", function(t) {
                return e._raiseEvent(6, t)
            })
        },
        focus: function() {
            try {
                this.numberInput.focus()
            } catch (e) {}
        },
        _removeHandlers: function() {
            this.removeHandler(this.numberInput, "mousedown"),
            r.jqx.mobile.isOperaMiniMobileBrowser() && this.removeHandler(r(document), "click." + this.element.id, this._exitSimpleInputMode, this),
            this.removeHandler(this.numberInput, "paste"),
            this.removeHandler(this.numberInput, "focus"),
            this.removeHandler(this.numberInput, "blur"),
            this.removeHandler(this.numberInput, "mouseup"),
            this.removeHandler(this.numberInput, "keydown"),
            this.removeHandler(this.numberInput, "keyup"),
            this.removeHandler(this.numberInput, "keypress")
        },
        _spinButtons: function() {
            if (!this.host.jqxRepeatButton)
                throw new Error("jqxNumberInput: Missing reference to jqxbuttons.js.");
            this.numberInput ? this.numberInput.css("float", "left") : (this.numberInput = r("<input autocomplete='off' style='border: none; position: relative; float: left;' type='textarea'/>"),
            this.numberInput.appendTo(this.host),
            this.numberInput.addClass(this.toThemeProperty("jqx-input-content")),
            this.numberInput.addClass(this.toThemeProperty("jqx-widget-content"))),
            this.spincontainer && (this.upbutton && this.upbutton.jqxRepeatButton("destroy"),
            this.downbutton && this.downbutton.jqxRepeatButton("destroy"),
            this.spincontainer.remove()),
            this.spincontainer = r('<div style="float: right; height: 100%; overflow: hidden; position: relative;"></div>'),
            this.rtl && (this.spincontainer.css("float", "right"),
            this.numberInput.css("float", "right"),
            this.spincontainer.css("left", "-1px")),
            this.host.append(this.spincontainer),
            this.upbutton = r('<div style="overflow: hidden; padding: 0px; margin-left: -1px; position: relative;"><div></div></div>'),
            this.spincontainer.append(this.upbutton),
            this.upbutton.jqxRepeatButton({
                overrideTheme: !0,
                disabled: this.disabled,
                roundedCorners: "top-right"
            }),
            this.downbutton = r('<div style="overflow: hidden; padding: 0px; margin-left: -1px; position: relative;"><div></div></div>'),
            this.spincontainer.append(this.downbutton),
            this.downbutton.jqxRepeatButton({
                overrideTheme: !0,
                disabled: this.disabled,
                roundedCorners: "bottom-right"
            }),
            this.template && (this.upbutton.addClass(this.toThemeProperty("jqx-" + this.template)),
            this.downbutton.addClass(this.toThemeProperty("jqx-" + this.template)));
            var e = this;
            this.downbutton.addClass(this.toThemeProperty("jqx-fill-state-normal jqx-action-button")),
            this.upbutton.addClass(this.toThemeProperty("jqx-fill-state-normal jqx-action-button")),
            this.upbutton.addClass(this.toThemeProperty("jqx-rc-tr")),
            this.downbutton.addClass(this.toThemeProperty("jqx-rc-br")),
            this.addHandler(this.downbutton, "mouseup", function(t) {
                e.disabled || (e.downbutton.removeClass(e.toThemeProperty("jqx-fill-state-pressed")),
                e._downArrow.removeClass(e.toThemeProperty("jqx-icon-arrow-down-selected")))
            }),
            this.addHandler(this.upbutton, "mouseup", function(t) {
                e.disabled || (e.upbutton.removeClass(e.toThemeProperty("jqx-fill-state-pressed")),
                e._upArrow.removeClass(e.toThemeProperty("jqx-icon-arrow-up-selected")))
            }),
            this.removeHandler(r(document), "mouseup." + this.element.id),
            this.addHandler(r(document), "mouseup." + this.element.id, function(t) {
                e.upbutton.removeClass(e.toThemeProperty("jqx-fill-state-pressed")),
                e._upArrow.removeClass(e.toThemeProperty("jqx-icon-arrow-up-selected")),
                e.downbutton.removeClass(e.toThemeProperty("jqx-fill-state-pressed")),
                e._downArrow.removeClass(e.toThemeProperty("jqx-icon-arrow-down-selected"))
            }),
            this.addHandler(this.downbutton, "mousedown", function(t) {
                if (!e.disabled)
                    return r.jqx.browser.msie && r.jqx.browser.version < 9 && (e._inputSelection = e._selection()),
                    e.downbutton.addClass(e.toThemeProperty("jqx-fill-state-pressed")),
                    e._downArrow.addClass(e.toThemeProperty("jqx-icon-arrow-down-selected")),
                    t.preventDefault(),
                    t.stopPropagation(),
                    !1
            }),
            this.addHandler(this.upbutton, "mousedown", function(t) {
                if (!e.disabled)
                    return r.jqx.browser.msie && r.jqx.browser.version < 9 && (e._inputSelection = e._selection()),
                    e.upbutton.addClass(e.toThemeProperty("jqx-fill-state-pressed")),
                    e._upArrow.addClass(e.toThemeProperty("jqx-icon-arrow-up-selected")),
                    t.preventDefault(),
                    t.stopPropagation(),
                    !1
            }),
            this.addHandler(this.upbutton, "mouseenter", function(t) {
                e.upbutton.addClass(e.toThemeProperty("jqx-fill-state-hover")),
                e._upArrow.addClass(e.toThemeProperty("jqx-icon-arrow-up-hover"))
            }),
            this.addHandler(this.upbutton, "mouseleave", function(t) {
                e.upbutton.removeClass(e.toThemeProperty("jqx-fill-state-hover")),
                e._upArrow.removeClass(e.toThemeProperty("jqx-icon-arrow-up-hover"))
            }),
            this.addHandler(this.downbutton, "mouseenter", function(t) {
                e.downbutton.addClass(e.toThemeProperty("jqx-fill-state-hover")),
                e._downArrow.addClass(e.toThemeProperty("jqx-icon-arrow-down-hover"))
            }),
            this.addHandler(this.downbutton, "mouseleave", function(t) {
                e.downbutton.removeClass(e.toThemeProperty("jqx-fill-state-hover")),
                e._downArrow.removeClass(e.toThemeProperty("jqx-icon-arrow-down-hover"))
            }),
            this.upbutton.css("border-width", "0px"),
            this.downbutton.css("border-width", "0px"),
            this.disabled ? (this.upbutton[0].disabled = !0,
            this.downbutton[0].disabled = !0) : (this.upbutton[0].disabled = !1,
            this.downbutton[0].disabled = !1),
            this.spincontainer.addClass(this.toThemeProperty("jqx-input")),
            this.spincontainer.addClass(this.toThemeProperty("jqx-rc-r")),
            this.spincontainer.css("border-width", "0px"),
            this.rtl ? this.spincontainer.css("border-right-width", "1px") : this.spincontainer.css("border-left-width", "1px"),
            this._upArrow = this.upbutton.find("div"),
            this._downArrow = this.downbutton.find("div"),
            this._upArrow.addClass(this.toThemeProperty("jqx-icon-arrow-up")),
            this._downArrow.addClass(this.toThemeProperty("jqx-icon-arrow-down")),
            this._upArrow.addClass(this.toThemeProperty("jqx-input-icon")),
            this._downArrow.addClass(this.toThemeProperty("jqx-input-icon")),
            e = this,
            this._upArrow.hover(function() {
                e.disabled || e._upArrow.addClass(e.toThemeProperty("jqx-icon-arrow-up-hover"))
            }, function() {
                e._upArrow.removeClass(e.toThemeProperty("jqx-icon-arrow-up-hover"))
            }),
            this._downArrow.hover(function() {
                e.disabled || e._downArrow.addClass(e.toThemeProperty("jqx-icon-arrow-down-hover"))
            }, function() {
                e._downArrow.removeClass(e.toThemeProperty("jqx-icon-arrow-down-hover"))
            });
            var t = r.jqx.mobile.isTouchDevice()
              , i = "click";
            t && (i = r.jqx.mobile.getTouchEventName("touchstart")),
            t && (this.addHandler(this.downbutton, "click", function(t) {
                e.spinDown()
            }),
            this.addHandler(this.upbutton, "click", function(t) {
                e.spinUp()
            })),
            this.addHandler(this.downbutton, i, function(i) {
                return t ? (i.preventDefault(),
                i.stopPropagation()) : (0 == e._selection().start && e._setSelectionStart(e.numberInput.val().length),
                r.jqx.browser.msie && r.jqx.browser.version < 9 && e._setSelectionStart(e._inputSelection.start)),
                e.spinDown(),
                !1
            }),
            this.addHandler(this.upbutton, i, function(i) {
                return t ? (i.preventDefault(),
                i.stopPropagation()) : (0 == e._selection().start && e._setSelectionStart(e.numberInput.val().length),
                r.jqx.browser.msie && r.jqx.browser.version < 9 && e._setSelectionStart(e._inputSelection.start)),
                e.spinUp(),
                !1
            })
        },
        spinDown: function() {
            var e = this
              , t = this.decimal;
            if ("none" != e.spinMode)
                if (null != this.decimal) {
                    var i = (m = this.getvalue("negative")) ? -1 : 0;
                    if ((r.jqx.mobile.isTouchDevice() || "textbox" == this.inputMode) && e._doTouchHandling(),
                    !e.disabled) {
                        var s = this._selection()
                          , n = this.decimal;
                        if ((h = this.getDecimal()) < this.min)
                            return h = this.min,
                            this.setDecimal(this.min),
                            this._setSelectionStart(s.start),
                            void this.spinDown();
                        if (h > this.max)
                            return h = this.max,
                            this.setDecimal(this.max),
                            this._setSelectionStart(s.start),
                            void this.spinDown();
                        e.spinButtonsStep < 0 && (e.spinButtonsStep = 1);
                        var o = i + (parseInt(e.decimal) - e.spinButtonsStep).toString().length <= e.digits;
                        if ("advanced" != e.spinMode) {
                            if (h - e.spinButtonsStep >= e.min && o) {
                                var a = 1;
                                for (u = 0; u < e.decimalDigits; u++)
                                    a *= 10;
                                var l = a * h - a * e.spinButtonsStep;
                                l /= a,
                                l = this._parseDecimalValueToEditorValue(l),
                                e.setDecimal(l)
                            }
                        } else {
                            var d = this._getspindecimal()
                              , h = (this._getSeparatorPosition(),
                            parseFloat(d.decimal));
                            if (e.spinButtonsStep < 0 && (e.spinButtonsStep = 1),
                            o = i + (parseInt(h) - e.spinButtonsStep).toString().length <= e.digits,
                            a = 1,
                            -1 != (p = d.decimal.indexOf("."))) {
                                for (var c = d.decimal.length - p - 1, u = (a = 1,
                                0); u < c; u++)
                                    a *= 10;
                                var p;
                                -1 == (p = (h = (h -= new Number(e.spinButtonsStep / a)).toFixed(c)).toString().indexOf(".")) && (h = h.toString() + ".");
                                var f = h.toString() + d.afterdecimal;
                                (f = (f = new Number(f)).toFixed(e.decimalDigits)) >= e.min && (f = this._parseDecimalValueToEditorValue(f),
                                e.setDecimal(f))
                            } else
                                h - e.spinButtonsStep >= e.min && o && (l = a * h - a * e.spinButtonsStep,
                                (f = (l /= a).toString() + d.afterdecimal) >= e.min && (f = this._parseDecimalValueToEditorValue(f),
                                e.setDecimal(f)))
                        }
                        if (null == f || "simple" != this.inputMode)
                            return this._setSelectionStart(s.start),
                            e.savedValue = e.numberInput[0].value,
                            t != this.decimal && (r.jqx.mobile.isTouchDevice() && this._raiseEvent(0, {}),
                            this._raiseEvent(7, {})),
                            void r.jqx.aria(self, "aria-valuenow", this.decimal);
                        f = this.decimal.toString();
                        var m = this.getvalue("negative");
                        0 == i && m ? this._setSelectionStart(s.start + 1) : null == f || null != n && n.toString().length != f.length ? m ? this._setSelectionStart(s.start + 1) : this._setSelectionStart(s.start - 1) : this._setSelectionStart(s.start),
                        t != this.decimal && (r.jqx.mobile.isTouchDevice() && this._raiseEvent(0, {}),
                        this._raiseEvent(7, {})),
                        r.jqx.aria(self, "aria-valuenow", this.decimal)
                    }
                } else
                    this.setDecimal(0)
        },
        _getspindecimal: function() {
            var e = this._selection()
              , t = ""
              , i = (this._getSeparatorPosition(),
            this._getVisibleItems())
              , r = this._getHiddenPrefixCount()
              , s = this.numberInput.val();
            this.numberInput.val().length == e.start && 0 == e.length && (this._setSelection(e.start, e.start + 1),
            e = this._selection());
            var n = "advanced" != this.inputMode
              , o = e.start;
            0 === o && o++,
            1 === o && "left" === this.symbolPosition && "" !== this.symbol && (o += this.symbol.length);
            for (var a = 0; a < o; a++)
                if (n) {
                    var l = s.substring(a, a + 1);
                    !isNaN(parseInt(l)) && (t += l),
                    l == this.decimalSeparator && (t += l)
                } else
                    i[a].canEdit && i[a].character != this.promptChar ? t += i[a].character : i[a].canEdit || -1 == this.decimalSeparatorPosition || i[a] != i[this.decimalSeparatorPosition - r] || (0 == t.length && (t = "0"),
                    t += i[a].character);
            var d = "";
            for (a = o; a < i.length; a++)
                n ? (l = s.substring(a, a + 1),
                !isNaN(parseInt(l)) && (d += l),
                l == this.decimalSeparator && (d += l)) : i[a].canEdit && i[a].character != this.promptChar ? d += i[a].character : i[a].canEdit || -1 == this.decimalSeparatorPosition || i[a] != i[this.decimalSeparatorPosition - r] || (d += i[a].character);
            return {
                decimal: this.getvalue("negative") ? "-" + this._parseDecimalValue(t).toString() : this._parseDecimalValue(t).toString(),
                afterdecimal: this._parseDecimalValue(d)
            }
        },
        _parseDecimalValue: function(e) {
            if ("." != this.decimalSeparator) {
                var t = e.toString().indexOf(this.decimalSeparator);
                if (t >= 0)
                    return e.toString().substring(0, t) + "." + e.toString().substring(t + 1)
            }
            return e
        },
        _parseDecimalValueToEditorValue: function(e) {
            if ("." != this.decimalSeparator) {
                var t = e.toString().indexOf(".");
                if (t >= 0)
                    return e.toString().substring(0, t) + this.decimalSeparator + e.toString().substring(t + 1)
            }
            return e
        },
        spinUp: function() {
            var e = this
              , t = this.decimal;
            if ("none" != e.spinMode)
                if (null != this.decimal) {
                    (r.jqx.mobile.isTouchDevice() || "textbox" == this.inputMode) && e._doTouchHandling();
                    var i = (m = this.getvalue("negative")) ? -1 : 0;
                    if (!e.disabled) {
                        var s = this._selection()
                          , n = e.decimal;
                        if ((c = e.getDecimal()) < this.min)
                            return c = this.min,
                            this.setDecimal(this.min),
                            this._setSelectionStart(s.start),
                            void this.spinUp();
                        if (c > this.max)
                            return c = this.max,
                            this.setDecimal(this.max),
                            this._setSelectionStart(s.start),
                            void this.spinUp();
                        e.spinButtonsStep < 0 && (e.spinButtonsStep = 1);
                        var o = i + (parseInt(e.decimal) + e.spinButtonsStep).toString().length <= e.digits;
                        if ("advanced" != e.spinMode) {
                            if (c + e.spinButtonsStep <= e.max && o) {
                                for (var a = 1, l = 0; l < e.decimalDigits; l++)
                                    a *= 10;
                                var d = a * c + a * e.spinButtonsStep;
                                d /= a,
                                d = this._parseDecimalValueToEditorValue(d),
                                e.setDecimal(d)
                            }
                        } else {
                            var h = this._getspindecimal()
                              , c = (this._getSeparatorPosition(),
                            parseFloat(h.decimal));
                            if (e.spinButtonsStep < 0 && (e.spinButtonsStep = 1),
                            o = i + (parseInt(c) + e.spinButtonsStep).toString().length <= e.digits,
                            a = 1,
                            -1 != (u = h.decimal.indexOf("."))) {
                                var u, p = h.decimal.length - u - 1;
                                for (a = 1,
                                l = 0; l < p; l++)
                                    a *= 10;
                                -1 == (u = (c = (c += new Number(e.spinButtonsStep / a)).toFixed(p)).toString().indexOf(".")) && (c = c.toString() + ".");
                                var f = c.toString() + h.afterdecimal;
                                f = (f = new Number(f)).toFixed(e.decimalDigits),
                                new Number(f).toFixed(e.decimalDigits) <= e.max ? (f = this._parseDecimalValueToEditorValue(f),
                                e.setDecimal(f)) : f = void 0
                            } else
                                c + e.spinButtonsStep <= e.max && o && (d = a * c + a * e.spinButtonsStep,
                                f = (d /= a).toString() + h.afterdecimal,
                                new Number(f).toFixed(e.decimalDigits) <= e.max ? (f = this._parseDecimalValueToEditorValue(f),
                                m && -1 == f.indexOf("-") && "-0" != h.decimal && (f = "-" + f),
                                e.setDecimal(f)) : f = void 0)
                        }
                        if (null == f || "simple" != this.inputMode)
                            return this._setSelectionStart(s.start),
                            e.savedValue = e.numberInput[0].value,
                            t != this.decimal && (r.jqx.mobile.isTouchDevice() && this._raiseEvent(0, {}),
                            this._raiseEvent(7, {})),
                            void r.jqx.aria(self, "aria-valuenow", this.decimal);
                        f = this.decimal.toString();
                        var m = this.getvalue("negative");
                        -1 != i || m ? null == f || null != n && n.toString().length != f.length ? m ? this._setSelectionStart(s.start) : this._setSelectionStart(1 + s.start) : this._setSelectionStart(s.start) : this._setSelectionStart(-1 + s.start),
                        t != this.decimal && (r.jqx.mobile.isTouchDevice() && this._raiseEvent(0, {}),
                        this._raiseEvent(7, {})),
                        r.jqx.aria(self, "aria-valuenow", this.decimal)
                    }
                } else
                    this.setDecimal(0)
        },
        _exitSimpleInputMode: function(e, t, i, s) {
            if (null == t && (t = e.data),
            null != t) {
                if (null == i) {
                    if (null != e.target && null != t.element && (null != e.target.id && e.target.id.toString().length > 0 && t.host.find("#" + e.target.id).length > 0 || e.target == t.element))
                        return;
                    var n = t.host.offset()
                      , o = n.left
                      , a = n.top
                      , l = t.host.width()
                      , d = t.host.height()
                      , h = r(e.target).offset();
                    if (h.left >= o && h.left <= o + l && h.top >= a && h.top <= a + d)
                        return
                }
                if (r.jqx.mobile.isOperaMiniBrowser() && t.numberInput.attr("readonly", !0),
                !t.disabled && !t.readOnly && null != r.data(t.numberInput, "simpleInputMode"))
                    return r.data(t.numberInput, "simpleInputMode", null),
                    this._parseDecimalInSimpleMode(),
                    !1
            }
        },
        _getDecimalInSimpleMode: function() {
            var e = this.decimal;
            if ("." != this.decimalSeparator) {
                var t = e.toString().indexOf(this.decimalSeparator);
                t > 0 && (e = e.toString().substring(0, t) + "." + e.toString().substring(t + 1))
            }
            return e
        },
        _parseDecimalInSimpleMode: function(e) {
            var t = this.getvalue("negative")
              , i = this.ValueString;
            if (null == i && (i = this.GetValueString(this.numberInput.val(), this.decimalSeparator, "" != this.decimalSeparator)),
            "." != this.decimalSeparator) {
                var r = i.toString().indexOf(".");
                if (r > 0) {
                    var s = i.toString().substring(0, r) + this.decimalSeparator + i.toString().substring(r + 1);
                    i = s
                }
            }
            var n = t ? "-" : "";
            "left" == this.symbolPosition && (n += this.symbol);
            var o = this.digits % this.groupSize;
            0 == o && (o = this.groupSize);
            var a = i.toString();
            a.indexOf("-") >= 0 && (a = a.substring(a.indexOf("-") + 1)),
            n += a,
            "right" == this.symbolPosition && (n += this.symbol),
            0 != e && this.numberInput.val(n)
        },
        _enterSimpleInputMode: function(e, t) {
            null == t && (t = e.data);
            var i = this._selection();
            if (null != t) {
                var s = t.getvalue("negative")
                  , n = t.decimal;
                s && n > 0 && (n = -n),
                t.numberInput.val(n),
                r.data(t.numberInput, "simpleInputMode", !0),
                r.jqx.mobile.isOperaMiniBrowser() && t.numberInput.attr("readonly", !1),
                this._parseDecimalInSimpleMode(),
                this._setSelectionStart(i.start)
            }
        },
        setvalue: function(e, t) {
            void 0 !== this[e] && ("decimal" == e ? this._setDecimal(t) : (this[e] = t,
            this.propertyChangedHandler(this, e, t, t)))
        },
        getvalue: function(e) {
            return "decimal" == e && null != this.negative && 1 == this.negative ? this.decimal.toString().indexOf(",") ? -Math.abs(this.decimal.toString().replace(/,/, ".")) : -Math.abs(this[e]) : e in this ? this[e] : null
        },
        _getString: function() {
            for (var e = "", t = 0; t < this.items.length; t++)
                e += this.items[t].character;
            return e
        },
        _literal: function(e, t, i, r) {
            return {
                character: e,
                regex: t,
                canEdit: i,
                isSeparator: r
            }
        },
        _initializeLiterals: function() {
            if ("textbox" != this.inputMode) {
                for (var e = 0, t = this.negativeSymbol.length, i = 0; i < t; i++) {
                    var r = this.negativeSymbol.substring(i, i + 1)
                      , s = ""
                      , n = !1
                      , o = null;
                    o = this.negative ? this._literal(r, s, n, !1) : this._literal("", s, n, !1),
                    this.items[e] = o,
                    e++
                }
                var a = this.symbol.length;
                if ("left" == this.symbolPosition)
                    for (i = 0; i < a; i++)
                        r = this.symbol.substring(i, i + 1),
                        s = "",
                        n = !1,
                        o = this._literal(r, s, n, !1),
                        this.items[e] = o,
                        e++;
                var l = this.digits % this.groupSize;
                for (0 == l && (l = this.groupSize),
                i = 0; i < this.digits; i++)
                    if (r = this.promptChar,
                    s = "\\d",
                    n = !0,
                    o = this._literal(r, s, n, !1),
                    this.items[e] = o,
                    e++,
                    i < this.digits - 1 && null != this.groupSeparator && this.groupSeparator.length > 0) {
                        if (0 == --l) {
                            l = this.groupSize;
                            var d = this._literal(this.groupSeparator, "", !1, !1);
                            this.items[e] = d,
                            e++
                        }
                    } else
                        i == this.digits - 1 && (o.character = 0);
                if (this.decimalSeparatorPosition = -1,
                null != this.decimalDigits && this.decimalDigits > 0)
                    for (0 == (r = this.decimalSeparator).length && (r = "."),
                    o = this._literal(r, "", !1, !0),
                    this.items[e] = o,
                    this.decimalSeparatorPosition = e,
                    e++,
                    i = 0; i < this.decimalDigits; i++) {
                        s = "\\d";
                        var h = this._literal(0, s, !0, !1);
                        this.items[e] = h,
                        e++
                    }
                if ("right" == this.symbolPosition)
                    for (i = 0; i < a; i++)
                        r = this.symbol.substring(i, i + 1),
                        s = "",
                        n = !1,
                        o = this._literal(r, s, n),
                        this.items[e] = o,
                        e++
            }
        },
        _match: function(e, t) {
            return new RegExp(t,"i").test(e)
        },
        _raiseEvent: function(e, t) {
            var i = this.events[e]
              , s = {};
            if (s.owner = this,
            "none" == this.host.css("display"))
                return !0;
            var n = t.charCode ? t.charCode : t.keyCode ? t.keyCode : 0
              , o = !0
              , a = this.readOnly;
            if ((3 == e || 2 == e) && !this.disabled) {
                if ("simple" == this.inputMode || "textbox" == this.inputMode)
                    return !0;
                this._handleMouse(t)
            }
            if (0 == e) {
                var l = this.getvalue("decimal");
                this.max < l || this.min > l ? this.host.addClass(this.toThemeProperty("jqx-input-invalid")) : (this.host.removeClass(this.toThemeProperty("jqx-input-invalid")),
                this.host.addClass(this.toThemeProperty("jqx-input")),
                this.host.addClass(this.toThemeProperty("jqx-rc-all")))
            }
            var d = new r.Event(i);
            d.owner = this,
            s.value = this.getvalue("decimal"),
            s.text = this.numberInput.val(),
            d.args = s,
            7 == e && (s.type = this.changeType,
            this.changeType = null),
            null != i && 4 != e && 5 != e && 6 != e && (o = this.host.trigger(d));
            var h = this;
            if ("textbox" == this.inputMode)
                return o;
            if ("simple" != this.inputMode) {
                if (4 == e) {
                    if (a || this.disabled)
                        return !1;
                    o = h._handleKeyDown(t, n)
                } else if (5 == e)
                    (a || this.disabled) && (o = !1);
                else if (6 == e) {
                    if (a || this.disabled)
                        return !1;
                    o = h._handleKeyPress(t, n)
                }
            } else if (4 == e || 5 == e || 6 == e) {
                if (r.jqx.mobile.isTouchDevice() || !0 === this.touchMode)
                    return !0;
                if (a || this.disabled)
                    return !1;
                var c = String.fromCharCode(n)
                  , u = (parseInt(c),
                !0);
                if (t.ctrlKey || t.shiftKey || t.metaKey || n >= 65 && n <= 90 && (u = !1),
                6 == e && null != r.jqx.browser.opera && 8 == n)
                    return !1;
                if (u) {
                    if (4 == e && (u = h._handleSimpleKeyDown(t, n)),
                    107 == n && (p = h.getvalue("negative")) && (h.setvalue("negative", !1),
                    h.decimal = h.ValueString,
                    h._parseDecimalInSimpleMode(),
                    h._setSelectionStart(f.start + 1),
                    h._raiseEvent(0, h.value),
                    h._raiseEvent(1, h.numberInput.val())),
                    189 == n || 45 == n || 109 == n || 173 == n) {
                        var p, f = h._selection();
                        4 == e && (0 == (p = h.getvalue("negative")) ? h.setvalue("negative", !0) : h.setvalue("negative", !1),
                        h.decimal = h.ValueString,
                        h._parseDecimalInSimpleMode(),
                        p ? h._setSelectionStart(f.start - 1) : h._setSelectionStart(f.start + 1),
                        u = !1,
                        h._raiseEvent(0, h.value),
                        h._raiseEvent(1, h.numberInput.val()))
                    }
                    var m = s.ctrlKey || s.metaKey;
                    if (!r.jqx.browser.msie && (m && 99 == n || m && 67 == n || m && 122 == n || m && 90 == n || m && 118 == n || m && 86 == n || t.shiftKey && 45 == n))
                        return (r.jqx.browser.webkit || r.jqx.browser.chrome) && h._handleSimpleKeyDown(t, n),
                        67 == n;
                    if (m && 97 == n || m && 65 == n)
                        return !0;
                    if (6 == e && u)
                        return this._isSpecialKey(n)
                }
                return u
            }
            return o
        },
        GetSelectionInValue: function(e, t, r, s) {
            var n = 0;
            for (i = 0; i < t.length && !(i >= e); i++) {
                var o = t.substring(i, i + 1);
                (!isNaN(parseInt(o)) || s && t.substring(i, i + 1) == r) && n++
            }
            return n
        },
        GetSelectionLengthInValue: function(e, t, r, s) {
            var n = 0;
            for (i = 0; i < r.length && !(i >= e + t); i++) {
                var o = r.substring(i, i + 1)
                  , a = !isNaN(parseInt(o));
                (t > 0 && i >= e && a || i >= e && r[i].toString() == s) && n++
            }
            return n
        },
        GetInsertTypeByPositionInValue: function(e, t, i, r) {
            var s = "before"
              , n = this.GetValueString(i, t, r);
            return e > this.GetDigitsToSeparator(0, n, t) && (s = "after"),
            s
        },
        RemoveRange: function(e, t, i, r, s, n) {
            var o = this.digits
              , a = e
              , l = t
              , d = 0
              , h = (this.decimal,
            this._selection(),
            "" != (r = this.decimalSeparator));
            if (0 == l && this.ValueString.length < this.decimalPossibleChars - 1)
                return d;
            var c = this.GetSeparatorPositionInText(r, i);
            s || (c = this.GetSeparatorPositionInText(r, i)),
            c < 0 && !h && i.length > 1 && (c = i.length),
            -1 == c && (c = i.length);
            var u = h ? 1 : 0;
            t < 2 && 1 == n && this.ValueString.length - this.decimalDigits - u == o && e + t < c && l++;
            for (var p = "", f = 0; f < i.length; f++)
                if (f < a || f >= a + l)
                    p += i.substring(f, f + 1);
                else if ((m = i.substring(f, f + 1)) != r) {
                    var m = i.substring(f, f + 1);
                    this.symbol && "" != this.symbol && this.symbol.indexOf(m) >= 0 || (f > c ? p += "0" : (m = i.substring(f, f + 1),
                    !isNaN(parseInt(m)) && d++))
                } else
                    p += r;
            0 == p.length && (p = "0"),
            s ? this.numberInput.val(p) : this.ValueString = p;
            var g = p.substring(0, 1);
            return g == r && isNaN(parseInt(g)) && (p = "0" + p),
            this.ValueString = this.GetValueString(p, r, h),
            this.decimal = this.ValueString,
            this._parseDecimalInSimpleMode(),
            this._setSelectionStart(a),
            d
        },
        InsertDigit: function(e, t) {
            "number" != typeof this.digits && (this.digits = parseInt(this.digits)),
            "number" != typeof this.decimalDigits && (this.decimalDigits = parseInt(this.decimalDigits));
            var i = 1 + this.digits
              , r = this._selection()
              , s = this.getvalue("negative")
              , n = !1;
            0 == r.start && "" != this.symbol && "left" == this.symbolPosition && (this._setSelectionStart(r.start + 1),
            r = this._selection(),
            n = !0),
            (s && n || s && !n && 0 == r.start) && (this._setSelectionStart(r.start + 1),
            r = this._selection());
            var o = this.numberInput.val().substring(r.start, r.start + 1)
              , a = this.numberInput.val()
              , l = this.decimalSeparator
              , d = "" != l && this.decimalDigits > 0;
            if (o == this.symbol && "right" == this.symbolPosition) {
                if (0 != this.decimalDigits)
                    return;
                if (this.ValueString = this.GetValueString(a, l, d),
                this.ValueString.length >= i)
                    return
            }
            this.ValueString = this.GetValueString(a, l, d),
            "" == this.ValueString && (this.ValueString = new Number(0).toFixed(this.decimalDigits));
            var h = this.ValueString;
            this.decimalDigits > 0 && t >= h.length && (t = h.length - 1);
            var c = "";
            t < h.length && (c = h.substring(t, t + 1));
            var u = !1;
            "after" == this.GetInsertTypeByPositionInValue(t, l, a, d) && (u = !0);
            var p = d ? 1 : 0;
            c != l && this.ValueString.length - this.decimalDigits - p >= i - 1 && (u = !0),
            "0" === c && 1 === this.ValueString.length && 0 === this.decimalDigits && (u = !0);
            var f = d ? 1 : 0;
            if (!(!u && this.ValueString && this.ValueString.length >= this.digits + this.decimalDigits + f)) {
                if (u && c != l) {
                    if ((w = h.substring(0, t)).length == h.length && this.ValueString.length >= this.digits + this.decimalDigits + f)
                        return;
                    var m = e
                      , g = "";
                    t + 1 < h.length && (g = h.substring(t + 1));
                    var v = w + m + g;
                    this.ValueString = v
                } else {
                    var w;
                    v = (w = h.substring(0, t)) + (m = e) + (g = h.substring(t)),
                    "0" == h.substring(0, 1) && h.substring(1, 2) == l && (v = m + h.substring(1),
                    c == l && (this._setSelectionStart(r.start - 1),
                    r = this._selection())),
                    this.ValueString = v
                }
                this.decimal = s ? -this.ValueString : this.ValueString,
                this._parseDecimalInSimpleMode();
                var x = r.start;
                x += 1,
                this._setSelectionStart(x),
                this.value = this.decimal,
                this._raiseEvent(0, this.value),
                this._raiseEvent(1, this.numberInput.val())
            }
        },
        GetStringToSeparator: function(e, t, i) {
            var r = this.GetSeparatorPositionInText(t, e)
              , s = e.subString(0, r);
            return this.GetValueString(s, t, i)
        },
        GetSeparatorPositionInText: function(e, t) {
            var r = -1;
            for (i = 0; i < t.length; i++)
                if (t.substring(i, i + 1) == e) {
                    r = i;
                    break
                }
            return r
        },
        GetValueString: function(e, t, i) {
            for (var r = "", s = 0; s < e.length; s++) {
                var n = e.substring(s, s + 1);
                !isNaN(parseInt(n)) && (r += n),
                n == t && (r += t)
            }
            return r
        },
        Backspace: function() {
            var e = this._selection()
              , t = this._selection()
              , i = this.numberInput.val();
            if (0 != e.start || 0 != e.length) {
                this.isBackSpace = !0;
                var r = i.substring[(e.start,
                e.start + 1)];
                isNaN(parseInt(r)),
                e.start > 0 && 0 == e.length && (this._setSelectionStart(e.start - 1),
                e = this._selection()),
                this.Delete(),
                this._setSelectionStart(t.start - 1),
                this.isBackSpace = !1
            }
        },
        Delete: function(e) {
            var t = this._selection()
              , i = this.numberInput.val();
            0 === t.start && "-" == i.substring(0, 1) && (this.setvalue("negative", !1),
            t = this._selection(),
            i = this.numberInput.val());
            var r = t.start
              , s = t.length;
            s = Math.max(s, 1),
            this.ValueString = this.GetValueString(i, this.decimalSeparator, "" != this.decimalSeparator),
            r > this.ValueString.indexOf(this.decimalSeparator) && this.decimalDigits > 0 && r++;
            var n = 0;
            this.symbol && ("left" == this.symbolPosition && n--,
            this.negative && n--),
            this.RemoveRange(t.start + n, s, this.ValueString, ".", !1);
            var o = this.ValueString.substring(0, 1);
            !isNaN(parseInt(o)) || (this.ValueString = "0" + this.ValueString),
            this.decimal = this.ValueString,
            this._parseDecimalInSimpleMode(),
            this._setSelectionStart(r),
            this.value = this.decimal,
            this._raiseEvent(0, this.value),
            this._raiseEvent(1, this.numberInput.val())
        },
        insertsimple: function(e) {
            var t = this._selection()
              , i = this.numberInput.val();
            if (!(t.start == i.length && null != this.decimal && this.decimalDigits > 0)) {
                this.decimal;
                var r = this.decimalSeparator;
                this.ValueString = this.GetValueString(i, r, "" != r);
                var s = this.GetSelectionInValue(t.start, i, r, "" != r)
                  , n = this.GetSelectionLengthInValue(t.start, t.length, i, r);
                if (this.GetDigitsToSeparator(0, this.ValueString, r),
                this.decimalDigits > 0 && s >= this.ValueString.length && s--,
                "" == this.ValueString)
                    return this.ValueString = new Number(0).toFixed(this.decimalDigits),
                    this.ValueString = this.ValueString.replace(".", r),
                    this.RemoveRange(t.start, n, this.ValueString, r, !1, !0),
                    void this.InsertDigit(e, 0, t);
                this.RemoveRange(t.start, n, this.ValueString, r, !1, !0),
                this.InsertDigit(e, s, t)
            }
        },
        GetDigitsToSeparator: function(e, t, r) {
            if (null == r && (r = "."),
            t.indexOf(r) < 0)
                return t.length;
            for (i = 0; i < t.length; i++)
                if (t.substring(i, i + 1) == r) {
                    e = i;
                    break
                }
            return e
        },
        _handleSimpleKeyDown: function(e, t) {
            var i, s, n = this._selection(), o = e.ctrlKey || e.metaKey;
            if ((8 == t || 46 == t) && o)
                return this.setDecimal(null),
                !1;
            if (n.start >= 0 && n.start < this.items.length)
                var a = String.fromCharCode(t);
            if (27 === t && (this.setDecimal(this._savedValue),
            -1 != (i = this.GetSeparatorPositionInText(this.decimalSeparator, this.numberInput.val())) && this._setSelectionStart(i),
            e.preventDefault()),
            this.rtl && 37 == t) {
                var l = (s = e.shiftKey) ? 1 : 0;
                return s ? this._setSelection(n.start + 1 - l, n.start + n.length + 1) : this._setSelection(n.start + 1 - l, n.start + 1),
                !1
            }
            if (this.rtl && 39 == t)
                return l = (s = e.shiftKey) ? 1 : 0,
                s ? this._setSelection(n.start - 1, n.length + l + n.start - 1) : this._setSelection(n.start - 1, n.start - 1),
                !1;
            if (8 == t)
                return this.Backspace(),
                !1;
            if (190 == t || 110 == t)
                return -1 != (i = this.GetSeparatorPositionInText(this.decimalSeparator, this.numberInput.val())) && this._setSelectionStart(i + 1),
                !1;
            if (188 == t) {
                var d = this.numberInput.val();
                for (u = n.start; u < d.length; u++)
                    if (d[u] == this.groupSeparator) {
                        this._setSelectionStart(1 + u);
                        break
                    }
                return !1
            }
            if ((o = e.ctrlKey || e.metaKey) && 99 == t || o && 67 == t) {
                n = this._selection();
                var h = ""
                  , c = this.numberInput.val();
                if (n.start > 0 || n.length > 0)
                    for (var u = n.start; u < n.end; u++)
                        h += c.substring(u, u + 1);
                if (r.data(document.body, "jqxSelection", h),
                r.jqx.browser.msie)
                    window.clipboardData.setData("Text", h);
                else {
                    var p = this
                      , f = r('<textarea style="position: absolute; left: -1000px; top: -1000px;"/>');
                    f.val(h),
                    r("body").append(f),
                    f.select(),
                    setTimeout(function() {
                        document.designMode = "off",
                        f.select(),
                        f.remove(),
                        p.focus()
                    }, 100)
                }
                return this.savedText = h,
                !0
            }
            if (o && 122 == t || o && 90 == t)
                return !1;
            if (o && 118 == t || o && 86 == t || e.shiftKey && 45 == t)
                return r.jqx.browser.msie && !this.savedText && (this.savedText = window.clipboardData.getData("Text")),
                null != this.savedText && this.savedText.length > 0 ? this.val(this.savedText) : this.val(r.data(document.body, "jqxSelection")),
                !1;
            a = String.fromCharCode(t);
            var m = parseInt(a);
            if (t >= 96 && t <= 105 && (m = t - 96,
            t -= 48),
            !isNaN(m))
                return p = this,
                this.insertsimple(m),
                !1;
            if (46 == t)
                return this.Delete(),
                !1;
            if (38 == t)
                return this.spinUp(),
                !1;
            if (40 == t)
                return this.spinDown(),
                !1;
            var g = this._isSpecialKey(t);
            return !r.jqx.browser.mozilla || g
        },
        _getEditRange: function() {
            var e = 0
              , t = 0;
            for (i = 0; i < this.items.length; i++)
                if (this.items[i].canEdit) {
                    e = i;
                    break
                }
            for (i = this.items.length - 1; i >= 0; i--)
                if (this.items[i].canEdit) {
                    t = i;
                    break
                }
            return {
                start: e,
                end: t
            }
        },
        _getVisibleItems: function() {
            var e = new Array
              , t = 0;
            for (i = 0; i < this.items.length; i++)
                this.items[i].character.toString().length > 0 && (e[t] = this.items[i],
                t++);
            return e
        },
        _hasEmptyVisibleItems: function() {
            var e = this._getVisibleItems();
            for (i = 0; i < e.length; i++)
                if (e[i].canEdit && e[i].character == this.promptChar)
                    return !0;
            return !1
        },
        _getFirstVisibleNonEmptyIndex: function() {
            var e = this._getVisibleItems();
            for (i = 0; i < e.length; i++)
                if (e[i].canEdit && e[i].character != this.promptChar)
                    return i
        },
        _handleMouse: function(e, t) {
            var i = this._selection();
            if (i.length <= 1) {
                var r = this._getFirstVisibleNonEmptyIndex();
                i.start < r && this._setSelectionStart(r)
            }
        },
        _insertKey: function(e) {
            this.numberInput[0].focus();
            var t = String.fromCharCode(e)
              , s = parseInt(t);
            if (!isNaN(s)) {
                var n = 0;
                for (i = 0; i < this.items.length; i++)
                    0 == this.items[i].character.length && n++;
                var o = this._selection()
                  , a = this;
                if (o.start >= 0 && o.start <= this.items.length) {
                    var l = !1
                      , d = this._getFirstVisibleNonEmptyIndex();
                    o.start < d && 0 == o.length && (isNaN(t) && " " != t || (this._setSelectionStart(d),
                    o = this._selection())),
                    this._getFirstEditableItemIndex();
                    var h = this._getLastEditableItemIndex()
                      , c = this._getVisibleItems();
                    r.each(c, function(e, i) {
                        if (!(o.start > e && e != c.length - 1)) {
                            var r = c[e];
                            if (e > h && (r = c[h]),
                            !isNaN(t) && " " != t && "" != t && r && r.canEdit) {
                                var s = a._getSeparatorPosition();
                                if (a._match(t, r.regex)) {
                                    if (!l && o.length > 0) {
                                        for (j = o.start + n; j < o.end + n; j++)
                                            a.items[j].canEdit && (j > s ? a.items[j].character = "0" : a.items[j].character = a.promptChar);
                                        var d = a._getString();
                                        l = !0
                                    }
                                    s = a._getSeparatorPosition();
                                    var u = a._hasEmptyVisibleItems();
                                    if (null == a.decimal && (o.start = s - 1,
                                    o.start < 0 && (o.start = 0),
                                    o.end = o.start),
                                    o.start <= s && u) {
                                        var f = e;
                                        -1 == a.decimalSeparatorPosition && o.start == s && (f = e + 1),
                                        null == a.decimal && (f = o.start);
                                        var m = "";
                                        for (p = 0; p < f; p++)
                                            c[p].canEdit && c[p].character != a.promptChar && (m += c[p].character);
                                        m += t;
                                        var g = a.decimal < 1 ? 1 : 0;
                                        for (o.start == s && -1 != a.decimalSeparatorPosition && (m += a.decimalSeparator,
                                        g = 0),
                                        p = f + g; p < c.length; p++)
                                            c[p].character == a.decimalSeparator && c[p].isSeparator ? m += c[p].character : c[p].canEdit && c[p].character != a.promptChar && (m += c[p].character);
                                        if ("." != a.decimalSeparator && (m = a._parseDecimalValue(m)),
                                        m = parseFloat(m).toString(),
                                        m = (m = new Number(m)).toFixed(a.decimalDigits),
                                        "." != a.decimalSeparator && (m = a._parseDecimalValueToEditorValue(m)),
                                        a.setvalue("decimal", m),
                                        d = a._getString(),
                                        o.end < s ? a._setSelectionStart(o.end + g) : a._setSelectionStart(o.end),
                                        o.length >= 1 && a._setSelectionStart(o.end),
                                        o.length == a.numberInput.val().length) {
                                            var v = a._moveCaretToDecimalSeparator()
                                              , w = a.decimalSeparatorPosition >= 0 ? 1 : 0;
                                            a._setSelectionStart(v - w)
                                        }
                                    } else if (o.start < s || o.start > s) {
                                        if (a.numberInput.val().length == o.start && -1 != a.decimalSeparatorPosition)
                                            return !1;
                                        if (a.numberInput.val().length == o.start && -1 == a.decimalSeparatorPosition && !u)
                                            return !1;
                                        m = "";
                                        var x = !1;
                                        for (p = 0; p < e; p++)
                                            c[p].canEdit && c[p].character != a.promptChar && (m += c[p].character),
                                            c[p].character == a.decimalSeparator && c[p].isSeparator && (m += c[p].character,
                                            x = !0);
                                        for (m += t,
                                        g = a.decimal < 1 ? 1 : 0,
                                        x || o.start != s - 1 || (m += a.decimalSeparator,
                                        x = !0),
                                        p = e + 1; p < c.length; p++)
                                            !x && c[p].character == a.decimalSeparator && c[p].isSeparator ? m += c[p].character : c[p].canEdit && c[p].character != a.promptChar && (m += c[p].character);
                                        if (a.setvalue("decimal", m),
                                        d = a._getString(),
                                        a.decimalSeparatorPosition < 0 && r == c[h])
                                            return a._setSelectionStart(e),
                                            !1;
                                        var b = d.indexOf(a.symbol);
                                        b <= (a.getvalue("negative") ? 1 : 0) && (b = d.length),
                                        o.start < b ? a._setSelectionStart(e + 1) : a._setSelectionStart(e),
                                        o.length,
                                        o.length == a.numberInput.val().length && (v = a._moveCaretToDecimalSeparator(),
                                        a._setSelectionStart(v - 1))
                                    }
                                    return !1
                                }
                            }
                        }
                    })
                }
            }
        },
        _handleKeyPress: function(e, t) {
            var i = this._selection()
              , s = e.ctrlKey || e.metaKey;
            return !!(s && 97 == t || s && 65 == t) || (8 == t ? (i.start > 0 && this._setSelectionStart(i.start),
            !1) : 46 == t ? (i.start < this.items.length && this._setSelectionStart(i.start),
            !1) : (r.jqx.browser.mozilla || 45 != t && 173 != t && 109 != t && 189 != t || (0 == this.getvalue("negative") ? this.setvalue("negative", !0) : this.setvalue("negative", !1)),
            r.jqx.browser.msie && this._insertKey(t),
            this._isSpecialKey(t)))
        },
        _deleteSelectedText: function() {
            var e = this._selection()
              , t = ""
              , r = this._getSeparatorPosition()
              , s = this._getVisibleItems()
              , n = this._getHiddenPrefixCount();
            for (this.numberInput.val().length == e.start && 0 == e.length && (this._setSelection(e.start, e.start + 1),
            e = this._selection()),
            i = 0; i < e.start; i++)
                s[i].canEdit && s[i].character != this.promptChar ? t += s[i].character : s[i].canEdit || -1 == this.decimalSeparatorPosition || s[i] != s[this.decimalSeparatorPosition - n] || (0 == t.length && (t = "0"),
                t += s[i].character);
            for (i = e.start; i < e.end; i++)
                i > r && -1 != this.decimalSeparatorPosition ? s[i].canEdit && s[i].character != this.promptChar && (t += "0") : s[i].canEdit || -1 == this.decimalSeparatorPosition || s[i] != s[this.decimalSeparatorPosition - n] || (0 == t.length && (t = "0"),
                t += s[i].character);
            for (i = e.end; i < s.length; i++)
                s[i].canEdit && s[i].character != this.promptChar ? t += s[i].character : s[i].canEdit || -1 == this.decimalSeparatorPosition || s[i] != s[this.decimalSeparatorPosition - n] || (0 == t.length && (t = "0"),
                t += s[i].character);
            return this.setvalue("decimal", t),
            e.length > 0
        },
        _restoreInitialState: function() {
            var e = parseInt(this.decimalDigits);
            for (e > 0 && (e += 2),
            k = this.items.length - 1; k > this.items.length - 1 - e && this.items[k]; k--)
                this.items[k].canEdit && this.items[k].character == this.promptChar && (this.items[k].character = 0)
        },
        clear: function() {
            this.setDecimal(0)
        },
        clearDecimal: function() {
            if ("textbox" != this.inputMode) {
                for (var e = 0; e < this.items.length; e++)
                    this.items[e].canEdit && (this.items[e].character = this.promptChar);
                this._restoreInitialState()
            } else
                this.numberInput.val()
        },
        _saveSelectedText: function() {
            var e = this._selection()
              , t = ""
              , s = this._getVisibleItems();
            if (e.start > 0 || e.length > 0)
                for (i = e.start; i < e.end; i++)
                    s[i].canEdit && s[i].character != this.promptChar ? t += s[i].character : s[i].isSeparator && (t += s[i].character);
            return r.jqx.browser.msie && window.clipboardData.setData("Text", t),
            t
        },
        _pasteSelectedText: function() {
            var e = this._selection();
            if (this.selectedText = r.data(document.body, "jqxSelection"),
            window.clipboardData) {
                var t = window.clipboardData.getData("Text");
                if (t != this.selectedText && t.length > 0 && (this.selectedText = window.clipboardData.getData("Text"),
                null == this.selectedText || null == this.selectedText))
                    return
            }
            if (e.start,
            this._getVisibleItems(),
            null != this.selectedText)
                for (var i = 0; i < this.selectedText.length; i++) {
                    var s = parseInt(this.selectedText[i]);
                    if (!isNaN(s)) {
                        var n = 48 + s;
                        this._insertKey(n)
                    }
                }
        },
        _getHiddenPrefixCount: function() {
            var e = 0;
            if (this.negative || e++,
            "left" == this.symbolPosition)
                for (i = 0; i < this.symbol.length; i++)
                    "" == this.symbol.substring(i, i + 1) && e++;
            return e
        },
        _getEditableItem: function() {
            var e = this._selection();
            for (i = 0; i < this.items.length; i++)
                if (i < e.start && this.items[i].canEdit && this.items[i].character != this.promptChar)
                    return this.items[i];
            return null
        },
        _getEditableItems: function() {
            var e = new Array
              , t = 0;
            for (i = 0; i < this.items.length; i++)
                this.items[i].canEdit && (e[t] = this.items[i],
                t++);
            return e
        },
        _getValidSelectionStart: function(e) {
            for (i = this.items.length - 1; i >= 0; i--)
                if (this.items[i].canEdit && this.items[i].character != this.promptChar)
                    return i;
            return -1
        },
        _getEditableItemIndex: function(e) {
            var t = this._selection()
              , r = this._getHiddenPrefixCount()
              , s = this._getVisibleItems()
              , n = t.start
              , o = -1;
            for (i = 0; i < n; i++)
                i < s.length && s[i].canEdit && (o = i + r);
            if (-1 == o && t.length > 0)
                for (n = t.end,
                i = 0; i < n; i++)
                    if (i < s.length && s[i].canEdit) {
                        o = i + r;
                        break
                    }
            return o
        },
        _getEditableItemByIndex: function(e) {
            for (k = 0; k < this.items.length; k++)
                if (k > e && this.items[k].canEdit && this.items[k].character != this.promptChar)
                    return k;
            return -1
        },
        _getFirstEditableItemIndex: function() {
            var e = this._getVisibleItems();
            for (m = 0; m < e.length; m++)
                if (e[m].character != this.promptChar && e[m].canEdit && "0" != e[m].character)
                    return m;
            return -1
        },
        _getLastEditableItemIndex: function() {
            var e = this._getVisibleItems();
            for (m = e.length - 1; m >= 0; m--)
                if (e[m].character != this.promptChar && e[m].canEdit)
                    return m;
            return -1
        },
        _moveCaretToDecimalSeparator: function() {
            for (i = this.items.length - 1; i >= 0; i--)
                if (this.items[i].character == this.decimalSeparator && this.items[i].isSeparator)
                    return this.negative ? (this._setSelectionStart(i + 1),
                    i) : (this._setSelectionStart(i),
                    i);
            return this.numberInput.val().length
        },
        _handleBackspace: function() {
            var e = this._selection()
              , t = this._getHiddenPrefixCount()
              , i = this._getEditableItemIndex() - t
              , r = this._getFirstVisibleNonEmptyIndex()
              , s = !1;
            if (this.negative && (s = !0,
            (r >= i + 1 || 0 == e.start) && (this.setvalue("negative", !1),
            0 == e.length)) && (this._setSelectionStart(e.start - 1),
            e = this._selection()),
            i >= 0) {
                0 == e.length && -1 != i && this._setSelection(i, i + 1);
                var n = e.start > this._getSeparatorPosition() + 1 && this.decimalSeparatorPosition > 0;
                if (n && (e = this._selection()),
                this._deleteSelectedText(),
                e.length < 1 || n ? this._setSelectionStart(e.start) : e.length >= 1 && this._setSelectionStart(e.end),
                e.length == this.numberInput.val().length || s) {
                    var o = this._moveCaretToDecimalSeparator();
                    this._setSelectionStart(o - 1)
                }
            } else
                this._setSelectionStart(e.start)
        },
        _handleKeyDown: function(e, t) {
            var s, n = this._selection(), o = e.ctrlKey || e.metaKey;
            if ((8 == t || 46 == t) && o)
                return this.setDecimal(null),
                !1;
            if (this.rtl && 37 == t) {
                var a = (s = e.shiftKey) ? 1 : 0;
                return s ? this._setSelection(n.start + 1 - a, n.start + n.length + 1) : this._setSelection(n.start + 1 - a, n.start + 1),
                !1
            }
            if (this.rtl && 39 == t)
                return a = (s = e.shiftKey) ? 1 : 0,
                s ? this._setSelection(n.start - 1, n.length + a + n.start - 1) : this._setSelection(n.start - 1, n.start - 1),
                !1;
            if (o && 97 == t || o && 65 == t)
                return !0;
            if (o && 120 == t || o && 88 == t)
                return this.selectedText = this._saveSelectedText(e),
                r.data(document.body, "jqxSelection", this.selectedText),
                this._handleBackspace(),
                !1;
            if (o && 99 == t || o && 67 == t)
                return this.selectedText = this._saveSelectedText(e),
                r.data(document.body, "jqxSelection", this.selectedText),
                !1;
            if (o && 122 == t || o && 90 == t)
                return !1;
            if (o && 118 == t || o && 86 == t || e.shiftKey && 45 == t)
                return this._pasteSelectedText(),
                !1;
            if (n.start >= 0 && n.start < this.items.length) {
                var l = String.fromCharCode(t);
                this.items[n.start]
            }
            if (8 == t)
                return this._handleBackspace(),
                !1;
            if (190 == t || 110 == t)
                return this._moveCaretToDecimalSeparator(),
                !1;
            if (188 == t) {
                var d = this.numberInput.val();
                for (i = n.start; i < d.length; i++)
                    if (d[i] == this.groupSeparator) {
                        this._setSelectionStart(1 + i);
                        break
                    }
                return !1
            }
            if (null == r.jqx.browser.msie) {
                l = String.fromCharCode(t);
                var h = parseInt(l);
                if (t >= 96 && t <= 105 && (h = t - 96,
                t -= 48),
                !isNaN(h))
                    return this._insertKey(t),
                    !1
            }
            if (46 == t) {
                var c = this._getVisibleItems();
                if (n.start < c.length) {
                    if (a = 0 == c[n.start].canEdit ? 2 : 1,
                    0 == n.start && this.negative && (this.setvalue("negative", !1),
                    0 == n.length && this._setSelectionStart(0),
                    0 == (n = this._selection()).length))
                        return !1;
                    0 == n.length && this._setSelection(n.start + a, n.start + a + n.length),
                    this._handleBackspace(),
                    new Number(this.decimal) < 1 || n.start > this._getSeparatorPosition() ? this._setSelectionStart(n.end + a) : n.start + 1 < this.decimalSeparatorPosition && this._setSelectionStart(n.end + a)
                }
                return !1
            }
            if (38 == t)
                return this.spinUp(),
                !1;
            if (40 == t)
                return this.spinDown(),
                !1;
            27 === t && (this.setDecimal(this._savedValue),
            this._setSelectionStart(n.end),
            e.preventDefault());
            var u = this._isSpecialKey(t);
            return r.jqx.browser.mozilla && (45 != t && 173 != t && 109 != t && 189 != t || (0 == this.getvalue("negative") ? this.setvalue("negative", !0) : this.setvalue("negative", !1))),
            !r.jqx.browser.mozilla || u
        },
        _isSpecialKey: function(e) {
            return 8 == e || 9 == e || 13 == e || 35 == e || 36 == e || 37 == e || 39 == e || 27 == e || 46 == e
        },
        _selection: function() {
            try {
                if ("selectionStart"in this.numberInput[0]) {
                    var e = this.numberInput[0]
                      , t = e.selectionEnd - e.selectionStart;
                    return {
                        start: e.selectionStart,
                        end: e.selectionEnd,
                        length: t,
                        text: e.value
                    }
                }
                var i = document.selection.createRange();
                if (null == i)
                    return {
                        start: 0,
                        end: e.value.length,
                        length: 0
                    };
                var r = this.numberInput[0].createTextRange()
                  , s = r.duplicate();
                return r.moveToBookmark(i.getBookmark()),
                s.setEndPoint("EndToStart", r),
                t = i.text.length,
                {
                    start: s.text.length,
                    end: s.text.length + i.text.length,
                    length: t,
                    text: i.text
                }
            } catch (e) {
                return {
                    start: 0,
                    end: 0,
                    length: 0
                }
            }
        },
        selectAll: function() {
            var e = this.numberInput;
            setTimeout(function() {
                if ("selectionStart"in e[0])
                    e[0].focus(),
                    e[0].setSelectionRange(0, e[0].value.length);
                else {
                    var t = e[0].createTextRange();
                    t.collapse(!0),
                    t.moveEnd("character", e[0].value.length),
                    t.moveStart("character", 0),
                    t.select()
                }
            }, 10)
        },
        _setSelection: function(e, t) {
            if (1 != this._disableSetSelection && !r.jqx.mobile.isTouchDevice() && 1 != this.touchMode)
                try {
                    if ("selectionStart"in this.numberInput[0])
                        this.numberInput[0].focus(),
                        this.numberInput[0].setSelectionRange(e, t);
                    else {
                        var i = this.numberInput[0].createTextRange();
                        i.collapse(!0),
                        i.moveEnd("character", t),
                        i.moveStart("character", e),
                        i.select()
                    }
                } catch (e) {}
        },
        _setSelectionStart: function(e) {
            this._setSelection(e, e),
            r.data(this.numberInput, "selectionstart", e)
        },
        resize: function(e, t) {
            this.width = e,
            this.height = t,
            this._render(!1)
        },
        _render: function(e) {
            var t = parseInt(this.host.css("border-left-width"))
              , i = parseInt(this.host.css("border-left-width"))
              , s = parseInt(this.host.css("border-left-width"))
              , n = parseInt(this.host.css("border-left-width"));
            this.numberInput.css("padding-top", "0px"),
            this.numberInput.css("padding-bottom", "0px");
            var o = window.getComputedStyle(this.element)
              , a = 2 * parseInt(o.borderLeftWidth);
            ("border-box" === o.boxSizing || isNaN(a)) && (a = 0),
            null != this.width && -1 != this.width.toString().indexOf("px") ? this.element.style.width = parseInt(this.width) - a + "px" : null == this.width || isNaN(this.width) || (this.element.style.width = parseInt(this.width) - a + "px"),
            null != this.height && -1 != this.height.toString().indexOf("px") ? this.element.style.height = parseInt(this.height) - a + "px" : null == this.height || isNaN(this.height) || (this.element.style.height = parseInt(this.height) - a + "px");
            var l = this.host.width()
              , d = this.host.height();
            this.numberInput.css({
                "border-left-width": 0,
                "border-right-width": 0,
                "border-bottom-width": 0,
                "border-top-width": 0
            }),
            isNaN(s) && (s = 1),
            isNaN(i) && (i = 1),
            isNaN(n) && (n = 1),
            isNaN(t) && (t = 1),
            this.numberInput.css("text-align", this.textAlign);
            var h = this.numberInput.css("font-size");
            "" == h && (h = 13),
            this.numberInput.css("height", parseInt(h) + 4 + "px"),
            this.numberInput.css("width", l - 2);
            var c = d - 2 * s - parseInt(h) - 2;
            isNaN(c) && (c = 0),
            c < 0 && (c = 0),
            this.spinButtons && this.spincontainer && (l -= parseInt(this.spinButtonsWidth - 2),
            r.jqx.mobile.isTouchDevice() || !0 === this.touchMode ? (this.spincontainer.width(2 * this.spinButtonsWidth),
            l -= this.spinButtonsWidth,
            this.upbutton.height("100%"),
            this.downbutton.height("100%"),
            this.downbutton.css("float", "left"),
            this.upbutton.css("float", "right"),
            this.upbutton.width(this.spinButtonsWidth),
            this.downbutton.width(1 + this.spinButtonsWidth)) : (this.spincontainer.width(this.spinButtonsWidth),
            this.upbutton.width(this.spinButtonsWidth + 2),
            this.downbutton.width(this.spinButtonsWidth + 2),
            this.upbutton.height("50%"),
            this.downbutton.height("50%"),
            this.spincontainer.width(this.spinButtonsWidth)),
            this._upArrow.height("100%"),
            this._downArrow.height("100%"),
            this.numberInput.css("width", l - 6),
            this.numberInput.css("margin-right", "2px"));
            var u = c / 2;
            r.jqx.browser.msie && r.jqx.browser.version < 8 && (u = c / 4),
            this.numberInput.css("padding-left", "0px"),
            this.numberInput.css("padding-right", "0px"),
            this.numberInput.css("padding-top", Math.round(u) + "px"),
            this.numberInput.css("padding-bottom", Math.round(u) + "px"),
            null != e && 1 != e || (this.numberInput.val(this._getString()),
            "advanced" != this.inputMode && this._parseDecimalInSimpleMode()),
            this._addBarAndLabel(this.numberInput),
            this._updateHint()
        },
        _addBarAndLabel: function(e) {
            var t = this;
            if (null === t.bar && null === t.label) {
                var i = r("<label></label");
                this.hint && (i[0].innerHTML = this.placeHolder),
                i.addClass(t.toThemeProperty("jqx-input-label")),
                e.after(i),
                t.label = i;
                var s = r("<span></span>");
                e.after(s),
                s.addClass(t.toThemeProperty("jqx-input-bar")),
                t.spinButtons ? s.css("top", t.host.height()) : s.css("top", "0px"),
                t.bar = s,
                t.template && (t.bar.addClass(t.toThemeProperty("jqx-" + t.template)),
                t.label.addClass(t.toThemeProperty("jqx-" + t.template)))
            }
        },
        destroy: function() {
            this._removeHandlers(),
            this.host.remove()
        },
        inputValue: function(e) {
            return void 0 === e ? this._value() : (this.propertyChangedHandler(this, "value", this._value, e),
            this._refreshValue(),
            this)
        },
        _value: function() {
            return this.numberInput.val()
        },
        val: function(e) {
            if ((void 0 === e || "object" == typeof e) && null !== e)
                return this.getDecimal();
            if (null !== e) {
                var t = e;
                (t = t.toString()).indexOf(this.symbol) > -1 && (t = t.replace(this.symbol, "")),
                t = function(e, t, i) {
                    var r = e;
                    if (t == i)
                        return e;
                    for (var s = r.indexOf(t); -1 != s; )
                        s = (r = r.replace(t, i)).indexOf(t);
                    return r
                }(t = t.replace(this.decimalSeparator, "."), this.groupSeparator, "");
                for (var i = "", r = 0; r < t.length; r++) {
                    var s = t.substring(r, r + 1);
                    "-" === s && (i += "-"),
                    "." === s && (i += "."),
                    null != s.match(/^[0-9]+$/) && (i += s)
                }
                t = (t = i).replace(/ /g, ""),
                t = new Number(t),
                this.setDecimal(t)
            } else
                this.setDecimal(null)
        },
        getDecimal: function() {
            return null == this.decimal ? null : ("simple" == this.inputMode && (this._parseDecimalInSimpleMode(!1),
            this.decimal = this._getDecimalInSimpleMode(this.decimal)),
            "" == this.decimal ? 0 : this.getvalue("negative") && this.decimal > 0 ? -parseFloat(this.decimal) : parseFloat(this.decimal))
        },
        setDecimal: function(e) {
            var t = e;
            if ("." != this.decimalSeparator)
                if (null === e)
                    this._setDecimal(e);
                else {
                    var i, r, s, n = e;
                    "number" != typeof e && (-1 != (i = (e = e.toString()).indexOf(".")) ? (n = (r = e.substring(0, i)) + "." + (s = e.substring(i + 1)),
                    -1 != r.indexOf("-") && (r = r.substring(1)),
                    e = "advanced" != this.inputMode ? r + "." + s : r + this.decimalSeparator + s) : -1 != (i = e.indexOf(this.decimalSeparator)) && (n = (r = e.substring(0, i)) + "." + (s = e.substring(i + 1)),
                    -1 != r.indexOf("-") && (r = r.substring(1)),
                    e = "advanced" != this.inputMode ? r + "." + s : r + this.decimalSeparator + s)),
                    n < 0 ? this.setvalue("negative", !0) : this.setvalue("negative", !1),
                    this._setDecimal(e)
                }
            else
                e < 0 ? this.setvalue("negative", !0) : this.setvalue("negative", !1),
                null === e ? this._setDecimal(e) : this._setDecimal(Math.abs(e));
            null == t && this.numberInput.val(""),
            this._updateHint()
        },
        _setDecimal: function(e) {
            if (this.allowNull || null != e || (this.decimal = 0,
            e = 0),
            null == e)
                return this.decimal = null,
                this.value = null,
                this.clearDecimal(),
                this._refreshValue(),
                this.decimal = null,
                this.value = null,
                void (this.ValueString = "");
            -1 != e.toString().indexOf("e") && (e = new Number(e).toFixed(this.decimalDigits).toString()),
            this.clearDecimal();
            var t = e.toString()
              , i = ""
              , r = ""
              , s = !0;
            0 == t.length && (t = "0");
            for (var n = 0; n < t.length; n++) {
                if ("number" == typeof e) {
                    if ("." == t.substring(n, n + 1)) {
                        s = !1;
                        continue
                    }
                } else if (t.substring(n, n + 1) == this.decimalSeparator) {
                    s = !1;
                    continue
                }
                s ? i += t.substring(n, n + 1) : r += t.substring(n, n + 1)
            }
            i.length > 0 && (i = parseFloat(i).toString());
            var o = this.digits;
            o < i.length && (i = i.substr(0, o));
            var a = 0
              , l = this._getSeparatorPosition();
            for (n = l += this._getHiddenPrefixCount(); n >= 0; n--)
                n < this.items.length && this.items[n].canEdit && a < i.length && (this.items[n].character = i.substring(i.length - a - 1, i.length - a),
                a++);
            for (a = 0,
            n = l; n < this.items.length; n++)
                this.items[n].canEdit && a < r.length && (this.items[n].character = r.substring(a, a + 1),
                a++);
            if (this._refreshValue(),
            "." == this.decimalSeparator)
                this.ValueString = new Number(e).toFixed(this.decimalDigits);
            else {
                var d = e.toString().indexOf(this.decimalSeparator);
                if (d > 0) {
                    var h = e.toString().substring(0, d) + "." + e.toString().substring(d + 1);
                    this.ValueString = new Number(h).toFixed(this.decimalDigits)
                } else
                    this.ValueString = new Number(e).toFixed(this.decimalDigits)
            }
            "advanced" != this.inputMode && (this._parseDecimalInSimpleMode(),
            this._raiseEvent(1, this.ValueString)),
            "textbox" == this.inputMode && (this.decimal = this.ValueString,
            this.getvalue("negative") && (this.decimal = "-" + this.ValueString)),
            (e = this.val()) < this.min || e > this.max ? this.host.addClass("jqx-input-invalid") : this.host.removeClass("jqx-input-invalid"),
            this._updateHint()
        },
        _getSeparatorPosition: function() {
            var e = this._getHiddenPrefixCount();
            return this.decimalSeparatorPosition > 0 ? this.decimalSeparatorPosition - e : this.items.length - e
        },
        _setTheme: function() {
            this.host.removeClass(),
            this.host.addClass(this.toThemeProperty("jqx-input")),
            this.host.addClass(this.toThemeProperty("jqx-rc-all")),
            this.host.addClass(this.toThemeProperty("jqx-widget")),
            this.host.addClass(this.toThemeProperty("jqx-widget-content")),
            this.host.addClass(this.toThemeProperty("jqx-numberinput")),
            this.spinButtons && (this.downbutton.removeClass(),
            this.upbutton.removeClass(),
            this.downbutton.addClass(this.toThemeProperty("jqx-scrollbar-button-state-normal")),
            this.upbutton.addClass(this.toThemeProperty("jqx-scrollbar-button-state-normal")),
            this._upArrow.removeClass(),
            this._downArrow.removeClass(),
            this._upArrow.addClass(this.toThemeProperty("jqx-icon-arrow-up")),
            this._downArrow.addClass(this.toThemeProperty("jqx-icon-arrow-down"))),
            this.numberInput.removeClass(),
            this.numberInput.addClass(this.toThemeProperty("jqx-input-content"))
        },
        propertiesChangedHandler: function(e, t, i) {
            i && i.width && i.height && 2 == Object.keys(i).length && e._render()
        },
        propertyChangedHandler: function(e, t, s, n) {
            if (!(e.batchUpdate && e.batchUpdate.width && e.batchUpdate.height && 2 == Object.keys(e.batchUpdate).length)) {
                if ("template" == t && (e.upbutton.removeClass(e.toThemeProperty("jqx-" + e.template)),
                e.downbutton.removeClass(e.toThemeProperty("jqx-" + e.template)),
                e.upbutton.addClass(e.toThemeProperty("jqx-" + e.template)),
                e.downbutton.addClass(e.toThemeProperty("jqx-" + e.template))),
                ("digits" == t || "groupSize" == t || "decimalDigits" == t) && n < 0)
                    throw new Exception(this.invalidArgumentExceptions[0]);
                if ("placeHolder" == t && (e.isMaterialized() ? e.hint && (e.label[0].innerHTML = e.placeHolder) : e.numberInput.attr("placeholder", e.placeHolder)),
                "theme" === t && r.jqx.utilities.setTheme(s, n, e.host),
                "digits" == t && n != s && (e.digits = parseInt(n)),
                "min" != t && "max" != t || (r.jqx.aria(e, "aria-value" + t, n.toString()),
                e._refreshValue()),
                "decimalDigits" == t && n != s && (e.decimalDigits = parseInt(n)),
                "decimalSeparator" == t || "digits" == t || "symbol" == t || "symbolPosition" == t || "groupSize" == t || "groupSeparator" == t || "decimalDigits" == t || "negativeSymbol" == t) {
                    var o = e.decimal;
                    if ("decimalSeparator" == t && "" == n && (n = " "),
                    s != n) {
                        var a = e._selection();
                        e.items = new Array,
                        e._initializeLiterals(),
                        e.value = e._getString(),
                        e._refreshValue(),
                        e._setDecimal(o)
                    }
                }
                if ("rtl" == t && (e.rtl ? (e.spincontainer && (e.spincontainer.css("float", "right"),
                e.spincontainer.css("border-right-width", "1px")),
                e.numberInput.css("float", "right")) : (e.spincontainer && (e.spincontainer.css("float", "right"),
                e.spincontainer.css("border-right-width", "1px")),
                e.numberInput.css("float", "left"))),
                "spinButtons" == t && (e.spincontainer ? (n ? e.spincontainer.css("display", "block") : e.spincontainer.css("display", "none"),
                e._render()) : e._spinButtons()),
                "touchMode" === t && (e.inputMode = "textbox",
                e.spinMode = "simple",
                e.render()),
                "negative" == t && "advanced" == e.inputMode) {
                    a = e._selection();
                    var l = 0;
                    n ? (e.items[0].character = e.negativeSymbol[0],
                    l = 1) : (e.items[0].character = "",
                    l = -1),
                    e._refreshValue(),
                    e.isInitialized && e._setSelection(a.start + l, a.end + l)
                }
                if ("decimal" == t && (e.value = n,
                e.setDecimal(n)),
                "value" === t && (e.value = n,
                e.setDecimal(n),
                e._raiseEvent(1, n)),
                "textAlign" == t && (e.textAlign = n,
                e._render()),
                "disabled" == t && (e.numberInput.attr("disabled", n),
                e.disabled ? e.host.addClass(e.toThemeProperty("jqx-fill-state-disabled")) : e.host.removeClass(e.toThemeProperty("jqx-fill-state-disabled")),
                r.jqx.aria(e, "aria-disabled", n.toString())),
                "readOnly" == t && (e.readOnly = n),
                "promptChar" == t) {
                    for (i = 0; i < e.items.length; i++)
                        e.items[i].character == e.promptChar && (e.items[i].character = n);
                    e.promptChar = n
                }
                "width" == t ? (e.width = n,
                e._render()) : "height" == t && (e.height = n,
                e._render())
            }
        },
        _value: function() {
            return this.value
        },
        _refreshValue: function() {
            var e = this.value;
            if ("textbox" !== this.inputMode) {
                this.value = this._getString(),
                e = this.value;
                for (var t = "", i = 0; i < this.items.length; i++) {
                    var r = this.items[i];
                    r.canEdit && r.character != this.promptChar && (t += r.character),
                    i == this.decimalSeparatorPosition && (t += ".")
                }
                this.decimal = t;
                var s = !1;
                this.oldValue !== e && (this.oldValue = e,
                this._raiseEvent(0, e),
                s = !0),
                "simple" != this.inputMode && (this.numberInput.val(e),
                s && this._raiseEvent(1, e)),
                null == e && this.numberInput.val("")
            }
        }
    })
}
, function(e, t, i) {
    "use strict";
    var r = function() {
        var e = this.$createElement;
        return (this._self._c || e)("div", {
            attrs: {
                id: this.id
            }
        }, [this._t("default")], 2)
    };
    r._withStripped = !0;
    i(5),
    i(8),
    i(13),
    i(6),
    i(14),
    i(7),
    i(15),
    i(10),
    i(11),
    i(16),
    i(3),
    i(9),
    i(17),
    i(18),
    i(19),
    i(20),
    i(21),
    i(22),
    i(23),
    i(24),
    i(25),
    i(26),
    i(27),
    i(28),
    i(29),
    i(30),
    i(31);
    var s = {
        props: {
            altrows: Boolean,
            altstart: Number,
            altstep: Number,
            autoshowloadelement: Boolean,
            autoshowfiltericon: Boolean,
            autoshowcolumnsmenubutton: Boolean,
            showcolumnlines: Boolean,
            showrowlines: Boolean,
            showcolumnheaderlines: Boolean,
            adaptive: Boolean,
            adaptivewidth: Number,
            clipboard: Boolean,
            closeablegroups: Boolean,
            columnsmenuwidth: Number,
            columnmenuopening: Function,
            columnmenuclosing: Function,
            cellhover: Function,
            enablekeyboarddelete: Boolean,
            enableellipsis: Boolean,
            enablemousewheel: Boolean,
            enableanimations: Boolean,
            enabletooltips: Boolean,
            enablehover: Boolean,
            enablebrowserselection: Boolean,
            everpresentrowposition: String,
            everpresentrowheight: Number,
            everpresentrowactions: String,
            everpresentrowactionsmode: String,
            filterrowheight: Number,
            filtermode: String,
            groupsrenderer: Function,
            groupcolumnrenderer: Function,
            groupsexpandedbydefault: Boolean,
            handlekeyboardnavigation: Function,
            pagerrenderer: Function,
            rtl: Boolean,
            showdefaultloadelement: Boolean,
            showfiltercolumnbackground: Boolean,
            showfiltermenuitems: Boolean,
            showpinnedcolumnbackground: Boolean,
            showsortcolumnbackground: Boolean,
            showsortmenuitems: Boolean,
            showgroupmenuitems: Boolean,
            showrowdetailscolumn: Boolean,
            showheader: Boolean,
            showgroupsheader: Boolean,
            showaggregates: Boolean,
            showgroupaggregates: Boolean,
            showeverpresentrow: Boolean,
            showfilterrow: Boolean,
            showemptyrow: Boolean,
            showstatusbar: Boolean,
            statusbarheight: Number,
            showtoolbar: Boolean,
            selectionmode: String,
            updatefilterconditions: Function,
            updatefilterpanel: Function,
            theme: String,
            toolbarheight: Number,
            autoheight: Boolean,
            autorowheight: Boolean,
            columnsheight: Number,
            deferreddatafields: Array,
            groupsheaderheight: Number,
            groupindentwidth: Number,
            height: [String, Number],
            pagerheight: Number,
            rowsheight: Number,
            scrollbarsize: Number,
            scrollmode: String,
            scrollfeedback: Function,
            width: [String, Number],
            autosavestate: Boolean,
            autoloadstate: Boolean,
            columns: Array,
            columngroups: Array,
            columnsmenu: Boolean,
            columnsresize: Boolean,
            columnsautoresize: Boolean,
            columnsreorder: Boolean,
            disabled: Boolean,
            editable: Boolean,
            editmode: String,
            filter: Function,
            filterable: Boolean,
            groupable: Boolean,
            groups: Array,
            horizontalscrollbarstep: Number,
            horizontalscrollbarlargestep: Number,
            initrowdetails: Function,
            keyboardnavigation: Boolean,
            localization: Object,
            pagesize: Number,
            pagesizeoptions: Array,
            pagermode: String,
            pagerbuttonscount: Number,
            pageable: Boolean,
            rowdetails: Boolean,
            rowdetailstemplate: Object,
            ready: Function,
            rendered: Function,
            renderstatusbar: Function,
            rendertoolbar: Function,
            rendergridrows: Function,
            sortable: Boolean,
            sortmode: String,
            selectedrowindex: Number,
            selectedrowindexes: Array,
            source: Object,
            sorttogglestates: Number,
            updatedelay: Number,
            virtualmode: Boolean,
            verticalscrollbarstep: Number,
            verticalscrollbarlargestep: Number,
            autoCreate: {
                default: !0,
                type: Boolean
            }
        },
        created: function() {
            this.id = "jqxGrid" + JQXLite.generateID(),
            this.componentSelector = "#" + this.id
        },
        mounted: function() {
            this.autoCreate && this.__createComponent__()
        },
        methods: {
            createComponent: function(e) {
                this.autoCreate ? console.warn('Component is already created! If you want to use createComponent, please set "autoCreate" property to "false".') : this.__createComponent__(e)
            },
            setOptions: function(e) {
                JQXLite(this.componentSelector).jqxGrid(e)
            },
            getOptions: function() {
                const e = Object.keys(this.__manageProps__())
                  , t = {};
                for (let i = 0; i < e.length; i++)
                    t[e[i]] = JQXLite(this.componentSelector).jqxGrid(e[i]);
                return t
            },
            autoresizecolumns: function(e) {
                JQXLite(this.componentSelector).jqxGrid("autoresizecolumns", e)
            },
            autoresizecolumn: function(e, t) {
                JQXLite(this.componentSelector).jqxGrid("autoresizecolumn", e, t)
            },
            beginupdate: function() {
                JQXLite(this.componentSelector).jqxGrid("beginupdate")
            },
            clear: function() {
                JQXLite(this.componentSelector).jqxGrid("clear")
            },
            destroy: function() {
                JQXLite(this.componentSelector).jqxGrid("destroy")
            },
            endupdate: function() {
                JQXLite(this.componentSelector).jqxGrid("endupdate")
            },
            ensurerowvisible: function(e) {
                JQXLite(this.componentSelector).jqxGrid("ensurerowvisible", e)
            },
            focus: function() {
                JQXLite(this.componentSelector).jqxGrid("focus")
            },
            getcolumnindex: function(e) {
                return JQXLite(this.componentSelector).jqxGrid("getcolumnindex", e)
            },
            getcolumn: function(e) {
                return JQXLite(this.componentSelector).jqxGrid("getcolumn", e)
            },
            getcolumnproperty: function(e, t) {
                return JQXLite(this.componentSelector).jqxGrid("getcolumnproperty", e, t)
            },
            getrowid: function(e) {
                return JQXLite(this.componentSelector).jqxGrid("getrowid", e)
            },
            getrowdata: function(e) {
                return JQXLite(this.componentSelector).jqxGrid("getrowdata", e)
            },
            getrowdatabyid: function(e) {
                return JQXLite(this.componentSelector).jqxGrid("getrowdatabyid", e)
            },
            getrowboundindexbyid: function(e) {
                return JQXLite(this.componentSelector).jqxGrid("getrowboundindexbyid", e)
            },
            getrowboundindex: function(e) {
                return JQXLite(this.componentSelector).jqxGrid("getrowboundindex", e)
            },
            getrows: function() {
                return JQXLite(this.componentSelector).jqxGrid("getrows")
            },
            getboundrows: function() {
                return JQXLite(this.componentSelector).jqxGrid("getboundrows")
            },
            getdisplayrows: function() {
                return JQXLite(this.componentSelector).jqxGrid("getdisplayrows")
            },
            getdatainformation: function() {
                return JQXLite(this.componentSelector).jqxGrid("getdatainformation")
            },
            getsortinformation: function() {
                return JQXLite(this.componentSelector).jqxGrid("getsortinformation")
            },
            getpaginginformation: function() {
                return JQXLite(this.componentSelector).jqxGrid("getpaginginformation")
            },
            hidecolumn: function(e) {
                JQXLite(this.componentSelector).jqxGrid("hidecolumn", e)
            },
            hideloadelement: function() {
                JQXLite(this.componentSelector).jqxGrid("hideloadelement")
            },
            hiderowdetails: function(e) {
                JQXLite(this.componentSelector).jqxGrid("hiderowdetails", e)
            },
            iscolumnvisible: function(e) {
                return JQXLite(this.componentSelector).jqxGrid("iscolumnvisible", e)
            },
            iscolumnpinned: function(e) {
                return JQXLite(this.componentSelector).jqxGrid("iscolumnpinned", e)
            },
            localizestrings: function(e) {
                JQXLite(this.componentSelector).jqxGrid("localizestrings", e)
            },
            pincolumn: function(e) {
                JQXLite(this.componentSelector).jqxGrid("pincolumn", e)
            },
            refreshdata: function() {
                JQXLite(this.componentSelector).jqxGrid("refreshdata")
            },
            refresh: function() {
                JQXLite(this.componentSelector).jqxGrid("refresh")
            },
            render: function() {
                JQXLite(this.componentSelector).jqxGrid("render")
            },
            scrolloffset: function(e, t) {
                JQXLite(this.componentSelector).jqxGrid("scrolloffset", e, t)
            },
            scrollposition: function() {
                return JQXLite(this.componentSelector).jqxGrid("scrollposition")
            },
            showloadelement: function() {
                JQXLite(this.componentSelector).jqxGrid("showloadelement")
            },
            showrowdetails: function(e) {
                JQXLite(this.componentSelector).jqxGrid("showrowdetails", e)
            },
            setcolumnindex: function(e, t) {
                JQXLite(this.componentSelector).jqxGrid("setcolumnindex", e, t)
            },
            setcolumnproperty: function(e, t, i) {
                JQXLite(this.componentSelector).jqxGrid("setcolumnproperty", e, t, i)
            },
            showcolumn: function(e) {
                JQXLite(this.componentSelector).jqxGrid("showcolumn", e)
            },
            unpincolumn: function(e) {
                JQXLite(this.componentSelector).jqxGrid("unpincolumn", e)
            },
            updatebounddata: function(e) {
                JQXLite(this.componentSelector).jqxGrid("updatebounddata", e)
            },
            updating: function() {
                return JQXLite(this.componentSelector).jqxGrid("updating")
            },
            getsortcolumn: function() {
                return JQXLite(this.componentSelector).jqxGrid("getsortcolumn")
            },
            removesort: function() {
                JQXLite(this.componentSelector).jqxGrid("removesort")
            },
            sortby: function(e, t) {
                JQXLite(this.componentSelector).jqxGrid("sortby", e, t)
            },
            addgroup: function(e) {
                JQXLite(this.componentSelector).jqxGrid("addgroup", e)
            },
            cleargroups: function() {
                JQXLite(this.componentSelector).jqxGrid("cleargroups")
            },
            collapsegroup: function(e) {
                JQXLite(this.componentSelector).jqxGrid("collapsegroup", e)
            },
            collapseallgroups: function() {
                JQXLite(this.componentSelector).jqxGrid("collapseallgroups")
            },
            expandallgroups: function() {
                JQXLite(this.componentSelector).jqxGrid("expandallgroups")
            },
            expandgroup: function(e) {
                JQXLite(this.componentSelector).jqxGrid("expandgroup", e)
            },
            getrootgroupscount: function() {
                return JQXLite(this.componentSelector).jqxGrid("getrootgroupscount")
            },
            getgroup: function(e) {
                return JQXLite(this.componentSelector).jqxGrid("getgroup", e)
            },
            insertgroup: function(e, t) {
                JQXLite(this.componentSelector).jqxGrid("insertgroup", e, t)
            },
            iscolumngroupable: function() {
                return JQXLite(this.componentSelector).jqxGrid("iscolumngroupable")
            },
            removegroupat: function(e) {
                JQXLite(this.componentSelector).jqxGrid("removegroupat", e)
            },
            removegroup: function(e) {
                JQXLite(this.componentSelector).jqxGrid("removegroup", e)
            },
            addfilter: function(e, t, i) {
                JQXLite(this.componentSelector).jqxGrid("addfilter", e, t, i)
            },
            applyfilters: function() {
                JQXLite(this.componentSelector).jqxGrid("applyfilters")
            },
            clearfilters: function() {
                JQXLite(this.componentSelector).jqxGrid("clearfilters")
            },
            getfilterinformation: function() {
                return JQXLite(this.componentSelector).jqxGrid("getfilterinformation")
            },
            getcolumnat: function(e) {
                return JQXLite(this.componentSelector).jqxGrid("getcolumnat", e)
            },
            removefilter: function(e, t) {
                JQXLite(this.componentSelector).jqxGrid("removefilter", e, t)
            },
            refreshfilterrow: function() {
                JQXLite(this.componentSelector).jqxGrid("refreshfilterrow")
            },
            gotopage: function(e) {
                JQXLite(this.componentSelector).jqxGrid("gotopage", e)
            },
            gotoprevpage: function() {
                JQXLite(this.componentSelector).jqxGrid("gotoprevpage")
            },
            gotonextpage: function() {
                JQXLite(this.componentSelector).jqxGrid("gotonextpage")
            },
            addrow: function(e, t, i) {
                JQXLite(this.componentSelector).jqxGrid("addrow", e, t, i)
            },
            begincelledit: function(e, t) {
                JQXLite(this.componentSelector).jqxGrid("begincelledit", e, t)
            },
            beginrowedit: function(e) {
                JQXLite(this.componentSelector).jqxGrid("beginrowedit", e)
            },
            closemenu: function() {
                JQXLite(this.componentSelector).jqxGrid("closemenu")
            },
            deleterow: function(e) {
                JQXLite(this.componentSelector).jqxGrid("deleterow", e)
            },
            endcelledit: function(e, t, i) {
                JQXLite(this.componentSelector).jqxGrid("endcelledit", e, t, i)
            },
            endrowedit: function(e, t) {
                JQXLite(this.componentSelector).jqxGrid("endrowedit", e, t)
            },
            getcell: function(e, t) {
                return JQXLite(this.componentSelector).jqxGrid("getcell", e, t)
            },
            getcellatposition: function(e, t) {
                return JQXLite(this.componentSelector).jqxGrid("getcellatposition", e, t)
            },
            getcelltext: function(e, t) {
                return JQXLite(this.componentSelector).jqxGrid("getcelltext", e, t)
            },
            getcelltextbyid: function(e, t) {
                return JQXLite(this.componentSelector).jqxGrid("getcelltextbyid", e, t)
            },
            getcellvaluebyid: function(e, t) {
                return JQXLite(this.componentSelector).jqxGrid("getcellvaluebyid", e, t)
            },
            getcellvalue: function(e, t) {
                return JQXLite(this.componentSelector).jqxGrid("getcellvalue", e, t)
            },
            isBindingCompleted: function() {
                return JQXLite(this.componentSelector).jqxGrid("isBindingCompleted")
            },
            openmenu: function(e) {
                JQXLite(this.componentSelector).jqxGrid("openmenu", e)
            },
            setcellvalue: function(e, t, i) {
                JQXLite(this.componentSelector).jqxGrid("setcellvalue", e, t, i)
            },
            setcellvaluebyid: function(e, t, i) {
                JQXLite(this.componentSelector).jqxGrid("setcellvaluebyid", e, t, i)
            },
            showvalidationpopup: function(e, t, i) {
                JQXLite(this.componentSelector).jqxGrid("showvalidationpopup", e, t, i)
            },
            updaterow: function(e, t) {
                JQXLite(this.componentSelector).jqxGrid("updaterow", e, t)
            },
            clearselection: function() {
                JQXLite(this.componentSelector).jqxGrid("clearselection")
            },
            getselectedrowindex: function() {
                return JQXLite(this.componentSelector).jqxGrid("getselectedrowindex")
            },
            getselectedrowindexes: function() {
                return JQXLite(this.componentSelector).jqxGrid("getselectedrowindexes")
            },
            getselectedcell: function() {
                return JQXLite(this.componentSelector).jqxGrid("getselectedcell")
            },
            getselectedcells: function() {
                return JQXLite(this.componentSelector).jqxGrid("getselectedcells")
            },
            selectcell: function(e, t) {
                JQXLite(this.componentSelector).jqxGrid("selectcell", e, t)
            },
            selectallrows: function() {
                JQXLite(this.componentSelector).jqxGrid("selectallrows")
            },
            selectrow: function(e) {
                JQXLite(this.componentSelector).jqxGrid("selectrow", e)
            },
            unselectrow: function(e) {
                JQXLite(this.componentSelector).jqxGrid("unselectrow", e)
            },
            unselectcell: function(e, t) {
                JQXLite(this.componentSelector).jqxGrid("unselectcell", e, t)
            },
            getcolumnaggregateddata: function(e, t) {
                return JQXLite(this.componentSelector).jqxGrid("getcolumnaggregateddata", e, t)
            },
            refreshaggregates: function() {
                JQXLite(this.componentSelector).jqxGrid("refreshaggregates")
            },
            renderaggregates: function() {
                JQXLite(this.componentSelector).jqxGrid("renderaggregates")
            },
            exportdata: function(e, t, i, r, s, n, o) {
                return JQXLite(this.componentSelector).jqxGrid("exportdata", e, t, i, r, s, n, o)
            },
            getstate: function() {
                return JQXLite(this.componentSelector).jqxGrid("getstate")
            },
            loadstate: function(e) {
                JQXLite(this.componentSelector).jqxGrid("loadstate", e)
            },
            savestate: function() {
                return JQXLite(this.componentSelector).jqxGrid("savestate")
            },
            _altrows: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("altrows");
                JQXLite(this.componentSelector).jqxGrid("altrows", e)
            },
            _altstart: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("altstart");
                JQXLite(this.componentSelector).jqxGrid("altstart", e)
            },
            _altstep: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("altstep");
                JQXLite(this.componentSelector).jqxGrid("altstep", e)
            },
            _autoshowloadelement: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("autoshowloadelement");
                JQXLite(this.componentSelector).jqxGrid("autoshowloadelement", e)
            },
            _autoshowfiltericon: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("autoshowfiltericon");
                JQXLite(this.componentSelector).jqxGrid("autoshowfiltericon", e)
            },
            _autoshowcolumnsmenubutton: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("autoshowcolumnsmenubutton");
                JQXLite(this.componentSelector).jqxGrid("autoshowcolumnsmenubutton", e)
            },
            _showcolumnlines: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("showcolumnlines");
                JQXLite(this.componentSelector).jqxGrid("showcolumnlines", e)
            },
            _showrowlines: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("showrowlines");
                JQXLite(this.componentSelector).jqxGrid("showrowlines", e)
            },
            _showcolumnheaderlines: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("showcolumnheaderlines");
                JQXLite(this.componentSelector).jqxGrid("showcolumnheaderlines", e)
            },
            _adaptive: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("adaptive");
                JQXLite(this.componentSelector).jqxGrid("adaptive", e)
            },
            _adaptivewidth: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("adaptivewidth");
                JQXLite(this.componentSelector).jqxGrid("adaptivewidth", e)
            },
            _clipboard: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("clipboard");
                JQXLite(this.componentSelector).jqxGrid("clipboard", e)
            },
            _closeablegroups: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("closeablegroups");
                JQXLite(this.componentSelector).jqxGrid("closeablegroups", e)
            },
            _columnsmenuwidth: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("columnsmenuwidth");
                JQXLite(this.componentSelector).jqxGrid("columnsmenuwidth", e)
            },
            _columnmenuopening: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("columnmenuopening");
                JQXLite(this.componentSelector).jqxGrid("columnmenuopening", e)
            },
            _columnmenuclosing: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("columnmenuclosing");
                JQXLite(this.componentSelector).jqxGrid("columnmenuclosing", e)
            },
            _cellhover: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("cellhover");
                JQXLite(this.componentSelector).jqxGrid("cellhover", e)
            },
            _enablekeyboarddelete: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("enablekeyboarddelete");
                JQXLite(this.componentSelector).jqxGrid("enablekeyboarddelete", e)
            },
            _enableellipsis: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("enableellipsis");
                JQXLite(this.componentSelector).jqxGrid("enableellipsis", e)
            },
            _enablemousewheel: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("enablemousewheel");
                JQXLite(this.componentSelector).jqxGrid("enablemousewheel", e)
            },
            _enableanimations: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("enableanimations");
                JQXLite(this.componentSelector).jqxGrid("enableanimations", e)
            },
            _enabletooltips: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("enabletooltips");
                JQXLite(this.componentSelector).jqxGrid("enabletooltips", e)
            },
            _enablehover: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("enablehover");
                JQXLite(this.componentSelector).jqxGrid("enablehover", e)
            },
            _enablebrowserselection: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("enablebrowserselection");
                JQXLite(this.componentSelector).jqxGrid("enablebrowserselection", e)
            },
            _everpresentrowposition: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("everpresentrowposition");
                JQXLite(this.componentSelector).jqxGrid("everpresentrowposition", e)
            },
            _everpresentrowheight: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("everpresentrowheight");
                JQXLite(this.componentSelector).jqxGrid("everpresentrowheight", e)
            },
            _everpresentrowactions: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("everpresentrowactions");
                JQXLite(this.componentSelector).jqxGrid("everpresentrowactions", e)
            },
            _everpresentrowactionsmode: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("everpresentrowactionsmode");
                JQXLite(this.componentSelector).jqxGrid("everpresentrowactionsmode", e)
            },
            _filterrowheight: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("filterrowheight");
                JQXLite(this.componentSelector).jqxGrid("filterrowheight", e)
            },
            _filtermode: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("filtermode");
                JQXLite(this.componentSelector).jqxGrid("filtermode", e)
            },
            _groupsrenderer: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("groupsrenderer");
                JQXLite(this.componentSelector).jqxGrid("groupsrenderer", e)
            },
            _groupcolumnrenderer: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("groupcolumnrenderer");
                JQXLite(this.componentSelector).jqxGrid("groupcolumnrenderer", e)
            },
            _groupsexpandedbydefault: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("groupsexpandedbydefault");
                JQXLite(this.componentSelector).jqxGrid("groupsexpandedbydefault", e)
            },
            _handlekeyboardnavigation: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("handlekeyboardnavigation");
                JQXLite(this.componentSelector).jqxGrid("handlekeyboardnavigation", e)
            },
            _pagerrenderer: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("pagerrenderer");
                JQXLite(this.componentSelector).jqxGrid("pagerrenderer", e)
            },
            _rtl: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("rtl");
                JQXLite(this.componentSelector).jqxGrid("rtl", e)
            },
            _showdefaultloadelement: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("showdefaultloadelement");
                JQXLite(this.componentSelector).jqxGrid("showdefaultloadelement", e)
            },
            _showfiltercolumnbackground: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("showfiltercolumnbackground");
                JQXLite(this.componentSelector).jqxGrid("showfiltercolumnbackground", e)
            },
            _showfiltermenuitems: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("showfiltermenuitems");
                JQXLite(this.componentSelector).jqxGrid("showfiltermenuitems", e)
            },
            _showpinnedcolumnbackground: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("showpinnedcolumnbackground");
                JQXLite(this.componentSelector).jqxGrid("showpinnedcolumnbackground", e)
            },
            _showsortcolumnbackground: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("showsortcolumnbackground");
                JQXLite(this.componentSelector).jqxGrid("showsortcolumnbackground", e)
            },
            _showsortmenuitems: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("showsortmenuitems");
                JQXLite(this.componentSelector).jqxGrid("showsortmenuitems", e)
            },
            _showgroupmenuitems: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("showgroupmenuitems");
                JQXLite(this.componentSelector).jqxGrid("showgroupmenuitems", e)
            },
            _showrowdetailscolumn: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("showrowdetailscolumn");
                JQXLite(this.componentSelector).jqxGrid("showrowdetailscolumn", e)
            },
            _showheader: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("showheader");
                JQXLite(this.componentSelector).jqxGrid("showheader", e)
            },
            _showgroupsheader: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("showgroupsheader");
                JQXLite(this.componentSelector).jqxGrid("showgroupsheader", e)
            },
            _showaggregates: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("showaggregates");
                JQXLite(this.componentSelector).jqxGrid("showaggregates", e)
            },
            _showgroupaggregates: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("showgroupaggregates");
                JQXLite(this.componentSelector).jqxGrid("showgroupaggregates", e)
            },
            _showeverpresentrow: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("showeverpresentrow");
                JQXLite(this.componentSelector).jqxGrid("showeverpresentrow", e)
            },
            _showfilterrow: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("showfilterrow");
                JQXLite(this.componentSelector).jqxGrid("showfilterrow", e)
            },
            _showemptyrow: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("showemptyrow");
                JQXLite(this.componentSelector).jqxGrid("showemptyrow", e)
            },
            _showstatusbar: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("showstatusbar");
                JQXLite(this.componentSelector).jqxGrid("showstatusbar", e)
            },
            _statusbarheight: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("statusbarheight");
                JQXLite(this.componentSelector).jqxGrid("statusbarheight", e)
            },
            _showtoolbar: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("showtoolbar");
                JQXLite(this.componentSelector).jqxGrid("showtoolbar", e)
            },
            _selectionmode: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("selectionmode");
                JQXLite(this.componentSelector).jqxGrid("selectionmode", e)
            },
            _updatefilterconditions: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("updatefilterconditions");
                JQXLite(this.componentSelector).jqxGrid("updatefilterconditions", e)
            },
            _updatefilterpanel: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("updatefilterpanel");
                JQXLite(this.componentSelector).jqxGrid("updatefilterpanel", e)
            },
            _theme: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("theme");
                JQXLite(this.componentSelector).jqxGrid("theme", e)
            },
            _toolbarheight: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("toolbarheight");
                JQXLite(this.componentSelector).jqxGrid("toolbarheight", e)
            },
            _autoheight: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("autoheight");
                JQXLite(this.componentSelector).jqxGrid("autoheight", e)
            },
            _autorowheight: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("autorowheight");
                JQXLite(this.componentSelector).jqxGrid("autorowheight", e)
            },
            _columnsheight: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("columnsheight");
                JQXLite(this.componentSelector).jqxGrid("columnsheight", e)
            },
            _deferreddatafields: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("deferreddatafields");
                JQXLite(this.componentSelector).jqxGrid("deferreddatafields", e)
            },
            _groupsheaderheight: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("groupsheaderheight");
                JQXLite(this.componentSelector).jqxGrid("groupsheaderheight", e)
            },
            _groupindentwidth: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("groupindentwidth");
                JQXLite(this.componentSelector).jqxGrid("groupindentwidth", e)
            },
            _height: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("height");
                JQXLite(this.componentSelector).jqxGrid("height", e)
            },
            _pagerheight: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("pagerheight");
                JQXLite(this.componentSelector).jqxGrid("pagerheight", e)
            },
            _rowsheight: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("rowsheight");
                JQXLite(this.componentSelector).jqxGrid("rowsheight", e)
            },
            _scrollbarsize: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("scrollbarsize");
                JQXLite(this.componentSelector).jqxGrid("scrollbarsize", e)
            },
            _scrollmode: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("scrollmode");
                JQXLite(this.componentSelector).jqxGrid("scrollmode", e)
            },
            _scrollfeedback: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("scrollfeedback");
                JQXLite(this.componentSelector).jqxGrid("scrollfeedback", e)
            },
            _width: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("width");
                JQXLite(this.componentSelector).jqxGrid("width", e)
            },
            _autosavestate: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("autosavestate");
                JQXLite(this.componentSelector).jqxGrid("autosavestate", e)
            },
            _autoloadstate: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("autoloadstate");
                JQXLite(this.componentSelector).jqxGrid("autoloadstate", e)
            },
            _columns: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("columns");
                JQXLite(this.componentSelector).jqxGrid("columns", e)
            },
            _columngroups: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("columngroups");
                JQXLite(this.componentSelector).jqxGrid("columngroups", e)
            },
            _columnsmenu: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("columnsmenu");
                JQXLite(this.componentSelector).jqxGrid("columnsmenu", e)
            },
            _columnsresize: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("columnsresize");
                JQXLite(this.componentSelector).jqxGrid("columnsresize", e)
            },
            _columnsautoresize: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("columnsautoresize");
                JQXLite(this.componentSelector).jqxGrid("columnsautoresize", e)
            },
            _columnsreorder: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("columnsreorder");
                JQXLite(this.componentSelector).jqxGrid("columnsreorder", e)
            },
            _disabled: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("disabled");
                JQXLite(this.componentSelector).jqxGrid("disabled", e)
            },
            _editable: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("editable");
                JQXLite(this.componentSelector).jqxGrid("editable", e)
            },
            _editmode: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("editmode");
                JQXLite(this.componentSelector).jqxGrid("editmode", e)
            },
            _filter: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("filter");
                JQXLite(this.componentSelector).jqxGrid("filter", e)
            },
            _filterable: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("filterable");
                JQXLite(this.componentSelector).jqxGrid("filterable", e)
            },
            _groupable: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("groupable");
                JQXLite(this.componentSelector).jqxGrid("groupable", e)
            },
            _groups: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("groups");
                JQXLite(this.componentSelector).jqxGrid("groups", e)
            },
            _horizontalscrollbarstep: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("horizontalscrollbarstep");
                JQXLite(this.componentSelector).jqxGrid("horizontalscrollbarstep", e)
            },
            _horizontalscrollbarlargestep: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("horizontalscrollbarlargestep");
                JQXLite(this.componentSelector).jqxGrid("horizontalscrollbarlargestep", e)
            },
            _initrowdetails: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("initrowdetails");
                JQXLite(this.componentSelector).jqxGrid("initrowdetails", e)
            },
            _keyboardnavigation: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("keyboardnavigation");
                JQXLite(this.componentSelector).jqxGrid("keyboardnavigation", e)
            },
            _localization: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("localization");
                JQXLite(this.componentSelector).jqxGrid("localization", e)
            },
            _pagesize: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("pagesize");
                JQXLite(this.componentSelector).jqxGrid("pagesize", e)
            },
            _pagesizeoptions: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("pagesizeoptions");
                JQXLite(this.componentSelector).jqxGrid("pagesizeoptions", e)
            },
            _pagermode: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("pagermode");
                JQXLite(this.componentSelector).jqxGrid("pagermode", e)
            },
            _pagerbuttonscount: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("pagerbuttonscount");
                JQXLite(this.componentSelector).jqxGrid("pagerbuttonscount", e)
            },
            _pageable: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("pageable");
                JQXLite(this.componentSelector).jqxGrid("pageable", e)
            },
            _rowdetails: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("rowdetails");
                JQXLite(this.componentSelector).jqxGrid("rowdetails", e)
            },
            _rowdetailstemplate: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("rowdetailstemplate");
                JQXLite(this.componentSelector).jqxGrid("rowdetailstemplate", e)
            },
            _ready: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("ready");
                JQXLite(this.componentSelector).jqxGrid("ready", e)
            },
            _rendered: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("rendered");
                JQXLite(this.componentSelector).jqxGrid("rendered", e)
            },
            _renderstatusbar: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("renderstatusbar");
                JQXLite(this.componentSelector).jqxGrid("renderstatusbar", e)
            },
            _rendertoolbar: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("rendertoolbar");
                JQXLite(this.componentSelector).jqxGrid("rendertoolbar", e)
            },
            _rendergridrows: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("rendergridrows");
                JQXLite(this.componentSelector).jqxGrid("rendergridrows", e)
            },
            _sortable: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("sortable");
                JQXLite(this.componentSelector).jqxGrid("sortable", e)
            },
            _sortmode: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("sortmode");
                JQXLite(this.componentSelector).jqxGrid("sortmode", e)
            },
            _selectedrowindex: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("selectedrowindex");
                JQXLite(this.componentSelector).jqxGrid("selectedrowindex", e)
            },
            _selectedrowindexes: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("selectedrowindexes");
                JQXLite(this.componentSelector).jqxGrid("selectedrowindexes", e)
            },
            _source: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("source");
                JQXLite(this.componentSelector).jqxGrid("source", e)
            },
            _sorttogglestates: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("sorttogglestates");
                JQXLite(this.componentSelector).jqxGrid("sorttogglestates", e)
            },
            _updatedelay: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("updatedelay");
                JQXLite(this.componentSelector).jqxGrid("updatedelay", e)
            },
            _virtualmode: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("virtualmode");
                JQXLite(this.componentSelector).jqxGrid("virtualmode", e)
            },
            _verticalscrollbarstep: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("verticalscrollbarstep");
                JQXLite(this.componentSelector).jqxGrid("verticalscrollbarstep", e)
            },
            _verticalscrollbarlargestep: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxGrid("verticalscrollbarlargestep");
                JQXLite(this.componentSelector).jqxGrid("verticalscrollbarlargestep", e)
            },
            __createComponent__: function(e) {
                let t;
                t = e || this.__manageProps__(),
                JQXLite(this.componentSelector).jqxGrid(t),
                this.__extendProps__(),
                this.__wireEvents__()
            },
            __manageProps__: function() {
                const e = ["altrows", "altstart", "altstep", "autoshowloadelement", "autoshowfiltericon", "autoshowcolumnsmenubutton", "showcolumnlines", "showrowlines", "showcolumnheaderlines", "adaptive", "adaptivewidth", "clipboard", "closeablegroups", "columnsmenuwidth", "columnmenuopening", "columnmenuclosing", "cellhover", "enablekeyboarddelete", "enableellipsis", "enablemousewheel", "enableanimations", "enabletooltips", "enablehover", "enablebrowserselection", "everpresentrowposition", "everpresentrowheight", "everpresentrowactions", "everpresentrowactionsmode", "filterrowheight", "filtermode", "groupsrenderer", "groupcolumnrenderer", "groupsexpandedbydefault", "handlekeyboardnavigation", "pagerrenderer", "rtl", "showdefaultloadelement", "showfiltercolumnbackground", "showfiltermenuitems", "showpinnedcolumnbackground", "showsortcolumnbackground", "showsortmenuitems", "showgroupmenuitems", "showrowdetailscolumn", "showheader", "showgroupsheader", "showaggregates", "showgroupaggregates", "showeverpresentrow", "showfilterrow", "showemptyrow", "showstatusbar", "statusbarheight", "showtoolbar", "selectionmode", "updatefilterconditions", "updatefilterpanel", "theme", "toolbarheight", "autoheight", "autorowheight", "columnsheight", "deferreddatafields", "groupsheaderheight", "groupindentwidth", "height", "pagerheight", "rowsheight", "scrollbarsize", "scrollmode", "scrollfeedback", "width", "autosavestate", "autoloadstate", "columns", "columngroups", "columnsmenu", "columnsresize", "columnsautoresize", "columnsreorder", "disabled", "editable", "editmode", "filter", "filterable", "groupable", "groups", "horizontalscrollbarstep", "horizontalscrollbarlargestep", "initrowdetails", "keyboardnavigation", "localization", "pagesize", "pagesizeoptions", "pagermode", "pagerbuttonscount", "pageable", "rowdetails", "rowdetailstemplate", "ready", "rendered", "renderstatusbar", "rendertoolbar", "rendergridrows", "sortable", "sortmode", "selectedrowindex", "selectedrowindexes", "source", "sorttogglestates", "updatedelay", "virtualmode", "verticalscrollbarstep", "verticalscrollbarlargestep"]
                  , t = this.$options.propsData;
                let i = {};
                for (let r in t)
                    -1 !== e.indexOf(r) && (i[r] = t[r]);
                return i
            },
            __extendProps__: function() {
                const e = this;
                Object.defineProperty(e, "altrows", {
                    get: function() {
                        return e._altrows()
                    },
                    set: function(t) {
                        e._altrows(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "altstart", {
                    get: function() {
                        return e._altstart()
                    },
                    set: function(t) {
                        e._altstart(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "altstep", {
                    get: function() {
                        return e._altstep()
                    },
                    set: function(t) {
                        e._altstep(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "autoshowloadelement", {
                    get: function() {
                        return e._autoshowloadelement()
                    },
                    set: function(t) {
                        e._autoshowloadelement(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "autoshowfiltericon", {
                    get: function() {
                        return e._autoshowfiltericon()
                    },
                    set: function(t) {
                        e._autoshowfiltericon(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "autoshowcolumnsmenubutton", {
                    get: function() {
                        return e._autoshowcolumnsmenubutton()
                    },
                    set: function(t) {
                        e._autoshowcolumnsmenubutton(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "showcolumnlines", {
                    get: function() {
                        return e._showcolumnlines()
                    },
                    set: function(t) {
                        e._showcolumnlines(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "showrowlines", {
                    get: function() {
                        return e._showrowlines()
                    },
                    set: function(t) {
                        e._showrowlines(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "showcolumnheaderlines", {
                    get: function() {
                        return e._showcolumnheaderlines()
                    },
                    set: function(t) {
                        e._showcolumnheaderlines(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "adaptive", {
                    get: function() {
                        return e._adaptive()
                    },
                    set: function(t) {
                        e._adaptive(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "adaptivewidth", {
                    get: function() {
                        return e._adaptivewidth()
                    },
                    set: function(t) {
                        e._adaptivewidth(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "clipboard", {
                    get: function() {
                        return e._clipboard()
                    },
                    set: function(t) {
                        e._clipboard(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "closeablegroups", {
                    get: function() {
                        return e._closeablegroups()
                    },
                    set: function(t) {
                        e._closeablegroups(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "columnsmenuwidth", {
                    get: function() {
                        return e._columnsmenuwidth()
                    },
                    set: function(t) {
                        e._columnsmenuwidth(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "columnmenuopening", {
                    get: function() {
                        return e._columnmenuopening()
                    },
                    set: function(t) {
                        e._columnmenuopening(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "columnmenuclosing", {
                    get: function() {
                        return e._columnmenuclosing()
                    },
                    set: function(t) {
                        e._columnmenuclosing(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "cellhover", {
                    get: function() {
                        return e._cellhover()
                    },
                    set: function(t) {
                        e._cellhover(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "enablekeyboarddelete", {
                    get: function() {
                        return e._enablekeyboarddelete()
                    },
                    set: function(t) {
                        e._enablekeyboarddelete(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "enableellipsis", {
                    get: function() {
                        return e._enableellipsis()
                    },
                    set: function(t) {
                        e._enableellipsis(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "enablemousewheel", {
                    get: function() {
                        return e._enablemousewheel()
                    },
                    set: function(t) {
                        e._enablemousewheel(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "enableanimations", {
                    get: function() {
                        return e._enableanimations()
                    },
                    set: function(t) {
                        e._enableanimations(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "enabletooltips", {
                    get: function() {
                        return e._enabletooltips()
                    },
                    set: function(t) {
                        e._enabletooltips(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "enablehover", {
                    get: function() {
                        return e._enablehover()
                    },
                    set: function(t) {
                        e._enablehover(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "enablebrowserselection", {
                    get: function() {
                        return e._enablebrowserselection()
                    },
                    set: function(t) {
                        e._enablebrowserselection(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "everpresentrowposition", {
                    get: function() {
                        return e._everpresentrowposition()
                    },
                    set: function(t) {
                        e._everpresentrowposition(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "everpresentrowheight", {
                    get: function() {
                        return e._everpresentrowheight()
                    },
                    set: function(t) {
                        e._everpresentrowheight(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "everpresentrowactions", {
                    get: function() {
                        return e._everpresentrowactions()
                    },
                    set: function(t) {
                        e._everpresentrowactions(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "everpresentrowactionsmode", {
                    get: function() {
                        return e._everpresentrowactionsmode()
                    },
                    set: function(t) {
                        e._everpresentrowactionsmode(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "filterrowheight", {
                    get: function() {
                        return e._filterrowheight()
                    },
                    set: function(t) {
                        e._filterrowheight(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "filtermode", {
                    get: function() {
                        return e._filtermode()
                    },
                    set: function(t) {
                        e._filtermode(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "groupsrenderer", {
                    get: function() {
                        return e._groupsrenderer()
                    },
                    set: function(t) {
                        e._groupsrenderer(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "groupcolumnrenderer", {
                    get: function() {
                        return e._groupcolumnrenderer()
                    },
                    set: function(t) {
                        e._groupcolumnrenderer(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "groupsexpandedbydefault", {
                    get: function() {
                        return e._groupsexpandedbydefault()
                    },
                    set: function(t) {
                        e._groupsexpandedbydefault(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "handlekeyboardnavigation", {
                    get: function() {
                        return e._handlekeyboardnavigation()
                    },
                    set: function(t) {
                        e._handlekeyboardnavigation(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "pagerrenderer", {
                    get: function() {
                        return e._pagerrenderer()
                    },
                    set: function(t) {
                        e._pagerrenderer(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "rtl", {
                    get: function() {
                        return e._rtl()
                    },
                    set: function(t) {
                        e._rtl(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "showdefaultloadelement", {
                    get: function() {
                        return e._showdefaultloadelement()
                    },
                    set: function(t) {
                        e._showdefaultloadelement(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "showfiltercolumnbackground", {
                    get: function() {
                        return e._showfiltercolumnbackground()
                    },
                    set: function(t) {
                        e._showfiltercolumnbackground(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "showfiltermenuitems", {
                    get: function() {
                        return e._showfiltermenuitems()
                    },
                    set: function(t) {
                        e._showfiltermenuitems(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "showpinnedcolumnbackground", {
                    get: function() {
                        return e._showpinnedcolumnbackground()
                    },
                    set: function(t) {
                        e._showpinnedcolumnbackground(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "showsortcolumnbackground", {
                    get: function() {
                        return e._showsortcolumnbackground()
                    },
                    set: function(t) {
                        e._showsortcolumnbackground(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "showsortmenuitems", {
                    get: function() {
                        return e._showsortmenuitems()
                    },
                    set: function(t) {
                        e._showsortmenuitems(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "showgroupmenuitems", {
                    get: function() {
                        return e._showgroupmenuitems()
                    },
                    set: function(t) {
                        e._showgroupmenuitems(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "showrowdetailscolumn", {
                    get: function() {
                        return e._showrowdetailscolumn()
                    },
                    set: function(t) {
                        e._showrowdetailscolumn(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "showheader", {
                    get: function() {
                        return e._showheader()
                    },
                    set: function(t) {
                        e._showheader(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "showgroupsheader", {
                    get: function() {
                        return e._showgroupsheader()
                    },
                    set: function(t) {
                        e._showgroupsheader(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "showaggregates", {
                    get: function() {
                        return e._showaggregates()
                    },
                    set: function(t) {
                        e._showaggregates(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "showgroupaggregates", {
                    get: function() {
                        return e._showgroupaggregates()
                    },
                    set: function(t) {
                        e._showgroupaggregates(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "showeverpresentrow", {
                    get: function() {
                        return e._showeverpresentrow()
                    },
                    set: function(t) {
                        e._showeverpresentrow(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "showfilterrow", {
                    get: function() {
                        return e._showfilterrow()
                    },
                    set: function(t) {
                        e._showfilterrow(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "showemptyrow", {
                    get: function() {
                        return e._showemptyrow()
                    },
                    set: function(t) {
                        e._showemptyrow(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "showstatusbar", {
                    get: function() {
                        return e._showstatusbar()
                    },
                    set: function(t) {
                        e._showstatusbar(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "statusbarheight", {
                    get: function() {
                        return e._statusbarheight()
                    },
                    set: function(t) {
                        e._statusbarheight(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "showtoolbar", {
                    get: function() {
                        return e._showtoolbar()
                    },
                    set: function(t) {
                        e._showtoolbar(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "selectionmode", {
                    get: function() {
                        return e._selectionmode()
                    },
                    set: function(t) {
                        e._selectionmode(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "updatefilterconditions", {
                    get: function() {
                        return e._updatefilterconditions()
                    },
                    set: function(t) {
                        e._updatefilterconditions(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "updatefilterpanel", {
                    get: function() {
                        return e._updatefilterpanel()
                    },
                    set: function(t) {
                        e._updatefilterpanel(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "theme", {
                    get: function() {
                        return e._theme()
                    },
                    set: function(t) {
                        e._theme(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "toolbarheight", {
                    get: function() {
                        return e._toolbarheight()
                    },
                    set: function(t) {
                        e._toolbarheight(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "autoheight", {
                    get: function() {
                        return e._autoheight()
                    },
                    set: function(t) {
                        e._autoheight(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "autorowheight", {
                    get: function() {
                        return e._autorowheight()
                    },
                    set: function(t) {
                        e._autorowheight(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "columnsheight", {
                    get: function() {
                        return e._columnsheight()
                    },
                    set: function(t) {
                        e._columnsheight(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "deferreddatafields", {
                    get: function() {
                        return e._deferreddatafields()
                    },
                    set: function(t) {
                        e._deferreddatafields(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "groupsheaderheight", {
                    get: function() {
                        return e._groupsheaderheight()
                    },
                    set: function(t) {
                        e._groupsheaderheight(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "groupindentwidth", {
                    get: function() {
                        return e._groupindentwidth()
                    },
                    set: function(t) {
                        e._groupindentwidth(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "height", {
                    get: function() {
                        return e._height()
                    },
                    set: function(t) {
                        e._height(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "pagerheight", {
                    get: function() {
                        return e._pagerheight()
                    },
                    set: function(t) {
                        e._pagerheight(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "rowsheight", {
                    get: function() {
                        return e._rowsheight()
                    },
                    set: function(t) {
                        e._rowsheight(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "scrollbarsize", {
                    get: function() {
                        return e._scrollbarsize()
                    },
                    set: function(t) {
                        e._scrollbarsize(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "scrollmode", {
                    get: function() {
                        return e._scrollmode()
                    },
                    set: function(t) {
                        e._scrollmode(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "scrollfeedback", {
                    get: function() {
                        return e._scrollfeedback()
                    },
                    set: function(t) {
                        e._scrollfeedback(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "width", {
                    get: function() {
                        return e._width()
                    },
                    set: function(t) {
                        e._width(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "autosavestate", {
                    get: function() {
                        return e._autosavestate()
                    },
                    set: function(t) {
                        e._autosavestate(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "autoloadstate", {
                    get: function() {
                        return e._autoloadstate()
                    },
                    set: function(t) {
                        e._autoloadstate(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "columns", {
                    get: function() {
                        return e._columns()
                    },
                    set: function(t) {
                        e._columns(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "columngroups", {
                    get: function() {
                        return e._columngroups()
                    },
                    set: function(t) {
                        e._columngroups(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "columnsmenu", {
                    get: function() {
                        return e._columnsmenu()
                    },
                    set: function(t) {
                        e._columnsmenu(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "columnsresize", {
                    get: function() {
                        return e._columnsresize()
                    },
                    set: function(t) {
                        e._columnsresize(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "columnsautoresize", {
                    get: function() {
                        return e._columnsautoresize()
                    },
                    set: function(t) {
                        e._columnsautoresize(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "columnsreorder", {
                    get: function() {
                        return e._columnsreorder()
                    },
                    set: function(t) {
                        e._columnsreorder(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "disabled", {
                    get: function() {
                        return e._disabled()
                    },
                    set: function(t) {
                        e._disabled(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "editable", {
                    get: function() {
                        return e._editable()
                    },
                    set: function(t) {
                        e._editable(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "editmode", {
                    get: function() {
                        return e._editmode()
                    },
                    set: function(t) {
                        e._editmode(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "filter", {
                    get: function() {
                        return e._filter()
                    },
                    set: function(t) {
                        e._filter(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "filterable", {
                    get: function() {
                        return e._filterable()
                    },
                    set: function(t) {
                        e._filterable(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "groupable", {
                    get: function() {
                        return e._groupable()
                    },
                    set: function(t) {
                        e._groupable(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "groups", {
                    get: function() {
                        return e._groups()
                    },
                    set: function(t) {
                        e._groups(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "horizontalscrollbarstep", {
                    get: function() {
                        return e._horizontalscrollbarstep()
                    },
                    set: function(t) {
                        e._horizontalscrollbarstep(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "horizontalscrollbarlargestep", {
                    get: function() {
                        return e._horizontalscrollbarlargestep()
                    },
                    set: function(t) {
                        e._horizontalscrollbarlargestep(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "initrowdetails", {
                    get: function() {
                        return e._initrowdetails()
                    },
                    set: function(t) {
                        e._initrowdetails(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "keyboardnavigation", {
                    get: function() {
                        return e._keyboardnavigation()
                    },
                    set: function(t) {
                        e._keyboardnavigation(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "localization", {
                    get: function() {
                        return e._localization()
                    },
                    set: function(t) {
                        e._localization(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "pagesize", {
                    get: function() {
                        return e._pagesize()
                    },
                    set: function(t) {
                        e._pagesize(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "pagesizeoptions", {
                    get: function() {
                        return e._pagesizeoptions()
                    },
                    set: function(t) {
                        e._pagesizeoptions(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "pagermode", {
                    get: function() {
                        return e._pagermode()
                    },
                    set: function(t) {
                        e._pagermode(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "pagerbuttonscount", {
                    get: function() {
                        return e._pagerbuttonscount()
                    },
                    set: function(t) {
                        e._pagerbuttonscount(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "pageable", {
                    get: function() {
                        return e._pageable()
                    },
                    set: function(t) {
                        e._pageable(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "rowdetails", {
                    get: function() {
                        return e._rowdetails()
                    },
                    set: function(t) {
                        e._rowdetails(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "rowdetailstemplate", {
                    get: function() {
                        return e._rowdetailstemplate()
                    },
                    set: function(t) {
                        e._rowdetailstemplate(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "ready", {
                    get: function() {
                        return e._ready()
                    },
                    set: function(t) {
                        e._ready(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "rendered", {
                    get: function() {
                        return e._rendered()
                    },
                    set: function(t) {
                        e._rendered(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "renderstatusbar", {
                    get: function() {
                        return e._renderstatusbar()
                    },
                    set: function(t) {
                        e._renderstatusbar(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "rendertoolbar", {
                    get: function() {
                        return e._rendertoolbar()
                    },
                    set: function(t) {
                        e._rendertoolbar(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "rendergridrows", {
                    get: function() {
                        return e._rendergridrows()
                    },
                    set: function(t) {
                        e._rendergridrows(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "sortable", {
                    get: function() {
                        return e._sortable()
                    },
                    set: function(t) {
                        e._sortable(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "sortmode", {
                    get: function() {
                        return e._sortmode()
                    },
                    set: function(t) {
                        e._sortmode(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "selectedrowindex", {
                    get: function() {
                        return e._selectedrowindex()
                    },
                    set: function(t) {
                        e._selectedrowindex(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "selectedrowindexes", {
                    get: function() {
                        return e._selectedrowindexes()
                    },
                    set: function(t) {
                        e._selectedrowindexes(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "source", {
                    get: function() {
                        return e._source()
                    },
                    set: function(t) {
                        e._source(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "sorttogglestates", {
                    get: function() {
                        return e._sorttogglestates()
                    },
                    set: function(t) {
                        e._sorttogglestates(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "updatedelay", {
                    get: function() {
                        return e._updatedelay()
                    },
                    set: function(t) {
                        e._updatedelay(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "virtualmode", {
                    get: function() {
                        return e._virtualmode()
                    },
                    set: function(t) {
                        e._virtualmode(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "verticalscrollbarstep", {
                    get: function() {
                        return e._verticalscrollbarstep()
                    },
                    set: function(t) {
                        e._verticalscrollbarstep(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "verticalscrollbarlargestep", {
                    get: function() {
                        return e._verticalscrollbarlargestep()
                    },
                    set: function(t) {
                        e._verticalscrollbarlargestep(t)
                    },
                    enumerable: !0,
                    configurable: !0
                })
            },
            __wireEvents__: function() {
                const e = this;
                JQXLite(this.componentSelector).on("bindingcomplete", function(t) {
                    e.$emit("bindingcomplete", t)
                }),
                JQXLite(this.componentSelector).on("columnresized", function(t) {
                    e.$emit("columnresized", t)
                }),
                JQXLite(this.componentSelector).on("columnreordered", function(t) {
                    e.$emit("columnreordered", t)
                }),
                JQXLite(this.componentSelector).on("columnclick", function(t) {
                    e.$emit("columnclick", t)
                }),
                JQXLite(this.componentSelector).on("cellclick", function(t) {
                    e.$emit("cellclick", t)
                }),
                JQXLite(this.componentSelector).on("celldoubleclick", function(t) {
                    e.$emit("celldoubleclick", t)
                }),
                JQXLite(this.componentSelector).on("cellselect", function(t) {
                    e.$emit("cellselect", t)
                }),
                JQXLite(this.componentSelector).on("cellunselect", function(t) {
                    e.$emit("cellunselect", t)
                }),
                JQXLite(this.componentSelector).on("cellvaluechanged", function(t) {
                    e.$emit("cellvaluechanged", t)
                }),
                JQXLite(this.componentSelector).on("cellbeginedit", function(t) {
                    e.$emit("cellbeginedit", t)
                }),
                JQXLite(this.componentSelector).on("cellendedit", function(t) {
                    e.$emit("cellendedit", t)
                }),
                JQXLite(this.componentSelector).on("filter", function(t) {
                    e.$emit("filter", t)
                }),
                JQXLite(this.componentSelector).on("groupschanged", function(t) {
                    e.$emit("groupschanged", t)
                }),
                JQXLite(this.componentSelector).on("groupexpand", function(t) {
                    e.$emit("groupexpand", t)
                }),
                JQXLite(this.componentSelector).on("groupcollapse", function(t) {
                    e.$emit("groupcollapse", t)
                }),
                JQXLite(this.componentSelector).on("pagechanged", function(t) {
                    e.$emit("pagechanged", t)
                }),
                JQXLite(this.componentSelector).on("pagesizechanged", function(t) {
                    e.$emit("pagesizechanged", t)
                }),
                JQXLite(this.componentSelector).on("rowclick", function(t) {
                    e.$emit("rowclick", t)
                }),
                JQXLite(this.componentSelector).on("rowdoubleclick", function(t) {
                    e.$emit("rowdoubleclick", t)
                }),
                JQXLite(this.componentSelector).on("rowselect", function(t) {
                    e.$emit("rowselect", t)
                }),
                JQXLite(this.componentSelector).on("rowunselect", function(t) {
                    e.$emit("rowunselect", t)
                }),
                JQXLite(this.componentSelector).on("rowexpand", function(t) {
                    e.$emit("rowexpand", t)
                }),
                JQXLite(this.componentSelector).on("rowcollapse", function(t) {
                    e.$emit("rowcollapse", t)
                }),
                JQXLite(this.componentSelector).on("sort", function(t) {
                    e.$emit("sort", t)
                })
            }
        }
    }
      , n = i(0)
      , o = Object(n.a)(s, r, [], !1, null, null, null);
    o.options.__file = "node_modules/jqwidgets-scripts/jqwidgets-vue/vue_jqxgrid.vue";
    t.a = o.exports
}
, function(e, t, r) {
    var s, n;
    document.all && !document.addEventListener || function(i, n) {
        var o, a, l = i.document, d = (i.location,
        i.navigator), h = i.JQXLite, c = i.$, u = Array.prototype.push, p = Array.prototype.slice, f = Array.prototype.indexOf, m = Object.prototype.toString, g = Object.prototype.hasOwnProperty, v = String.prototype.trim, w = function(e, t) {
            return new w.fn.init(e,t,o)
        }, x = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source, b = /\S/, y = /\s+/, _ = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, q = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/, j = /^<(\w+)\s*\/?>(?:<\/\1>|)$/, S = /^[\],:{}\s]*$/, C = /(?:^|:|,)(?:\s*\[)+/g, T = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g, I = /"[^"\\\r\n]*"|true|false|null|-?(?:\d\d*\.|)\d+(?:[eE][\-+]?\d+|)/g, k = /^-ms-/, D = /-([\da-z])/gi, P = function(e, t) {
            return (t + "").toUpperCase()
        }, B = function() {
            l.addEventListener ? (l.removeEventListener("DOMContentLoaded", B, !1),
            w.ready()) : "complete" === l.readyState && (l.detachEvent("onreadystatechange", B),
            w.ready())
        }, M = {};
        w.fn = w.prototype = {
            constructor: w,
            init: function(e, t, i) {
                var r, s, o;
                if (!e)
                    return this;
                if (e.nodeType)
                    return this.context = this[0] = e,
                    this.length = 1,
                    this;
                if ("string" == typeof e) {
                    if (!(r = "<" === e.charAt(0) && ">" === e.charAt(e.length - 1) && e.length >= 3 ? [null, e, null] : q.exec(e)) || !r[1] && t)
                        return !t || t.jqx ? (t || i).find(e) : this.constructor(t).find(e);
                    if (r[1])
                        return o = (t = t instanceof w ? t[0] : t) && t.nodeType ? t.ownerDocument || t : l,
                        e = w.parseHTML(r[1], o, !0),
                        j.test(r[1]) && w.isPlainObject(t) && this.attr.call(e, t, !0),
                        w.merge(this, e);
                    if ((s = l.getElementById(r[2])) && s.parentNode) {
                        if (s.id !== r[2])
                            return i.find(e);
                        this.length = 1,
                        this[0] = s
                    }
                    return this.context = l,
                    this.selector = e,
                    this
                }
                return w.isFunction(e) ? i.ready(e) : (e.selector !== n && (this.selector = e.selector,
                this.context = e.context),
                w.makeArray(e, this))
            },
            selector: "",
            jqx: "4.5.0",
            length: 0,
            size: function() {
                return this.length
            },
            toArray: function() {
                return p.call(this)
            },
            get: function(e) {
                return null == e ? this.toArray() : e < 0 ? this[this.length + e] : this[e]
            },
            pushStack: function(e, t, i) {
                var r = w.merge(this.constructor(), e);
                return r.prevObject = this,
                r.context = this.context,
                "find" === t ? r.selector = this.selector + (this.selector ? " " : "") + i : t && (r.selector = this.selector + "." + t + "(" + i + ")"),
                r
            },
            each: function(e, t) {
                return w.each(this, e, t)
            },
            ready: function(e) {
                return w.ready.promise().done(e),
                this
            },
            eq: function(e) {
                return -1 === (e = +e) ? this.slice(e) : this.slice(e, e + 1)
            },
            first: function() {
                return this.eq(0)
            },
            last: function() {
                return this.eq(-1)
            },
            slice: function() {
                return this.pushStack(p.apply(this, arguments), "slice", p.call(arguments).join(","))
            },
            map: function(e) {
                return this.pushStack(w.map(this, function(t, i) {
                    return e.call(t, i, t)
                }))
            },
            end: function() {
                return this.prevObject || this.constructor(null)
            },
            push: u,
            sort: [].sort,
            splice: [].splice
        },
        w.fn.init.prototype = w.fn,
        w.extend = w.fn.extend = function() {
            var e, t, i, r, s, o, a = arguments[0] || {}, l = 1, d = arguments.length, h = !1;
            for ("boolean" == typeof a && (h = a,
            a = arguments[1] || {},
            l = 2),
            "object" == typeof a || w.isFunction(a) || (a = {}),
            d === l && (a = this,
            --l); l < d; l++)
                if (null != (e = arguments[l]))
                    for (t in e)
                        i = a[t],
                        a !== (r = e[t]) && (h && r && (w.isPlainObject(r) || (s = w.isArray(r))) ? (s ? (s = !1,
                        o = i && w.isArray(i) ? i : []) : o = i && w.isPlainObject(i) ? i : {},
                        a[t] = w.extend(h, o, r)) : r !== n && (a[t] = r));
            return a
        }
        ,
        w.extend({
            noConflict: function(e) {
                return i.$ === w && (i.$ = c),
                e && i.JQXLite === w && (i.JQXLite = h),
                w
            },
            isReady: !1,
            readyWait: 1,
            holdReady: function(e) {
                e ? w.readyWait++ : w.ready(!0)
            },
            ready: function(e) {
                if (!0 === e ? !--w.readyWait : !w.isReady) {
                    if (!l.body)
                        return setTimeout(w.ready, 1);
                    w.isReady = !0,
                    !0 !== e && --w.readyWait > 0 || (a.resolveWith(l, [w]),
                    w.fn.trigger && w(l).trigger("ready").off("ready"))
                }
            },
            isFunction: function(e) {
                return "function" === w.type(e)
            },
            isArray: Array.isArray || function(e) {
                return "array" === w.type(e)
            }
            ,
            isWindow: function(e) {
                return null != e && e == e.window
            },
            isNumeric: function(e) {
                return !isNaN(parseFloat(e)) && isFinite(e)
            },
            type: function(e) {
                return null == e ? String(e) : M[m.call(e)] || "object"
            },
            isPlainObject: function(e) {
                if (!e || "object" !== w.type(e) || e.nodeType || w.isWindow(e))
                    return !1;
                try {
                    if (e.constructor && !g.call(e, "constructor") && !g.call(e.constructor.prototype, "isPrototypeOf"))
                        return !1
                } catch (e) {
                    return !1
                }
                var t;
                for (t in e)
                    ;
                return t === n || g.call(e, t)
            },
            isEmptyObject: function(e) {
                var t;
                for (t in e)
                    return !1;
                return !0
            },
            error: function(e) {
                throw new Error(e)
            },
            parseHTML: function(e, t, i) {
                var r;
                return e && "string" == typeof e ? ("boolean" == typeof t && (i = t,
                t = 0),
                t = t || l,
                (r = j.exec(e)) ? [t.createElement(r[1])] : (r = w.buildFragment([e], t, i ? null : []),
                w.merge([], (r.cacheable ? w.clone(r.fragment) : r.fragment).childNodes))) : null
            },
            parseJSON: function(e) {
                return e && "string" == typeof e ? (e = w.trim(e),
                i.JSON && i.JSON.parse ? i.JSON.parse(e) : S.test(e.replace(T, "@").replace(I, "]").replace(C, "")) ? new Function("return " + e)() : void w.error("Invalid JSON: " + e)) : null
            },
            parseXML: function(e) {
                var t;
                if (!e || "string" != typeof e)
                    return null;
                try {
                    i.DOMParser ? t = (new DOMParser).parseFromString(e, "text/xml") : ((t = new ActiveXObject("Microsoft.XMLDOM")).async = "false",
                    t.loadXML(e))
                } catch (e) {
                    t = n
                }
                return t && t.documentElement && !t.getElementsByTagName("parsererror").length || w.error("Invalid XML: " + e),
                t
            },
            noop: function() {},
            globalEval: function(e) {
                e && b.test(e) && (i.execScript || function(e) {
                    i.eval.call(i, e)
                }
                )(e)
            },
            camelCase: function(e) {
                return e.replace(k, "ms-").replace(D, P)
            },
            nodeName: function(e, t) {
                return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase()
            },
            each: function(e, t, i) {
                var r, s = 0, o = e.length, a = o === n || w.isFunction(e);
                if (i)
                    if (a) {
                        for (r in e)
                            if (!1 === t.apply(e[r], i))
                                break
                    } else
                        for (; s < o && !1 !== t.apply(e[s++], i); )
                            ;
                else if (a) {
                    for (r in e)
                        if (!1 === t.call(e[r], r, e[r]))
                            break
                } else
                    for (; s < o && !1 !== t.call(e[s], s, e[s++]); )
                        ;
                return e
            },
            trim: v && !v.call("\ufeff ") ? function(e) {
                return null == e ? "" : v.call(e)
            }
            : function(e) {
                return null == e ? "" : (e + "").replace(_, "")
            }
            ,
            makeArray: function(e, t) {
                var i, r = t || [];
                return null != e && (i = w.type(e),
                null == e.length || "string" === i || "function" === i || "regexp" === i || w.isWindow(e) ? u.call(r, e) : w.merge(r, e)),
                r
            },
            inArray: function(e, t, i) {
                var r;
                if (t) {
                    if (f)
                        return f.call(t, e, i);
                    for (r = t.length,
                    i = i ? i < 0 ? Math.max(0, r + i) : i : 0; i < r; i++)
                        if (i in t && t[i] === e)
                            return i
                }
                return -1
            },
            merge: function(e, t) {
                var i = t.length
                  , r = e.length
                  , s = 0;
                if ("number" == typeof i)
                    for (; s < i; s++)
                        e[r++] = t[s];
                else
                    for (; t[s] !== n; )
                        e[r++] = t[s++];
                return e.length = r,
                e
            },
            grep: function(e, t, i) {
                var r = []
                  , s = 0
                  , n = e.length;
                for (i = !!i; s < n; s++)
                    i !== !!t(e[s], s) && r.push(e[s]);
                return r
            },
            map: function(e, t, i) {
                var r, s, o = [], a = 0, l = e.length;
                if (e instanceof w || l !== n && "number" == typeof l && (l > 0 && e[0] && e[l - 1] || 0 === l || w.isArray(e)))
                    for (; a < l; a++)
                        null != (r = t(e[a], a, i)) && (o[o.length] = r);
                else
                    for (s in e)
                        null != (r = t(e[s], s, i)) && (o[o.length] = r);
                return o.concat.apply([], o)
            },
            guid: 1,
            proxy: function(e, t) {
                var i, r, s;
                return "string" == typeof t && (i = e[t],
                t = e,
                e = i),
                w.isFunction(e) ? (r = p.call(arguments, 2),
                (s = function() {
                    return e.apply(t, r.concat(p.call(arguments)))
                }
                ).guid = e.guid = e.guid || w.guid++,
                s) : n
            },
            access: function(e, t, i, r, s, o, a) {
                var l, d = null == i, h = 0, c = e.length;
                if (i && "object" == typeof i) {
                    for (h in i)
                        w.access(e, t, h, i[h], 1, o, r);
                    s = 1
                } else if (r !== n) {
                    if (l = a === n && w.isFunction(r),
                    d && (l ? (l = t,
                    t = function(e, t, i) {
                        return l.call(w(e), i)
                    }
                    ) : (t.call(e, r),
                    t = null)),
                    t)
                        for (; h < c; h++)
                            t(e[h], i, l ? r.call(e[h], h, t(e[h], i)) : r, a);
                    s = 1
                }
                return s ? e : d ? t.call(e) : c ? t(e[0], i) : o
            },
            now: function() {
                return (new Date).getTime()
            }
        }),
        w.ready.promise = function(e) {
            if (!a)
                if (a = w.Deferred(),
                "complete" === l.readyState)
                    setTimeout(w.ready, 1);
                else if (l.addEventListener)
                    l.addEventListener("DOMContentLoaded", B, !1),
                    i.addEventListener("load", w.ready, !1);
                else {
                    l.attachEvent("onreadystatechange", B),
                    i.attachEvent("onload", w.ready);
                    var t = !1;
                    try {
                        t = null == i.frameElement && l.documentElement
                    } catch (e) {}
                    t && t.doScroll && function e() {
                        if (!w.isReady) {
                            try {
                                t.doScroll("left")
                            } catch (t) {
                                return setTimeout(e, 50)
                            }
                            w.ready()
                        }
                    }()
                }
            return a.promise(e)
        }
        ,
        w.each("Boolean Number String Function Array Date RegExp Object".split(" "), function(e, t) {
            M["[object " + t + "]"] = t.toLowerCase()
        }),
        o = w(l);
        var H = {};
        w.Callbacks = function(e) {
            e = "string" == typeof e ? H[e] || function(e) {
                var t = H[e] = {};
                return w.each(e.split(y), function(e, i) {
                    t[i] = !0
                }),
                t
            }(e) : w.extend({}, e);
            var t, i, r, s, o, a, l = [], d = !e.once && [], h = function(n) {
                for (t = e.memory && n,
                i = !0,
                a = s || 0,
                s = 0,
                o = l.length,
                r = !0; l && a < o; a++)
                    if (!1 === l[a].apply(n[0], n[1]) && e.stopOnFalse) {
                        t = !1;
                        break
                    }
                r = !1,
                l && (d ? d.length && h(d.shift()) : t ? l = [] : c.disable())
            }, c = {
                add: function() {
                    if (l) {
                        var i = l.length;
                        !function t(i) {
                            w.each(i, function(i, r) {
                                var s = w.type(r);
                                "function" === s ? e.unique && c.has(r) || l.push(r) : r && r.length && "string" !== s && t(r)
                            })
                        }(arguments),
                        r ? o = l.length : t && (s = i,
                        h(t))
                    }
                    return this
                },
                remove: function() {
                    return l && w.each(arguments, function(e, t) {
                        for (var i; (i = w.inArray(t, l, i)) > -1; )
                            l.splice(i, 1),
                            r && (i <= o && o--,
                            i <= a && a--)
                    }),
                    this
                },
                has: function(e) {
                    return w.inArray(e, l) > -1
                },
                empty: function() {
                    return l = [],
                    this
                },
                disable: function() {
                    return l = d = t = n,
                    this
                },
                disabled: function() {
                    return !l
                },
                lock: function() {
                    return d = n,
                    t || c.disable(),
                    this
                },
                locked: function() {
                    return !d
                },
                fireWith: function(e, t) {
                    return t = [e, (t = t || []).slice ? t.slice() : t],
                    !l || i && !d || (r ? d.push(t) : h(t)),
                    this
                },
                fire: function() {
                    return c.fireWith(this, arguments),
                    this
                },
                fired: function() {
                    return !!i
                }
            };
            return c
        }
        ,
        w.extend({
            Deferred: function(e) {
                var t = [["resolve", "done", w.Callbacks("once memory"), "resolved"], ["reject", "fail", w.Callbacks("once memory"), "rejected"], ["notify", "progress", w.Callbacks("memory")]]
                  , i = "pending"
                  , r = {
                    state: function() {
                        return i
                    },
                    always: function() {
                        return s.done(arguments).fail(arguments),
                        this
                    },
                    then: function() {
                        var e = arguments;
                        return w.Deferred(function(i) {
                            w.each(t, function(t, r) {
                                var n = r[0]
                                  , o = e[t];
                                s[r[1]](w.isFunction(o) ? function() {
                                    var e = o.apply(this, arguments);
                                    e && w.isFunction(e.promise) ? e.promise().done(i.resolve).fail(i.reject).progress(i.notify) : i[n + "With"](this === s ? i : this, [e])
                                }
                                : i[n])
                            }),
                            e = null
                        }).promise()
                    },
                    promise: function(e) {
                        return null != e ? w.extend(e, r) : r
                    }
                }
                  , s = {};
                return r.pipe = r.then,
                w.each(t, function(e, n) {
                    var o = n[2]
                      , a = n[3];
                    r[n[1]] = o.add,
                    a && o.add(function() {
                        i = a
                    }, t[1 ^ e][2].disable, t[2][2].lock),
                    s[n[0]] = o.fire,
                    s[n[0] + "With"] = o.fireWith
                }),
                r.promise(s),
                e && e.call(s, s),
                s
            },
            when: function(e) {
                var t, i, r, s = 0, n = p.call(arguments), o = n.length, a = 1 !== o || e && w.isFunction(e.promise) ? o : 0, l = 1 === a ? e : w.Deferred(), d = function(e, i, r) {
                    return function(s) {
                        i[e] = this,
                        r[e] = arguments.length > 1 ? p.call(arguments) : s,
                        r === t ? l.notifyWith(i, r) : --a || l.resolveWith(i, r)
                    }
                };
                if (o > 1)
                    for (t = new Array(o),
                    i = new Array(o),
                    r = new Array(o); s < o; s++)
                        n[s] && w.isFunction(n[s].promise) ? n[s].promise().done(d(s, r, n)).fail(l.reject).progress(d(s, i, t)) : --a;
                return a || l.resolveWith(r, n),
                l.promise()
            }
        }),
        w.support = function() {
            var e, t, r, s, n, o, a, d, h, c, u, p = l.createElement("div");
            if (p.setAttribute("className", "t"),
            p.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",
            t = p.getElementsByTagName("*"),
            r = p.getElementsByTagName("a")[0],
            !t || !r || !t.length)
                return {};
            n = (s = l.createElement("select")).appendChild(l.createElement("option")),
            o = p.getElementsByTagName("input")[0],
            r.style.cssText = "top:1px;float:left;opacity:.5",
            e = {
                leadingWhitespace: 3 === p.firstChild.nodeType,
                tbody: !p.getElementsByTagName("tbody").length,
                htmlSerialize: !!p.getElementsByTagName("link").length,
                style: /top/.test(r.getAttribute("style")),
                hrefNormalized: "/a" === r.getAttribute("href"),
                opacity: /^0.5/.test(r.style.opacity),
                cssFloat: !!r.style.cssFloat,
                checkOn: "on" === o.value,
                optSelected: n.selected,
                getSetAttribute: "t" !== p.className,
                enctype: !!l.createElement("form").enctype,
                html5Clone: "<:nav></:nav>" !== l.createElement("nav").cloneNode(!0).outerHTML,
                boxModel: "CSS1Compat" === l.compatMode,
                submitBubbles: !0,
                changeBubbles: !0,
                focusinBubbles: !1,
                deleteExpando: !0,
                noCloneEvent: !0,
                inlineBlockNeedsLayout: !1,
                shrinkWrapBlocks: !1,
                reliableMarginRight: !0,
                boxSizingReliable: !0,
                pixelPosition: !1
            },
            o.checked = !0,
            e.noCloneChecked = o.cloneNode(!0).checked,
            s.disabled = !0,
            e.optDisabled = !n.disabled;
            try {
                delete p.test
            } catch (t) {
                e.deleteExpando = !1
            }
            if (!p.addEventListener && p.attachEvent && p.fireEvent && (p.attachEvent("onclick", u = function() {
                e.noCloneEvent = !1
            }
            ),
            p.cloneNode(!0).fireEvent("onclick"),
            p.detachEvent("onclick", u)),
            (o = l.createElement("input")).value = "t",
            o.setAttribute("type", "radio"),
            e.radioValue = "t" === o.value,
            o.setAttribute("checked", "checked"),
            o.setAttribute("name", "t"),
            p.appendChild(o),
            (a = l.createDocumentFragment()).appendChild(p.lastChild),
            e.checkClone = a.cloneNode(!0).cloneNode(!0).lastChild.checked,
            e.appendChecked = o.checked,
            a.removeChild(o),
            a.appendChild(p),
            p.attachEvent)
                for (h in {
                    submit: !0,
                    change: !0,
                    focusin: !0
                })
                    (c = (d = "on" + h)in p) || (p.setAttribute(d, "return;"),
                    c = "function" == typeof p[d]),
                    e[h + "Bubbles"] = c;
            return w(function() {
                var t, r, s, n, o = "padding:0;margin:0;border:0;display:block;overflow:hidden;", a = l.getElementsByTagName("body")[0];
                a && ((t = l.createElement("div")).style.cssText = "visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px",
                a.insertBefore(t, a.firstChild),
                r = l.createElement("div"),
                t.appendChild(r),
                r.innerHTML = "<table><tr><td></td><td>t</td></tr></table>",
                (s = r.getElementsByTagName("td"))[0].style.cssText = "padding:0;margin:0;border:0;display:none",
                c = 0 === s[0].offsetHeight,
                s[0].style.display = "",
                s[1].style.display = "none",
                e.reliableHiddenOffsets = c && 0 === s[0].offsetHeight,
                r.innerHTML = "",
                r.style.cssText = "box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;",
                e.boxSizing = 4 === r.offsetWidth,
                e.doesNotIncludeMarginInBodyOffset = 1 !== a.offsetTop,
                i.getComputedStyle && (e.pixelPosition = "1%" !== (i.getComputedStyle(r, null) || {}).top,
                e.boxSizingReliable = "4px" === (i.getComputedStyle(r, null) || {
                    width: "4px"
                }).width,
                (n = l.createElement("div")).style.cssText = r.style.cssText = o,
                n.style.marginRight = n.style.width = "0",
                r.style.width = "1px",
                r.appendChild(n),
                e.reliableMarginRight = !parseFloat((i.getComputedStyle(n, null) || {}).marginRight)),
                void 0 !== r.style.zoom && (r.innerHTML = "",
                r.style.cssText = o + "width:1px;padding:1px;display:inline;zoom:1",
                e.inlineBlockNeedsLayout = 3 === r.offsetWidth,
                r.style.display = "block",
                r.style.overflow = "visible",
                r.innerHTML = "<div></div>",
                r.firstChild.style.width = "5px",
                e.shrinkWrapBlocks = 3 !== r.offsetWidth,
                t.style.zoom = 1),
                a.removeChild(t),
                t = r = s = n = null)
            }),
            a.removeChild(p),
            t = r = s = n = o = a = p = null,
            e
        }();
        var O = /(?:\{[\s\S]*\}|\[[\s\S]*\])$/
          , z = /([A-Z])/g;
        function A(e, t, i) {
            if (i === n && 1 === e.nodeType) {
                var r = "data-" + t.replace(z, "-$1").toLowerCase();
                if ("string" == typeof (i = e.getAttribute(r))) {
                    try {
                        i = "true" === i || "false" !== i && ("null" === i ? null : +i + "" === i ? +i : O.test(i) ? w.parseJSON(i) : i)
                    } catch (e) {}
                    w.data(e, t, i)
                } else
                    i = n
            }
            return i
        }
        function L(e) {
            var t;
            for (t in e)
                if (("data" !== t || !w.isEmptyObject(e[t])) && "toJSON" !== t)
                    return !1;
            return !0
        }
        w.extend({
            cache: {},
            deletedIds: [],
            uuid: 0,
            expando: "JQXLite" + (w.fn.jqx + Math.random()).replace(/\D/g, ""),
            noData: {
                embed: !0,
                object: "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
                applet: !0
            },
            hasData: function(e) {
                return !!(e = e.nodeType ? w.cache[e[w.expando]] : e[w.expando]) && !L(e)
            },
            data: function(e, t, i, r) {
                if (w.acceptData(e)) {
                    var s, o, a = w.expando, l = "string" == typeof t, d = e.nodeType, h = d ? w.cache : e, c = d ? e[a] : e[a] && a;
                    if (c && h[c] && (r || h[c].data) || !l || i !== n)
                        return c || (d ? e[a] = c = w.deletedIds.pop() || w.guid++ : c = a),
                        h[c] || (h[c] = {},
                        d || (h[c].toJSON = w.noop)),
                        "object" != typeof t && "function" != typeof t || (r ? h[c] = w.extend(h[c], t) : h[c].data = w.extend(h[c].data, t)),
                        s = h[c],
                        r || (s.data || (s.data = {}),
                        s = s.data),
                        i !== n && (s[w.camelCase(t)] = i),
                        l ? null == (o = s[t]) && (o = s[w.camelCase(t)]) : o = s,
                        o
                }
            },
            removeData: function(e, t, i) {
                if (w.acceptData(e)) {
                    var r, s, n, o = e.nodeType, a = o ? w.cache : e, l = o ? e[w.expando] : w.expando;
                    if (a[l]) {
                        if (t && (r = i ? a[l] : a[l].data)) {
                            w.isArray(t) || (t = t in r ? [t] : (t = w.camelCase(t))in r ? [t] : t.split(" "));
                            for (s = 0,
                            n = t.length; s < n; s++)
                                delete r[t[s]];
                            if (!(i ? L : w.isEmptyObject)(r))
                                return
                        }
                        (i || (delete a[l].data,
                        L(a[l]))) && (o ? w.cleanData([e], !0) : w.support.deleteExpando || a != a.window ? delete a[l] : a[l] = null)
                    }
                }
            },
            _data: function(e, t, i) {
                return w.data(e, t, i, !0)
            },
            acceptData: function(e) {
                var t = e.nodeName && w.noData[e.nodeName.toLowerCase()];
                return !t || !0 !== t && e.getAttribute("classid") === t
            }
        }),
        w.fn.extend({
            data: function(e, t) {
                var i, r, s, o, a, l = this[0], d = 0, h = null;
                if (e === n) {
                    if (this.length && (h = w.data(l),
                    1 === l.nodeType && !w._data(l, "parsedAttrs"))) {
                        for (a = (s = l.attributes).length; d < a; d++)
                            (o = s[d].name).indexOf("data-") || (o = w.camelCase(o.substring(5)),
                            A(l, o, h[o]));
                        w._data(l, "parsedAttrs", !0)
                    }
                    return h
                }
                return "object" == typeof e ? this.each(function() {
                    w.data(this, e)
                }) : ((i = e.split(".", 2))[1] = i[1] ? "." + i[1] : "",
                r = i[1] + "!",
                w.access(this, function(t) {
                    if (t === n)
                        return (h = this.triggerHandler("getData" + r, [i[0]])) === n && l && (h = w.data(l, e),
                        h = A(l, e, h)),
                        h === n && i[1] ? this.data(i[0]) : h;
                    i[1] = t,
                    this.each(function() {
                        var s = w(this);
                        s.triggerHandler("setData" + r, i),
                        w.data(this, e, t),
                        s.triggerHandler("changeData" + r, i)
                    })
                }, null, t, arguments.length > 1, null, !1))
            },
            removeData: function(e) {
                return this.each(function() {
                    w.removeData(this, e)
                })
            }
        }),
        w.extend({
            queue: function(e, t, i) {
                var r;
                if (e)
                    return t = (t || "fx") + "queue",
                    r = w._data(e, t),
                    i && (!r || w.isArray(i) ? r = w._data(e, t, w.makeArray(i)) : r.push(i)),
                    r || []
            },
            dequeue: function(e, t) {
                t = t || "fx";
                var i = w.queue(e, t)
                  , r = i.length
                  , s = i.shift()
                  , n = w._queueHooks(e, t);
                "inprogress" === s && (s = i.shift(),
                r--),
                s && ("fx" === t && i.unshift("inprogress"),
                delete n.stop,
                s.call(e, function() {
                    w.dequeue(e, t)
                }, n)),
                !r && n && n.empty.fire()
            },
            _queueHooks: function(e, t) {
                var i = t + "queueHooks";
                return w._data(e, i) || w._data(e, i, {
                    empty: w.Callbacks("once memory").add(function() {
                        w.removeData(e, t + "queue", !0),
                        w.removeData(e, i, !0)
                    })
                })
            }
        }),
        w.fn.extend({
            queue: function(e, t) {
                var i = 2;
                return "string" != typeof e && (t = e,
                e = "fx",
                i--),
                arguments.length < i ? w.queue(this[0], e) : t === n ? this : this.each(function() {
                    var i = w.queue(this, e, t);
                    w._queueHooks(this, e),
                    "fx" === e && "inprogress" !== i[0] && w.dequeue(this, e)
                })
            },
            dequeue: function(e) {
                return this.each(function() {
                    w.dequeue(this, e)
                })
            },
            delay: function(e, t) {
                return e = w.fx && w.fx.speeds[e] || e,
                t = t || "fx",
                this.queue(t, function(t, i) {
                    var r = setTimeout(t, e);
                    i.stop = function() {
                        clearTimeout(r)
                    }
                })
            },
            clearQueue: function(e) {
                return this.queue(e || "fx", [])
            },
            promise: function(e, t) {
                var i, r = 1, s = w.Deferred(), o = this, a = this.length, l = function() {
                    --r || s.resolveWith(o, [o])
                };
                for ("string" != typeof e && (t = e,
                e = n),
                e = e || "fx"; a--; )
                    (i = w._data(o[a], e + "queueHooks")) && i.empty && (r++,
                    i.empty.add(l));
                return l(),
                s.promise(t)
            }
        });
        var E, N, F = /[\t\r\n]/g, V = /\r/g, R = /^(?:button|input)$/i, W = /^(?:button|input|object|select|textarea)$/i, G = /^a(?:rea|)$/i, X = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i, J = w.support.getSetAttribute;
        w.fn.extend({
            attr: function(e, t) {
                return w.access(this, w.attr, e, t, arguments.length > 1)
            },
            removeAttr: function(e) {
                return this.each(function() {
                    w.removeAttr(this, e)
                })
            },
            prop: function(e, t) {
                return w.access(this, w.prop, e, t, arguments.length > 1)
            },
            removeProp: function(e) {
                return e = w.propFix[e] || e,
                this.each(function() {
                    try {
                        this[e] = n,
                        delete this[e]
                    } catch (e) {}
                })
            },
            addClass: function(e) {
                var t, i, r, s, n, o, a;
                if (w.isFunction(e))
                    return this.each(function(t) {
                        w(this).addClass(e.call(this, t, this.className))
                    });
                if (e && "string" == typeof e)
                    for (t = e.split(y),
                    i = 0,
                    r = this.length; i < r; i++)
                        if (1 === (s = this[i]).nodeType)
                            if (s.className || 1 !== t.length) {
                                for (n = " " + s.className + " ",
                                o = 0,
                                a = t.length; o < a; o++)
                                    n.indexOf(" " + t[o] + " ") < 0 && (n += t[o] + " ");
                                s.className = w.trim(n)
                            } else
                                s.className = e;
                return this
            },
            removeClass: function(e) {
                var t, i, r, s, o, a, l;
                if (w.isFunction(e))
                    return this.each(function(t) {
                        w(this).removeClass(e.call(this, t, this.className))
                    });
                if (e && "string" == typeof e || e === n)
                    for (t = (e || "").split(y),
                    a = 0,
                    l = this.length; a < l; a++)
                        if (1 === (r = this[a]).nodeType && r.className) {
                            for (i = (" " + r.className + " ").replace(F, " "),
                            s = 0,
                            o = t.length; s < o; s++)
                                for (; i.indexOf(" " + t[s] + " ") >= 0; )
                                    i = i.replace(" " + t[s] + " ", " ");
                            r.className = e ? w.trim(i) : ""
                        }
                return this
            },
            toggleClass: function(e, t) {
                var i = typeof e
                  , r = "boolean" == typeof t;
                return w.isFunction(e) ? this.each(function(i) {
                    w(this).toggleClass(e.call(this, i, this.className, t), t)
                }) : this.each(function() {
                    if ("string" === i)
                        for (var s, n = 0, o = w(this), a = t, l = e.split(y); s = l[n++]; )
                            a = r ? a : !o.hasClass(s),
                            o[a ? "addClass" : "removeClass"](s);
                    else
                        "undefined" !== i && "boolean" !== i || (this.className && w._data(this, "__className__", this.className),
                        this.className = this.className || !1 === e ? "" : w._data(this, "__className__") || "")
                })
            },
            hasClass: function(e) {
                for (var t = " " + e + " ", i = 0, r = this.length; i < r; i++)
                    if (1 === this[i].nodeType && (" " + this[i].className + " ").replace(F, " ").indexOf(t) >= 0)
                        return !0;
                return !1
            },
            val: function(e) {
                var t, i, r, s = this[0];
                return arguments.length ? (r = w.isFunction(e),
                this.each(function(i) {
                    var s, o = w(this);
                    1 === this.nodeType && (null == (s = r ? e.call(this, i, o.val()) : e) ? s = "" : "number" == typeof s ? s += "" : w.isArray(s) && (s = w.map(s, function(e) {
                        return null == e ? "" : e + ""
                    })),
                    (t = w.valHooks[this.type] || w.valHooks[this.nodeName.toLowerCase()]) && "set"in t && t.set(this, s, "value") !== n || (this.value = s))
                })) : s ? (t = w.valHooks[s.type] || w.valHooks[s.nodeName.toLowerCase()]) && "get"in t && (i = t.get(s, "value")) !== n ? i : "string" == typeof (i = s.value) ? i.replace(V, "") : null == i ? "" : i : void 0
            }
        }),
        w.extend({
            valHooks: {
                option: {
                    get: function(e) {
                        var t = e.attributes.value;
                        return !t || t.specified ? e.value : e.text
                    }
                },
                select: {
                    get: function(e) {
                        for (var t, i, r = e.options, s = e.selectedIndex, n = "select-one" === e.type || s < 0, o = n ? null : [], a = n ? s + 1 : r.length, l = s < 0 ? a : n ? s : 0; l < a; l++)
                            if (((i = r[l]).selected || l === s) && (w.support.optDisabled ? !i.disabled : null === i.getAttribute("disabled")) && (!i.parentNode.disabled || !w.nodeName(i.parentNode, "optgroup"))) {
                                if (t = w(i).val(),
                                n)
                                    return t;
                                o.push(t)
                            }
                        return o
                    },
                    set: function(e, t) {
                        var i = w.makeArray(t);
                        return w(e).find("option").each(function() {
                            this.selected = w.inArray(w(this).val(), i) >= 0
                        }),
                        i.length || (e.selectedIndex = -1),
                        i
                    }
                }
            },
            attrFn: {},
            attr: function(e, t, i, r) {
                var s, o, a, l = e.nodeType;
                if (e && 3 !== l && 8 !== l && 2 !== l)
                    return r && w.isFunction(w.fn[t]) ? w(e)[t](i) : void 0 === e.getAttribute ? w.prop(e, t, i) : ((a = 1 !== l || !w.isXMLDoc(e)) && (t = t.toLowerCase(),
                    o = w.attrHooks[t] || (X.test(t) ? N : E)),
                    i !== n ? null === i ? void w.removeAttr(e, t) : o && "set"in o && a && (s = o.set(e, i, t)) !== n ? s : (e.setAttribute(t, i + ""),
                    i) : o && "get"in o && a && null !== (s = o.get(e, t)) ? s : null === (s = e.getAttribute(t)) ? n : s)
            },
            removeAttr: function(e, t) {
                var i, r, s, n, o = 0;
                if (t && 1 === e.nodeType)
                    for (r = t.split(y); o < r.length; o++)
                        (s = r[o]) && (i = w.propFix[s] || s,
                        (n = X.test(s)) || w.attr(e, s, ""),
                        e.removeAttribute(J ? s : i),
                        n && i in e && (e[i] = !1))
            },
            attrHooks: {
                type: {
                    set: function(e, t) {
                        if (R.test(e.nodeName) && e.parentNode)
                            w.error("type property can't be changed");
                        else if (!w.support.radioValue && "radio" === t && w.nodeName(e, "input")) {
                            var i = e.value;
                            return e.setAttribute("type", t),
                            i && (e.value = i),
                            t
                        }
                    }
                },
                value: {
                    get: function(e, t) {
                        return t in e ? e.value : null
                    },
                    set: function(e, t, i) {
                        e.value = t
                    }
                }
            },
            propFix: {
                tabindex: "tabIndex",
                readonly: "readOnly",
                for: "htmlFor",
                class: "className",
                maxlength: "maxLength",
                cellspacing: "cellSpacing",
                cellpadding: "cellPadding",
                rowspan: "rowSpan",
                colspan: "colSpan",
                usemap: "useMap",
                frameborder: "frameBorder",
                contenteditable: "contentEditable"
            },
            prop: function(e, t, i) {
                var r, s, o = e.nodeType;
                if (e && 3 !== o && 8 !== o && 2 !== o)
                    return (1 !== o || !w.isXMLDoc(e)) && (t = w.propFix[t] || t,
                    s = w.propHooks[t]),
                    i !== n ? s && "set"in s && (r = s.set(e, i, t)) !== n ? r : e[t] = i : s && "get"in s && null !== (r = s.get(e, t)) ? r : e[t]
            },
            propHooks: {
                tabIndex: {
                    get: function(e) {
                        var t = e.getAttributeNode("tabindex");
                        return t && t.specified ? parseInt(t.value, 10) : W.test(e.nodeName) || G.test(e.nodeName) && e.href ? 0 : n
                    }
                }
            }
        }),
        N = {
            get: function(e, t) {
                var i, r = w.prop(e, t);
                return !0 === r || "boolean" != typeof r && (i = e.getAttributeNode(t)) && !1 !== i.nodeValue ? t.toLowerCase() : n
            },
            set: function(e, t, i) {
                var r;
                return !1 === t ? w.removeAttr(e, i) : ((r = w.propFix[i] || i)in e && (e[r] = !0),
                e.setAttribute(i, i.toLowerCase())),
                i
            }
        },
        w.support.enctype || (w.propFix.enctype = "encoding");
        var Q = /^([^\.]*|)(?:\.(.+)|)$/
          , U = /(?:^|\s)hover(\.\S+|)\b/
          , $ = /^key/
          , Y = /^(?:mouse|contextmenu)|click/
          , K = /^(?:focusinfocus|focusoutblur)$/
          , Z = function(e) {
            return w.event.special.hover ? e : e.replace(U, "mouseenter$1 mouseleave$1")
        };
        function ee() {
            return !1
        }
        function te() {
            return !0
        }
        w.event = {
            add: function(e, t, i, r, s) {
                var o, a, l, d, h, c, u, p, f, m, g;
                if (3 !== e.nodeType && 8 !== e.nodeType && t && i && (o = w._data(e))) {
                    for (i.handler && (i = (f = i).handler,
                    s = f.selector),
                    i.guid || (i.guid = w.guid++),
                    (l = o.events) || (o.events = l = {}),
                    (a = o.handle) || (o.handle = a = function(e) {
                        return void 0 === w || e && w.event.triggered === e.type ? n : w.event.dispatch.apply(a.elem, arguments)
                    }
                    ,
                    a.elem = e),
                    t = w.trim(Z(t)).split(" "),
                    d = 0; d < t.length; d++)
                        c = (h = Q.exec(t[d]) || [])[1],
                        u = (h[2] || "").split(".").sort(),
                        g = w.event.special[c] || {},
                        c = (s ? g.delegateType : g.bindType) || c,
                        g = w.event.special[c] || {},
                        p = w.extend({
                            type: c,
                            origType: h[1],
                            data: r,
                            handler: i,
                            guid: i.guid,
                            selector: s,
                            needsContext: s && w.expr.match.needsContext.test(s),
                            namespace: u.join(".")
                        }, f),
                        (m = l[c]) || ((m = l[c] = []).delegateCount = 0,
                        g.setup && !1 !== g.setup.call(e, r, u, a) || (e.addEventListener ? e.addEventListener(c, a, !1) : e.attachEvent && e.attachEvent("on" + c, a))),
                        g.add && (g.add.call(e, p),
                        p.handler.guid || (p.handler.guid = i.guid)),
                        s ? m.splice(m.delegateCount++, 0, p) : m.push(p),
                        w.event.global[c] = !0;
                    e = null
                }
            },
            global: {},
            remove: function(e, t, i, r, s) {
                var n, o, a, l, d, h, c, u, p, f, m, g = w.hasData(e) && w._data(e);
                if (g && (u = g.events)) {
                    for (t = w.trim(Z(t || "")).split(" "),
                    n = 0; n < t.length; n++)
                        if (a = l = (o = Q.exec(t[n]) || [])[1],
                        d = o[2],
                        a) {
                            for (p = w.event.special[a] || {},
                            h = (f = u[a = (r ? p.delegateType : p.bindType) || a] || []).length,
                            d = d ? new RegExp("(^|\\.)" + d.split(".").sort().join("\\.(?:.*\\.|)") + "(\\.|$)") : null,
                            c = 0; c < f.length; c++)
                                m = f[c],
                                !s && l !== m.origType || i && i.guid !== m.guid || d && !d.test(m.namespace) || r && r !== m.selector && ("**" !== r || !m.selector) || (f.splice(c--, 1),
                                m.selector && f.delegateCount--,
                                p.remove && p.remove.call(e, m));
                            0 === f.length && h !== f.length && (p.teardown && !1 !== p.teardown.call(e, d, g.handle) || w.removeEvent(e, a, g.handle),
                            delete u[a])
                        } else
                            for (a in u)
                                w.event.remove(e, a + t[n], i, r, !0);
                    w.isEmptyObject(u) && (delete g.handle,
                    w.removeData(e, "events", !0))
                }
            },
            customEvent: {
                getData: !0,
                setData: !0,
                changeData: !0
            },
            trigger: function(e, t, r, s) {
                if (!r || 3 !== r.nodeType && 8 !== r.nodeType) {
                    var o, a, d, h, c, u, p, f, m, g, v = e.type || e, x = [];
                    if (!K.test(v + w.event.triggered) && (v.indexOf("!") >= 0 && (v = v.slice(0, -1),
                    a = !0),
                    v.indexOf(".") >= 0 && (x = v.split("."),
                    v = x.shift(),
                    x.sort()),
                    r && !w.event.customEvent[v] || w.event.global[v]))
                        if ((e = "object" == typeof e ? e[w.expando] ? e : new w.Event(v,e) : new w.Event(v)).type = v,
                        e.isTrigger = !0,
                        e.exclusive = a,
                        e.namespace = x.join("."),
                        e.namespace_re = e.namespace ? new RegExp("(^|\\.)" + x.join("\\.(?:.*\\.|)") + "(\\.|$)") : null,
                        u = v.indexOf(":") < 0 ? "on" + v : "",
                        r) {
                            if (e.result = n,
                            e.target || (e.target = r),
                            (t = null != t ? w.makeArray(t) : []).unshift(e),
                            !(p = w.event.special[v] || {}).trigger || !1 !== p.trigger.apply(r, t)) {
                                if (m = [[r, p.bindType || v]],
                                !s && !p.noBubble && !w.isWindow(r)) {
                                    for (g = p.delegateType || v,
                                    h = K.test(g + v) ? r : r.parentNode,
                                    c = r; h; h = h.parentNode)
                                        m.push([h, g]),
                                        c = h;
                                    c === (r.ownerDocument || l) && m.push([c.defaultView || c.parentWindow || i, g])
                                }
                                for (d = 0; d < m.length && !e.isPropagationStopped(); d++)
                                    h = m[d][0],
                                    e.type = m[d][1],
                                    (f = (w._data(h, "events") || {})[e.type] && w._data(h, "handle")) && f.apply(h, t),
                                    (f = u && h[u]) && w.acceptData(h) && f.apply && !1 === f.apply(h, t) && e.preventDefault();
                                return e.type = v,
                                s || e.isDefaultPrevented() || p._default && !1 !== p._default.apply(r.ownerDocument, t) || "click" === v && w.nodeName(r, "a") || !w.acceptData(r) || u && r[v] && ("focus" !== v && "blur" !== v || 0 !== e.target.offsetWidth) && !w.isWindow(r) && ((c = r[u]) && (r[u] = null),
                                w.event.triggered = v,
                                r[v](),
                                w.event.triggered = n,
                                c && (r[u] = c)),
                                e.result
                            }
                        } else
                            for (d in o = w.cache)
                                o[d].events && o[d].events[v] && w.event.trigger(e, t, o[d].handle.elem, !0)
                }
            },
            dispatch: function(e) {
                e = w.event.fix(e || i.event);
                var t, r, s, o, a, l, d, h, c, u = (w._data(this, "events") || {})[e.type] || [], f = u.delegateCount, m = p.call(arguments), g = !e.exclusive && !e.namespace, v = w.event.special[e.type] || {}, x = [];
                if (m[0] = e,
                e.delegateTarget = this,
                !v.preDispatch || !1 !== v.preDispatch.call(this, e)) {
                    if (f && (!e.button || "click" !== e.type))
                        for (s = e.target; s != this; s = s.parentNode || this)
                            if (!0 !== s.disabled || "click" !== e.type) {
                                for (a = {},
                                d = [],
                                t = 0; t < f; t++)
                                    a[c = (h = u[t]).selector] === n && (a[c] = h.needsContext ? w(c, this).index(s) >= 0 : w.find(c, this, null, [s]).length),
                                    a[c] && d.push(h);
                                d.length && x.push({
                                    elem: s,
                                    matches: d
                                })
                            }
                    for (u.length > f && x.push({
                        elem: this,
                        matches: u.slice(f)
                    }),
                    t = 0; t < x.length && !e.isPropagationStopped(); t++)
                        for (l = x[t],
                        e.currentTarget = l.elem,
                        r = 0; r < l.matches.length && !e.isImmediatePropagationStopped(); r++)
                            h = l.matches[r],
                            (g || !e.namespace && !h.namespace || e.namespace_re && e.namespace_re.test(h.namespace)) && (e.data = h.data,
                            e.handleObj = h,
                            (o = ((w.event.special[h.origType] || {}).handle || h.handler).apply(l.elem, m)) !== n && (e.result = o,
                            !1 === o && (e.preventDefault(),
                            e.stopPropagation())));
                    return v.postDispatch && v.postDispatch.call(this, e),
                    e.result
                }
            },
            props: "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
            fixHooks: {},
            keyHooks: {
                props: "char charCode key keyCode".split(" "),
                filter: function(e, t) {
                    return null == e.which && (e.which = null != t.charCode ? t.charCode : t.keyCode),
                    e
                }
            },
            mouseHooks: {
                props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
                filter: function(e, t) {
                    var i, r, s, o = t.button, a = t.fromElement;
                    return null == e.pageX && null != t.clientX && (r = (i = e.target.ownerDocument || l).documentElement,
                    s = i.body,
                    e.pageX = t.clientX + (r && r.scrollLeft || s && s.scrollLeft || 0) - (r && r.clientLeft || s && s.clientLeft || 0),
                    e.pageY = t.clientY + (r && r.scrollTop || s && s.scrollTop || 0) - (r && r.clientTop || s && s.clientTop || 0)),
                    !e.relatedTarget && a && (e.relatedTarget = a === e.target ? t.toElement : a),
                    e.which || o === n || (e.which = 1 & o ? 1 : 2 & o ? 3 : 4 & o ? 2 : 0),
                    e
                }
            },
            fix: function(e) {
                if (e[w.expando])
                    return e;
                var t, i, r = e, s = w.event.fixHooks[e.type] || {}, n = s.props ? this.props.concat(s.props) : this.props;
                for (e = w.Event(r),
                t = n.length; t; )
                    e[i = n[--t]] = r[i];
                return e.target || (e.target = r.srcElement || l),
                3 === e.target.nodeType && (e.target = e.target.parentNode),
                e.metaKey = !!e.metaKey,
                s.filter ? s.filter(e, r) : e
            },
            special: {
                load: {
                    noBubble: !0
                },
                focus: {
                    delegateType: "focusin"
                },
                blur: {
                    delegateType: "focusout"
                },
                beforeunload: {
                    setup: function(e, t, i) {
                        w.isWindow(this) && (this.onbeforeunload = i)
                    },
                    teardown: function(e, t) {
                        this.onbeforeunload === t && (this.onbeforeunload = null)
                    }
                }
            },
            simulate: function(e, t, i, r) {
                var s = w.extend(new w.Event, i, {
                    type: e,
                    isSimulated: !0,
                    originalEvent: {}
                });
                r ? w.event.trigger(s, null, t) : w.event.dispatch.call(t, s),
                s.isDefaultPrevented() && i.preventDefault()
            }
        },
        w.event.handle = w.event.dispatch,
        w.removeEvent = l.removeEventListener ? function(e, t, i) {
            e.removeEventListener && e.removeEventListener(t, i, !1)
        }
        : function(e, t, i) {
            var r = "on" + t;
            e.detachEvent && (void 0 === e[r] && (e[r] = null),
            e.detachEvent(r, i))
        }
        ,
        w.Event = function(e, t) {
            if (!(this instanceof w.Event))
                return new w.Event(e,t);
            e && e.type ? (this.originalEvent = e,
            this.type = e.type,
            this.isDefaultPrevented = e.defaultPrevented || !1 === e.returnValue || e.getPreventDefault && e.getPreventDefault() ? te : ee) : this.type = e,
            t && w.extend(this, t),
            this.timeStamp = e && e.timeStamp || w.now(),
            this[w.expando] = !0
        }
        ,
        w.Event.prototype = {
            preventDefault: function() {
                this.isDefaultPrevented = te;
                var e = this.originalEvent;
                e && (e.preventDefault ? e.preventDefault() : e.returnValue = !1)
            },
            stopPropagation: function() {
                this.isPropagationStopped = te;
                var e = this.originalEvent;
                e && (e.stopPropagation && e.stopPropagation(),
                e.cancelBubble = !0)
            },
            stopImmediatePropagation: function() {
                this.isImmediatePropagationStopped = te,
                this.stopPropagation()
            },
            isDefaultPrevented: ee,
            isPropagationStopped: ee,
            isImmediatePropagationStopped: ee
        },
        w.each({
            mouseenter: "mouseover",
            mouseleave: "mouseout"
        }, function(e, t) {
            w.event.special[e] = {
                delegateType: t,
                bindType: t,
                handle: function(e) {
                    var i, r = e.relatedTarget, s = e.handleObj;
                    s.selector;
                    return r && (r === this || w.contains(this, r)) || (e.type = s.origType,
                    i = s.handler.apply(this, arguments),
                    e.type = t),
                    i
                }
            }
        }),
        w.fn.extend({
            on: function(e, t, i, r, s) {
                var o, a;
                if ("object" == typeof e) {
                    for (a in "string" != typeof t && (i = i || t,
                    t = n),
                    e)
                        this.on(a, t, i, e[a], s);
                    return this
                }
                if (null == i && null == r ? (r = t,
                i = t = n) : null == r && ("string" == typeof t ? (r = i,
                i = n) : (r = i,
                i = t,
                t = n)),
                !1 === r)
                    r = ee;
                else if (!r)
                    return this;
                return 1 === s && (o = r,
                (r = function(e) {
                    return w().off(e),
                    o.apply(this, arguments)
                }
                ).guid = o.guid || (o.guid = w.guid++)),
                this.each(function() {
                    w.event.add(this, e, r, i, t)
                })
            },
            off: function(e, t, i) {
                var r, s;
                if (e && e.preventDefault && e.handleObj)
                    return r = e.handleObj,
                    w(e.delegateTarget).off(r.namespace ? r.origType + "." + r.namespace : r.origType, r.selector, r.handler),
                    this;
                if ("object" == typeof e) {
                    for (s in e)
                        this.off(s, t, e[s]);
                    return this
                }
                return !1 !== t && "function" != typeof t || (i = t,
                t = n),
                !1 === i && (i = ee),
                this.each(function() {
                    w.event.remove(this, e, i, t)
                })
            },
            delegate: function(e, t, i, r) {
                return this.on(t, e, i, r)
            },
            undelegate: function(e, t, i) {
                return 1 === arguments.length ? this.off(e, "**") : this.off(t, e || "**", i)
            },
            trigger: function(e, t) {
                return this.each(function() {
                    w.event.trigger(e, t, this)
                })
            },
            triggerHandler: function(e, t) {
                if (this[0])
                    return w.event.trigger(e, t, this[0], !0)
            },
            toggle: function(e) {
                var t = arguments
                  , i = e.guid || w.guid++
                  , r = 0
                  , s = function(i) {
                    var s = (w._data(this, "lastToggle" + e.guid) || 0) % r;
                    return w._data(this, "lastToggle" + e.guid, s + 1),
                    i.preventDefault(),
                    t[s].apply(this, arguments) || !1
                };
                for (s.guid = i; r < t.length; )
                    t[r++].guid = i;
                return this.click(s)
            },
            hover: function(e, t) {
                return this.mouseenter(e).mouseleave(t || e)
            }
        }),
        w.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function(e, t) {
            w.fn[t] = function(e, i) {
                return null == i && (i = e,
                e = null),
                arguments.length > 0 ? this.on(t, null, e, i) : this.trigger(t)
            }
            ,
            $.test(t) && (w.event.fixHooks[t] = w.event.keyHooks),
            Y.test(t) && (w.event.fixHooks[t] = w.event.mouseHooks)
        }),
        /*!
             * Sizzle CSS Selector Engine
             * Copyright 2012 JQXLite Foundation and other contributors
             * Released under the MIT license
             * http://sizzlejs.com/
             */
        function(e, t) {
            var i, r, s, n, o, a, l, d, h, c, u, p, f, m, g, v, x, b, y = "undefined", _ = ("sizcache" + Math.random()).replace(".", ""), q = String, j = e.document, S = j.documentElement, C = 0, T = 0, I = [].pop, k = [].push, D = [].slice, P = [].indexOf || function(e) {
                for (var t = 0, i = this.length; t < i; t++)
                    if (this[t] === e)
                        return t;
                return -1
            }
            , B = function(e, t) {
                return e[_] = null == t || t,
                e
            }, M = function() {
                var e = {}
                  , t = [];
                return B(function(i, r) {
                    return t.push(i) > s.cacheLength && delete e[t.shift()],
                    e[i + " "] = r
                }, e)
            }, H = M(), O = M(), z = M(), A = "[\\x20\\t\\r\\n\\f]", L = "(?:\\\\.|[-\\w]|[^\\x00-\\xa0])+", E = L.replace("w", "w#"), N = "\\[" + A + "*(" + L + ")" + A + "*(?:([*^$|!~]?=)" + A + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + E + ")|)|)" + A + "*\\]", F = ":(" + L + ")(?:\\((?:(['\"])((?:\\\\.|[^\\\\])*?)\\2|([^()[\\]]*|(?:(?:" + N + ")|[^:]|\\\\.)*|.*))\\)|)", V = ":(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + A + "*((?:-\\d)?\\d*)" + A + "*\\)|)(?=[^-]|$)", R = new RegExp("^" + A + "+|((?:^|[^\\\\])(?:\\\\.)*)" + A + "+$","g"), W = new RegExp("^" + A + "*," + A + "*"), G = new RegExp("^" + A + "*([\\x20\\t\\r\\n\\f>+~])" + A + "*"), X = new RegExp(F), J = /^(?:#([\w\-]+)|(\w+)|\.([\w\-]+))$/, Q = /[\x20\t\r\n\f]*[+~]/, U = /h\d/i, $ = /input|select|textarea|button/i, Y = /\\(?!\\)/g, K = {
                ID: new RegExp("^#(" + L + ")"),
                CLASS: new RegExp("^\\.(" + L + ")"),
                NAME: new RegExp("^\\[name=['\"]?(" + L + ")['\"]?\\]"),
                TAG: new RegExp("^(" + L.replace("w", "w*") + ")"),
                ATTR: new RegExp("^" + N),
                PSEUDO: new RegExp("^" + F),
                POS: new RegExp(V,"i"),
                CHILD: new RegExp("^:(only|nth|first|last)-child(?:\\(" + A + "*(even|odd|(([+-]|)(\\d*)n|)" + A + "*(?:([+-]|)" + A + "*(\\d+)|))" + A + "*\\)|)","i"),
                needsContext: new RegExp("^" + A + "*[>+~]|" + V,"i")
            }, Z = function(e) {
                var t = j.createElement("div");
                try {
                    return e(t)
                } catch (e) {
                    return !1
                } finally {
                    t = null
                }
            }, ee = Z(function(e) {
                return e.appendChild(j.createComment("")),
                !e.getElementsByTagName("*").length
            }), te = Z(function(e) {
                return e.innerHTML = "<a href='#'></a>",
                e.firstChild && typeof e.firstChild.getAttribute !== y && "#" === e.firstChild.getAttribute("href")
            }), ie = Z(function(e) {
                e.innerHTML = "<select></select>";
                var t = typeof e.lastChild.getAttribute("multiple");
                return "boolean" !== t && "string" !== t
            }), re = Z(function(e) {
                return e.innerHTML = "<div class='hidden e'></div><div class='hidden'></div>",
                !(!e.getElementsByClassName || !e.getElementsByClassName("e").length) && (e.lastChild.className = "e",
                2 === e.getElementsByClassName("e").length)
            }), se = Z(function(e) {
                e.id = _ + 0,
                e.innerHTML = "<a name='" + _ + "'></a><div name='" + _ + "'></div>",
                S.insertBefore(e, S.firstChild);
                var t = j.getElementsByName && j.getElementsByName(_).length === 2 + j.getElementsByName(_ + 0).length;
                return r = !j.getElementById(_),
                S.removeChild(e),
                t
            });
            try {
                D.call(S.childNodes, 0)[0].nodeType
            } catch (e) {
                D = function(e) {
                    for (var t, i = []; t = this[e]; e++)
                        i.push(t);
                    return i
                }
            }
            function ne(e, t, i, r) {
                i = i || [];
                var s, n, l, d, h = (t = t || j).nodeType;
                if (!e || "string" != typeof e)
                    return i;
                if (1 !== h && 9 !== h)
                    return [];
                if (!(l = o(t)) && !r && (s = J.exec(e)))
                    if (d = s[1]) {
                        if (9 === h) {
                            if (!(n = t.getElementById(d)) || !n.parentNode)
                                return i;
                            if (n.id === d)
                                return i.push(n),
                                i
                        } else if (t.ownerDocument && (n = t.ownerDocument.getElementById(d)) && a(t, n) && n.id === d)
                            return i.push(n),
                            i
                    } else {
                        if (s[2])
                            return k.apply(i, D.call(t.getElementsByTagName(e), 0)),
                            i;
                        if ((d = s[3]) && re && t.getElementsByClassName)
                            return k.apply(i, D.call(t.getElementsByClassName(d), 0)),
                            i
                    }
                return ge(e.replace(R, "$1"), t, i, r, l)
            }
            function oe(e) {
                return function(t) {
                    return "input" === t.nodeName.toLowerCase() && t.type === e
                }
            }
            function ae(e) {
                return function(t) {
                    var i = t.nodeName.toLowerCase();
                    return ("input" === i || "button" === i) && t.type === e
                }
            }
            function le(e) {
                return B(function(t) {
                    return t = +t,
                    B(function(i, r) {
                        for (var s, n = e([], i.length, t), o = n.length; o--; )
                            i[s = n[o]] && (i[s] = !(r[s] = i[s]))
                    })
                })
            }
            function de(e, t, i) {
                if (e === t)
                    return i;
                for (var r = e.nextSibling; r; ) {
                    if (r === t)
                        return -1;
                    r = r.nextSibling
                }
                return 1
            }
            function he(e, t) {
                var i, r, n, o, a, l, d, h = O[_][e + " "];
                if (h)
                    return t ? 0 : h.slice(0);
                for (a = e,
                l = [],
                d = s.preFilter; a; ) {
                    for (o in i && !(r = W.exec(a)) || (r && (a = a.slice(r[0].length) || a),
                    l.push(n = [])),
                    i = !1,
                    (r = G.exec(a)) && (n.push(i = new q(r.shift())),
                    a = a.slice(i.length),
                    i.type = r[0].replace(R, " ")),
                    s.filter)
                        !(r = K[o].exec(a)) || d[o] && !(r = d[o](r)) || (n.push(i = new q(r.shift())),
                        a = a.slice(i.length),
                        i.type = o,
                        i.matches = r);
                    if (!i)
                        break
                }
                return t ? a.length : a ? ne.error(e) : O(e, l).slice(0)
            }
            function ce(e, t, r) {
                var s = t.dir
                  , n = r && "parentNode" === t.dir
                  , o = T++;
                return t.first ? function(t, i, r) {
                    for (; t = t[s]; )
                        if (n || 1 === t.nodeType)
                            return e(t, i, r)
                }
                : function(t, r, a) {
                    if (a) {
                        for (; t = t[s]; )
                            if ((n || 1 === t.nodeType) && e(t, r, a))
                                return t
                    } else
                        for (var l, d = C + " " + o + " ", h = d + i; t = t[s]; )
                            if (n || 1 === t.nodeType) {
                                if ((l = t[_]) === h)
                                    return t.sizset;
                                if ("string" == typeof l && 0 === l.indexOf(d)) {
                                    if (t.sizset)
                                        return t
                                } else {
                                    if (t[_] = h,
                                    e(t, r, a))
                                        return t.sizset = !0,
                                        t;
                                    t.sizset = !1
                                }
                            }
                }
            }
            function ue(e) {
                return e.length > 1 ? function(t, i, r) {
                    for (var s = e.length; s--; )
                        if (!e[s](t, i, r))
                            return !1;
                    return !0
                }
                : e[0]
            }
            function pe(e, t, i, r, s) {
                for (var n, o = [], a = 0, l = e.length, d = null != t; a < l; a++)
                    (n = e[a]) && (i && !i(n, r, s) || (o.push(n),
                    d && t.push(a)));
                return o
            }
            function fe(e, t, i, r, s, n) {
                return r && !r[_] && (r = fe(r)),
                s && !s[_] && (s = fe(s, n)),
                B(function(n, o, a, l) {
                    var d, h, c, u = [], p = [], f = o.length, m = n || function(e, t, i) {
                        for (var r = 0, s = t.length; r < s; r++)
                            ne(e, t[r], i);
                        return i
                    }(t || "*", a.nodeType ? [a] : a, []), g = !e || !n && t ? m : pe(m, u, e, a, l), v = i ? s || (n ? e : f || r) ? [] : o : g;
                    if (i && i(g, v, a, l),
                    r)
                        for (d = pe(v, p),
                        r(d, [], a, l),
                        h = d.length; h--; )
                            (c = d[h]) && (v[p[h]] = !(g[p[h]] = c));
                    if (n) {
                        if (s || e) {
                            if (s) {
                                for (d = [],
                                h = v.length; h--; )
                                    (c = v[h]) && d.push(g[h] = c);
                                s(null, v = [], d, l)
                            }
                            for (h = v.length; h--; )
                                (c = v[h]) && (d = s ? P.call(n, c) : u[h]) > -1 && (n[d] = !(o[d] = c))
                        }
                    } else
                        v = pe(v === o ? v.splice(f, v.length) : v),
                        s ? s(null, o, v, l) : k.apply(o, v)
                })
            }
            function me(e) {
                for (var t, i, r, n = e.length, o = s.relative[e[0].type], a = o || s.relative[" "], l = o ? 1 : 0, d = ce(function(e) {
                    return e === t
                }, a, !0), h = ce(function(e) {
                    return P.call(t, e) > -1
                }, a, !0), u = [function(e, i, r) {
                    return !o && (r || i !== c) || ((t = i).nodeType ? d(e, i, r) : h(e, i, r))
                }
                ]; l < n; l++)
                    if (i = s.relative[e[l].type])
                        u = [ce(ue(u), i)];
                    else {
                        if ((i = s.filter[e[l].type].apply(null, e[l].matches))[_]) {
                            for (r = ++l; r < n && !s.relative[e[r].type]; r++)
                                ;
                            return fe(l > 1 && ue(u), l > 1 && e.slice(0, l - 1).join("").replace(R, "$1"), i, l < r && me(e.slice(l, r)), r < n && me(e = e.slice(r)), r < n && e.join(""))
                        }
                        u.push(i)
                    }
                return ue(u)
            }
            function ge(e, t, i, r, n) {
                var o, a, d, h, c, u = he(e);
                u.length;
                if (!r && 1 === u.length) {
                    if ((a = u[0] = u[0].slice(0)).length > 2 && "ID" === (d = a[0]).type && 9 === t.nodeType && !n && s.relative[a[1].type]) {
                        if (!(t = s.find.ID(d.matches[0].replace(Y, ""), t, n)[0]))
                            return i;
                        e = e.slice(a.shift().length)
                    }
                    for (o = K.POS.test(e) ? -1 : a.length - 1; o >= 0 && (d = a[o],
                    !s.relative[h = d.type]); o--)
                        if ((c = s.find[h]) && (r = c(d.matches[0].replace(Y, ""), Q.test(a[0].type) && t.parentNode || t, n))) {
                            if (a.splice(o, 1),
                            !(e = r.length && a.join("")))
                                return k.apply(i, D.call(r, 0)),
                                i;
                            break
                        }
                }
                return l(e, u)(r, t, n, i, Q.test(e)),
                i
            }
            function ve() {}
            ne.matches = function(e, t) {
                return ne(e, null, null, t)
            }
            ,
            ne.matchesSelector = function(e, t) {
                return ne(t, null, null, [e]).length > 0
            }
            ,
            n = ne.getText = function(e) {
                var t, i = "", r = 0, s = e.nodeType;
                if (s) {
                    if (1 === s || 9 === s || 11 === s) {
                        if ("string" == typeof e.textContent)
                            return e.textContent;
                        for (e = e.firstChild; e; e = e.nextSibling)
                            i += n(e)
                    } else if (3 === s || 4 === s)
                        return e.nodeValue
                } else
                    for (; t = e[r]; r++)
                        i += n(t);
                return i
            }
            ,
            o = ne.isXML = function(e) {
                var t = e && (e.ownerDocument || e).documentElement;
                return !!t && "HTML" !== t.nodeName
            }
            ,
            a = ne.contains = S.contains ? function(e, t) {
                var i = 9 === e.nodeType ? e.documentElement : e
                  , r = t && t.parentNode;
                return e === r || !!(r && 1 === r.nodeType && i.contains && i.contains(r))
            }
            : S.compareDocumentPosition ? function(e, t) {
                return t && !!(16 & e.compareDocumentPosition(t))
            }
            : function(e, t) {
                for (; t = t.parentNode; )
                    if (t === e)
                        return !0;
                return !1
            }
            ,
            ne.attr = function(e, t) {
                var i, r = o(e);
                return r || (t = t.toLowerCase()),
                (i = s.attrHandle[t]) ? i(e) : r || ie ? e.getAttribute(t) : (i = e.getAttributeNode(t)) ? "boolean" == typeof e[t] ? e[t] ? t : null : i.specified ? i.value : null : null
            }
            ,
            s = ne.selectors = {
                cacheLength: 50,
                createPseudo: B,
                match: K,
                attrHandle: te ? {} : {
                    href: function(e) {
                        return e.getAttribute("href", 2)
                    },
                    type: function(e) {
                        return e.getAttribute("type")
                    }
                },
                find: {
                    ID: r ? function(e, t, i) {
                        if (typeof t.getElementById !== y && !i) {
                            var r = t.getElementById(e);
                            return r && r.parentNode ? [r] : []
                        }
                    }
                    : function(e, t, i) {
                        if (typeof t.getElementById !== y && !i) {
                            var r = t.getElementById(e);
                            return r ? r.id === e || typeof r.getAttributeNode !== y && r.getAttributeNode("id").value === e ? [r] : void 0 : []
                        }
                    }
                    ,
                    TAG: ee ? function(e, t) {
                        if (typeof t.getElementsByTagName !== y)
                            return t.getElementsByTagName(e)
                    }
                    : function(e, t) {
                        var i = t.getElementsByTagName(e);
                        if ("*" === e) {
                            for (var r, s = [], n = 0; r = i[n]; n++)
                                1 === r.nodeType && s.push(r);
                            return s
                        }
                        return i
                    }
                    ,
                    NAME: se && function(e, t) {
                        if (typeof t.getElementsByName !== y)
                            return t.getElementsByName(name)
                    }
                    ,
                    CLASS: re && function(e, t, i) {
                        if (typeof t.getElementsByClassName !== y && !i)
                            return t.getElementsByClassName(e)
                    }
                },
                relative: {
                    ">": {
                        dir: "parentNode",
                        first: !0
                    },
                    " ": {
                        dir: "parentNode"
                    },
                    "+": {
                        dir: "previousSibling",
                        first: !0
                    },
                    "~": {
                        dir: "previousSibling"
                    }
                },
                preFilter: {
                    ATTR: function(e) {
                        return e[1] = e[1].replace(Y, ""),
                        e[3] = (e[4] || e[5] || "").replace(Y, ""),
                        "~=" === e[2] && (e[3] = " " + e[3] + " "),
                        e.slice(0, 4)
                    },
                    CHILD: function(e) {
                        return e[1] = e[1].toLowerCase(),
                        "nth" === e[1] ? (e[2] || ne.error(e[0]),
                        e[3] = +(e[3] ? e[4] + (e[5] || 1) : 2 * ("even" === e[2] || "odd" === e[2])),
                        e[4] = +(e[6] + e[7] || "odd" === e[2])) : e[2] && ne.error(e[0]),
                        e
                    },
                    PSEUDO: function(e) {
                        var t, i;
                        return K.CHILD.test(e[0]) ? null : (e[3] ? e[2] = e[3] : (t = e[4]) && (X.test(t) && (i = he(t, !0)) && (i = t.indexOf(")", t.length - i) - t.length) && (t = t.slice(0, i),
                        e[0] = e[0].slice(0, i)),
                        e[2] = t),
                        e.slice(0, 3))
                    }
                },
                filter: {
                    ID: r ? function(e) {
                        return e = e.replace(Y, ""),
                        function(t) {
                            return t.getAttribute("id") === e
                        }
                    }
                    : function(e) {
                        return e = e.replace(Y, ""),
                        function(t) {
                            var i = typeof t.getAttributeNode !== y && t.getAttributeNode("id");
                            return i && i.value === e
                        }
                    }
                    ,
                    TAG: function(e) {
                        return "*" === e ? function() {
                            return !0
                        }
                        : (e = e.replace(Y, "").toLowerCase(),
                        function(t) {
                            return t.nodeName && t.nodeName.toLowerCase() === e
                        }
                        )
                    },
                    CLASS: function(e) {
                        var t = H[_][e + " "];
                        return t || (t = new RegExp("(^|" + A + ")" + e + "(" + A + "|$)")) && H(e, function(e) {
                            return t.test(e.className || typeof e.getAttribute !== y && e.getAttribute("class") || "")
                        })
                    },
                    ATTR: function(e, t, i) {
                        return function(r, s) {
                            var n = ne.attr(r, e);
                            return null == n ? "!=" === t : !t || (n += "",
                            "=" === t ? n === i : "!=" === t ? n !== i : "^=" === t ? i && 0 === n.indexOf(i) : "*=" === t ? i && n.indexOf(i) > -1 : "$=" === t ? i && n.substr(n.length - i.length) === i : "~=" === t ? (" " + n + " ").indexOf(i) > -1 : "|=" === t && (n === i || n.substr(0, i.length + 1) === i + "-"))
                        }
                    },
                    CHILD: function(e, t, i, r) {
                        return "nth" === e ? function(e) {
                            var t, s, n = e.parentNode;
                            if (1 === i && 0 === r)
                                return !0;
                            if (n)
                                for (s = 0,
                                t = n.firstChild; t && (1 !== t.nodeType || (s++,
                                e !== t)); t = t.nextSibling)
                                    ;
                            return (s -= r) === i || s % i == 0 && s / i >= 0
                        }
                        : function(t) {
                            var i = t;
                            switch (e) {
                            case "only":
                            case "first":
                                for (; i = i.previousSibling; )
                                    if (1 === i.nodeType)
                                        return !1;
                                if ("first" === e)
                                    return !0;
                                i = t;
                            case "last":
                                for (; i = i.nextSibling; )
                                    if (1 === i.nodeType)
                                        return !1;
                                return !0
                            }
                        }
                    },
                    PSEUDO: function(e, t) {
                        var i, r = s.pseudos[e] || s.setFilters[e.toLowerCase()] || ne.error("unsupported pseudo: " + e);
                        return r[_] ? r(t) : r.length > 1 ? (i = [e, e, "", t],
                        s.setFilters.hasOwnProperty(e.toLowerCase()) ? B(function(e, i) {
                            for (var s, n = r(e, t), o = n.length; o--; )
                                e[s = P.call(e, n[o])] = !(i[s] = n[o])
                        }) : function(e) {
                            return r(e, 0, i)
                        }
                        ) : r
                    }
                },
                pseudos: {
                    not: B(function(e) {
                        var t = []
                          , i = []
                          , r = l(e.replace(R, "$1"));
                        return r[_] ? B(function(e, t, i, s) {
                            for (var n, o = r(e, null, s, []), a = e.length; a--; )
                                (n = o[a]) && (e[a] = !(t[a] = n))
                        }) : function(e, s, n) {
                            return t[0] = e,
                            r(t, null, n, i),
                            !i.pop()
                        }
                    }),
                    has: B(function(e) {
                        return function(t) {
                            return ne(e, t).length > 0
                        }
                    }),
                    contains: B(function(e) {
                        return function(t) {
                            return (t.textContent || t.innerText || n(t)).indexOf(e) > -1
                        }
                    }),
                    enabled: function(e) {
                        return !1 === e.disabled
                    },
                    disabled: function(e) {
                        return !0 === e.disabled
                    },
                    checked: function(e) {
                        var t = e.nodeName.toLowerCase();
                        return "input" === t && !!e.checked || "option" === t && !!e.selected
                    },
                    selected: function(e) {
                        return e.parentNode && e.parentNode.selectedIndex,
                        !0 === e.selected
                    },
                    parent: function(e) {
                        return !s.pseudos.empty(e)
                    },
                    empty: function(e) {
                        var t;
                        for (e = e.firstChild; e; ) {
                            if (e.nodeName > "@" || 3 === (t = e.nodeType) || 4 === t)
                                return !1;
                            e = e.nextSibling
                        }
                        return !0
                    },
                    header: function(e) {
                        return U.test(e.nodeName)
                    },
                    text: function(e) {
                        var t, i;
                        return "input" === e.nodeName.toLowerCase() && "text" === (t = e.type) && (null == (i = e.getAttribute("type")) || i.toLowerCase() === t)
                    },
                    radio: oe("radio"),
                    checkbox: oe("checkbox"),
                    file: oe("file"),
                    password: oe("password"),
                    image: oe("image"),
                    submit: ae("submit"),
                    reset: ae("reset"),
                    button: function(e) {
                        var t = e.nodeName.toLowerCase();
                        return "input" === t && "button" === e.type || "button" === t
                    },
                    input: function(e) {
                        return $.test(e.nodeName)
                    },
                    focus: function(e) {
                        var t = e.ownerDocument;
                        return e === t.activeElement && (!t.hasFocus || t.hasFocus()) && !!(e.type || e.href || ~e.tabIndex)
                    },
                    active: function(e) {
                        return e === e.ownerDocument.activeElement
                    },
                    first: le(function() {
                        return [0]
                    }),
                    last: le(function(e, t) {
                        return [t - 1]
                    }),
                    eq: le(function(e, t, i) {
                        return [i < 0 ? i + t : i]
                    }),
                    even: le(function(e, t) {
                        for (var i = 0; i < t; i += 2)
                            e.push(i);
                        return e
                    }),
                    odd: le(function(e, t) {
                        for (var i = 1; i < t; i += 2)
                            e.push(i);
                        return e
                    }),
                    lt: le(function(e, t, i) {
                        for (var r = i < 0 ? i + t : i; --r >= 0; )
                            e.push(r);
                        return e
                    }),
                    gt: le(function(e, t, i) {
                        for (var r = i < 0 ? i + t : i; ++r < t; )
                            e.push(r);
                        return e
                    })
                }
            },
            d = S.compareDocumentPosition ? function(e, t) {
                return e === t ? (h = !0,
                0) : (e.compareDocumentPosition && t.compareDocumentPosition ? 4 & e.compareDocumentPosition(t) : e.compareDocumentPosition) ? -1 : 1
            }
            : function(e, t) {
                if (e === t)
                    return h = !0,
                    0;
                if (e.sourceIndex && t.sourceIndex)
                    return e.sourceIndex - t.sourceIndex;
                var i, r, s = [], n = [], o = e.parentNode, a = t.parentNode, l = o;
                if (o === a)
                    return de(e, t);
                if (!o)
                    return -1;
                if (!a)
                    return 1;
                for (; l; )
                    s.unshift(l),
                    l = l.parentNode;
                for (l = a; l; )
                    n.unshift(l),
                    l = l.parentNode;
                i = s.length,
                r = n.length;
                for (var d = 0; d < i && d < r; d++)
                    if (s[d] !== n[d])
                        return de(s[d], n[d]);
                return d === i ? de(e, n[d], -1) : de(s[d], t, 1)
            }
            ,
            [0, 0].sort(d),
            u = !h,
            ne.uniqueSort = function(e) {
                var t, i = [], r = 1, s = 0;
                if (h = u,
                e.sort(d),
                h) {
                    for (; t = e[r]; r++)
                        t === e[r - 1] && (s = i.push(r));
                    for (; s--; )
                        e.splice(i[s], 1)
                }
                return e
            }
            ,
            ne.error = function(e) {
                throw new Error("Syntax error, unrecognized expression: " + e)
            }
            ,
            l = ne.compile = function(e, t) {
                var r, n = [], o = [], a = z[_][e + " "];
                if (!a) {
                    for (t || (t = he(e)),
                    r = t.length; r--; )
                        (a = me(t[r]))[_] ? n.push(a) : o.push(a);
                    a = z(e, function(e, t) {
                        var r = t.length > 0
                          , n = e.length > 0
                          , o = function(a, l, d, h, u) {
                            var p, f, m, g = [], v = 0, w = "0", x = a && [], b = null != u, y = c, _ = a || n && s.find.TAG("*", u && l.parentNode || l), q = C += null == y ? 1 : Math.E;
                            for (b && (c = l !== j && l,
                            i = o.el); null != (p = _[w]); w++) {
                                if (n && p) {
                                    for (f = 0; m = e[f]; f++)
                                        if (m(p, l, d)) {
                                            h.push(p);
                                            break
                                        }
                                    b && (C = q,
                                    i = ++o.el)
                                }
                                r && ((p = !m && p) && v--,
                                a && x.push(p))
                            }
                            if (v += w,
                            r && w !== v) {
                                for (f = 0; m = t[f]; f++)
                                    m(x, g, l, d);
                                if (a) {
                                    if (v > 0)
                                        for (; w--; )
                                            x[w] || g[w] || (g[w] = I.call(h));
                                    g = pe(g)
                                }
                                k.apply(h, g),
                                b && !a && g.length > 0 && v + t.length > 1 && ne.uniqueSort(h)
                            }
                            return b && (C = q,
                            c = y),
                            x
                        };
                        return o.el = 0,
                        r ? B(o) : o
                    }(o, n))
                }
                return a
            }
            ,
            j.querySelectorAll && (f = ge,
            m = /'|\\/g,
            g = /\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g,
            v = [":focus"],
            x = [":active"],
            b = S.matchesSelector || S.mozMatchesSelector || S.webkitMatchesSelector || S.oMatchesSelector || S.msMatchesSelector,
            Z(function(e) {
                e.innerHTML = "<select><option selected=''></option></select>",
                e.querySelectorAll("[selected]").length || v.push("\\[" + A + "*(?:checked|disabled|ismap|multiple|readonly|selected|value)"),
                e.querySelectorAll(":checked").length || v.push(":checked")
            }),
            Z(function(e) {
                e.innerHTML = "<p test=''></p>",
                e.querySelectorAll("[test^='']").length && v.push("[*^$]=" + A + "*(?:\"\"|'')"),
                e.innerHTML = "<input type='hidden'/>",
                e.querySelectorAll(":enabled").length || v.push(":enabled", ":disabled")
            }),
            v = new RegExp(v.join("|")),
            ge = function(e, t, i, r, s) {
                if (!r && !s && !v.test(e)) {
                    var n, o, a = !0, l = _, d = t, h = 9 === t.nodeType && e;
                    if (1 === t.nodeType && "object" !== t.nodeName.toLowerCase()) {
                        for (n = he(e),
                        (a = t.getAttribute("id")) ? l = a.replace(m, "\\$&") : t.setAttribute("id", l),
                        l = "[id='" + l + "'] ",
                        o = n.length; o--; )
                            n[o] = l + n[o].join("");
                        d = Q.test(e) && t.parentNode || t,
                        h = n.join(",")
                    }
                    if (h)
                        try {
                            return k.apply(i, D.call(d.querySelectorAll(h), 0)),
                            i
                        } catch (e) {} finally {
                            a || t.removeAttribute("id")
                        }
                }
                return f(e, t, i, r, s)
            }
            ,
            b && (Z(function(e) {
                p = b.call(e, "div");
                try {
                    b.call(e, "[test!='']:sizzle"),
                    x.push("!=", F)
                } catch (e) {}
            }),
            x = new RegExp(x.join("|")),
            ne.matchesSelector = function(e, t) {
                if (t = t.replace(g, "='$1']"),
                !o(e) && !x.test(t) && !v.test(t))
                    try {
                        var i = b.call(e, t);
                        if (i || p || e.document && 11 !== e.document.nodeType)
                            return i
                    } catch (e) {}
                return ne(t, null, null, [e]).length > 0
            }
            )),
            s.pseudos.nth = s.pseudos.eq,
            s.filters = ve.prototype = s.pseudos,
            s.setFilters = new ve,
            ne.attr = w.attr,
            w.find = ne,
            w.expr = ne.selectors,
            w.expr[":"] = w.expr.pseudos,
            w.unique = ne.uniqueSort,
            w.text = ne.getText,
            w.isXMLDoc = ne.isXML,
            w.contains = ne.contains
        }(i);
        var ie = /Until$/
          , re = /^(?:parents|prev(?:Until|All))/
          , se = /^.[^:#\[\.,]*$/
          , ne = w.expr.match.needsContext
          , oe = {
            children: !0,
            contents: !0,
            next: !0,
            prev: !0
        };
        function ae(e) {
            return !e || !e.parentNode || 11 === e.parentNode.nodeType
        }
        function le(e, t) {
            do {
                e = e[t]
            } while (e && 1 !== e.nodeType);return e
        }
        function de(e, t, i) {
            if (t = t || 0,
            w.isFunction(t))
                return w.grep(e, function(e, r) {
                    return !!t.call(e, r, e) === i
                });
            if (t.nodeType)
                return w.grep(e, function(e, r) {
                    return e === t === i
                });
            if ("string" == typeof t) {
                var r = w.grep(e, function(e) {
                    return 1 === e.nodeType
                });
                if (se.test(t))
                    return w.filter(t, r, !i);
                t = w.filter(t, r)
            }
            return w.grep(e, function(e, r) {
                return w.inArray(e, t) >= 0 === i
            })
        }
        function he(e) {
            var t = pe.split("|")
              , i = e.createDocumentFragment();
            if (i.createElement)
                for (; t.length; )
                    i.createElement(t.pop());
            return i
        }
        w.fn.extend({
            find: function(e) {
                var t, i, r, s, n, o, a = this;
                if ("string" != typeof e)
                    return w(e).filter(function() {
                        for (t = 0,
                        i = a.length; t < i; t++)
                            if (w.contains(a[t], this))
                                return !0
                    });
                for (o = this.pushStack("", "find", e),
                t = 0,
                i = this.length; t < i; t++)
                    if (r = o.length,
                    w.find(e, this[t], o),
                    t > 0)
                        for (s = r; s < o.length; s++)
                            for (n = 0; n < r; n++)
                                if (o[n] === o[s]) {
                                    o.splice(s--, 1);
                                    break
                                }
                return o
            },
            has: function(e) {
                var t, i = w(e, this), r = i.length;
                return this.filter(function() {
                    for (t = 0; t < r; t++)
                        if (w.contains(this, i[t]))
                            return !0
                })
            },
            not: function(e) {
                return this.pushStack(de(this, e, !1), "not", e)
            },
            filter: function(e) {
                return this.pushStack(de(this, e, !0), "filter", e)
            },
            is: function(e) {
                return !!e && ("string" == typeof e ? ne.test(e) ? w(e, this.context).index(this[0]) >= 0 : w.filter(e, this).length > 0 : this.filter(e).length > 0)
            },
            closest: function(e, t) {
                for (var i, r = 0, s = this.length, n = [], o = ne.test(e) || "string" != typeof e ? w(e, t || this.context) : 0; r < s; r++)
                    for (i = this[r]; i && i.ownerDocument && i !== t && 11 !== i.nodeType; ) {
                        if (o ? o.index(i) > -1 : w.find.matchesSelector(i, e)) {
                            n.push(i);
                            break
                        }
                        i = i.parentNode
                    }
                return n = n.length > 1 ? w.unique(n) : n,
                this.pushStack(n, "closest", e)
            },
            index: function(e) {
                return e ? "string" == typeof e ? w.inArray(this[0], w(e)) : w.inArray(e.jqx ? e[0] : e, this) : this[0] && this[0].parentNode ? this.prevAll().length : -1
            },
            add: function(e, t) {
                var i = "string" == typeof e ? w(e, t) : w.makeArray(e && e.nodeType ? [e] : e)
                  , r = w.merge(this.get(), i);
                return this.pushStack(ae(i[0]) || ae(r[0]) ? r : w.unique(r))
            },
            addBack: function(e) {
                return this.add(null == e ? this.prevObject : this.prevObject.filter(e))
            }
        }),
        w.fn.andSelf = w.fn.addBack,
        w.each({
            parent: function(e) {
                var t = e.parentNode;
                return t && 11 !== t.nodeType ? t : null
            },
            parents: function(e) {
                return w.dir(e, "parentNode")
            },
            parentsUntil: function(e, t, i) {
                return w.dir(e, "parentNode", i)
            },
            next: function(e) {
                return le(e, "nextSibling")
            },
            prev: function(e) {
                return le(e, "previousSibling")
            },
            nextAll: function(e) {
                return w.dir(e, "nextSibling")
            },
            prevAll: function(e) {
                return w.dir(e, "previousSibling")
            },
            nextUntil: function(e, t, i) {
                return w.dir(e, "nextSibling", i)
            },
            prevUntil: function(e, t, i) {
                return w.dir(e, "previousSibling", i)
            },
            siblings: function(e) {
                return w.sibling((e.parentNode || {}).firstChild, e)
            },
            children: function(e) {
                return w.sibling(e.firstChild)
            },
            contents: function(e) {
                return w.nodeName(e, "iframe") ? e.contentDocument || e.contentWindow.document : w.merge([], e.childNodes)
            }
        }, function(e, t) {
            w.fn[e] = function(i, r) {
                var s = w.map(this, t, i);
                return ie.test(e) || (r = i),
                r && "string" == typeof r && (s = w.filter(r, s)),
                s = this.length > 1 && !oe[e] ? w.unique(s) : s,
                this.length > 1 && re.test(e) && (s = s.reverse()),
                this.pushStack(s, e, p.call(arguments).join(","))
            }
        }),
        w.extend({
            filter: function(e, t, i) {
                return i && (e = ":not(" + e + ")"),
                1 === t.length ? w.find.matchesSelector(t[0], e) ? [t[0]] : [] : w.find.matches(e, t)
            },
            dir: function(e, t, i) {
                for (var r = [], s = e[t]; s && 9 !== s.nodeType && (i === n || 1 !== s.nodeType || !w(s).is(i)); )
                    1 === s.nodeType && r.push(s),
                    s = s[t];
                return r
            },
            sibling: function(e, t) {
                for (var i = []; e; e = e.nextSibling)
                    1 === e.nodeType && e !== t && i.push(e);
                return i
            }
        });
        var ce, ue, pe = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video", fe = / JQXLite\d+="(?:null|\d+)"/g, me = /^\s+/, ge = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi, ve = /<([\w:]+)/, we = /<tbody/i, xe = /<|&#?\w+;/, be = /<(?:script|style|link)/i, ye = /<(?:script|object|embed|option|style)/i, _e = new RegExp("<(?:" + pe + ")[\\s/>]","i"), qe = /^(?:checkbox|radio)$/, je = /checked\s*(?:[^=]|=\s*.checked.)/i, Se = /\/(java|ecma)script/i, Ce = /^\s*<!(?:\[CDATA\[|\-\-)|[\]\-]{2}>\s*$/g, Te = {
            option: [1, "<select multiple='multiple'>", "</select>"],
            legend: [1, "<fieldset>", "</fieldset>"],
            thead: [1, "<table>", "</table>"],
            tr: [2, "<table><tbody>", "</tbody></table>"],
            td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
            col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
            area: [1, "<map>", "</map>"],
            _default: [0, "", ""]
        }, Ie = he(l), ke = Ie.appendChild(l.createElement("div"));
        function De(e, t) {
            return e.getElementsByTagName(t)[0] || e.appendChild(e.ownerDocument.createElement(t))
        }
        function Pe(e, t) {
            if (1 === t.nodeType && w.hasData(e)) {
                var i, r, s, n = w._data(e), o = w._data(t, n), a = n.events;
                if (a)
                    for (i in delete o.handle,
                    o.events = {},
                    a)
                        for (r = 0,
                        s = a[i].length; r < s; r++)
                            w.event.add(t, i, a[i][r]);
                o.data && (o.data = w.extend({}, o.data))
            }
        }
        function Be(e, t) {
            var i;
            1 === t.nodeType && (t.clearAttributes && t.clearAttributes(),
            t.mergeAttributes && t.mergeAttributes(e),
            "object" === (i = t.nodeName.toLowerCase()) ? (t.parentNode && (t.outerHTML = e.outerHTML),
            w.support.html5Clone && e.innerHTML && !w.trim(t.innerHTML) && (t.innerHTML = e.innerHTML)) : "input" === i && qe.test(e.type) ? (t.defaultChecked = t.checked = e.checked,
            t.value !== e.value && (t.value = e.value)) : "option" === i ? t.selected = e.defaultSelected : "input" === i || "textarea" === i ? t.defaultValue = e.defaultValue : "script" === i && t.text !== e.text && (t.text = e.text),
            t.removeAttribute(w.expando))
        }
        function Me(e) {
            return void 0 !== e.getElementsByTagName ? e.getElementsByTagName("*") : void 0 !== e.querySelectorAll ? e.querySelectorAll("*") : []
        }
        function He(e) {
            qe.test(e.type) && (e.defaultChecked = e.checked)
        }
        Te.optgroup = Te.option,
        Te.tbody = Te.tfoot = Te.colgroup = Te.caption = Te.thead,
        Te.th = Te.td,
        w.support.htmlSerialize || (Te._default = [1, "X<div>", "</div>"]),
        w.fn.extend({
            text: function(e) {
                return w.access(this, function(e) {
                    return e === n ? w.text(this) : this.empty().append((this[0] && this[0].ownerDocument || l).createTextNode(e))
                }, null, e, arguments.length)
            },
            wrapAll: function(e) {
                if (w.isFunction(e))
                    return this.each(function(t) {
                        w(this).wrapAll(e.call(this, t))
                    });
                if (this[0]) {
                    var t = w(e, this[0].ownerDocument).eq(0).clone(!0);
                    this[0].parentNode && t.insertBefore(this[0]),
                    t.map(function() {
                        for (var e = this; e.firstChild && 1 === e.firstChild.nodeType; )
                            e = e.firstChild;
                        return e
                    }).append(this)
                }
                return this
            },
            wrapInner: function(e) {
                return w.isFunction(e) ? this.each(function(t) {
                    w(this).wrapInner(e.call(this, t))
                }) : this.each(function() {
                    var t = w(this)
                      , i = t.contents();
                    i.length ? i.wrapAll(e) : t.append(e)
                })
            },
            wrap: function(e) {
                var t = w.isFunction(e);
                return this.each(function(i) {
                    w(this).wrapAll(t ? e.call(this, i) : e)
                })
            },
            unwrap: function() {
                return this.parent().each(function() {
                    w.nodeName(this, "body") || w(this).replaceWith(this.childNodes)
                }).end()
            },
            append: function() {
                return this.domManip(arguments, !0, function(e) {
                    1 !== this.nodeType && 11 !== this.nodeType || this.appendChild(e)
                })
            },
            prepend: function() {
                return this.domManip(arguments, !0, function(e) {
                    1 !== this.nodeType && 11 !== this.nodeType || this.insertBefore(e, this.firstChild)
                })
            },
            before: function() {
                if (!ae(this[0]))
                    return this.domManip(arguments, !1, function(e) {
                        this.parentNode.insertBefore(e, this)
                    });
                if (arguments.length) {
                    var e = w.clean(arguments);
                    return this.pushStack(w.merge(e, this), "before", this.selector)
                }
            },
            after: function() {
                if (!ae(this[0]))
                    return this.domManip(arguments, !1, function(e) {
                        this.parentNode.insertBefore(e, this.nextSibling)
                    });
                if (arguments.length) {
                    var e = w.clean(arguments);
                    return this.pushStack(w.merge(this, e), "after", this.selector)
                }
            },
            remove: function(e, t) {
                for (var i, r = 0; null != (i = this[r]); r++)
                    e && !w.filter(e, [i]).length || (t || 1 !== i.nodeType || (w.cleanData(i.getElementsByTagName("*")),
                    w.cleanData([i])),
                    i.parentNode && i.parentNode.removeChild(i));
                return this
            },
            empty: function() {
                for (var e, t = 0; null != (e = this[t]); t++)
                    for (1 === e.nodeType && w.cleanData(e.getElementsByTagName("*")); e.firstChild; )
                        e.removeChild(e.firstChild);
                return this
            },
            clone: function(e, t) {
                return e = null != e && e,
                t = null == t ? e : t,
                this.map(function() {
                    return w.clone(this, e, t)
                })
            },
            html: function(e) {
                return w.access(this, function(e) {
                    var t = this[0] || {}
                      , i = 0
                      , r = this.length;
                    if (e === n)
                        return 1 === t.nodeType ? t.innerHTML.replace(fe, "") : n;
                    if ("string" == typeof e && !be.test(e) && (w.support.htmlSerialize || !_e.test(e)) && (w.support.leadingWhitespace || !me.test(e)) && !Te[(ve.exec(e) || ["", ""])[1].toLowerCase()]) {
                        e = e.replace(ge, "<$1></$2>");
                        try {
                            for (; i < r; i++)
                                1 === (t = this[i] || {}).nodeType && (w.cleanData(t.getElementsByTagName("*")),
                                t.innerHTML = e);
                            t = 0
                        } catch (e) {}
                    }
                    t && this.empty().append(e)
                }, null, e, arguments.length)
            },
            replaceWith: function(e) {
                return ae(this[0]) ? this.length ? this.pushStack(w(w.isFunction(e) ? e() : e), "replaceWith", e) : this : w.isFunction(e) ? this.each(function(t) {
                    var i = w(this)
                      , r = i.html();
                    i.replaceWith(e.call(this, t, r))
                }) : ("string" != typeof e && (e = w(e).detach()),
                this.each(function() {
                    var t = this.nextSibling
                      , i = this.parentNode;
                    w(this).remove(),
                    t ? w(t).before(e) : w(i).append(e)
                }))
            },
            detach: function(e) {
                return this.remove(e, !0)
            },
            domManip: function(e, t, i) {
                var r, s, o, a, l = 0, d = (e = [].concat.apply([], e))[0], h = [], c = this.length;
                if (!w.support.checkClone && c > 1 && "string" == typeof d && je.test(d))
                    return this.each(function() {
                        w(this).domManip(e, t, i)
                    });
                if (w.isFunction(d))
                    return this.each(function(r) {
                        var s = w(this);
                        e[0] = d.call(this, r, t ? s.html() : n),
                        s.domManip(e, t, i)
                    });
                if (this[0]) {
                    if (s = (o = (r = w.buildFragment(e, this, h)).fragment).firstChild,
                    1 === o.childNodes.length && (o = s),
                    s)
                        for (t = t && w.nodeName(s, "tr"),
                        a = r.cacheable || c - 1; l < c; l++)
                            i.call(t && w.nodeName(this[l], "table") ? De(this[l], "tbody") : this[l], l === a ? o : w.clone(o, !0, !0));
                    o = s = null,
                    h.length && w.each(h, function(e, t) {
                        t.src ? w.ajax ? w.ajax({
                            url: t.src,
                            type: "GET",
                            dataType: "script",
                            async: !1,
                            global: !1,
                            throws: !0
                        }) : w.error("no ajax") : w.globalEval((t.text || t.textContent || t.innerHTML || "").replace(Ce, "")),
                        t.parentNode && t.parentNode.removeChild(t)
                    })
                }
                return this
            }
        }),
        w.buildFragment = function(e, t, i) {
            var r, s, o, a = e[0];
            return t = (t = !(t = t || l).nodeType && t[0] || t).ownerDocument || t,
            !(1 === e.length && "string" == typeof a && a.length < 512 && t === l && "<" === a.charAt(0)) || ye.test(a) || !w.support.checkClone && je.test(a) || !w.support.html5Clone && _e.test(a) || (s = !0,
            o = (r = w.fragments[a]) !== n),
            r || (r = t.createDocumentFragment(),
            w.clean(e, t, r, i),
            s && (w.fragments[a] = o && r)),
            {
                fragment: r,
                cacheable: s
            }
        }
        ,
        w.fragments = {},
        w.each({
            appendTo: "append",
            prependTo: "prepend",
            insertBefore: "before",
            insertAfter: "after",
            replaceAll: "replaceWith"
        }, function(e, t) {
            w.fn[e] = function(i) {
                var r, s = 0, n = [], o = w(i), a = o.length, l = 1 === this.length && this[0].parentNode;
                if ((null == l || l && 11 === l.nodeType && 1 === l.childNodes.length) && 1 === a)
                    return o[t](this[0]),
                    this;
                for (; s < a; s++)
                    r = (s > 0 ? this.clone(!0) : this).get(),
                    w(o[s])[t](r),
                    n = n.concat(r);
                return this.pushStack(n, e, o.selector)
            }
        }),
        w.extend({
            clone: function(e, t, i) {
                var r, s, n, o;
                if (w.support.html5Clone || w.isXMLDoc(e) || !_e.test("<" + e.nodeName + ">") ? o = e.cloneNode(!0) : (ke.innerHTML = e.outerHTML,
                ke.removeChild(o = ke.firstChild)),
                !(w.support.noCloneEvent && w.support.noCloneChecked || 1 !== e.nodeType && 11 !== e.nodeType || w.isXMLDoc(e)))
                    for (Be(e, o),
                    r = Me(e),
                    s = Me(o),
                    n = 0; r[n]; ++n)
                        s[n] && Be(r[n], s[n]);
                if (t && (Pe(e, o),
                i))
                    for (r = Me(e),
                    s = Me(o),
                    n = 0; r[n]; ++n)
                        Pe(r[n], s[n]);
                return r = s = null,
                o
            },
            clean: function(e, t, i, r) {
                var s, n, o, a, d, h, c, u, p, f, m, g = t === l && Ie, v = [];
                for (t && void 0 !== t.createDocumentFragment || (t = l),
                s = 0; null != (o = e[s]); s++)
                    if ("number" == typeof o && (o += ""),
                    o) {
                        if ("string" == typeof o)
                            if (xe.test(o)) {
                                for (g = g || he(t),
                                c = t.createElement("div"),
                                g.appendChild(c),
                                o = o.replace(ge, "<$1></$2>"),
                                a = (ve.exec(o) || ["", ""])[1].toLowerCase(),
                                h = (d = Te[a] || Te._default)[0],
                                c.innerHTML = d[1] + o + d[2]; h--; )
                                    c = c.lastChild;
                                if (!w.support.tbody)
                                    for (u = we.test(o),
                                    n = (p = "table" !== a || u ? "<table>" !== d[1] || u ? [] : c.childNodes : c.firstChild && c.firstChild.childNodes).length - 1; n >= 0; --n)
                                        w.nodeName(p[n], "tbody") && !p[n].childNodes.length && p[n].parentNode.removeChild(p[n]);
                                !w.support.leadingWhitespace && me.test(o) && c.insertBefore(t.createTextNode(me.exec(o)[0]), c.firstChild),
                                o = c.childNodes,
                                c.parentNode.removeChild(c)
                            } else
                                o = t.createTextNode(o);
                        o.nodeType ? v.push(o) : w.merge(v, o)
                    }
                if (c && (o = c = g = null),
                !w.support.appendChecked)
                    for (s = 0; null != (o = v[s]); s++)
                        w.nodeName(o, "input") ? He(o) : void 0 !== o.getElementsByTagName && w.grep(o.getElementsByTagName("input"), He);
                if (i)
                    for (f = function(e) {
                        if (!e.type || Se.test(e.type))
                            return r ? r.push(e.parentNode ? e.parentNode.removeChild(e) : e) : i.appendChild(e)
                    }
                    ,
                    s = 0; null != (o = v[s]); s++)
                        w.nodeName(o, "script") && f(o) || (i.appendChild(o),
                        void 0 !== o.getElementsByTagName && (m = w.grep(w.merge([], o.getElementsByTagName("script")), f),
                        v.splice.apply(v, [s + 1, 0].concat(m)),
                        s += m.length));
                return v
            },
            cleanData: function(e, t) {
                for (var i, r, s, n, o = 0, a = w.expando, l = w.cache, d = w.support.deleteExpando, h = w.event.special; null != (s = e[o]); o++)
                    if ((t || w.acceptData(s)) && (i = (r = s[a]) && l[r])) {
                        if (i.events)
                            for (n in i.events)
                                h[n] ? w.event.remove(s, n) : w.removeEvent(s, n, i.handle);
                        l[r] && (delete l[r],
                        d ? delete s[a] : s.removeAttribute ? s.removeAttribute(a) : s[a] = null,
                        w.deletedIds.push(r))
                    }
            }
        }),
        w.uaMatch = function(e) {
            e = e.toLowerCase();
            var t = /(chrome)[ \/]([\w.]+)/.exec(e) || /(webkit)[ \/]([\w.]+)/.exec(e) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e) || /(msie) ([\w.]+)/.exec(e) || e.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e) || [];
            return {
                browser: t[1] || "",
                version: t[2] || "0"
            }
        }
        ,
        ue = {},
        (ce = w.uaMatch(d.userAgent)).browser && (ue[ce.browser] = !0,
        ue.version = ce.version),
        ue.chrome ? ue.webkit = !0 : ue.webkit && (ue.safari = !0),
        w.browser = ue,
        w.sub = function() {
            function e(t, i) {
                return new e.fn.init(t,i)
            }
            w.extend(!0, e, this),
            e.superclass = this,
            e.fn = e.prototype = this(),
            e.fn.constructor = e,
            e.sub = this.sub,
            e.fn.init = function(i, r) {
                return r && r instanceof w && !(r instanceof e) && (r = e(r)),
                w.fn.init.call(this, i, r, t)
            }
            ,
            e.fn.init.prototype = e.fn;
            var t = e(l);
            return e
        }
        ;
        var Oe, ze, Ae, Le = /alpha\([^)]*\)/i, Ee = /opacity=([^)]*)/, Ne = /^(top|right|bottom|left)$/, Fe = /^(none|table(?!-c[ea]).+)/, Ve = /^margin/, Re = new RegExp("^(" + x + ")(.*)$","i"), We = new RegExp("^(" + x + ")(?!px)[a-z%]+$","i"), Ge = new RegExp("^([-+])=(" + x + ")","i"), Xe = {
            BODY: "block"
        }, Je = {
            position: "absolute",
            visibility: "hidden",
            display: "block"
        }, Qe = {
            letterSpacing: 0,
            fontWeight: 400
        }, Ue = ["Top", "Right", "Bottom", "Left"], $e = ["Webkit", "O", "Moz", "ms"], Ye = w.fn.toggle;
        function Ke(e, t) {
            if (t in e)
                return t;
            for (var i = t.charAt(0).toUpperCase() + t.slice(1), r = t, s = $e.length; s--; )
                if ((t = $e[s] + i)in e)
                    return t;
            return r
        }
        function Ze(e, t) {
            return e = t || e,
            "none" === w.css(e, "display") || !w.contains(e.ownerDocument, e)
        }
        function et(e, t) {
            for (var i, r, s = [], n = 0, o = e.length; n < o; n++)
                (i = e[n]).style && (s[n] = w._data(i, "olddisplay"),
                t ? (s[n] || "none" !== i.style.display || (i.style.display = ""),
                "" === i.style.display && Ze(i) && (s[n] = w._data(i, "olddisplay", st(i.nodeName)))) : (r = Oe(i, "display"),
                s[n] || "none" === r || w._data(i, "olddisplay", r)));
            for (n = 0; n < o; n++)
                (i = e[n]).style && (t && "none" !== i.style.display && "" !== i.style.display || (i.style.display = t ? s[n] || "" : "none"));
            return e
        }
        function tt(e, t, i) {
            var r = Re.exec(t);
            return r ? Math.max(0, r[1] - (i || 0)) + (r[2] || "px") : t
        }
        function it(e, t, i, r) {
            for (var s = i === (r ? "border" : "content") ? 4 : "width" === t ? 1 : 0, n = 0; s < 4; s += 2)
                "margin" === i && (n += w.css(e, i + Ue[s], !0)),
                r ? ("content" === i && (n -= parseFloat(Oe(e, "padding" + Ue[s])) || 0),
                "margin" !== i && (n -= parseFloat(Oe(e, "border" + Ue[s] + "Width")) || 0)) : (n += parseFloat(Oe(e, "padding" + Ue[s])) || 0,
                "padding" !== i && (n += parseFloat(Oe(e, "border" + Ue[s] + "Width")) || 0));
            return n
        }
        function rt(e, t, i) {
            var r = "width" === t ? e.offsetWidth : e.offsetHeight
              , s = !0
              , n = w.support.boxSizing && "border-box" === w.css(e, "boxSizing");
            if (r <= 0 || null == r) {
                if (((r = Oe(e, t)) < 0 || null == r) && (r = e.style[t]),
                We.test(r))
                    return r;
                s = n && (w.support.boxSizingReliable || r === e.style[t]),
                r = parseFloat(r) || 0
            }
            return r + it(e, t, i || (n ? "border" : "content"), s) + "px"
        }
        function st(e) {
            if (Xe[e])
                return Xe[e];
            var t = w("<" + e + ">").appendTo(l.body)
              , i = t.css("display");
            return t.remove(),
            "none" !== i && "" !== i || (ze = l.body.appendChild(ze || w.extend(l.createElement("iframe"), {
                frameBorder: 0,
                width: 0,
                height: 0
            })),
            Ae && ze.createElement || ((Ae = (ze.contentWindow || ze.contentDocument).document).write("<!doctype html><html><body>"),
            Ae.close()),
            t = Ae.body.appendChild(Ae.createElement(e)),
            i = Oe(t, "display"),
            l.body.removeChild(ze)),
            Xe[e] = i,
            i
        }
        w.fn.extend({
            css: function(e, t) {
                return w.access(this, function(e, t, i) {
                    return i !== n ? w.style(e, t, i) : w.css(e, t)
                }, e, t, arguments.length > 1)
            },
            show: function() {
                return et(this, !0)
            },
            hide: function() {
                return et(this)
            },
            toggle: function(e, t) {
                var i = "boolean" == typeof e;
                return w.isFunction(e) && w.isFunction(t) ? Ye.apply(this, arguments) : this.each(function() {
                    (i ? e : Ze(this)) ? w(this).show() : w(this).hide()
                })
            }
        }),
        w.extend({
            cssHooks: {
                opacity: {
                    get: function(e, t) {
                        if (t) {
                            var i = Oe(e, "opacity");
                            return "" === i ? "1" : i
                        }
                    }
                }
            },
            cssNumber: {
                fillOpacity: !0,
                fontWeight: !0,
                lineHeight: !0,
                opacity: !0,
                orphans: !0,
                widows: !0,
                zIndex: !0,
                zoom: !0
            },
            cssProps: {
                float: w.support.cssFloat ? "cssFloat" : "styleFloat"
            },
            style: function(e, t, i, r) {
                if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) {
                    var s, o, a, l = w.camelCase(t), d = e.style;
                    if (t = w.cssProps[l] || (w.cssProps[l] = Ke(d, l)),
                    a = w.cssHooks[t] || w.cssHooks[l],
                    i === n)
                        return a && "get"in a && (s = a.get(e, !1, r)) !== n ? s : d[t];
                    if (!("string" === (o = typeof i) && (s = Ge.exec(i)) && (i = (s[1] + 1) * s[2] + parseFloat(w.css(e, t)),
                    o = "number"),
                    null == i || "number" === o && isNaN(i) || ("number" !== o || w.cssNumber[l] || (i += "px"),
                    a && "set"in a && (i = a.set(e, i, r)) === n)))
                        try {
                            d[t] = i
                        } catch (e) {}
                }
            },
            css: function(e, t, i, r) {
                var s, o, a, l = w.camelCase(t);
                return t = w.cssProps[l] || (w.cssProps[l] = Ke(e.style, l)),
                (a = w.cssHooks[t] || w.cssHooks[l]) && "get"in a && (s = a.get(e, !0, r)),
                s === n && (s = Oe(e, t)),
                "normal" === s && t in Qe && (s = Qe[t]),
                i || r !== n ? (o = parseFloat(s),
                i || w.isNumeric(o) ? o || 0 : s) : s
            },
            swap: function(e, t, i) {
                var r, s, n = {};
                for (s in t)
                    n[s] = e.style[s],
                    e.style[s] = t[s];
                for (s in r = i.call(e),
                t)
                    e.style[s] = n[s];
                return r
            }
        }),
        i.getComputedStyle ? Oe = function(e, t) {
            var r, s, n, o, a = i.getComputedStyle(e, null), l = e.style;
            return a && ("" !== (r = a.getPropertyValue(t) || a[t]) || w.contains(e.ownerDocument, e) || (r = w.style(e, t)),
            We.test(r) && Ve.test(t) && (s = l.width,
            n = l.minWidth,
            o = l.maxWidth,
            l.minWidth = l.maxWidth = l.width = r,
            r = a.width,
            l.width = s,
            l.minWidth = n,
            l.maxWidth = o)),
            r
        }
        : l.documentElement.currentStyle && (Oe = function(e, t) {
            var i, r, s = e.currentStyle && e.currentStyle[t], n = e.style;
            return null == s && n && n[t] && (s = n[t]),
            We.test(s) && !Ne.test(t) && (i = n.left,
            (r = e.runtimeStyle && e.runtimeStyle.left) && (e.runtimeStyle.left = e.currentStyle.left),
            n.left = "fontSize" === t ? "1em" : s,
            s = n.pixelLeft + "px",
            n.left = i,
            r && (e.runtimeStyle.left = r)),
            "" === s ? "auto" : s
        }
        ),
        w.each(["height", "width"], function(e, t) {
            w.cssHooks[t] = {
                get: function(e, i, r) {
                    if (i)
                        return 0 === e.offsetWidth && Fe.test(Oe(e, "display")) ? w.swap(e, Je, function() {
                            return rt(e, t, r)
                        }) : rt(e, t, r)
                },
                set: function(e, i, r) {
                    return tt(0, i, r ? it(e, t, r, w.support.boxSizing && "border-box" === w.css(e, "boxSizing")) : 0)
                }
            }
        }),
        w.support.opacity || (w.cssHooks.opacity = {
            get: function(e, t) {
                return Ee.test((t && e.currentStyle ? e.currentStyle.filter : e.style.filter) || "") ? .01 * parseFloat(RegExp.$1) + "" : t ? "1" : ""
            },
            set: function(e, t) {
                var i = e.style
                  , r = e.currentStyle
                  , s = w.isNumeric(t) ? "alpha(opacity=" + 100 * t + ")" : ""
                  , n = r && r.filter || i.filter || "";
                i.zoom = 1,
                t >= 1 && "" === w.trim(n.replace(Le, "")) && i.removeAttribute && (i.removeAttribute("filter"),
                r && !r.filter) || (i.filter = Le.test(n) ? n.replace(Le, s) : n + " " + s)
            }
        }),
        w(function() {
            w.support.reliableMarginRight || (w.cssHooks.marginRight = {
                get: function(e, t) {
                    return w.swap(e, {
                        display: "inline-block"
                    }, function() {
                        if (t)
                            return Oe(e, "marginRight")
                    })
                }
            }),
            !w.support.pixelPosition && w.fn.position && w.each(["top", "left"], function(e, t) {
                w.cssHooks[t] = {
                    get: function(e, i) {
                        if (i) {
                            var r = Oe(e, t);
                            return We.test(r) ? w(e).position()[t] + "px" : r
                        }
                    }
                }
            })
        }),
        w.expr && w.expr.filters && (w.expr.filters.hidden = function(e) {
            return 0 === e.offsetWidth && 0 === e.offsetHeight || !w.support.reliableHiddenOffsets && "none" === (e.style && e.style.display || Oe(e, "display"))
        }
        ,
        w.expr.filters.visible = function(e) {
            return !w.expr.filters.hidden(e)
        }
        ),
        w.each({
            margin: "",
            padding: "",
            border: "Width"
        }, function(e, t) {
            w.cssHooks[e + t] = {
                expand: function(i) {
                    var r, s = "string" == typeof i ? i.split(" ") : [i], n = {};
                    for (r = 0; r < 4; r++)
                        n[e + Ue[r] + t] = s[r] || s[r - 2] || s[0];
                    return n
                }
            },
            Ve.test(e) || (w.cssHooks[e + t].set = tt)
        });
        var nt = /%20/g
          , ot = /\[\]$/
          , at = /\r?\n/g
          , lt = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i
          , dt = /^(?:select|textarea)/i;
        function ht(e, t, i, r) {
            var s;
            if (w.isArray(t))
                w.each(t, function(t, s) {
                    i || ot.test(e) ? r(e, s) : ht(e + "[" + ("object" == typeof s ? t : "") + "]", s, i, r)
                });
            else if (i || "object" !== w.type(t))
                r(e, t);
            else
                for (s in t)
                    ht(e + "[" + s + "]", t[s], i, r)
        }
        w.fn.extend({
            serialize: function() {
                return w.param(this.serializeArray())
            },
            serializeArray: function() {
                return this.map(function() {
                    return this.elements ? w.makeArray(this.elements) : this
                }).filter(function() {
                    return this.name && !this.disabled && (this.checked || dt.test(this.nodeName) || lt.test(this.type))
                }).map(function(e, t) {
                    var i = w(this).val();
                    return null == i ? null : w.isArray(i) ? w.map(i, function(e, i) {
                        return {
                            name: t.name,
                            value: e.replace(at, "\r\n")
                        }
                    }) : {
                        name: t.name,
                        value: i.replace(at, "\r\n")
                    }
                }).get()
            }
        }),
        w.param = function(e, t) {
            var i, r = [], s = function(e, t) {
                t = w.isFunction(t) ? t() : null == t ? "" : t,
                r[r.length] = encodeURIComponent(e) + "=" + encodeURIComponent(t)
            };
            if (t === n && (t = w.ajaxSettings && w.ajaxSettings.traditional),
            w.isArray(e) || e.jqx && !w.isPlainObject(e))
                w.each(e, function() {
                    s(this.name, this.value)
                });
            else
                for (i in e)
                    ht(i, e[i], t, s);
            return r.join("&").replace(nt, "+")
        }
        ,
        w.support.ajax && w.ajaxTransport(function(e) {
            var t;
            if (!e.crossDomain || w.support.cors)
                return {
                    send: function(r, s) {
                        var o, a, l = e.xhr();
                        if (e.username ? l.open(e.type, e.url, e.async, e.username, e.password) : l.open(e.type, e.url, e.async),
                        e.xhrFields)
                            for (a in e.xhrFields)
                                l[a] = e.xhrFields[a];
                        e.mimeType && l.overrideMimeType && l.overrideMimeType(e.mimeType),
                        e.crossDomain || r["X-Requested-With"] || (r["X-Requested-With"] = "XMLHttpRequest");
                        try {
                            for (a in r)
                                l.setRequestHeader(a, r[a])
                        } catch (e) {}
                        l.send(e.hasContent && e.data || null),
                        t = function(i, r) {
                            var a, d, h, c, u;
                            try {
                                if (t && (r || 4 === l.readyState))
                                    if (t = n,
                                    o && (l.onreadystatechange = w.noop,
                                    xhrOnUnloadAbort && delete xhrCallbacks[o]),
                                    r)
                                        4 !== l.readyState && l.abort();
                                    else {
                                        a = l.status,
                                        h = l.getAllResponseHeaders(),
                                        c = {},
                                        (u = l.responseXML) && u.documentElement && (c.xml = u);
                                        try {
                                            c.text = l.responseText
                                        } catch (e) {}
                                        try {
                                            d = l.statusText
                                        } catch (e) {
                                            d = ""
                                        }
                                        a || !e.isLocal || e.crossDomain ? 1223 === a && (a = 204) : a = c.text ? 200 : 404
                                    }
                            } catch (e) {
                                r || s(-1, e)
                            }
                            c && s(a, d, c, h)
                        }
                        ,
                        e.async ? 4 === l.readyState ? setTimeout(t, 0) : (o = ++xhrId,
                        xhrOnUnloadAbort && (xhrCallbacks || (xhrCallbacks = {},
                        w(i).unload(xhrOnUnloadAbort)),
                        xhrCallbacks[o] = t),
                        l.onreadystatechange = t) : t()
                    },
                    abort: function() {
                        t && t(0, 1)
                    }
                }
        });
        var ct, ut, pt = /^(?:toggle|show|hide)$/, ft = new RegExp("^(?:([-+])=|)(" + x + ")([a-z%]*)$","i"), mt = /queueHooks$/, gt = [function(e, t, i) {
            var r, s, n, o, a, l, d, h, c, u = this, p = e.style, f = {}, m = [], g = e.nodeType && Ze(e);
            i.queue || (null == (h = w._queueHooks(e, "fx")).unqueued && (h.unqueued = 0,
            c = h.empty.fire,
            h.empty.fire = function() {
                h.unqueued || c()
            }
            ),
            h.unqueued++,
            u.always(function() {
                u.always(function() {
                    h.unqueued--,
                    w.queue(e, "fx").length || h.empty.fire()
                })
            }));
            1 === e.nodeType && ("height"in t || "width"in t) && (i.overflow = [p.overflow, p.overflowX, p.overflowY],
            "inline" === w.css(e, "display") && "none" === w.css(e, "float") && (w.support.inlineBlockNeedsLayout && "inline" !== st(e.nodeName) ? p.zoom = 1 : p.display = "inline-block"));
            i.overflow && (p.overflow = "hidden",
            w.support.shrinkWrapBlocks || u.done(function() {
                p.overflow = i.overflow[0],
                p.overflowX = i.overflow[1],
                p.overflowY = i.overflow[2]
            }));
            for (r in t)
                if (n = t[r],
                pt.exec(n)) {
                    if (delete t[r],
                    l = l || "toggle" === n,
                    n === (g ? "hide" : "show"))
                        continue;
                    m.push(r)
                }
            if (o = m.length) {
                "hidden"in (a = w._data(e, "fxshow") || w._data(e, "fxshow", {})) && (g = a.hidden),
                l && (a.hidden = !g),
                g ? w(e).show() : u.done(function() {
                    w(e).hide()
                }),
                u.done(function() {
                    var t;
                    for (t in w.removeData(e, "fxshow", !0),
                    f)
                        w.style(e, t, f[t])
                });
                for (r = 0; r < o; r++)
                    s = m[r],
                    d = u.createTween(s, g ? a[s] : 0),
                    f[s] = a[s] || w.style(e, s),
                    s in a || (a[s] = d.start,
                    g && (d.end = d.start,
                    d.start = "width" === s || "height" === s ? 1 : 0))
            }
        }
        ], vt = {
            "*": [function(e, t) {
                var i, r, s = this.createTween(e, t), n = ft.exec(t), o = s.cur(), a = +o || 0, l = 1, d = 20;
                if (n) {
                    if (i = +n[2],
                    "px" !== (r = n[3] || (w.cssNumber[e] ? "" : "px")) && a) {
                        a = w.css(s.elem, e, !0) || i || 1;
                        do {
                            a /= l = l || ".5",
                            w.style(s.elem, e, a + r)
                        } while (l !== (l = s.cur() / o) && 1 !== l && --d)
                    }
                    s.unit = r,
                    s.start = a,
                    s.end = n[1] ? a + (n[1] + 1) * i : i
                }
                return s
            }
            ]
        };
        function wt() {
            return setTimeout(function() {
                ct = n
            }, 0),
            ct = w.now()
        }
        function xt(e, t, i) {
            var r, s = 0, n = gt.length, o = w.Deferred().always(function() {
                delete a.elem
            }), a = function() {
                for (var t = ct || wt(), i = Math.max(0, l.startTime + l.duration - t), r = 1 - (i / l.duration || 0), s = 0, n = l.tweens.length; s < n; s++)
                    l.tweens[s].run(r);
                return o.notifyWith(e, [l, r, i]),
                r < 1 && n ? i : (o.resolveWith(e, [l]),
                !1)
            }, l = o.promise({
                elem: e,
                props: w.extend({}, t),
                opts: w.extend(!0, {
                    specialEasing: {}
                }, i),
                originalProperties: t,
                originalOptions: i,
                startTime: ct || wt(),
                duration: i.duration,
                tweens: [],
                createTween: function(t, i, r) {
                    var s = w.Tween(e, l.opts, t, i, l.opts.specialEasing[t] || l.opts.easing);
                    return l.tweens.push(s),
                    s
                },
                stop: function(t) {
                    for (var i = 0, r = t ? l.tweens.length : 0; i < r; i++)
                        l.tweens[i].run(1);
                    return t ? o.resolveWith(e, [l, t]) : o.rejectWith(e, [l, t]),
                    this
                }
            }), d = l.props;
            for (!function(e, t) {
                var i, r, s, n, o;
                for (i in e)
                    if (r = w.camelCase(i),
                    s = t[r],
                    n = e[i],
                    w.isArray(n) && (s = n[1],
                    n = e[i] = n[0]),
                    i !== r && (e[r] = n,
                    delete e[i]),
                    (o = w.cssHooks[r]) && "expand"in o)
                        for (i in n = o.expand(n),
                        delete e[r],
                        n)
                            i in e || (e[i] = n[i],
                            t[i] = s);
                    else
                        t[r] = s
            }(d, l.opts.specialEasing); s < n; s++)
                if (r = gt[s].call(l, e, d, l.opts))
                    return r;
            return function(e, t) {
                w.each(t, function(t, i) {
                    for (var r = (vt[t] || []).concat(vt["*"]), s = 0, n = r.length; s < n; s++)
                        if (r[s].call(e, t, i))
                            return
                })
            }(l, d),
            w.isFunction(l.opts.start) && l.opts.start.call(e, l),
            w.fx.timer(w.extend(a, {
                anim: l,
                queue: l.opts.queue,
                elem: e
            })),
            l.progress(l.opts.progress).done(l.opts.done, l.opts.complete).fail(l.opts.fail).always(l.opts.always)
        }
        function bt(e, t, i, r, s) {
            return new bt.prototype.init(e,t,i,r,s)
        }
        function yt(e, t) {
            var i, r = {
                height: e
            }, s = 0;
            for (t = t ? 1 : 0; s < 4; s += 2 - t)
                r["margin" + (i = Ue[s])] = r["padding" + i] = e;
            return t && (r.opacity = r.width = e),
            r
        }
        w.Animation = w.extend(xt, {
            tweener: function(e, t) {
                w.isFunction(e) ? (t = e,
                e = ["*"]) : e = e.split(" ");
                for (var i, r = 0, s = e.length; r < s; r++)
                    i = e[r],
                    vt[i] = vt[i] || [],
                    vt[i].unshift(t)
            },
            prefilter: function(e, t) {
                t ? gt.unshift(e) : gt.push(e)
            }
        }),
        w.Tween = bt,
        bt.prototype = {
            constructor: bt,
            init: function(e, t, i, r, s, n) {
                this.elem = e,
                this.prop = i,
                this.easing = s || "swing",
                this.options = t,
                this.start = this.now = this.cur(),
                this.end = r,
                this.unit = n || (w.cssNumber[i] ? "" : "px")
            },
            cur: function() {
                var e = bt.propHooks[this.prop];
                return e && e.get ? e.get(this) : bt.propHooks._default.get(this)
            },
            run: function(e) {
                var t, i = bt.propHooks[this.prop];
                return this.options.duration ? this.pos = t = w.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration) : this.pos = t = e,
                this.now = (this.end - this.start) * t + this.start,
                this.options.step && this.options.step.call(this.elem, this.now, this),
                i && i.set ? i.set(this) : bt.propHooks._default.set(this),
                this
            }
        },
        bt.prototype.init.prototype = bt.prototype,
        bt.propHooks = {
            _default: {
                get: function(e) {
                    var t;
                    return null == e.elem[e.prop] || e.elem.style && null != e.elem.style[e.prop] ? (t = w.css(e.elem, e.prop, !1, "")) && "auto" !== t ? t : 0 : e.elem[e.prop]
                },
                set: function(e) {
                    w.fx.step[e.prop] ? w.fx.step[e.prop](e) : e.elem.style && (null != e.elem.style[w.cssProps[e.prop]] || w.cssHooks[e.prop]) ? w.style(e.elem, e.prop, e.now + e.unit) : e.elem[e.prop] = e.now
                }
            }
        },
        bt.propHooks.scrollTop = bt.propHooks.scrollLeft = {
            set: function(e) {
                e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now)
            }
        },
        w.each(["toggle", "show", "hide"], function(e, t) {
            var i = w.fn[t];
            w.fn[t] = function(r, s, n) {
                return null == r || "boolean" == typeof r || !e && w.isFunction(r) && w.isFunction(s) ? i.apply(this, arguments) : this.animate(yt(t, !0), r, s, n)
            }
        }),
        w.fn.extend({
            fadeTo: function(e, t, i, r) {
                return this.filter(Ze).css("opacity", 0).show().end().animate({
                    opacity: t
                }, e, i, r)
            },
            animate: function(e, t, i, r) {
                var s = w.isEmptyObject(e)
                  , n = w.speed(t, i, r)
                  , o = function() {
                    var t = xt(this, w.extend({}, e), n);
                    s && t.stop(!0)
                };
                return s || !1 === n.queue ? this.each(o) : this.queue(n.queue, o)
            },
            stop: function(e, t, i) {
                var r = function(e) {
                    var t = e.stop;
                    delete e.stop,
                    t(i)
                };
                return "string" != typeof e && (i = t,
                t = e,
                e = n),
                t && !1 !== e && this.queue(e || "fx", []),
                this.each(function() {
                    var t = !0
                      , s = null != e && e + "queueHooks"
                      , n = w.timers
                      , o = w._data(this);
                    if (s)
                        o[s] && o[s].stop && r(o[s]);
                    else
                        for (s in o)
                            o[s] && o[s].stop && mt.test(s) && r(o[s]);
                    for (s = n.length; s--; )
                        n[s].elem !== this || null != e && n[s].queue !== e || (n[s].anim.stop(i),
                        t = !1,
                        n.splice(s, 1));
                    !t && i || w.dequeue(this, e)
                })
            }
        }),
        w.each({
            slideDown: yt("show"),
            slideUp: yt("hide"),
            slideToggle: yt("toggle"),
            fadeIn: {
                opacity: "show"
            },
            fadeOut: {
                opacity: "hide"
            },
            fadeToggle: {
                opacity: "toggle"
            }
        }, function(e, t) {
            w.fn[e] = function(e, i, r) {
                return this.animate(t, e, i, r)
            }
        }),
        w.speed = function(e, t, i) {
            var r = e && "object" == typeof e ? w.extend({}, e) : {
                complete: i || !i && t || w.isFunction(e) && e,
                duration: e,
                easing: i && t || t && !w.isFunction(t) && t
            };
            return r.duration = w.fx.off ? 0 : "number" == typeof r.duration ? r.duration : r.duration in w.fx.speeds ? w.fx.speeds[r.duration] : w.fx.speeds._default,
            null != r.queue && !0 !== r.queue || (r.queue = "fx"),
            r.old = r.complete,
            r.complete = function() {
                w.isFunction(r.old) && r.old.call(this),
                r.queue && w.dequeue(this, r.queue)
            }
            ,
            r
        }
        ,
        w.easing = {
            linear: function(e) {
                return e
            },
            swing: function(e) {
                return .5 - Math.cos(e * Math.PI) / 2
            }
        },
        w.timers = [],
        w.fx = bt.prototype.init,
        w.fx.tick = function() {
            var e, t = w.timers, i = 0;
            for (ct = w.now(); i < t.length; i++)
                (e = t[i])() || t[i] !== e || t.splice(i--, 1);
            t.length || w.fx.stop(),
            ct = n
        }
        ,
        w.fx.timer = function(e) {
            e() && w.timers.push(e) && !ut && (ut = setInterval(w.fx.tick, w.fx.interval))
        }
        ,
        w.fx.interval = 13,
        w.fx.stop = function() {
            clearInterval(ut),
            ut = null
        }
        ,
        w.fx.speeds = {
            slow: 600,
            fast: 200,
            _default: 400
        },
        w.fx.step = {},
        w.expr && w.expr.filters && (w.expr.filters.animated = function(e) {
            return w.grep(w.timers, function(t) {
                return e === t.elem
            }).length
        }
        );
        var _t = /^(?:body|html)$/i;
        function qt(e) {
            return w.isWindow(e) ? e : 9 === e.nodeType && (e.defaultView || e.parentWindow)
        }
        w.fn.offset = function(e) {
            if (arguments.length)
                return e === n ? this : this.each(function(t) {
                    w.offset.setOffset(this, e, t)
                });
            var t, i, r, s, o, a, l, d = {
                top: 0,
                left: 0
            }, h = this[0], c = h && h.ownerDocument;
            return c ? (i = c.body) === h ? w.offset.bodyOffset(h) : (t = c.documentElement,
            w.contains(t, h) ? (void 0 !== h.getBoundingClientRect && (d = h.getBoundingClientRect()),
            r = qt(c),
            s = t.clientTop || i.clientTop || 0,
            o = t.clientLeft || i.clientLeft || 0,
            a = r.pageYOffset || t.scrollTop,
            l = r.pageXOffset || t.scrollLeft,
            {
                top: d.top + a - s,
                left: d.left + l - o
            }) : d) : void 0
        }
        ,
        w.offset = {
            bodyOffset: function(e) {
                var t = e.offsetTop
                  , i = e.offsetLeft;
                return w.support.doesNotIncludeMarginInBodyOffset && (t += parseFloat(w.css(e, "marginTop")) || 0,
                i += parseFloat(w.css(e, "marginLeft")) || 0),
                {
                    top: t,
                    left: i
                }
            },
            setOffset: function(e, t, i) {
                var r = w.css(e, "position");
                "static" === r && (e.style.position = "relative");
                var s, n, o = w(e), a = o.offset(), l = w.css(e, "top"), d = w.css(e, "left"), h = {}, c = {};
                ("absolute" === r || "fixed" === r) && w.inArray("auto", [l, d]) > -1 ? (s = (c = o.position()).top,
                n = c.left) : (s = parseFloat(l) || 0,
                n = parseFloat(d) || 0),
                w.isFunction(t) && (t = t.call(e, i, a)),
                null != t.top && (h.top = t.top - a.top + s),
                null != t.left && (h.left = t.left - a.left + n),
                "using"in t ? t.using.call(e, h) : o.css(h)
            }
        },
        w.fn.extend({
            isRendered: function() {
                var e = this[0];
                return null != e.parentNode && 0 !== e.offsetWidth && 0 !== e.offsetHeight
            },
            getSizeFromStyle: function() {
                var e, t = null, r = null, s = this[0];
                return s.style.width && (t = s.style.width),
                s.style.height && (r = s.style.height),
                (e = i.getComputedStyle ? getComputedStyle(s, null) : s.currentStyle) && (e.width && (t = e.width),
                e.height && (r = e.height)),
                "0px" === t && (t = 0),
                "0px" === r && (r = 0),
                null === t && (t = 0),
                null === r && (r = 0),
                {
                    width: t,
                    height: r
                }
            },
            initAnimate: function() {},
            sizeStyleChanged: function(e) {
                var t, i = this;
                t = {
                    element: i[0],
                    offsetWidth: i[0].offsetWidth,
                    offsetHeight: i[0].offsetHeight,
                    callback: e
                };
                try {
                    i.elementStyleObserver || (i.elementStyleObserver = new MutationObserver(function(e) {
                        var r = t;
                        e && e[0] && "style" === e[0].attributeName && "attributes" === e[0].type && (r.element.offsetWidth === r.offsetWidth && r.element.offsetHeight === r.offsetHeight || (r.offsetWidth = r.element.offsetWidth,
                        r.offsetHeight = r.element.offsetHeight,
                        i.isRendered() && r.callback()))
                    }
                    ),
                    i.elementStyleObserver.observe(i[0], {
                        attributes: !0,
                        childList: !1,
                        characterData: !1
                    }))
                } catch (e) {}
            },
            position: function() {
                if (this[0]) {
                    var e = this[0]
                      , t = this.offsetParent()
                      , i = this.offset()
                      , r = _t.test(t[0].nodeName) ? {
                        top: 0,
                        left: 0
                    } : t.offset();
                    return i.top -= parseFloat(w.css(e, "marginTop")) || 0,
                    i.left -= parseFloat(w.css(e, "marginLeft")) || 0,
                    r.top += parseFloat(w.css(t[0], "borderTopWidth")) || 0,
                    r.left += parseFloat(w.css(t[0], "borderLeftWidth")) || 0,
                    {
                        top: i.top - r.top,
                        left: i.left - r.left
                    }
                }
            },
            offsetParent: function() {
                return this.map(function() {
                    for (var e = this.offsetParent || l.body; e && !_t.test(e.nodeName) && "static" === w.css(e, "position"); )
                        e = e.offsetParent;
                    return e || l.body
                })
            }
        }),
        w.each({
            scrollLeft: "pageXOffset",
            scrollTop: "pageYOffset"
        }, function(e, t) {
            var i = /Y/.test(t);
            w.fn[e] = function(r) {
                return w.access(this, function(e, r, s) {
                    var o = qt(e);
                    if (s === n)
                        return o ? t in o ? o[t] : o.document.documentElement[r] : e[r];
                    o ? o.scrollTo(i ? w(o).scrollLeft() : s, i ? s : w(o).scrollTop()) : e[r] = s
                }, e, r, arguments.length, null)
            }
        }),
        w.each({
            Height: "height",
            Width: "width"
        }, function(e, t) {
            w.each({
                padding: "inner" + e,
                content: t,
                "": "outer" + e
            }, function(i, r) {
                w.fn[r] = function(r, s) {
                    var o = arguments.length && (i || "boolean" != typeof r)
                      , a = i || (!0 === r || !0 === s ? "margin" : "border");
                    return w.access(this, function(t, i, r) {
                        var s;
                        return w.isWindow(t) ? t.document.documentElement["client" + e] : 9 === t.nodeType ? (s = t.documentElement,
                        Math.max(t.body["scroll" + e], s["scroll" + e], t.body["offset" + e], s["offset" + e], s["client" + e])) : r === n ? w.css(t, i, r, a) : w.style(t, i, r, a)
                    }, t, o ? r : n, o, null)
                }
            })
        }),
        i.JQXLite = i.jqxHelper = w,
        r(12).JQXLite && (void 0 === (s = function() {
            return w
        }
        .apply(t, [])) || (e.exports = s))
    }(window),
    (n = window).jQuery ? n.minQuery = n.JQXLite = n.jQuery : n.$ ? n.minQuery = n.JQXLite = n.$ : n.$ = n.minQuery = n.JQXLite,
    JQXLite.generateID = function() {
        var e = function() {
            return (65536 * (1 + Math.random()) | 0).toString(16).substring(1)
        }
          , t = "";
        do {
            t = "jqx" + e() + e() + e()
        } while ($("#" + t).length > 0);return t
    }
    ;
    var o = window.jqxBaseFramework = window.minQuery || window.jQuery;
    !function(e) {
        e.jqx = e.jqx || {},
        window.jqx = e.jqx;
        var t, r, s, n, o = {
            createInstance: function(t, i, r) {
                if ("jqxDataAdapter" == i) {
                    var s = r[0]
                      , n = r[1] || {};
                    return new e.jqx.dataAdapter(s,n)
                }
                return e(t)[i](r || {}),
                e(t)[i]("getInstance")
            }
        };
        window.jqwidgets = o,
        e.jqx.define = function(e, t, i) {
            e[t] = function() {
                this.baseType && (this.base = new e[this.baseType],
                this.base.defineInstance()),
                this.defineInstance(),
                this.metaInfo()
            }
            ,
            e[t].prototype.defineInstance = function() {}
            ,
            e[t].prototype.metaInfo = function() {}
            ,
            e[t].prototype.base = null,
            e[t].prototype.baseType = void 0,
            i && e[i] && (e[t].prototype.baseType = i)
        }
        ,
        e.jqx.invoke = function(t, i) {
            if (0 != i.length) {
                for (var r = typeof i == Array || i.length > 0 ? i[0] : i, s = typeof i == Array || i.length > 1 ? Array.prototype.slice.call(i, 1) : e({}).toArray(); null == t[r] && null != t.base; ) {
                    if (null != t[r] && e.isFunction(t[r]))
                        return t[r].apply(t, s);
                    var n;
                    if ("string" == typeof r)
                        if (null != t[n = r.toLowerCase()] && e.isFunction(t[n]))
                            return t[n].apply(t, s);
                    t = t.base
                }
                if (null != t[r] && e.isFunction(t[r]))
                    return t[r].apply(t, s);
                if ("string" == typeof r)
                    if (null != t[n = r.toLowerCase()] && e.isFunction(t[n]))
                        return t[n].apply(t, s)
            }
        }
        ,
        e.jqx.getByPriority = function(e) {
            for (var t = void 0, i = 0; i < e.length && null == t; i++)
                null == t && null != e[i] && (t = e[i]);
            return t
        }
        ,
        e.jqx.hasProperty = function(e, t) {
            if ("object" == typeof t)
                for (var i in t) {
                    for (var r = e; r; ) {
                        if (r.hasOwnProperty(i))
                            return !0;
                        if (r.hasOwnProperty(i.toLowerCase()))
                            return !0;
                        r = r.base
                    }
                    return !1
                }
            else
                for (; e; ) {
                    if (e.hasOwnProperty(t))
                        return !0;
                    if (e.hasOwnProperty(t.toLowerCase()))
                        return !0;
                    e = e.base
                }
            return !1
        }
        ,
        e.jqx.hasFunction = function(t, i) {
            if (0 == i.length)
                return !1;
            if (null == t)
                return !1;
            var r = typeof i == Array || i.length > 0 ? i[0] : i;
            for ((typeof i == Array || i.length > 1) && Array.prototype.slice.call(i, 1); null == t[r] && null != t.base; ) {
                if (t[r] && e.isFunction(t[r]))
                    return !0;
                var s;
                if ("string" == typeof r)
                    if (t[s = r.toLowerCase()] && e.isFunction(t[s]))
                        return !0;
                t = t.base
            }
            if (t[r] && e.isFunction(t[r]))
                return !0;
            if ("string" == typeof r && (t[s = r.toLowerCase()] && e.isFunction(t[s])))
                return !0;
            return !1
        }
        ,
        e.jqx.isPropertySetter = function(t, i) {
            return 1 == i.length && "object" == typeof i[0] || 2 == i.length && "string" == typeof i[0] && !e.jqx.hasFunction(t, i)
        }
        ,
        e.jqx.validatePropertySetter = function(t, i, r) {
            if (!e.jqx.propertySetterValidation)
                return !0;
            if (1 == i.length && "object" == typeof i[0]) {
                for (var s in i[0]) {
                    for (var n = t; !n.hasOwnProperty(s) && n.base; )
                        n = n.base;
                    if (!n || !n.hasOwnProperty(s)) {
                        if (!r) {
                            if (n.hasOwnProperty(s.toString().toLowerCase()))
                                return !0;
                            throw "Invalid property: " + s
                        }
                        return !1
                    }
                }
                return !0
            }
            if (2 != i.length) {
                if (!r)
                    throw "Invalid property: " + i.length >= 0 ? i[0] : "";
                return !1
            }
            for (; !t.hasOwnProperty(i[0]) && t.base; )
                t = t.base;
            if (!t || !t.hasOwnProperty(i[0])) {
                if (!r)
                    throw "Invalid property: " + i[0];
                return !1
            }
            return !0
        }
        ,
        Object.keys || (Object.keys = (t = Object.prototype.hasOwnProperty,
        r = !{
            toString: null
        }.propertyIsEnumerable("toString"),
        n = (s = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"]).length,
        function(e) {
            if ("object" != typeof e && ("function" != typeof e || null === e))
                throw new TypeError("Object.keys called on non-object");
            var i, o, a = [];
            for (i in e)
                t.call(e, i) && a.push(i);
            if (r)
                for (o = 0; o < n; o++)
                    t.call(e, s[o]) && a.push(s[o]);
            return a
        }
        )),
        e.jqx.set = function(t, i) {
            var r = 0;
            if (1 == i.length && "object" == typeof i[0]) {
                if (t.isInitialized && Object.keys && Object.keys(i[0]).length > 1) {
                    var s = t.base ? t.base.element : t.element
                      , n = e.data(s, t.widgetName).initArgs;
                    if (n && JSON && JSON.stringify && i[0] && n[0])
                        try {
                            if (JSON.stringify(i[0]) == JSON.stringify(n[0])) {
                                var o = !0;
                                if (e.each(i[0], function(e, i) {
                                    if (t[e] != i)
                                        return o = !1,
                                        !1
                                }),
                                o)
                                    return
                            }
                        } catch (e) {}
                    t.batchUpdate = i[0];
                    var a = {}
                      , l = {};
                    e.each(i[0], function(e, i) {
                        for (var s = t; !s.hasOwnProperty(e) && null != s.base; )
                            s = s.base;
                        s.hasOwnProperty(e) ? t[e] != i && (a[e] = t[e],
                        l[e] = i,
                        r++) : s.hasOwnProperty(e.toLowerCase()) && t[e.toLowerCase()] != i && (a[e.toLowerCase()] = t[e.toLowerCase()],
                        l[e.toLowerCase()] = i,
                        r++)
                    }),
                    r < 2 && (t.batchUpdate = null)
                }
                e.each(i[0], function(i, r) {
                    for (var s = t; !s.hasOwnProperty(i) && null != s.base; )
                        s = s.base;
                    if (s.hasOwnProperty(i))
                        e.jqx.setvalueraiseevent(s, i, r);
                    else if (s.hasOwnProperty(i.toLowerCase()))
                        e.jqx.setvalueraiseevent(s, i.toLowerCase(), r);
                    else if (e.jqx.propertySetterValidation)
                        throw "jqxCore: invalid property '" + i + "'"
                }),
                null != t.batchUpdate && (t.batchUpdate = null,
                t.propertiesChangedHandler && r > 1 && t.propertiesChangedHandler(t, a, l))
            } else if (2 == i.length) {
                for (; !t.hasOwnProperty(i[0]) && t.base; )
                    t = t.base;
                if (t.hasOwnProperty(i[0]))
                    e.jqx.setvalueraiseevent(t, i[0], i[1]);
                else if (t.hasOwnProperty(i[0].toLowerCase()))
                    e.jqx.setvalueraiseevent(t, i[0].toLowerCase(), i[1]);
                else if (e.jqx.propertySetterValidation)
                    throw "jqxCore: invalid property '" + i[0] + "'"
            }
        }
        ,
        e.jqx.setvalueraiseevent = function(e, t, i) {
            var r = e[t];
            e[t] = i,
            e.isInitialized && (null != e.propertyChangedHandler && e.propertyChangedHandler(e, t, r, i),
            null != e.propertyChangeMap && null != e.propertyChangeMap[t] && e.propertyChangeMap[t](e, t, r, i))
        }
        ,
        e.jqx.get = function(e, t) {
            if (null != t && null != t) {
                if (e.propertyMap) {
                    var i = e.propertyMap(t);
                    if (null != i)
                        return i
                }
                if (e.hasOwnProperty(t))
                    return e[t];
                if (e.hasOwnProperty(t.toLowerCase()))
                    return e[t.toLowerCase()];
                var r = void 0;
                if (typeof t == Array) {
                    if (1 != t.length)
                        return;
                    r = t[0]
                } else
                    "string" == typeof t && (r = t);
                for (; !e.hasOwnProperty(r) && e.base; )
                    e = e.base;
                return e ? e[r] : void 0
            }
        }
        ,
        e.jqx.serialize = function(t) {
            var i = "";
            if (e.isArray(t)) {
                i = "[";
                for (var r = 0; r < t.length; r++)
                    r > 0 && (i += ", "),
                    i += e.jqx.serialize(t[r]);
                i += "]"
            } else if ("object" == typeof t) {
                i = "{";
                var s = 0;
                for (var r in t)
                    s++ > 0 && (i += ", "),
                    i += r + ": " + e.jqx.serialize(t[r]);
                i += "}"
            } else
                i = t.toString();
            return i
        }
        ,
        e.jqx.propertySetterValidation = !0,
        e.jqx.jqxWidgetProxy = function(t, i, r) {
            e(i);
            var s = e.data(i, t);
            if (null != s) {
                var n = s.instance;
                if (e.jqx.hasFunction(n, r))
                    return e.jqx.invoke(n, r);
                if (e.jqx.isPropertySetter(n, r)) {
                    if (e.jqx.validatePropertySetter(n, r))
                        return void e.jqx.set(n, r)
                } else {
                    if ("object" == typeof r && 0 == r.length)
                        return;
                    if ("object" == typeof r && 1 == r.length && e.jqx.hasProperty(n, r[0]))
                        return e.jqx.get(n, r[0]);
                    if ("string" == typeof r && e.jqx.hasProperty(n, r[0]))
                        return e.jqx.get(n, r)
                }
                throw "jqxCore: Invalid parameter '" + e.jqx.serialize(r) + "' does not exist."
            }
        }
        ,
        e.jqx.applyWidget = function(t, i, r, s) {
            var n = !1;
            try {
                n = null != window.MSApp
            } catch (e) {}
            var o = e(t);
            s ? (s.host = o,
            s.element = t) : s = new e.jqx["_" + i],
            "" == t.id && (t.id = e.jqx.utilities.createId());
            var a = {
                host: o,
                element: t,
                instance: s,
                initArgs: r
            };
            s.widgetName = i,
            e.data(t, i, a),
            e.data(t, "jqxWidget", a.instance);
            var l = new Array;
            for (s = a.instance; s; )
                s.isInitialized = !1,
                l.push(s),
                s = s.base;
            for (var d in l.reverse(),
            l[0].theme = e.jqx.theme || "",
            e.jqx.jqxWidgetProxy(i, t, r),
            l)
                s = l[d],
                0 == d && (s.host = o,
                s.element = t,
                s.WinJS = n),
                null != s && (s.definedInstance && s.definedInstance(),
                null != s.createInstance && (n ? MSApp.execUnsafeLocalFunction(function() {
                    s.createInstance(r)
                }) : s.createInstance(r)));
            for (var d in l)
                null != l[d] && (l[d].isInitialized = !0);
            n ? MSApp.execUnsafeLocalFunction(function() {
                a.instance.refresh(!0)
            }) : a.instance.refresh(!0)
        }
        ,
        e.jqx.jqxWidget = function(t, i, r) {
            try {
                jqxArgs = Array.prototype.slice.call(r, 0)
            } catch (e) {
                jqxArgs = ""
            }
            try {
                null != window.MSApp
            } catch (e) {}
            var s = t
              , n = "";
            i && (n = "_" + i),
            e.jqx.define(e.jqx, "_" + s, n);
            var a = new Array;
            if (!window[s]) {
                var l = function(t) {
                    if (null == t)
                        return "";
                    switch (e.type(t)) {
                    case "string":
                    case "number":
                    case "date":
                    case "boolean":
                    case "bool":
                        return null === t ? "" : t.toString()
                    }
                    var i = "";
                    return e.each(t, function(t, r) {
                        var s = r;
                        t > 0 && (i += ", "),
                        i += "[";
                        var n = 0;
                        if ("object" == e.type(s))
                            for (var o in s)
                                n > 0 && (i += ", "),
                                i += "{" + o + ":" + s[o] + "}",
                                n++;
                        else
                            n > 0 && (i += ", "),
                            i += "{" + t + ":" + s + "}",
                            n++;
                        i += "]"
                    }),
                    i
                };
                o[s] = window[s] = function(t, i) {
                    var r = [];
                    i || (i = {}),
                    r.push(i);
                    var n = t;
                    if ("object" === e.type(n) && t[0] ? "" === (n = t[0].id) && (n = t[0].id = e.jqx.utilities.createId()) : "object" === e.type(t) && t && t.nodeName && "" === (n = t.id) && (n = t.id = e.jqx.utilities.createId()),
                    window.jqxWidgets && window.jqxWidgets[n]) {
                        var o;
                        if (i && e.each(window.jqxWidgets[n], function(t) {
                            var r = e(this.element).data();
                            r && r.jqxWidget && e(this.element)[s](i)
                        }),
                        1 == window.jqxWidgets[n].length)
                            if ((o = e(window.jqxWidgets[n][0].widgetInstance.element).data()) && o.jqxWidget)
                                return window.jqxWidgets[n][0];
                        if ((o = e(window.jqxWidgets[n][0].widgetInstance.element).data()) && o.jqxWidget)
                            return window.jqxWidgets[n]
                    }
                    var d = e(t);
                    0 === d.length && (d = e("<div></div>"),
                    "jqxInput" !== s && "jqxPasswordInput" !== s && "jqxMaskedInput" !== s || (d = e("<input/>")),
                    "jqxTextArea" === s && (d = e("<textarea></textarea>")),
                    "jqxButton" !== s && "jqxRepeatButton" !== s && "jqxToggleButton" !== s || (d = e("<button/>")),
                    "jqxSplitter" === s && (d = e("<div><div>Panel 1</div><div>Panel 2</div></div>")),
                    "jqxTabs" === s && (d = e("<div><ul><li>Tab 1</li><li>Tab 2</li></ul><div>Content 1</div><div>Content 2</div></div>")),
                    "jqxRibbon" === s && (d = e("<div><ul><li>Tab 1</li><li>Tab 2</li></ul><div><div>Content 1</div><div>Content 2</div></div></div>")),
                    "jqxDocking" === s && (d = e("<div><div><div><div>Title 1</div><div>Content 1</div></div></div></div>")),
                    "jqxWindow" === s && (d = e("<div><div>Title 1</div><div>Content 1</div></div>")));
                    var h = [];
                    return e.each(d, function(t) {
                        var i = d[t];
                        if (e.jqx.applyWidget(i, s, r, void 0),
                        !a[s]) {
                            var o = e.data(i, "jqxWidget")
                              , c = e.jqx["_" + s].prototype.defineInstance();
                            e.jqx["_" + s].prototype.metaInfo && e.jqx["_" + s].prototype.metaInfo(),
                            "jqxDockingLayout" == s && (c = e.extend(c, e.jqx._jqxLayout.prototype.defineInstance())),
                            "jqxToggleButton" != s && "jqxRepeatButton" != s || (c = e.extend(c, e.jqx._jqxButton.prototype.defineInstance())),
                            "jqxTreeGrid" == s && (c = e.extend(c, e.jqx._jqxDataTable.prototype.defineInstance()));
                            var u = function(t) {
                                var i = e.data(t, "jqxWidget");
                                this.widgetInstance = i;
                                var r = e.extend(this, i);
                                for (var s in r.on = r.addEventListener = function(e, t) {
                                    r.addHandler(r.base ? r.base.host : r.host, e, t)
                                }
                                ,
                                r.off = r.removeEventListener = function(e) {
                                    r.removeHandler(r.base ? r.base.host : r.host, e)
                                }
                                ,
                                i)
                                    "function" == e.type(i[s]) && (r[s] = e.proxy(i[s], i));
                                return r
                            };
                            a[s] = u,
                            e.each(c, function(t, i) {
                                Object.defineProperty(u.prototype, t, {
                                    get: function() {
                                        return this.widgetInstance ? this.widgetInstance[t] : i
                                    },
                                    set: function(i) {
                                        if (this.widgetInstance && (this.widgetInstance[t] != i || "width" === t || "height" === t)) {
                                            var r = this.widgetInstance[t]
                                              , n = i
                                              , o = !1;
                                            if (e.type(r) == e.type(n) && "source" !== t && "width" !== t && "height" !== t || (o = !0),
                                            o || l(r) != l(n)) {
                                                var a = {};
                                                a[t] = i,
                                                this.widgetInstance.host ? this.widgetInstance.host[s](a) : this.widgetInstance.base.host[s](a),
                                                this.widgetInstance[t] = i,
                                                this.widgetInstance.propertyUpdated && this.widgetInstance.propertyUpdated(t, r, i)
                                            }
                                        }
                                    }
                                })
                            })
                        }
                        o = new a[s](i);
                        h.push(o),
                        window.jqxWidgets || (window.jqxWidgets = new Array),
                        window.jqxWidgets[n] || (window.jqxWidgets[n] = new Array),
                        window.jqxWidgets[n].push(o)
                    }),
                    1 === h.length ? h[0] : h
                }
            }
            e.fn[s] = function() {
                var t = Array.prototype.slice.call(arguments, 0);
                if (0 == t.length || 1 == t.length && "object" == typeof t[0]) {
                    if (0 == this.length)
                        throw this.selector ? new Error("Invalid Selector - " + this.selector + "! Please, check whether the used ID or CSS Class name is correct.") : new Error("Invalid Selector! Please, check whether the used ID or CSS Class name is correct.");
                    return this.each(function() {
                        e(this);
                        null == e.data(this, s) ? e.jqx.applyWidget(this, s, t, void 0) : e.jqx.jqxWidgetProxy(s, this, t)
                    })
                }
                if (0 == this.length)
                    throw this.selector ? new Error("Invalid Selector - " + this.selector + "! Please, check whether the used ID or CSS Class name is correct.") : new Error("Invalid Selector! Please, check whether the used ID or CSS Class name is correct.");
                var i = null
                  , r = 0;
                return this.each(function() {
                    var n = e.jqx.jqxWidgetProxy(s, this, t);
                    if (0 == r)
                        i = n,
                        r++;
                    else {
                        if (1 == r) {
                            var o = [];
                            o.push(i),
                            i = o
                        }
                        i.push(n)
                    }
                }),
                i
            }
            ;
            try {
                e.extend(e.jqx["_" + s].prototype, Array.prototype.slice.call(r, 0)[0])
            } catch (e) {}
            e.extend(e.jqx["_" + s].prototype, {
                toThemeProperty: function(t, i) {
                    return e.jqx.toThemeProperty(this, t, i)
                },
                isMaterialized: function() {
                    return !!this.theme && (this.theme.indexOf("material") >= 0 || void 0)
                },
                isModern: function() {
                    return !!this.theme && (this.theme.indexOf("light") >= 0 || ("dark" === this.theme || void 0))
                },
                _addBarAndLabel: function(t) {
                    var i = this
                      , r = e("<label></label");
                    r[0].innerHTML = this.placeHolder,
                    r.addClass(i.toThemeProperty("jqx-input-label")),
                    t.after(r),
                    i.label = r;
                    var s = e("<span></span>");
                    t.after(s),
                    s.addClass(i.toThemeProperty("jqx-input-bar")),
                    i.bar = s,
                    i.bar.css("top", this.host.height())
                }
            }),
            e.jqx["_" + s].prototype.refresh = function() {
                this.base && this.base.refresh(!0)
            }
            ,
            e.jqx["_" + s].prototype.createInstance = function() {}
            ,
            e.jqx["_" + s].prototype.addEventHandler = function(e, t) {
                this.base ? this.base.host.on(e, t) : this.host.on(e, t)
            }
            ,
            e.jqx["_" + s].prototype.removeEventHandler = function(e, t) {
                this.base ? this.base.host.off(e) : this.host.off(e)
            }
            ,
            e.jqx["_" + s].prototype.applyTo = function(t, i) {
                if (!(i instanceof Array)) {
                    var r = [];
                    r.push(i),
                    i = r
                }
                e.jqx.applyWidget(t, s, i, this)
            }
            ,
            e.jqx["_" + s].prototype.getInstance = function() {
                return this
            }
            ,
            e.jqx["_" + s].prototype.propertyChangeMap = {},
            e.jqx["_" + s].prototype.addHandler = function(t, i, r, s) {
                e.jqx.addHandler(e(t), i, r, s)
            }
            ,
            e.jqx["_" + s].prototype.removeHandler = function(t, i, r) {
                e.jqx.removeHandler(e(t), i, r)
            }
            ,
            e.jqx["_" + s].prototype.setOptions = function() {
                if (this.host && this.host.length && 1 == this.host.length)
                    return e.jqx.jqxWidgetProxy(s, this.host[0], arguments)
            }
        }
        ,
        e.jqx.toThemeProperty = function(e, t, i) {
            if ("" == e.theme)
                return t;
            for (var r = t.split(" "), s = "", n = 0; n < r.length; n++) {
                n > 0 && (s += " ");
                var o = r[n];
                s += null != i && i ? o + "-" + e.theme : o + " " + o + "-" + e.theme
            }
            return s
        }
        ,
        e.jqx.addHandler = function(t, i, r, s) {
            for (var n = i.split(" "), o = 0; o < n.length; o++) {
                var a = n[o];
                if (window.addEventListener)
                    switch (a) {
                    case "mousewheel":
                        e.jqx.browser.mozilla ? t[0].addEventListener("DOMMouseScroll", r, !1) : t[0].addEventListener("mousewheel", r, !1);
                        continue;
                    case "mousemove":
                        if (!s) {
                            t[0].addEventListener("mousemove", r, !1);
                            continue
                        }
                    }
                null == s || null == s ? t.on ? t.on(a, r) : t.bind(a, r) : t.on ? t.on(a, s, r) : t.bind(a, s, r)
            }
        }
        ,
        e.jqx.removeHandler = function(t, i, r) {
            if (i)
                for (var s = i.split(" "), n = 0; n < s.length; n++) {
                    var o = s[n];
                    if (window.removeEventListener)
                        switch (o) {
                        case "mousewheel":
                            e.jqx.browser.mozilla ? t[0].removeEventListener("DOMMouseScroll", r, !1) : t[0].removeEventListener("mousewheel", r, !1);
                            continue;
                        case "mousemove":
                            if (r) {
                                t[0].removeEventListener("mousemove", r, !1);
                                continue
                            }
                        }
                    null != o ? null == r ? t.off ? t.off(o) : t.unbind(o) : t.off ? t.off(o, r) : t.unbind(o, r) : t.off ? t.off() : t.unbind()
                }
            else
                t.off ? t.off() : t.unbind()
        }
        ,
        e.jqx.credits = e.jqx.credits || "",
        e.jqx.theme = e.jqx.theme || "",
        e.jqx.scrollAnimation = e.jqx.scrollAnimation || !1,
        e.jqx.resizeDelay = e.jqx.resizeDelay || 10,
        e.jqx.ready = function() {
            e(window).trigger("jqxReady")
        }
        ,
        e.jqx.init = function() {
            e.each(arguments[0], function(t, i) {
                "theme" == t && (e.jqx.theme = i),
                "scrollBarSize" == t && (e.jqx.utilities.scrollBarSize = i),
                "touchScrollBarSize" == t && (e.jqx.utilities.touchScrollBarSize = i),
                "scrollBarButtonsVisibility" == t && (e.jqx.utilities.scrollBarButtonsVisibility = i)
            })
        }
        ,
        e.jqx.utilities = e.jqx.utilities || {},
        e.extend(e.jqx.utilities, {
            scrollBarSize: 13,
            touchScrollBarSize: 8,
            scrollBarButtonsVisibility: "visible",
            createId: function() {
                var e = function() {
                    return (65536 * (1 + Math.random()) | 0).toString(16).substring(1)
                };
                return "jqxWidget" + e() + e() + e()
            },
            setTheme: function(t, i, r) {
                if (void 0 !== r && r[0].className.split) {
                    void 0 === t && (t = ""),
                    void 0 === i && (i = "");
                    for (var s = r[0].className.split(" "), n = [], o = [], a = r.children(), l = 0; l < s.length; l += 1)
                        s[l].indexOf(t) >= 0 && (t.length > 0 ? (n.push(s[l]),
                        o.push(s[l].replace(t, i))) : o.push(s[l].replace("-" + i, "") + "-" + i));
                    this._removeOldClasses(n, r),
                    this._addNewClasses(o, r);
                    for (l = 0; l < a.length; l += 1)
                        this.setTheme(t, i, e(a[l]))
                }
            },
            _removeOldClasses: function(e, t) {
                for (var i = 0; i < e.length; i += 1)
                    t.removeClass(e[i])
            },
            _addNewClasses: function(e, t) {
                for (var i = 0; i < e.length; i += 1)
                    t.addClass(e[i])
            },
            getOffset: function(t) {
                var i = e.jqx.mobile.getLeftPos(t[0]);
                return {
                    top: e.jqx.mobile.getTopPos(t[0]),
                    left: i
                }
            },
            resize: function(t, i, r, s) {
                void 0 === s && (s = !0);
                var n = -1
                  , o = this
                  , a = function(e) {
                    if (!o.hiddenWidgets)
                        return -1;
                    for (var t = -1, i = 0; i < o.hiddenWidgets.length; i++)
                        if (e.id) {
                            if (o.hiddenWidgets[i].id == e.id) {
                                t = i;
                                break
                            }
                        } else if (o.hiddenWidgets[i].id == e[0].id) {
                            t = i;
                            break
                        }
                    return t
                };
                if (this.resizeHandlers) {
                    for (var l = 0; l < this.resizeHandlers.length; l++)
                        if (t.id) {
                            if (this.resizeHandlers[l].id == t.id) {
                                n = l;
                                break
                            }
                        } else if (this.resizeHandlers[l].id == t[0].id) {
                            n = l;
                            break
                        }
                    if (!0 === r) {
                        if (-1 != n && (this.resizeHandlers.splice(n, 1),
                        this.watchedElementData && this.watchedElementData.length > 0 && this.watchedElementData.splice(n, 1)),
                        0 == this.resizeHandlers.length)
                            (h = e(window)).off ? (h.off("resize.jqx"),
                            h.off("orientationchange.jqx"),
                            h.off("orientationchanged.jqx")) : (h.unbind("resize.jqx"),
                            h.unbind("orientationchange.jqx"),
                            h.unbind("orientationchanged.jqx")),
                            this.resizeHandlers = null;
                        return void (-1 != (d = a(t)) && this.hiddenWidgets && this.hiddenWidgets.splice(d, 1))
                    }
                } else {
                    var d;
                    if (!0 === r)
                        return void (-1 != (d = a(t)) && this.hiddenWidgets && this.hiddenWidgets.splice(d, 1))
                }
                o = this;
                var h, c = function(t, i) {
                    if (o.resizeHandlers) {
                        var r = function(e) {
                            for (var t = -1, i = e.parentNode; i; )
                                t++,
                                i = i.parentNode;
                            return t
                        }
                          , s = function(e, t) {
                            if (!e.widget || !t.widget)
                                return 0;
                            var i = r(e.widget[0])
                              , s = r(t.widget[0]);
                            try {
                                if (i < s)
                                    return -1;
                                if (i > s)
                                    return 1
                            } catch (e) {}
                            return 0
                        }
                          , n = function(t) {
                            if (o.hiddenWidgets.length > 0) {
                                o.hiddenWidgets.sort(s);
                                var r = function() {
                                    for (var t = !1, r = new Array, s = 0; s < o.hiddenWidgets.length; s++) {
                                        var n = o.hiddenWidgets[s];
                                        e.jqx.isHidden(n.widget) ? (t = !0,
                                        r.push(n)) : n.callback && n.callback(i)
                                    }
                                    o.hiddenWidgets = r,
                                    t || clearInterval(o.__resizeInterval)
                                };
                                if (0 == t)
                                    return r(),
                                    void (o.__resizeInterval && clearInterval(o.__resizeInterval));
                                o.__resizeInterval && clearInterval(o.__resizeInterval),
                                o.__resizeInterval = setInterval(function() {
                                    r()
                                }, 100)
                            }
                        };
                        o.hiddenWidgets && o.hiddenWidgets.length > 0 && n(!1),
                        o.hiddenWidgets = new Array,
                        o.resizeHandlers.sort(s);
                        for (var l = 0; l < o.resizeHandlers.length; l++) {
                            var d = o.resizeHandlers[l]
                              , h = d.widget
                              , c = d.data;
                            if (c && c.jqxWidget) {
                                var u = c.jqxWidget.width
                                  , p = c.jqxWidget.height;
                                c.jqxWidget.base && (null == u && (u = c.jqxWidget.base.width),
                                null == p && (p = c.jqxWidget.base.height)),
                                void 0 === u && void 0 === p && (u = c.jqxWidget.element.style.width,
                                p = c.jqxWidget.element.style.height);
                                var f = !1;
                                if (null != u && -1 != u.toString().indexOf("%") && (f = !0),
                                null != p && -1 != p.toString().indexOf("%") && (f = !0),
                                e.jqx.isHidden(h))
                                    -1 === a(h) && (f || !0 === t) && !0 !== d.data.nestedWidget && o.hiddenWidgets.push(d);
                                else if (void 0 === t || !0 !== t) {
                                    if (f) {
                                        if (d.callback(i),
                                        o.watchedElementData)
                                            for (var m = 0; m < o.watchedElementData.length; m++)
                                                if (o.watchedElementData[m].element == c.jqxWidget.element) {
                                                    o.watchedElementData[m].offsetWidth = c.jqxWidget.element.offsetWidth,
                                                    o.watchedElementData[m].offsetHeight = c.jqxWidget.element.offsetHeight;
                                                    break
                                                }
                                        o.hiddenWidgets.indexOf(d) >= 0 && o.hiddenWidgets.splice(o.hiddenWidgets.indexOf(d), 1)
                                    }
                                    if (c.jqxWidget.element) {
                                        var g = c.jqxWidget.element.className;
                                        if (g.indexOf("dropdownlist") >= 0 || g.indexOf("datetimeinput") >= 0 || g.indexOf("combobox") >= 0 || g.indexOf("menu") >= 0)
                                            if (c.jqxWidget.isOpened)
                                                if (c.jqxWidget.isOpened()) {
                                                    if (i && "resize" == i && e.jqx.mobile.isTouchDevice())
                                                        continue;
                                                    c.jqxWidget.close()
                                                }
                                    }
                                }
                            }
                        }
                        n()
                    }
                };
                this.resizeHandlers || (this.resizeHandlers = new Array,
                (h = e(window)).on ? (this._resizeTimer = null,
                this._initResize = null,
                h.on("resize.jqx", function(t) {
                    null != o._resizeTimer && clearTimeout(o._resizeTimer),
                    o._initResize ? o._resizeTimer = setTimeout(function() {
                        c(null, "resize")
                    }, e.jqx.resizeDelay) : (o._initResize = !0,
                    c(null, "resize"))
                }),
                h.on("orientationchange.jqx", function(e) {
                    c(null, "orientationchange")
                }),
                h.on("orientationchanged.jqx", function(e) {
                    c(null, "orientationchange")
                })) : (h.bind("resize.jqx", function(e) {
                    c(null, "orientationchange")
                }),
                h.bind("orientationchange.jqx", function(e) {
                    c(null, "orientationchange")
                }),
                h.bind("orientationchanged.jqx", function(e) {
                    c(null, "orientationchange")
                })));
                var u = t.data();
                s && -1 === n && this.resizeHandlers.push({
                    id: t[0].id,
                    widget: t,
                    callback: i,
                    data: u
                });
                try {
                    var p = u.jqxWidget.width
                      , f = u.jqxWidget.height;
                    u.jqxWidget.base && (null == p && (p = u.jqxWidget.base.width),
                    null == f && (f = u.jqxWidget.base.height)),
                    void 0 === p && void 0 === f && (p = u.jqxWidget.element.style.width,
                    f = u.jqxWidget.element.style.height);
                    var m = !1;
                    if (null != p && -1 != p.toString().indexOf("%") && (m = !0),
                    null != f && -1 != f.toString().indexOf("%") && (m = !0),
                    m) {
                        this.watchedElementData || (this.watchedElementData = []);
                        (o = this).watchedElementData.push({
                            element: t[0],
                            offsetWidth: t[0].offsetWidth,
                            offsetHeight: t[0].offsetHeight,
                            callback: i
                        }),
                        o.observer || (o.observer = new MutationObserver(function(t) {
                            o.watchedElementData.forEach && o.watchedElementData.forEach(function(t) {
                                t.element.offsetWidth === t.offsetWidth && t.element.offsetHeight === t.offsetHeight || (t.offsetWidth = t.element.offsetWidth,
                                t.offsetHeight = t.element.offsetHeight,
                                t.timer && clearTimeout(t.timer),
                                t.timer = setTimeout(function() {
                                    e.jqx.isHidden(e(t.element)) ? t.timer = setInterval(function() {
                                        e.jqx.isHidden(e(t.element)) || (clearInterval(t.timer),
                                        t.callback())
                                    }, 100) : t.callback()
                                }))
                            })
                        }
                        ),
                        o.observer.observe(document.body, {
                            attributes: !0,
                            childList: !0,
                            characterData: !0
                        }))
                    }
                } catch (e) {}
                e.jqx.isHidden(t) && !0 === s && c(!0),
                e.jqx.resize = function() {
                    c(null, "resize")
                }
            },
            parseJSON: function(t) {
                if (!t || "string" != typeof t)
                    return null;
                if (t = e.trim(t),
                window.JSON && window.JSON.parse)
                    return window.JSON.parse(t);
                if (/^[\],:{}\s]*$/.test(t.replace(/\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g, "@").replace(/"[^"\\\r\n]*"|true|false|null|-?(?:\d\d*\.|)\d+(?:[eE][\-+]?\d+|)/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, "")))
                    return new Function("return " + t)();
                throw new Error("Invalid JSON: " + t)
            },
            html: function(t, i) {
                if (!e(t).on)
                    return e(t).html(i);
                try {
                    return e.access(t, function(i) {
                        var r = t[0] || {}
                          , s = 0
                          , n = t.length;
                        if (void 0 === i)
                            return 1 === r.nodeType ? r.innerHTML.replace(rinlinejQuery, "") : void 0;
                        var o = new RegExp("<(?:abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video)[\\s/>]","i");
                        if ("string" == typeof i && !/<(?:script|style|link)/i.test(i) && (e.support.htmlSerialize || !o.test(i)) && (e.support.leadingWhitespace || !/^\s+/.test(i)) && !{
                            option: [1, "<select multiple='multiple'>", "</select>"],
                            legend: [1, "<fieldset>", "</fieldset>"],
                            thead: [1, "<table>", "</table>"],
                            tr: [2, "<table><tbody>", "</tbody></table>"],
                            td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
                            col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
                            area: [1, "<map>", "</map>"],
                            _default: [0, "", ""]
                        }[(/<([\w:]+)/.exec(i) || ["", ""])[1].toLowerCase()]) {
                            i = i.replace(/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi, "<$1></$2>");
                            try {
                                for (; s < n; s++)
                                    1 === (r = this[s] || {}).nodeType && (e.cleanData(r.getElementsByTagName("*")),
                                    r.innerHTML = i);
                                r = 0
                            } catch (e) {}
                        }
                        r && t.empty().append(i)
                    }, null, i, arguments.length)
                } catch (r) {
                    return e(t).html(i)
                }
            },
            hasTransform: function(t) {
                var i = "";
                if ("" == (i = t.css("transform")) || "none" == i) {
                    if ("" != (i = t.parents().css("transform")) && "none" != i)
                        return "" != i && "none" != i;
                    var r = e.jqx.utilities.getBrowser();
                    "msie" == r.browser ? "" != (i = t.css("-ms-transform")) && "none" != i || (i = t.parents().css("-ms-transform")) : "chrome" == r.browser ? "" != (i = t.css("-webkit-transform")) && "none" != i || (i = t.parents().css("-webkit-transform")) : "opera" == r.browser ? "" != (i = t.css("-o-transform")) && "none" != i || (i = t.parents().css("-o-transform")) : "mozilla" == r.browser && ("" != (i = t.css("-moz-transform")) && "none" != i || (i = t.parents().css("-moz-transform")))
                }
                return "" != i && "none" != i || (i = e(document.body).css("transform")),
                "" != i && "none" != i && null != i
            },
            getBrowser: function() {
                var e = navigator.userAgent.toLowerCase()
                  , t = /(chrome)[ \/]([\w.]+)/.exec(e) || /(webkit)[ \/]([\w.]+)/.exec(e) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e) || /(msie) ([\w.]+)/.exec(e) || e.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e) || []
                  , i = {
                    browser: t[1] || "",
                    version: t[2] || "0"
                };
                return e.indexOf("rv:11.0") >= 0 && e.indexOf(".net4.0c") >= 0 && (i.browser = "msie",
                i.version = "11",
                t[1] = "msie"),
                e.indexOf("edge") >= 0 && (i.browser = "msie",
                i.version = "12",
                t[1] = "msie"),
                i[t[1]] = t[1],
                i
            }
        }),
        e.jqx.browser = e.jqx.utilities.getBrowser(),
        e.jqx.isHidden = function(e) {
            if (!e || !e[0])
                return !1;
            var t = e[0].offsetWidth
              , i = e[0].offsetHeight;
            return 0 === t || 0 === i
        }
        ,
        e.jqx.ariaEnabled = !0,
        e.jqx.aria = function(t, i, r) {
            if (e.jqx.ariaEnabled)
                if (null == i)
                    e.each(t.aria, function(i, r) {
                        if (null == (s = t.base ? t.base.host.attr(i) : t.host.attr(i)) || e.isFunction(s)) {
                            var s = t[r.name];
                            e.isFunction(s) && (s = t[r.name]()),
                            null == s && (s = "");
                            try {
                                t.base ? t.base.host.attr(i, s.toString()) : t.host.attr(i, s.toString())
                            } catch (e) {}
                        } else {
                            var n = s;
                            switch (r.type) {
                            case "number":
                                n = new Number(s),
                                isNaN(n) && (n = s);
                                break;
                            case "boolean":
                                n = "true" == s;
                                break;
                            case "date":
                                ("Invalid Date" == (n = new Date(s)) || isNaN(n)) && (n = s)
                            }
                            t[r.name] = n
                        }
                    });
                else
                    try {
                        t.host ? t.base ? t.base.host ? t.base.host.attr(i, r.toString()) : t.attr(i, r.toString()) : t.host ? t.element.setAttribute ? t.element.setAttribute(i, r.toString()) : t.host.attr(i, r.toString()) : t.attr(i, r.toString()) : t.setAttribute && t.setAttribute(i, r.toString())
                    } catch (e) {}
        }
        ,
        Array.prototype.indexOf || (Array.prototype.indexOf = function(e) {
            var t = this.length
              , i = Number(arguments[1]) || 0;
            for ((i = i < 0 ? Math.ceil(i) : Math.floor(i)) < 0 && (i += t); i < t; i++)
                if (i in this && this[i] === e)
                    return i;
            return -1
        }
        ),
        e.jqx.mobile = e.jqx.mobile || {},
        e.jqx.position = function(t) {
            var i = parseInt(t.pageX)
              , r = parseInt(t.pageY);
            if (e.jqx.mobile.isTouchDevice()) {
                var s = e.jqx.mobile.getTouches(t)[0];
                i = parseInt(s.pageX),
                r = parseInt(s.pageY)
            }
            return {
                left: i,
                top: r
            }
        }
        ,
        e.extend(e.jqx.mobile, {
            _touchListener: function(e, t) {
                var i, r, s, n = {
                    mousedown: "touchstart",
                    mouseup: "touchend",
                    mousemove: "touchmove"
                }, o = (i = n[e.type],
                r = e,
                (s = document.createEvent("MouseEvents")).initMouseEvent(i, r.bubbles, r.cancelable, r.view, r.detail, r.screenX, r.screenY, r.clientX, r.clientY, r.ctrlKey, r.altKey, r.shiftKey, r.metaKey, r.button, r.relatedTarget),
                s._pageX = r.pageX,
                s._pageY = r.pageY,
                s);
                e.target.dispatchEvent(o);
                var a = e.target["on" + n[e.type]];
                "function" == typeof a && a(e)
            },
            setMobileSimulator: function(t, i) {
                if (!this.isTouchDevice()) {
                    this.simulatetouches = !0,
                    0 == i && (this.simulatetouches = !1);
                    var r = {
                        mousedown: "touchstart",
                        mouseup: "touchend",
                        mousemove: "touchmove"
                    }
                      , s = this;
                    if (window.addEventListener) {
                        var n = function() {
                            for (var e in r)
                                t.addEventListener && (t.removeEventListener(e, s._touchListener),
                                t.addEventListener(e, s._touchListener, !1))
                        };
                        e.jqx.browser.msie,
                        n()
                    }
                }
            },
            isTouchDevice: function() {
                if (null != this.touchDevice)
                    return this.touchDevice;
                var e = "Browser CodeName: " + navigator.appCodeName;
                if (e += "Browser Name: " + navigator.appName,
                e += "Browser Version: " + navigator.appVersion,
                e += "Platform: " + navigator.platform,
                -1 != (e += "User-agent header: " + navigator.userAgent).indexOf("Android"))
                    return !0;
                if (-1 != e.indexOf("IEMobile"))
                    return !0;
                if (-1 != e.indexOf("Windows Phone"))
                    return !0;
                if (-1 != e.indexOf("WPDesktop"))
                    return !0;
                if (-1 != e.indexOf("ZuneWP7"))
                    return !0;
                if (-1 != e.indexOf("BlackBerry") && -1 != e.indexOf("Mobile Safari"))
                    return !0;
                if (-1 != e.indexOf("ipod"))
                    return !0;
                if (-1 != e.indexOf("nokia") || -1 != e.indexOf("Nokia"))
                    return !0;
                if (-1 != e.indexOf("Chrome/17"))
                    return !1;
                if (-1 != e.indexOf("CrOS"))
                    return !1;
                if (-1 != e.indexOf("Opera") && -1 == e.indexOf("Mobi") && -1 == e.indexOf("Mini") && -1 != e.indexOf("Platform: Win"))
                    return !1;
                if (-1 != e.indexOf("HybridDeviceTouch"))
                    return !0;
                if (-1 != e.indexOf("HybridDeviceMouse"))
                    return !1;
                if (-1 != e.indexOf("Opera") && -1 != e.indexOf("Mobi") && -1 != e.indexOf("Opera Mobi"))
                    return !0;
                if (-1 != e.indexOf("Mozilla/5.0 (X11; Linux x86_64)"))
                    return !1;
                var t = {
                    ios: "i(?:Pad|Phone|Pod)(?:.*)CPU(?: iPhone)? OS ",
                    android: "(Android |HTC_|Silk/)",
                    blackberry: "BlackBerry(?:.*)Version/",
                    rimTablet: "RIM Tablet OS ",
                    webos: "(?:webOS|hpwOS)/",
                    bada: "Bada/"
                };
                try {
                    if (null != this.touchDevice)
                        return this.touchDevice;
                    for (i in this.touchDevice = !1,
                    t)
                        if (t.hasOwnProperty(i) && (prefix = t[i],
                        match = e.match(new RegExp("(?:" + prefix + ")([^\\s;]+)")),
                        match))
                            return "blackberry" == i.toString() ? (this.touchDevice = !1,
                            !1) : (this.touchDevice = !0,
                            !0);
                    var r = navigator.userAgent;
                    if (-1 != navigator.platform.toLowerCase().indexOf("win")) {
                        if (r.indexOf("Windows Phone") >= 0 || r.indexOf("WPDesktop") >= 0 || r.indexOf("IEMobile") >= 0 || r.indexOf("ZuneWP7") >= 0)
                            return this.touchDevice = !0,
                            !0;
                        if (r.indexOf("Touch") >= 0)
                            return "MSPointerDown"in window || "pointerdown"in window ? (this.touchDevice = !0,
                            !0) : r.indexOf("ARM") >= 0 ? (this.touchDevice = !0,
                            !0) : (this.touchDevice = !1,
                            !1)
                    }
                    return -1 != navigator.platform.toLowerCase().indexOf("win") ? (this.touchDevice = !1,
                    !1) : (("ontouchstart"in window || window.DocumentTouch && document instanceof DocumentTouch) && (this.touchDevice = !0),
                    this.touchDevice)
                } catch (e) {
                    return this.touchDevice = !1,
                    !1
                }
            },
            getLeftPos: function(e) {
                for (var t = e.offsetLeft; null != (e = e.offsetParent); )
                    "HTML" != e.tagName && (t += e.offsetLeft,
                    document.all && (t += e.clientLeft));
                return t
            },
            getTopPos: function(t) {
                for (var i = t.offsetTop, r = e(t).coord(); null != (t = t.offsetParent); )
                    "HTML" != t.tagName && (i += t.offsetTop - t.scrollTop,
                    document.all && (i += t.clientTop));
                var s = navigator.userAgent.toLowerCase();
                return (-1 != s.indexOf("windows phone") || -1 != s.indexOf("WPDesktop") || -1 != s.indexOf("ZuneWP7") || -1 != s.indexOf("msie 9") || -1 != s.indexOf("msie 11") || -1 != s.indexOf("msie 10")) && -1 != s.indexOf("touch") ? r.top : this.isSafariMobileBrowser() ? this.isSafari4MobileBrowser() && this.isIPadSafariMobileBrowser() ? i : -1 != s.indexOf("version/7") ? r.top : (-1 == s.indexOf("version/6") && -1 == s.indexOf("version/5") || (i += e(window).scrollTop()),
                /(Android.*Chrome\/[.0-9]* (!?Mobile))/.exec(navigator.userAgent) ? i + e(window).scrollTop() : /(Android.*Chrome\/[.0-9]* Mobile)/.exec(navigator.userAgent) ? i + e(window).scrollTop() : r.top) : i
            },
            isChromeMobileBrowser: function() {
                return -1 != navigator.userAgent.toLowerCase().indexOf("android")
            },
            isOperaMiniMobileBrowser: function() {
                var e = navigator.userAgent.toLowerCase();
                return -1 != e.indexOf("opera mini") || -1 != e.indexOf("opera mobi")
            },
            isOperaMiniBrowser: function() {
                return -1 != navigator.userAgent.toLowerCase().indexOf("opera mini")
            },
            isNewSafariMobileBrowser: function() {
                var e = navigator.userAgent.toLowerCase()
                  , t = -1 != e.indexOf("ipad") || -1 != e.indexOf("iphone") || -1 != e.indexOf("ipod");
                return t = t && -1 != e.indexOf("version/5")
            },
            isSafari4MobileBrowser: function() {
                var e = navigator.userAgent.toLowerCase()
                  , t = -1 != e.indexOf("ipad") || -1 != e.indexOf("iphone") || -1 != e.indexOf("ipod");
                return t = t && -1 != e.indexOf("version/4")
            },
            isWindowsPhone: function() {
                var e = navigator.userAgent.toLowerCase();
                return -1 != e.indexOf("windows phone") || -1 != e.indexOf("WPDesktop") || -1 != e.indexOf("ZuneWP7") || -1 != e.indexOf("msie 9") || -1 != e.indexOf("msie 11") || -1 != e.indexOf("msie 10") && -1 != e.indexOf("touch")
            },
            isSafariMobileBrowser: function() {
                var e = navigator.userAgent.toLowerCase();
                return !!/(Android.*Chrome\/[.0-9]* (!?Mobile))/.exec(navigator.userAgent) || (!!/(Android.*Chrome\/[.0-9]* Mobile)/.exec(navigator.userAgent) || (-1 != e.indexOf("ipad") || -1 != e.indexOf("iphone") || -1 != e.indexOf("ipod") || -1 != e.indexOf("mobile safari")))
            },
            isIPadSafariMobileBrowser: function() {
                return -1 != navigator.userAgent.toLowerCase().indexOf("ipad")
            },
            isMobileBrowser: function() {
                var e = navigator.userAgent.toLowerCase();
                return -1 != e.indexOf("ipad") || -1 != e.indexOf("iphone") || -1 != e.indexOf("android")
            },
            getTouches: function(e) {
                if (e.originalEvent) {
                    if (e.originalEvent.touches && e.originalEvent.touches.length)
                        return e.originalEvent.touches;
                    if (e.originalEvent.changedTouches && e.originalEvent.changedTouches.length)
                        return e.originalEvent.changedTouches
                }
                return e.touches || (e.touches = new Array,
                e.touches[0] = null != e.originalEvent ? e.originalEvent : e,
                null != e.originalEvent && e.pageX && (e.touches[0] = e),
                "mousemove" == e.type && (e.touches[0] = e)),
                e.touches
            },
            getTouchEventName: function(e) {
                if (!this.isWindowsPhone())
                    return e;
                if (-1 != navigator.userAgent.toLowerCase().indexOf("windows phone 7")) {
                    if (-1 != e.toLowerCase().indexOf("start"))
                        return "MSPointerDown";
                    if (-1 != e.toLowerCase().indexOf("move"))
                        return "MSPointerMove";
                    if (-1 != e.toLowerCase().indexOf("end"))
                        return "MSPointerUp"
                }
                return -1 != e.toLowerCase().indexOf("start") ? "pointerdown" : -1 != e.toLowerCase().indexOf("move") ? "pointermove" : -1 != e.toLowerCase().indexOf("end") ? "pointerup" : void 0
            },
            dispatchMouseEvent: function(e, t, i) {
                if (!this.simulatetouches) {
                    var r = document.createEvent("MouseEvent");
                    r.initMouseEvent(e, !0, !0, t.view, 1, t.screenX, t.screenY, t.clientX, t.clientY, !1, !1, !1, !1, 0, null),
                    null != i && i.dispatchEvent(r)
                }
            },
            getRootNode: function(e) {
                for (; 1 !== e.nodeType; )
                    e = e.parentNode;
                return e
            },
            setTouchScroll: function(e, t) {
                this.enableScrolling || (this.enableScrolling = []),
                this.enableScrolling[t] = e
            },
            touchScroll: function(t, i, r, s, n, o) {
                if (null != t) {
                    var a = this
                      , l = 0
                      , d = 0
                      , h = 0
                      , c = 0;
                    this.scrolling || (this.scrolling = []),
                    this.scrolling[s] = !1;
                    var u = !1
                      , p = e(t)
                      , f = ["select", "input", "textarea"];
                    this.enableScrolling || (this.enableScrolling = []),
                    this.enableScrolling[s] = !0;
                    s = s;
                    var m, g, v, w, x, b, y, _, q, j, S, C, T, I, k = this.getTouchEventName("touchstart") + ".touchScroll", D = this.getTouchEventName("touchend") + ".touchScroll", P = this.getTouchEventName("touchmove") + ".touchScroll";
                    g = i,
                    0,
                    v = 0,
                    xoffset = 0,
                    initialOffset = 0,
                    initialXOffset = 0,
                    m = n.jqxScrollBar("max"),
                    I = 325;
                    var B = function() {
                        var e, t, i;
                        t = (e = Date.now()) - _,
                        _ = e,
                        i = v - y,
                        xdelta = xoffset - xframe,
                        y = v,
                        xframe = xoffset,
                        x = !0,
                        xv = 1e3 * xdelta / (1 + t),
                        b = .8 * (1e3 * i / (1 + t)) + .2 * b,
                        xjqxAnimations = .8 * xv + .2 * xjqxAnimations
                    }
                      , M = !1
                      , H = function(t) {
                        if (!a.enableScrolling[s])
                            return !0;
                        if (-1 === e.inArray(t.target.tagName.toLowerCase(), f)) {
                            v = o.jqxScrollBar("value"),
                            xoffset = n.jqxScrollBar("value");
                            var i, r = a.getTouches(t), p = r[0];
                            return 1 == r.length && a.dispatchMouseEvent("mousedown", p, a.getRootNode(p.target)),
                            m = n.jqxScrollBar("max"),
                            g = o.jqxScrollBar("max"),
                            M = !1,
                            x = !0,
                            w = V(i = t),
                            T = R(i),
                            b = j = xjqxAnimations = 0,
                            y = v,
                            xframe = xoffset,
                            _ = Date.now(),
                            clearInterval(q),
                            q = setInterval(B, 100),
                            initialOffset = v,
                            initialXOffset = xoffset,
                            v > 0 && v < g && o[0].style.visibility,
                            u = !1,
                            d = p.pageY,
                            c = p.pageX,
                            a.simulatetouches && null != p._pageY && (d = p._pageY,
                            c = p._pageX),
                            a.scrolling[s] = !0,
                            l = 0,
                            h = 0,
                            !0
                        }
                    };
                    p.on ? p.on(k, H) : p.bind(k, H);
                    var O = function(e, t) {
                        return v = e > g ? g : e < 0 ? 0 : e,
                        r(null, e, 0, 0, t),
                        e > g ? "max" : e < 0 ? "min" : "value"
                    }
                      , z = function(e, t) {
                        return xoffset = e > m ? m : e < 0 ? 0 : e,
                        r(e, null, 0, 0, t),
                        e > m ? "max" : e < 0 ? "min" : "value"
                    }
                      , A = function(e) {
                        if (!a.enableScrolling[s])
                            return !0;
                        if (!a.scrolling[s])
                            return !0;
                        M && (e.preventDefault(),
                        e.stopPropagation());
                        var t = a.getTouches(e);
                        if (t.length > 1)
                            return !0;
                        var i = t[0].pageY
                          , r = t[0].pageX;
                        a.simulatetouches && null != t[0]._pageY && (i = t[0]._pageY,
                        r = t[0]._pageX);
                        var p = i - d
                          , f = r - c;
                        i,
                        touchHorizontalEnd = r,
                        p - l,
                        f - h,
                        u = !0,
                        l = p,
                        h = f;
                        var b = null == n || "hidden" != n[0].style.visibility
                          , y = null == o || "hidden" != o[0].style.visibility;
                        (b || y) && (b || y) && function(e) {
                            var t, i, r;
                            if (x) {
                                t = V(e),
                                r = R(e),
                                i = w - t,
                                xdelta = T - r;
                                var s = "value";
                                if (i > 2 || i < -2)
                                    return w = t,
                                    s = O(v + i, e),
                                    B(),
                                    "min" == s && 0 === initialOffset || "max" == s && initialOffset === g || !y || (e.preventDefault(),
                                    e.stopPropagation(),
                                    M = !0,
                                    !1);
                                if (xdelta > 2 || xdelta < -2)
                                    return T = r,
                                    s = z(xoffset + xdelta, e),
                                    B(),
                                    "min" == s && 0 === initialXOffset || "max" == s && initialXOffset === m || !b || (M = !0,
                                    e.preventDefault(),
                                    e.stopPropagation(),
                                    !1);
                                e.preventDefault()
                            }
                        }(e)
                    };
                    p.on ? p.on(P, A) : p.bind(P, A);
                    var L = function(e) {
                        if (!a.enableScrolling[s])
                            return !0;
                        var t = a.getTouches(e)[0];
                        if (!a.scrolling[s])
                            return !0;
                        if (x = !1,
                        clearInterval(q),
                        b > 10 || b < -10 ? (j = .8 * b,
                        S = Math.round(v + j),
                        _ = Date.now(),
                        requestAnimationFrame(W)) : (xjqxAnimations > 10 || xjqxAnimations < -10) && (j = .8 * xjqxAnimations,
                        C = Math.round(xoffset + j),
                        _ = Date.now(),
                        requestAnimationFrame(G)),
                        a.scrolling[s] = !1,
                        !u) {
                            t = a.getTouches(e)[0];
                            var i = a.getRootNode(t.target);
                            return a.dispatchMouseEvent("mouseup", t, i),
                            a.dispatchMouseEvent("click", t, i),
                            !0
                        }
                        a.dispatchMouseEvent("mouseup", t, e.target)
                    };
                    if (this.simulatetouches) {
                        null != e(window).on || e(window).bind;
                        var E = function(e) {
                            try {
                                L(e)
                            } catch (e) {}
                            a.scrolling[s] = !1
                        };
                        if (null != e(window).on ? e(document).on("mouseup.touchScroll", E) : e(document).bind("mouseup.touchScroll", E),
                        window.frameElement && null != window.top) {
                            var N = function(e) {
                                try {
                                    L(e)
                                } catch (e) {}
                                a.scrolling[s] = !1
                            };
                            window.top.document && (e(window.top.document).on ? e(window.top.document).on("mouseup", N) : e(window.top.document).bind("mouseup", N))
                        }
                        null != e(document).on || e(document).bind;
                        var F = function(e) {
                            if (!a.scrolling[s])
                                return !0;
                            a.scrolling[s] = !1;
                            var t = a.getTouches(e)[0]
                              , i = a.getRootNode(t.target);
                            a.dispatchMouseEvent("mouseup", t, i),
                            a.dispatchMouseEvent("click", t, i)
                        };
                        null != e(document).on ? e(document).on("touchend", F) : e(document).bind("touchend", F)
                    }
                    p.on && (p.on("dragstart", function(e) {
                        e.preventDefault()
                    }),
                    p.on("selectstart", function(e) {
                        e.preventDefault()
                    })),
                    p.on ? p.on(D + " touchcancel.touchScroll", L) : p.bind(D + " touchcancel.touchScroll", L)
                }
                function V(e) {
                    return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientY : e.originalEvent && void 0 !== e.originalEvent.clientY ? e.originalEvent.clientY : a.getTouches(e)[0].clientY
                }
                function R(e) {
                    return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientX : e.originalEvent && void 0 !== e.originalEvent.clientX ? e.originalEvent.clientX : a.getTouches(e)[0].clientX
                }
                function W() {
                    var e, t;
                    j && (e = Date.now() - _,
                    (t = -j * Math.exp(-e / I)) > .5 || t < -.5 ? (O(S + t),
                    requestAnimationFrame(W)) : O(S))
                }
                function G() {
                    var e, t;
                    j && (e = Date.now() - _,
                    (t = -j * Math.exp(-e / I)) > .5 || t < -.5 ? (z(C + t),
                    requestAnimationFrame(G)) : z(C))
                }
            }
        }),
        e.jqx.cookie = e.jqx.cookie || {},
        e.extend(e.jqx.cookie, {
            cookie: function(t, i, r) {
                if (arguments.length > 1 && "[object Object]" !== String(i)) {
                    if (r = e.extend({}, r),
                    null == i && (r.expires = -1),
                    "number" == typeof r.expires) {
                        var s = r.expires
                          , n = r.expires = new Date;
                        n.setDate(n.getDate() + s)
                    }
                    return i = String(i),
                    document.cookie = [encodeURIComponent(t), "=", r.raw ? i : encodeURIComponent(i), r.expires ? "; expires=" + r.expires.toUTCString() : "", r.path ? "; path=" + r.path : "", r.domain ? "; domain=" + r.domain : "", r.secure ? "; secure" : ""].join("")
                }
                var o, a = (r = i || {}).raw ? function(e) {
                    return e
                }
                : decodeURIComponent;
                return (o = new RegExp("(?:^|; )" + encodeURIComponent(t) + "=([^;]*)").exec(document.cookie)) ? a(o[1]) : null
            }
        }),
        e.jqx.string = e.jqx.string || {},
        e.extend(e.jqx.string, {
            replace: function(e, t, i) {
                if (t === i)
                    return this;
                for (var r = e, s = r.indexOf(t); -1 != s; )
                    s = (r = r.replace(t, i)).indexOf(t);
                return r
            },
            contains: function(e, t) {
                return null != e && null != t && -1 != e.indexOf(t)
            },
            containsIgnoreCase: function(e, t) {
                return null != e && null != t && -1 != e.toString().toUpperCase().indexOf(t.toString().toUpperCase())
            },
            equals: function(e, t) {
                return null != e && null != t && (e = this.normalize(e),
                t.length == e.length && e.slice(0, t.length) == t)
            },
            equalsIgnoreCase: function(e, t) {
                return null != e && null != t && (e = this.normalize(e),
                t.length == e.length && e.toUpperCase().slice(0, t.length) == t.toUpperCase())
            },
            startsWith: function(e, t) {
                return null != e && null != t && e.slice(0, t.length) == t
            },
            startsWithIgnoreCase: function(e, t) {
                return null != e && null != t && e.toUpperCase().slice(0, t.length) == t.toUpperCase()
            },
            normalize: function(e) {
                return 65279 == e.charCodeAt(e.length - 1) && (e = e.substring(0, e.length - 1)),
                e
            },
            endsWith: function(e, t) {
                return null != e && null != t && (e = this.normalize(e)).slice(-t.length) == t
            },
            endsWithIgnoreCase: function(e, t) {
                return null != e && null != t && (e = this.normalize(e)).toUpperCase().slice(-t.length) == t.toUpperCase()
            }
        }),
        e.extend(e.easing, {
            easeOutBack: function(e, t, i, r, s, n) {
                return null == n && (n = 1.70158),
                r * ((t = t / s - 1) * t * ((n + 1) * t + n) + 1) + i
            },
            easeInQuad: function(e, t, i, r, s) {
                return r * (t /= s) * t + i
            },
            easeInOutCirc: function(e, t, i, r, s) {
                return (t /= s / 2) < 1 ? -r / 2 * (Math.sqrt(1 - t * t) - 1) + i : r / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + i
            },
            easeInOutSine: function(e, t, i, r, s) {
                return -r / 2 * (Math.cos(Math.PI * t / s) - 1) + i
            },
            easeInCubic: function(e, t, i, r, s) {
                return r * (t /= s) * t * t + i
            },
            easeOutCubic: function(e, t, i, r, s) {
                return r * ((t = t / s - 1) * t * t + 1) + i
            },
            easeInOutCubic: function(e, t, i, r, s) {
                return (t /= s / 2) < 1 ? r / 2 * t * t * t + i : r / 2 * ((t -= 2) * t * t + 2) + i
            },
            easeInSine: function(e, t, i, r, s) {
                return -r * Math.cos(t / s * (Math.PI / 2)) + r + i
            },
            easeOutSine: function(e, t, i, r, s) {
                return r * Math.sin(t / s * (Math.PI / 2)) + i
            },
            easeInOutSine: function(e, t, i, r, s) {
                return -r / 2 * (Math.cos(Math.PI * t / s) - 1) + i
            }
        })
    }(o),
    function(e) {
        e.event && e.event.special && e.extend(e.event.special, {
            close: {
                noBubble: !0
            },
            open: {
                noBubble: !0
            },
            cellclick: {
                noBubble: !0
            },
            rowclick: {
                noBubble: !0
            },
            tabclick: {
                noBubble: !0
            },
            selected: {
                noBubble: !0
            },
            expanded: {
                noBubble: !0
            },
            collapsed: {
                noBubble: !0
            },
            valuechanged: {
                noBubble: !0
            },
            expandedItem: {
                noBubble: !0
            },
            collapsedItem: {
                noBubble: !0
            },
            expandingItem: {
                noBubble: !0
            },
            collapsingItem: {
                noBubble: !0
            }
        }),
        e.fn.extend && e.fn.extend({
            ischildof: function(t) {
                if (!e(this).parents)
                    return t.element.contains(this.element);
                for (var i = e(this).parents().get(), r = 0; r < i.length; r++)
                    if ("string" != typeof t) {
                        var s = i[r];
                        if (void 0 !== t && s == t[0])
                            return !0
                    } else if (void 0 !== t && e(i[r]).is(t))
                        return !0;
                return !1
            }
        }),
        e.fn.jqxProxy = function() {
            var t = e(this).data().jqxWidget
              , i = Array.prototype.slice.call(arguments, 0)
              , r = t.element;
            return r || (r = t.base.element),
            e.jqx.jqxWidgetProxy(t.widgetName, r, i)
        }
        ;
        var t = this.originalVal = e.fn.val;
        e.fn.val = function(i) {
            if (void 0 === i) {
                if (e(this).hasClass("jqx-widget"))
                    if ((r = e(this).data().jqxWidget) && r.val)
                        return r.val();
                if (this[0] && this[0].tagName.toLowerCase().indexOf("angular") >= 0)
                    if ((r = e(this).find(".jqx-widget").data().jqxWidget) && r.val)
                        return r.val();
                return t.call(this)
            }
            var r;
            return e(this).hasClass("jqx-widget") && (r = e(this).data().jqxWidget) && r.val ? 2 != arguments.length ? r.val(i) : r.val(i, arguments[1]) : this[0] && this[0].tagName.toLowerCase().indexOf("angular") >= 0 && (r = e(this).find(".jqx-widget").data().jqxWidget) && r.val ? 2 != arguments.length ? r.val(i) : r.val(i, arguments[1]) : t.call(this, i)
        }
        ,
        e.fn.modal && e.fn.modal.Constructor && (e.fn.modal.Constructor.prototype.enforceFocus = function() {
            e(document).off("focusin.bs.modal").on("focusin.bs.modal", e.proxy(function(t) {
                if (this.$element[0] !== t.target && !this.$element.has(t.target).length) {
                    if (e(t.target).parents().hasClass("jqx-popup"))
                        return !0;
                    this.$element.trigger("focus")
                }
            }, this))
        }
        ),
        e.fn.coord = function(t) {
            var i, r, s = {
                top: 0,
                left: 0
            }, n = this[0], o = n && n.ownerDocument;
            if (o) {
                if (i = o.documentElement,
                !e.contains(i, n))
                    return s;
                void 0 !== typeof n.getBoundingClientRect && (s = n.getBoundingClientRect());
                var a;
                a = o,
                r = e.isWindow(a) ? a : 9 === a.nodeType && (a.defaultView || a.parentWindow);
                var l = 0
                  , d = 0
                  , h = navigator.userAgent.toLowerCase();
                if ((-1 != h.indexOf("ipad") || -1 != h.indexOf("iphone")) && (l = 2),
                1 == t && "static" != document.body.style.position && "" != document.body.style.position) {
                    var c = e(document.body).coord();
                    l = -c.left,
                    d = -c.top
                }
                return {
                    top: d + s.top + (r.pageYOffset || i.scrollTop) - (i.clientTop || 0),
                    left: l + s.left + (r.pageXOffset || i.scrollLeft) - (i.clientLeft || 0)
                }
            }
        }
        ,
        e.jqx.ripplers = [],
        e.jqx.ripple = function(t, i, r) {
            i || (i = t);
            var s = e(t);
            s.append("<span class='ink'></span>");
            for (var n = s.find(".ink"), o = !1, a = 0; a < e.jqx.ripplers.length; a++) {
                if (e.jqx.ripplers[a].element[0] === t[0]) {
                    o = !0;
                    break
                }
            }
            if (o || e.jqx.ripplers.push({
                ink: n,
                element: t,
                hostElement: i,
                hostElementType: r
            }),
            "checkbox" === r || "radiobutton" === r) {
                var l = Math.max(s.outerWidth(), s.outerHeight());
                n.css({
                    height: l,
                    width: l
                });
                var d = s.width() / 2 - n.width() / 2
                  , h = s.height() / 2 - n.height() / 2;
                n.css({
                    top: h + "px",
                    left: d + "px"
                })
            }
            1 === e.jqx.ripplers.length && e(document).on("mouseup", function(t) {
                e.jqx.ripple.mouseCaptured = !1;
                for (var i = 0; i < e.jqx.ripplers.length; i++) {
                    var s = e.jqx.ripplers[i];
                    s.ink.removeClass("active"),
                    s.element.removeClass("active"),
                    "checkbox" !== r && "radiobutton" !== r && s.ink.hasClass("animate") && s.ink.removeClass("animate")
                }
            }),
            i.off("mousedown.ripple"),
            i.on("mousedown.ripple", function(s) {
                var n = e(t);
                e.jqx.ripple.mouseCaptured = !0,
                setTimeout(function() {
                    0 == n.find(".ink").length && n.append("<span class='ink'></span>");
                    var o = n.find(".ink");
                    if (o.removeClass("animate"),
                    !o.height() && !o.width()) {
                        var a = Math.max(n.outerWidth(), n.outerHeight());
                        o.css({
                            height: a,
                            width: a
                        })
                    }
                    if ("checkbox" === r || "radiobutton" === r) {
                        if ("checkbox" === r && i.jqxCheckBox("disabled"))
                            return;
                        if ("radiobutton" === r && i.jqxRadioButton("disabled"))
                            return;
                        var l = n.width() / 2 - o.width() / 2
                          , d = n.height() / 2 - o.height() / 2;
                        return o.css({
                            top: d + "px",
                            left: l + "px"
                        }).addClass("animate"),
                        void o.on("animationend", function() {
                            e.jqx.ripple.mouseCaptured && (o.removeClass("animate"),
                            o.addClass("active"),
                            t.addClass("active"))
                        })
                    }
                    l = s.pageX - n.offset().left - o.width() / 2,
                    d = s.pageY - n.offset().top - o.height() / 2;
                    o.css({
                        top: d + "px",
                        left: l + "px"
                    }).addClass("animate")
                })
            })
        }
    }(o)
}
, function(e, t) {
    var i;
    (i = jqxBaseFramework).jqx.cssroundedcorners = function(e) {
        var t = {
            all: "jqx-rc-all",
            top: "jqx-rc-t",
            bottom: "jqx-rc-b",
            left: "jqx-rc-l",
            right: "jqx-rc-r",
            "top-right": "jqx-rc-tr",
            "top-left": "jqx-rc-tl",
            "bottom-right": "jqx-rc-br",
            "bottom-left": "jqx-rc-bl"
        };
        for (prop in t)
            if (t.hasOwnProperty(prop) && e == prop)
                return t[prop]
    }
    ,
    i.jqx.jqxWidget("jqxButton", "", {}),
    i.extend(i.jqx._jqxButton.prototype, {
        defineInstance: function() {
            var e = {
                type: "",
                cursor: "arrow",
                roundedCorners: "all",
                disabled: !1,
                height: null,
                width: null,
                overrideTheme: !1,
                enableHover: !0,
                enableDefault: !0,
                enablePressed: !0,
                imgPosition: "center",
                imgSrc: "",
                imgWidth: 16,
                imgHeight: 16,
                value: null,
                textPosition: "",
                textImageRelation: "overlay",
                rtl: !1,
                _ariaDisabled: !1,
                _scrollAreaButton: !1,
                template: "default",
                aria: {
                    "aria-disabled": {
                        name: "disabled",
                        type: "boolean"
                    }
                }
            };
            return this === i.jqx._jqxButton.prototype ? e : (i.extend(!0, this, e),
            e)
        },
        _addImage: function(e) {
            var t = this;
            if ("input" == t.element.nodeName.toLowerCase() || "button" == t.element.nodeName.toLowerCase() || "div" == t.element.nodeName.toLowerCase()) {
                if (t._img)
                    t._img.setAttribute("src", t.imgSrc),
                    t._img.setAttribute("width", t.imgWidth),
                    t._img.setAttribute("height", t.imgHeight),
                    t._text.innerHTML = t.value;
                else {
                    t.field = t.element,
                    t.field.className && (t._className = t.field.className);
                    var r = {
                        title: t.field.title
                    }
                      , s = null;
                    t.field.getAttribute("value") ? s = t.field.getAttribute("value") : "input" != t.element.nodeName.toLowerCase() && (s = t.element.innerHTML),
                    t.value && (s = t.value),
                    t.field.id.length ? r.id = t.field.id.replace(/[^\w]/g, "_") + "_" + e : r.id = i.jqx.utilities.createId() + "_" + e;
                    var n = document.createElement("div");
                    n.id = r.id,
                    n.title = r.title,
                    n.style.cssText = t.field.style.cssText,
                    n.style.boxSizing = "border-box";
                    var o = document.createElement("img");
                    o.setAttribute("src", t.imgSrc),
                    o.setAttribute("width", t.imgWidth),
                    o.setAttribute("height", t.imgHeight),
                    n.appendChild(o),
                    t._img = o;
                    var a = document.createElement("span");
                    s && (a.innerHTML = s,
                    t.value = s),
                    n.appendChild(a),
                    t._text = a,
                    t.field.style.display = "none",
                    t.field.parentNode && t.field.parentNode.insertBefore(n, t.field.nextSibling);
                    var l = t.host.data();
                    t.host = i(n),
                    t.host.data(l),
                    t.element = n,
                    t.element.id = t.field.id,
                    t.field.id = r.id;
                    var d = new i(t.element)
                      , h = new i(t.field);
                    if (t._className && (d.addClass(t._className),
                    h.removeClass(t._className)),
                    t.field.tabIndex) {
                        var c = t.field.tabIndex;
                        t.field.tabIndex = -1,
                        t.element.tabIndex = c
                    }
                }
                t.imgSrc ? t._img.style.display = "inline" : t._img.style.display = "none",
                t.value ? t._text.style.display = "inline" : t._text.style.display = "none",
                t._positionTextAndImage()
            }
        },
        _positionTextAndImage: function() {
            var e = this
              , t = e.element.offsetWidth
              , i = e.element.offsetHeight
              , r = e.imgWidth
              , s = e.imgHeight;
            "" == e.imgSrc && (r = 0,
            s = 0);
            var n = e._text.offsetWidth
              , o = e._text.offsetHeight
              , a = 0
              , l = 0;
            switch (e.textImageRelation) {
            case "imageBeforeText":
            case "textBeforeImage":
                a = r + n + 8 + 4 + 8,
                l = Math.max(s, o) + 8 + 4 + 8;
                break;
            case "imageAboveText":
            case "textAboveImage":
                a = Math.max(r, n) + 8,
                l = s + o + 4 + 8 + 8;
                break;
            case "overlay":
                a = Math.max(r, n) + 8,
                l = Math.max(s, o) + 8
            }
            e.width || (e.element.style.width = a + "px",
            t = a),
            e.height || (e.element.style.height = l + "px",
            i = l),
            e._img.style.position = "absolute",
            e._text.style.position = "absolute",
            e.element.style.position = "relative",
            e.element.style.overflow = "hidden";
            var d = {}
              , h = {}
              , c = function(e, t, i, r, s) {
                switch (t.width < r && (t.width = r),
                t.height < s && (t.height = s),
                i) {
                case "left":
                    e.style.left = t.left + "px",
                    e.style.top = t.top + t.height / 2 - s / 2 + "px";
                    break;
                case "topLeft":
                    e.style.left = t.left + "px",
                    e.style.top = t.top + "px";
                    break;
                case "bottomLeft":
                    e.style.left = t.left + "px",
                    e.style.top = t.top + t.height - s + "px";
                    break;
                default:
                case "center":
                    e.style.left = t.left + t.width / 2 - r / 2 + "px",
                    e.style.top = t.top + t.height / 2 - s / 2 + "px";
                    break;
                case "top":
                    e.style.left = t.left + t.width / 2 - r / 2 + "px",
                    e.style.top = t.top + "px";
                    break;
                case "bottom":
                    e.style.left = t.left + t.width / 2 - r / 2 + "px",
                    e.style.top = t.top + t.height - s + "px";
                    break;
                case "right":
                    e.style.left = t.left + t.width - r + "px",
                    e.style.top = t.top + t.height / 2 - s / 2 + "px";
                    break;
                case "topRight":
                    e.style.left = t.left + t.width - r + "px",
                    e.style.top = t.top + "px";
                    break;
                case "bottomRight":
                    e.style.left = t.left + t.width - r + "px",
                    e.style.top = t.top + t.height - s + "px"
                }
            }
              , u = 0
              , p = 0
              , f = t
              , m = i
              , g = (f - u) / 2
              , v = (m - p) / 2
              , w = e._img
              , x = e._text
              , b = m - p
              , y = f - u;
            switch (u += 4,
            p += 4,
            f = f - 4 - 2,
            y = y - 8 - 2,
            b = b - 8 - 2,
            e.textImageRelation) {
            case "imageBeforeText":
                switch (e.imgPosition) {
                case "left":
                case "topLeft":
                case "bottomLeft":
                    h = {
                        left: u,
                        top: p,
                        width: u + r,
                        height: b
                    },
                    d = {
                        left: u + r + 4,
                        top: p,
                        width: y - r - 4,
                        height: b
                    };
                    break;
                case "center":
                case "top":
                case "bottom":
                    d = {
                        left: (h = {
                            left: g - n / 2 - r / 2 - 2,
                            top: p,
                            width: r,
                            height: b
                        }).left + r + 4,
                        top: p,
                        width: f - h.left - r - 4,
                        height: b
                    };
                    break;
                case "right":
                case "topRight":
                case "bottomRight":
                    d = {
                        left: (h = {
                            left: f - n - r - 4,
                            top: p,
                            width: r,
                            height: b
                        }).left + r + 4,
                        top: p,
                        width: f - h.left - r - 4,
                        height: b
                    }
                }
                c(w, h, e.imgPosition, r, s),
                c(x, d, e.textPosition, n, o);
                break;
            case "textBeforeImage":
                switch (e.textPosition) {
                case "left":
                case "topLeft":
                case "bottomLeft":
                    d = {
                        left: u,
                        top: p,
                        width: u + n,
                        height: b
                    },
                    h = {
                        left: u + n + 4,
                        top: p,
                        width: y - n - 4,
                        height: b
                    };
                    break;
                case "center":
                case "top":
                case "bottom":
                    h = {
                        left: (d = {
                            left: g - n / 2 - r / 2 - 2,
                            top: p,
                            width: n,
                            height: b
                        }).left + n + 4,
                        top: p,
                        width: f - d.left - n - 4,
                        height: b
                    };
                    break;
                case "right":
                case "topRight":
                case "bottomRight":
                    h = {
                        left: (d = {
                            left: f - n - r - 4,
                            top: p,
                            width: n,
                            height: b
                        }).left + n + 4,
                        top: p,
                        width: f - d.left - n - 4,
                        height: b
                    }
                }
                c(w, h, e.imgPosition, r, s),
                c(x, d, e.textPosition, n, o);
                break;
            case "imageAboveText":
                switch (e.imgPosition) {
                case "topRight":
                case "top":
                case "topLeft":
                    h = {
                        left: u,
                        top: p,
                        width: y,
                        height: s
                    },
                    d = {
                        left: u,
                        top: p + s + 4,
                        width: y,
                        height: b - s - 4
                    };
                    break;
                case "left":
                case "center":
                case "right":
                    d = {
                        left: u,
                        top: (h = {
                            left: u,
                            top: v - s / 2 - o / 2 - 2,
                            width: y,
                            height: s
                        }).top + 4 + s,
                        width: y,
                        height: b - h.top - 4 - s
                    };
                    break;
                case "bottomLeft":
                case "bottom":
                case "bottomRight":
                    d = {
                        left: u,
                        top: (h = {
                            left: u,
                            top: m - s - o - 4,
                            width: y,
                            height: s
                        }).top + 4 + s,
                        width: y,
                        height: o
                    }
                }
                c(w, h, e.imgPosition, r, s),
                c(x, d, e.textPosition, n, o);
                break;
            case "textAboveImage":
                switch (e.textPosition) {
                case "topRight":
                case "top":
                case "topLeft":
                    d = {
                        left: u,
                        top: p,
                        width: y,
                        height: o
                    },
                    h = {
                        left: u,
                        top: p + o + 4,
                        width: y,
                        height: b - o - 4
                    };
                    break;
                case "left":
                case "center":
                case "right":
                    h = {
                        left: u,
                        top: (d = {
                            left: u,
                            top: v - s / 2 - o / 2 - 2,
                            width: y,
                            height: o
                        }).top + 4 + o,
                        width: y,
                        height: b - d.top - 4 - o
                    };
                    break;
                case "bottomLeft":
                case "bottom":
                case "bottomRight":
                    h = {
                        left: u,
                        top: (d = {
                            left: u,
                            top: m - s - o - 4,
                            width: y,
                            height: o
                        }).top + 4 + o,
                        width: y,
                        height: s
                    }
                }
                c(w, h, e.imgPosition, r, s),
                c(x, d, e.textPosition, n, o);
                break;
            case "overlay":
            default:
                d = {
                    left: u,
                    top: p,
                    width: y,
                    height: b
                },
                c(w, h = {
                    left: u,
                    top: p,
                    width: y,
                    height: b
                }, e.imgPosition, r, s),
                c(x, d, e.textPosition, n, o)
            }
        },
        createInstance: function(e) {
            var t = this;
            t._setSize(),
            t.isMaterialized(),
            t.buttonObj = new i(t.element),
            ("" != t.imgSrc || "" != t.textPosition || t.element.value && t.element.value.indexOf("<") >= 0 || null != t.value) && (t.refresh(),
            t._addImage("jqxButton"),
            t.buttonObj = new i(t.element)),
            t._ariaDisabled || t.element.setAttribute("role", "button"),
            "" !== t.type && t.element.setAttribute("type", t.type),
            t.overrideTheme || (t.buttonObj.addClass(t.toThemeProperty(i.jqx.cssroundedcorners(t.roundedCorners))),
            t.enableDefault && t.buttonObj.addClass(t.toThemeProperty("jqx-button")),
            t.buttonObj.addClass(t.toThemeProperty("jqx-widget"))),
            t.isTouchDevice = i.jqx.mobile.isTouchDevice(),
            t._ariaDisabled || i.jqx.aria(this),
            "arrow" != t.cursor && (t.disabled ? t.element.style.cursor = "arrow" : t.element.style.cursor = t.cursor);
            var r = "mouseenter mouseleave mousedown focus blur";
            t._scrollAreaButton && (r = "mousedown"),
            t.isTouchDevice && (t.addHandler(t.host, i.jqx.mobile.getTouchEventName("touchstart"), function(e) {
                t.isPressed = !0,
                t.refresh()
            }),
            t.addHandler(i(document), i.jqx.mobile.getTouchEventName("touchend") + "." + t.element.id, function(e) {
                t.isPressed = !1,
                t.refresh()
            })),
            t.addHandler(t.host, r, function(e) {
                switch (e.type) {
                case "mouseenter":
                    t.isTouchDevice || !t.disabled && t.enableHover && (t.isMouseOver = !0,
                    t.refresh());
                    break;
                case "mouseleave":
                    t.isTouchDevice || !t.disabled && t.enableHover && (t.isMouseOver = !1,
                    t.refresh());
                    break;
                case "mousedown":
                    t.disabled || (t.isPressed = !0,
                    t.refresh());
                    break;
                case "focus":
                    t.disabled || (t.isFocused = !0,
                    t.refresh());
                    break;
                case "blur":
                    t.disabled || (t.isFocused = !1,
                    t.refresh())
                }
            }),
            t.mouseupfunc = function(e) {
                t.disabled || (t.isPressed || t.isMouseOver) && (t.isPressed = !1,
                t.refresh())
            }
            ,
            t.addHandler(document, "mouseup.button" + t.element.id, t.mouseupfunc);
            try {
                if (("" != document.referrer || window.frameElement) && null != window.top && window.top != window.that) {
                    var s = "";
                    window.parent && document.referrer && (s = document.referrer),
                    -1 != s.indexOf(document.location.host) && window.top.document && window.top.document.addEventListener("mouseup", t._topDocumentMouseupHandler)
                }
            } catch (e) {}
            t.propertyChangeMap.roundedCorners = function(e, t, r, s) {
                e.buttonObj.removeClass(e.toThemeProperty(i.jqx.cssroundedcorners(r))),
                e.buttonObj.addClass(e.toThemeProperty(i.jqx.cssroundedcorners(s)))
            }
            ,
            t.propertyChangeMap.disabled = function(e, t, r, s) {
                r != s && (e.refresh(),
                e.element.setAttribute("disabled", s),
                e.element.disabled = s,
                e.element.style.cursor = s ? "default" : e.cursor,
                i.jqx.aria(e, "aria-disabled", e.disabled))
            }
            ,
            t.propertyChangeMap.rtl = function(e, t, i, r) {
                i != r && e.refresh()
            }
            ,
            t.propertyChangeMap.template = function(e, t, i, r) {
                i != r && (e.buttonObj.removeClass(e.toThemeProperty("jqx-" + i)),
                e.refresh())
            }
            ,
            t.propertyChangeMap.theme = function(e, t, r, s) {
                e.buttonObj.removeClass(e.element),
                r && (e.buttonObj.removeClass("jqx-button-" + r),
                e.buttonObj.removeClass("jqx-widget-" + r),
                e.buttonObj.removeClass("jqx-fill-state-normal-" + r),
                e.buttonObj.removeClass(e.toThemeProperty(i.jqx.cssroundedcorners(e.roundedCorners)) + "-" + r)),
                e.enableDefault && e.buttonObj.addClass(e.toThemeProperty("jqx-button")),
                e.buttonObj.addClass(e.toThemeProperty("jqx-widget")),
                e.overrideTheme || e.buttonObj.addClass(e.toThemeProperty(i.jqx.cssroundedcorners(e.roundedCorners))),
                e._oldCSSCurrent = null,
                e.refresh()
            }
            ,
            t.disabled && (t.element.disabled = !0,
            t.element.setAttribute("disabled", "true"))
        },
        resize: function(e, t) {
            this.width = e,
            this.height = t,
            this._setSize()
        },
        val: function(e) {
            var t = this
              , r = t.host.find("input");
            return r.length > 0 ? 0 == arguments.length || "object" == typeof e ? r.val() : (r.val(e),
            t.refresh(),
            r.val()) : 0 == arguments.length || "object" == typeof e ? "button" == t.element.nodeName.toLowerCase() ? i(t.element).text() : t.element.value : arguments.length > 0 && t._text ? (t._text.innerHTML = arguments[0],
            void t.refresh()) : (arguments.length > 0 && "DIV" === t.element.nodeName && (t.element.innerHTML = arguments[0],
            t.refresh()),
            t.element.value = arguments[0],
            "button" == t.element.nodeName.toLowerCase() && i(t.element).html(arguments[0]),
            void t.refresh())
        },
        _setSize: function() {
            var e = this
              , t = e.height
              , i = e.width;
            t && (isNaN(t) || (t += "px"),
            e.element.style.height = t),
            i && (isNaN(i) || (i += "px"),
            e.element.style.width = i)
        },
        _removeHandlers: function() {
            var e = this;
            e.removeHandler(e.host, "selectstart"),
            e.removeHandler(e.host, "click"),
            e.removeHandler(e.host, "focus"),
            e.removeHandler(e.host, "blur"),
            e.removeHandler(e.host, "mouseenter"),
            e.removeHandler(e.host, "mouseleave"),
            e.removeHandler(e.host, "mousedown"),
            e.removeHandler(i(document), "mouseup.button" + e.element.id, e.mouseupfunc),
            window.top.document.removeEventListener("mouseup", e._topDocumentMouseupHandler),
            e.isTouchDevice && (e.removeHandler(e.host, i.jqx.mobile.getTouchEventName("touchstart")),
            e.removeHandler(i(document), i.jqx.mobile.getTouchEventName("touchend") + "." + e.element.id)),
            e.mouseupfunc = null,
            delete e.mouseupfunc
        },
        focus: function() {
            this.host.focus()
        },
        destroy: function() {
            var e = this;
            e._removeHandlers();
            var t = i.data(e.element, "jqxButton");
            t && delete t.instance,
            e.host.removeClass(),
            e.host.removeData(),
            e.host.remove(),
            delete e.set,
            delete e.get,
            delete e.call,
            delete e.element,
            delete e.host
        },
        render: function() {
            this.refresh()
        },
        propertiesChangedHandler: function(e, t, i) {
            i && i.width && i.height && 2 == Object.keys(i).length && (e._setSize(),
            e.refresh())
        },
        propertyChangedHandler: function(e, t, i, r) {
            null != this.isInitialized && 0 != this.isInitialized && r != i && (e.batchUpdate && e.batchUpdate.width && e.batchUpdate.height && 2 == Object.keys(e.batchUpdate).length || ("type" === t && e.element.setAttribute("type", r),
            "textImageRelation" != t && "textPosition" != t && "imgPosition" != t || (e._img ? e._positionTextAndImage() : e._addImage("jqxButton")),
            "imgSrc" != t && "imgWidth" != t && "imgHeight" != t || e._addImage("jqxButton"),
            "value" === t && e.val(r),
            "width" != t && "height" != t || (e._setSize(),
            e.refresh())))
        },
        refresh: function() {
            var e = this;
            if (!e.overrideTheme) {
                var t = e.toThemeProperty("jqx-fill-state-focus")
                  , i = e.toThemeProperty("jqx-fill-state-disabled")
                  , r = e.toThemeProperty("jqx-fill-state-normal");
                e.enableDefault || (r = "");
                var s = e.toThemeProperty("jqx-fill-state-hover")
                  , n = e.toThemeProperty("jqx-fill-state-pressed")
                  , o = e.toThemeProperty("jqx-fill-state-pressed");
                e.enablePressed || (n = "");
                var a = "";
                if (e.host) {
                    if (e.element.disabled = e.disabled,
                    e.disabled)
                        return e._oldCSSCurrent && e.buttonObj.removeClass(e._oldCSSCurrent),
                        a = r + " " + i,
                        "default" !== e.template && "" !== e.template && (a += " jqx-" + e.template,
                        "" != e.theme && (a += " jqx-" + e.template + "-" + e.theme)),
                        e.buttonObj.addClass(a),
                        void (e._oldCSSCurrent = a);
                    a = e.isMouseOver && !e.isTouchDevice ? e.isPressed ? o : s : e.isPressed ? n : r,
                    e.isFocused && (a += " " + t),
                    "default" !== e.template && "" !== e.template && (a += " jqx-" + e.template,
                    "" != e.theme && (a += " jqx-" + e.template + "-" + e.theme)),
                    a != e._oldCSSCurrent && (e._oldCSSCurrent && e.buttonObj.removeClass(e._oldCSSCurrent),
                    e.buttonObj.addClass(a),
                    e._oldCSSCurrent = a),
                    e.rtl && (e.buttonObj.addClass(e.toThemeProperty("jqx-rtl")),
                    e.element.style.direction = "rtl"),
                    e.isMaterialized() && e.host.addClass("buttonRipple")
                }
            }
        }
    }),
    i.jqx.jqxWidget("jqxLinkButton", "", {}),
    i.extend(i.jqx._jqxLinkButton.prototype, {
        defineInstance: function() {
            this.disabled = !1,
            this.height = null,
            this.width = null,
            this.rtl = !1,
            this.href = null
        },
        createInstance: function(e) {
            var t = this;
            this.host.onselectstart = function() {
                return !1
            }
            ,
            this.host.attr("role", "button");
            var r = this.height || this.element.offsetHeight
              , s = this.width || this.element.offsetWidth;
            this.href = this.element.getAttribute("href"),
            this.target = this.element.getAttribute("target"),
            this.content = this.host.text(),
            this.element.innerHTML = "";
            var n = document.createElement("input");
            n.type = "button",
            n.className = "jqx-wrapper " + this.toThemeProperty("jqx-reset"),
            this._setSize(n, s, r),
            n.value = this.content,
            new i(this.element).addClass(this.toThemeProperty("jqx-link")),
            this.element.style.color = "inherit",
            this.element.appendChild(n),
            this._setSize(n, s, r);
            var o = null == e ? {} : e[0] || {};
            i(n).jqxButton(o),
            this.wrapElement = n,
            this.disabled && (this.element.disabled = !0),
            this.propertyChangeMap.disabled = function(e, t, i, r) {
                e.element.disabled = r,
                e.wrapElement.jqxButton({
                    disabled: r
                })
            }
            ,
            this.addHandler(i(n), "click", function(e) {
                return this.disabled || t.onclick(e),
                !1
            })
        },
        _setSize: function(e, t, i) {
            i && (isNaN(i) || (i += "px"),
            e.style.height = i),
            t && (isNaN(t) || (t += "px"),
            e.style.width = t)
        },
        onclick: function(e) {
            null != this.target ? window.open(this.href, this.target) : window.location = this.href
        }
    }),
    i.jqx.jqxWidget("jqxRepeatButton", "jqxButton", {}),
    i.extend(i.jqx._jqxRepeatButton.prototype, {
        defineInstance: function() {
            this.delay = 50
        },
        createInstance: function(e) {
            var t = this
              , r = i.jqx.mobile.isTouchDevice()
              , s = r ? "touchend." + this.base.element.id : "mouseup." + this.base.element.id
              , n = r ? "touchstart." + this.base.element.id : "mousedown." + this.base.element.id;
            this.addHandler(i(document), s, function(e) {
                null != t.timeout && (clearTimeout(t.timeout),
                t.timeout = null,
                t.refresh()),
                null != t.timer && (clearInterval(t.timer),
                t.timer = null,
                t.refresh())
            }),
            this.addHandler(this.base.host, n, function(e) {
                null != t.timer && clearInterval(t.timer),
                t.timeout = setTimeout(function() {
                    clearInterval(t.timer),
                    t.timer = setInterval(function(e) {
                        t.ontimer(e)
                    }, t.delay)
                }, 150)
            }),
            this.mousemovefunc = function(e) {
                r || 0 == e.which && null != t.timer && (clearInterval(t.timer),
                t.timer = null)
            }
            ,
            this.addHandler(this.base.host, "mousemove", this.mousemovefunc)
        },
        destroy: function() {
            var e = i.jqx.mobile.isTouchDevice()
              , t = e ? "touchend." + this.base.element.id : "mouseup." + this.base.element.id
              , r = e ? "touchstart." + this.base.element.id : "mousedown." + this.base.element.id;
            this.removeHandler(this.base.host, "mousemove", this.mousemovefunc),
            this.removeHandler(this.base.host, r),
            this.removeHandler(i(document), t),
            this.timer = null,
            delete this.mousemovefunc,
            delete this.timer;
            var s = i.data(this.base.element, "jqxRepeatButton");
            s && delete s.instance,
            i(this.base.element).removeData(),
            this.base.destroy(),
            delete this.base
        },
        stop: function() {
            clearInterval(this.timer),
            this.timer = null
        },
        ontimer: function(e) {
            e = new i.Event("click"),
            null != this.base && null != this.base.host && this.base.host.trigger(e)
        }
    }),
    i.jqx.jqxWidget("jqxToggleButton", "jqxButton", {}),
    i.extend(i.jqx._jqxToggleButton.prototype, {
        defineInstance: function() {
            this.toggled = !1,
            this.uiToggle = !0,
            this.aria = {
                "aria-checked": {
                    name: "toggled",
                    type: "boolean"
                },
                "aria-disabled": {
                    name: "disabled",
                    type: "boolean"
                }
            }
        },
        createInstance: function(e) {
            var t = this;
            t.base.overrideTheme = !0,
            t.isTouchDevice = i.jqx.mobile.isTouchDevice(),
            i.jqx.aria(this),
            t.propertyChangeMap.roundedCorners = function(e, t, r, s) {
                e.base.buttonObj.removeClass(e.toThemeProperty(i.jqx.cssroundedcorners(r))),
                e.base.buttonObj.addClass(e.toThemeProperty(i.jqx.cssroundedcorners(s)))
            }
            ,
            t.propertyChangeMap.toggled = function(e, t, i, r) {
                e.refresh()
            }
            ,
            t.propertyChangeMap.disabled = function(e, t, i, r) {
                e.base.disabled = r,
                e.refresh()
            }
            ,
            t.addHandler(t.base.host, "click", function(e) {
                !t.base.disabled && t.uiToggle && t.toggle()
            }),
            t.isTouchDevice || (t.addHandler(t.base.host, "mouseenter", function(e) {
                t.base.disabled || t.refresh()
            }),
            t.addHandler(t.base.host, "mouseleave", function(e) {
                t.base.disabled || t.refresh()
            })),
            t.addHandler(t.base.host, "mousedown", function(e) {
                t.base.disabled || t.refresh()
            }),
            t.addHandler(i(document), "mouseup.togglebutton" + t.base.element.id, function(e) {
                t.base.disabled || t.refresh()
            })
        },
        destroy: function() {
            this._removeHandlers(),
            this.base.destroy()
        },
        _removeHandlers: function() {
            this.removeHandler(this.base.host, "click"),
            this.removeHandler(this.base.host, "mouseenter"),
            this.removeHandler(this.base.host, "mouseleave"),
            this.removeHandler(this.base.host, "mousedown"),
            this.removeHandler(i(document), "mouseup.togglebutton" + this.base.element.id)
        },
        toggle: function() {
            this.toggled = !this.toggled,
            this.refresh(),
            i.jqx.aria(this, "aria-checked", this.toggled)
        },
        unCheck: function() {
            this.toggled = !1,
            this.refresh()
        },
        check: function() {
            this.toggled = !0,
            this.refresh()
        },
        refresh: function() {
            var e = this
              , t = e.base.toThemeProperty("jqx-fill-state-disabled")
              , i = e.base.toThemeProperty("jqx-fill-state-normal");
            e.base.enableDefault || (i = "");
            var r = e.base.toThemeProperty("jqx-fill-state-hover")
              , s = e.base.toThemeProperty("jqx-fill-state-pressed")
              , n = e.base.toThemeProperty("jqx-fill-state-pressed")
              , o = "";
            if (e.base.element.disabled = e.base.disabled,
            e.base.disabled)
                return o = i + " " + t,
                void e.base.buttonObj.addClass(o);
            o = e.base.isMouseOver && !e.isTouchDevice ? e.base.isPressed || e.toggled ? n : r : e.base.isPressed || e.toggled ? s : i,
            "default" !== e.base.template && "" !== e.base.template && (o += " jqx-" + e.base.template,
            "" != e.base.theme && (o += " jqx-" + e.template + "-" + e.base.theme)),
            e.base.buttonObj.hasClass(t) && t != o && e.base.buttonObj.removeClass(t),
            e.base.buttonObj.hasClass(i) && i != o && e.base.buttonObj.removeClass(i),
            e.base.buttonObj.hasClass(r) && r != o && e.base.buttonObj.removeClass(r),
            e.base.buttonObj.hasClass(s) && s != o && e.base.buttonObj.removeClass(s),
            e.base.buttonObj.hasClass(n) && n != o && e.base.buttonObj.removeClass(n),
            e.base.buttonObj.hasClass(o) || e.base.buttonObj.addClass(o)
        },
        _topDocumentMouseupHandler: function(e) {
            that.isPressed = !1,
            that.refresh()
        }
    })
}
, function(e, t) {
    var i;
    (i = jqxBaseFramework).jqx.jqxWidget("jqxScrollBar", "", {}),
    i.extend(i.jqx._jqxScrollBar.prototype, {
        defineInstance: function() {
            var e = {
                height: null,
                width: null,
                vertical: !1,
                min: 0,
                max: 1e3,
                value: 0,
                step: 10,
                largestep: 50,
                thumbMinSize: 10,
                thumbSize: 0,
                thumbStep: "auto",
                roundedCorners: "all",
                showButtons: !0,
                disabled: !1,
                touchMode: "auto",
                touchModeStyle: "auto",
                thumbTouchSize: 0,
                _triggervaluechanged: !0,
                rtl: !1,
                areaDownCapture: !1,
                areaUpCapture: !1,
                _initialLayout: !1,
                offset: 0,
                reference: 0,
                velocity: 0,
                frame: 0,
                timestamp: 0,
                ticker: null,
                amplitude: 0,
                target: 0
            };
            return this === i.jqx._jqxScrollBar.prototype ? e : (i.extend(!0, this, e),
            e)
        },
        createInstance: function(e) {
            this.render()
        },
        render: function() {
            this._mouseup = new Date;
            var e = this
              , t = "<div id='jqxScrollOuterWrap' style='box-sizing: content-box; width:100%; height: 100%; align:left; border: 0px; valign:top; position: relative;'><div id='jqxScrollWrap' style='box-sizing: content-box; width:100%; height: 100%; left: 0px; top: 0px; align:left; valign:top; position: absolute;'><div id='jqxScrollBtnUp' style='box-sizing: content-box; align:left; valign:top; left: 0px; top: 0px; position: absolute;'><div></div></div><div id='jqxScrollAreaUp' style='box-sizing: content-box; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='jqxScrollThumb' style='box-sizing: content-box; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='jqxScrollAreaDown' style='box-sizing: content-box; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='jqxScrollBtnDown' style='box-sizing: content-box; align:left; valign:top; left: 0px; top: 0px; position: absolute;'><div></div></div></div></div>";
            if (i.jqx.utilities && "hidden" == i.jqx.utilities.scrollBarButtonsVisibility && (this.showButtons = !1),
            e.WinJS ? MSApp.execUnsafeLocalFunction(function() {
                e.host.html(t)
            }) : this.element.innerHTML = t,
            null != this.width && parseInt(this.width) > 0 && this.host.width(parseInt(this.width)),
            null != this.height && parseInt(this.height) > 0 && this.host.height(parseInt(this.height)),
            this.isPercentage = !1,
            null != this.width && -1 != this.width.toString().indexOf("%") && (this.host.width(this.width),
            this.isPercentage = !0),
            null != this.height && -1 != this.height.toString().indexOf("%") && (this.host.height(this.height),
            this.isPercentage = !0),
            this.isPercentage) {
                var r = this;
                i.jqx.utilities.resize(this.host, function() {
                    r._arrange()
                }, !1)
            }
            this.thumbCapture = !1,
            this.scrollOuterWrap = i(this.element.firstChild),
            this.scrollWrap = i(this.scrollOuterWrap[0].firstChild),
            this.btnUp = i(this.scrollWrap[0].firstChild),
            this.areaUp = i(this.btnUp[0].nextSibling),
            this.btnThumb = i(this.areaUp[0].nextSibling),
            this.arrowUp = i(this.btnUp[0].firstChild),
            this.areaDown = i(this.btnThumb[0].nextSibling),
            this.btnDown = i(this.areaDown[0].nextSibling),
            this.arrowDown = i(this.btnDown[0].firstChild);
            var s = this.element.id;
            if (this.btnUp[0].id = "jqxScrollBtnUp" + s,
            this.btnDown[0].id = "jqxScrollBtnDown" + s,
            this.btnThumb[0].id = "jqxScrollThumb" + s,
            this.areaUp[0].id = "jqxScrollAreaUp" + s,
            this.areaDown[0].id = "jqxScrollAreaDown" + s,
            this.scrollWrap[0].id = "jqxScrollWrap" + s,
            this.scrollOuterWrap[0].id = "jqxScrollOuterWrap" + s,
            !this.host.jqxRepeatButton)
                throw new Error("jqxScrollBar: Missing reference to jqxbuttons.js.");
            this.btnUp.jqxRepeatButton({
                _ariaDisabled: !0,
                overrideTheme: !0,
                disabled: this.disabled
            }),
            this.btnDown.jqxRepeatButton({
                _ariaDisabled: !0,
                overrideTheme: !0,
                disabled: this.disabled
            }),
            this.btnDownInstance = i.data(this.btnDown[0], "jqxRepeatButton").instance,
            this.btnUpInstance = i.data(this.btnUp[0], "jqxRepeatButton").instance,
            this.areaUp.jqxRepeatButton({
                _scrollAreaButton: !0,
                _ariaDisabled: !0,
                overrideTheme: !0
            }),
            this.areaDown.jqxRepeatButton({
                _scrollAreaButton: !0,
                _ariaDisabled: !0,
                overrideTheme: !0
            }),
            this.btnThumb.jqxButton({
                _ariaDisabled: !0,
                overrideTheme: !0,
                disabled: this.disabled
            }),
            this.propertyChangeMap.value = function(e, t, i, r) {
                isNaN(r) || i != r && e.setPosition(parseFloat(r), !0)
            }
            ,
            this.propertyChangeMap.width = function(e, t, i, r) {
                null != e.width && parseInt(e.width) > 0 && (e.host.width(parseInt(e.width)),
                e._arrange())
            }
            ,
            this.propertyChangeMap.height = function(e, t, i, r) {
                null != e.height && parseInt(e.height) > 0 && (e.host.height(parseInt(e.height)),
                e._arrange())
            }
            ,
            this.propertyChangeMap.theme = function(e, t, i, r) {
                e.setTheme()
            }
            ,
            this.propertyChangeMap.max = function(e, t, i, r) {
                isNaN(r) || i != r && (e.max = parseInt(r),
                e.min > e.max && (e.max = e.min + 1),
                e._arrange(),
                e.setPosition(e.value))
            }
            ,
            this.propertyChangeMap.min = function(e, t, i, r) {
                isNaN(r) || i != r && (e.min = parseInt(r),
                e.min > e.max && (e.max = e.min + 1),
                e._arrange(),
                e.setPosition(e.value))
            }
            ,
            this.propertyChangeMap.disabled = function(e, t, i, r) {
                i != r && (r ? e.host.addClass(e.toThemeProperty("jqx-fill-state-disabled")) : e.host.removeClass(e.toThemeProperty("jqx-fill-state-disabled")),
                e.btnUp.jqxRepeatButton("disabled", e.disabled),
                e.btnDown.jqxRepeatButton("disabled", e.disabled),
                e.btnThumb.jqxButton("disabled", e.disabled))
            }
            ,
            this.propertyChangeMap.touchMode = function(e, t, i, r) {
                i != r && (e._updateTouchBehavior(),
                !0 === r ? (e.showButtons = !1,
                e.refresh()) : !1 === r && (e.showButtons = !0,
                e.refresh()))
            }
            ,
            this.propertyChangeMap.rtl = function(e, t, i, r) {
                i != r && e.refresh()
            }
            ,
            this.buttonUpCapture = !1,
            this.buttonDownCapture = !1,
            this._updateTouchBehavior(),
            this.setPosition(this.value),
            this._addHandlers(),
            this.setTheme()
        },
        resize: function(e, t) {
            this.width = e,
            this.height = t,
            this._arrange()
        },
        _updateTouchBehavior: function() {
            if (this.isTouchDevice = i.jqx.mobile.isTouchDevice(),
            1 == this.touchMode) {
                if (i.jqx.browser.msie && i.jqx.browser.version < 9)
                    return void this.setTheme();
                this.isTouchDevice = !0,
                i.jqx.mobile.setMobileSimulator(this.btnThumb[0]),
                this._removeHandlers(),
                this._addHandlers(),
                this.setTheme()
            } else
                0 == this.touchMode && (this.isTouchDevice = !1)
        },
        _addHandlers: function() {
            var e = this
              , t = !1;
            try {
                ("ontouchstart"in window || window.DocumentTouch && document instanceof DocumentTouch) && (t = !0,
                this._touchSupport = !0)
            } catch (e) {}
            if ((e.isTouchDevice || t) && (this.addHandler(this.btnThumb, i.jqx.mobile.getTouchEventName("touchend"), function(t) {
                var i = e.vertical ? e.toThemeProperty("jqx-scrollbar-thumb-state-pressed") : e.toThemeProperty("jqx-scrollbar-thumb-state-pressed-horizontal")
                  , r = e.toThemeProperty("jqx-fill-state-pressed");
                return e.btnThumb.removeClass(i),
                e.btnThumb.removeClass(r),
                e.disabled || e.handlemouseup(e, t),
                !1
            }),
            this.addHandler(this.btnThumb, i.jqx.mobile.getTouchEventName("touchstart"), function(t) {
                if (!e.disabled) {
                    if (1 == e.touchMode)
                        t.clientX = t.originalEvent.clientX,
                        t.clientY = t.originalEvent.clientY;
                    else {
                        var i = t;
                        i.originalEvent.touches && i.originalEvent.touches.length ? (t.clientX = i.originalEvent.touches[0].clientX,
                        t.clientY = i.originalEvent.touches[0].clientY) : (t.clientX = t.originalEvent.clientX,
                        t.clientY = t.originalEvent.clientY)
                    }
                    e.handlemousedown(t),
                    t.preventDefault && t.preventDefault()
                }
            }),
            i.jqx.mobile.touchScroll(this.element, e.max, function(t, i, r, s, n) {
                if ("visible" == e.host.css("visibility")) {
                    if (1 == e.touchMode)
                        n.clientX = n.originalEvent.clientX,
                        n.clientY = n.originalEvent.clientY;
                    else {
                        var o = n;
                        o.originalEvent.touches && o.originalEvent.touches.length ? (n.clientX = o.originalEvent.touches[0].clientX,
                        n.clientY = o.originalEvent.touches[0].clientY) : (n.clientX = n.originalEvent.clientX,
                        n.clientY = n.originalEvent.clientY)
                    }
                    var a = e.vertical ? e.toThemeProperty("jqx-scrollbar-thumb-state-pressed") : e.toThemeProperty("jqx-scrollbar-thumb-state-pressed-horizontal");
                    e.btnThumb.addClass(a),
                    e.btnThumb.addClass(e.toThemeProperty("jqx-fill-state-pressed")),
                    e.thumbCapture = !0,
                    e.handlemousemove(n)
                }
            }, e.element.id, e.host, e.host)),
            !this.isTouchDevice) {
                try {
                    if (("" != document.referrer || window.frameElement) && null != window.top && window.top != window.self) {
                        var r = null;
                        if (window.parent && document.referrer && (r = document.referrer),
                        r && -1 != r.indexOf(document.location.host)) {
                            var s = function(t) {
                                e.disabled || e.handlemouseup(e, t)
                            };
                            window.top.document.addEventListener ? window.top.document.addEventListener("mouseup", s, !1) : window.top.document.attachEvent && window.top.document.attachEvent("onmouseup", s)
                        }
                    }
                } catch (e) {}
                var n = "click mouseup mousedown";
                this.addHandler(this.btnDown, n, function(t) {
                    var i = e.step;
                    switch (Math.abs(e.max - e.min) <= i && (i = 1),
                    e.rtl && !e.vertical && (i = -e.step),
                    t.type) {
                    case "click":
                        e.buttonDownCapture && !e.isTouchDevice ? e.disabled || e.setPosition(e.value + i) : !e.disabled && e.isTouchDevice && e.setPosition(e.value + i);
                        break;
                    case "mouseup":
                        if (!e.btnDownInstance.base.disabled && e.buttonDownCapture)
                            return e.buttonDownCapture = !1,
                            e.btnDown.removeClass(e.toThemeProperty("jqx-scrollbar-button-state-pressed")),
                            e.btnDown.removeClass(e.toThemeProperty("jqx-fill-state-pressed")),
                            e._removeArrowClasses("pressed", "down"),
                            e.handlemouseup(e, t),
                            e.setPosition(e.value + i),
                            !1;
                        break;
                    case "mousedown":
                        if (!e.btnDownInstance.base.disabled)
                            return e.buttonDownCapture = !0,
                            e.btnDown.addClass(e.toThemeProperty("jqx-fill-state-pressed")),
                            e.btnDown.addClass(e.toThemeProperty("jqx-scrollbar-button-state-pressed")),
                            e._addArrowClasses("pressed", "down"),
                            !1
                    }
                }),
                this.addHandler(this.btnUp, n, function(t) {
                    var i = e.step;
                    switch (Math.abs(e.max - e.min) <= i && (i = 1),
                    e.rtl && !e.vertical && (i = -e.step),
                    t.type) {
                    case "click":
                        e.buttonUpCapture && !e.isTouchDevice ? e.disabled || e.setPosition(e.value - i) : !e.disabled && e.isTouchDevice && e.setPosition(e.value - i);
                        break;
                    case "mouseup":
                        if (!e.btnUpInstance.base.disabled && e.buttonUpCapture)
                            return e.buttonUpCapture = !1,
                            e.btnUp.removeClass(e.toThemeProperty("jqx-scrollbar-button-state-pressed")),
                            e.btnUp.removeClass(e.toThemeProperty("jqx-fill-state-pressed")),
                            e._removeArrowClasses("pressed", "up"),
                            e.handlemouseup(e, t),
                            e.setPosition(e.value - i),
                            !1;
                        break;
                    case "mousedown":
                        if (!e.btnUpInstance.base.disabled)
                            return e.buttonUpCapture = !0,
                            e.btnUp.addClass(e.toThemeProperty("jqx-fill-state-pressed")),
                            e.btnUp.addClass(e.toThemeProperty("jqx-scrollbar-button-state-pressed")),
                            e._addArrowClasses("pressed", "up"),
                            !1
                    }
                })
            }
            var o = "click";
            if (this.isTouchDevice && (o = i.jqx.mobile.getTouchEventName("touchend")),
            this.addHandler(this.areaUp, o, function(t) {
                if (!e.disabled) {
                    var i = e.largestep;
                    return e.rtl && !e.vertical && (i = -e.largestep),
                    e.setPosition(e.value - i),
                    !1
                }
            }),
            this.addHandler(this.areaDown, o, function(t) {
                if (!e.disabled) {
                    var i = e.largestep;
                    return e.rtl && !e.vertical && (i = -e.largestep),
                    e.setPosition(e.value + i),
                    !1
                }
            }),
            this.addHandler(this.areaUp, "mousedown", function(t) {
                if (!e.disabled)
                    return e.areaUpCapture = !0,
                    !1
            }),
            this.addHandler(this.areaDown, "mousedown", function(t) {
                if (!e.disabled)
                    return e.areaDownCapture = !0,
                    !1
            }),
            this.addHandler(this.btnThumb, "mousedown dragstart", function(t) {
                if ("dragstart" === t.type)
                    return !1;
                e.disabled || e.handlemousedown(t),
                t.preventDefault && t.preventDefault()
            }),
            this.addHandler(i(document), "mouseup." + this.element.id, function(t) {
                e.disabled || e.handlemouseup(e, t)
            }),
            !this.isTouchDevice && (this.mousemoveFunc = function(t) {
                e.disabled || e.handlemousemove(t)
            }
            ,
            this.addHandler(i(document), "mousemove." + this.element.id, this.mousemoveFunc),
            this.addHandler(i(document), "mouseleave." + this.element.id, function(t) {
                e.disabled || e.handlemouseleave(t)
            }),
            this.addHandler(i(document), "mouseenter." + this.element.id, function(t) {
                e.disabled || e.handlemouseenter(t)
            }),
            !e.disabled)) {
                this.addHandler(this.btnUp, "mouseenter mouseleave", function(t) {
                    "mouseenter" === t.type ? e.disabled || e.btnUpInstance.base.disabled || 1 == e.touchMode || (e.btnUp.addClass(e.toThemeProperty("jqx-scrollbar-button-state-hover")),
                    e.btnUp.addClass(e.toThemeProperty("jqx-fill-state-hover")),
                    e._addArrowClasses("hover", "up")) : e.disabled || e.btnUpInstance.base.disabled || 1 == e.touchMode || (e.btnUp.removeClass(e.toThemeProperty("jqx-scrollbar-button-state-hover")),
                    e.btnUp.removeClass(e.toThemeProperty("jqx-fill-state-hover")),
                    e._removeArrowClasses("hover", "up"))
                });
                var a = e.toThemeProperty("jqx-scrollbar-thumb-state-hover");
                e.vertical || (a = e.toThemeProperty("jqx-scrollbar-thumb-state-hover-horizontal")),
                this.addHandler(this.btnThumb, "mouseenter mouseleave", function(t) {
                    "mouseenter" === t.type ? e.disabled || 1 == e.touchMode || (e.btnThumb.addClass(a),
                    e.btnThumb.addClass(e.toThemeProperty("jqx-fill-state-hover"))) : e.disabled || 1 == e.touchMode || (e.btnThumb.removeClass(a),
                    e.btnThumb.removeClass(e.toThemeProperty("jqx-fill-state-hover")))
                }),
                this.addHandler(this.btnDown, "mouseenter mouseleave", function(t) {
                    "mouseenter" === t.type ? e.disabled || e.btnDownInstance.base.disabled || 1 == e.touchMode || (e.btnDown.addClass(e.toThemeProperty("jqx-scrollbar-button-state-hover")),
                    e.btnDown.addClass(e.toThemeProperty("jqx-fill-state-hover")),
                    e._addArrowClasses("hover", "down")) : e.disabled || e.btnDownInstance.base.disabled || 1 == e.touchMode || (e.btnDown.removeClass(e.toThemeProperty("jqx-scrollbar-button-state-hover")),
                    e.btnDown.removeClass(e.toThemeProperty("jqx-fill-state-hover")),
                    e._removeArrowClasses("hover", "down"))
                })
            }
        },
        destroy: function() {
            var e = this.btnUp
              , t = this.btnDown
              , r = this.btnThumb
              , s = (this.scrollWrap,
            this.areaUp)
              , n = this.areaDown;
            this.arrowUp.remove(),
            delete this.arrowUp,
            this.arrowDown.remove(),
            delete this.arrowDown,
            n.removeClass(),
            s.removeClass(),
            t.removeClass(),
            e.removeClass(),
            r.removeClass(),
            e.jqxRepeatButton("destroy"),
            t.jqxRepeatButton("destroy"),
            s.jqxRepeatButton("destroy"),
            n.jqxRepeatButton("destroy"),
            r.jqxButton("destroy");
            var o = i.data(this.element, "jqxScrollBar");
            this._removeHandlers(),
            this.btnUp = null,
            this.btnDown = null,
            this.scrollWrap = null,
            this.areaUp = null,
            this.areaDown = null,
            this.scrollOuterWrap = null,
            delete this.mousemoveFunc,
            delete this.btnDownInstance,
            delete this.btnUpInstance,
            delete this.scrollOuterWrap,
            delete this.scrollWrap,
            delete this.btnDown,
            delete this.areaDown,
            delete this.areaUp,
            delete this.btnDown,
            delete this.btnUp,
            delete this.btnThumb,
            delete this.propertyChangeMap.value,
            delete this.propertyChangeMap.min,
            delete this.propertyChangeMap.max,
            delete this.propertyChangeMap.touchMode,
            delete this.propertyChangeMap.disabled,
            delete this.propertyChangeMap.theme,
            delete this.propertyChangeMap,
            o && delete o.instance,
            this.host.removeData(),
            this.host.remove(),
            delete this.host,
            delete this.set,
            delete this.get,
            delete this.call,
            delete this.element
        },
        _removeHandlers: function() {
            this.removeHandler(this.btnUp, "mouseenter"),
            this.removeHandler(this.btnDown, "mouseenter"),
            this.removeHandler(this.btnThumb, "mouseenter"),
            this.removeHandler(this.btnUp, "mouseleave"),
            this.removeHandler(this.btnDown, "mouseleave"),
            this.removeHandler(this.btnThumb, "mouseleave"),
            this.removeHandler(this.btnUp, "click"),
            this.removeHandler(this.btnDown, "click"),
            this.removeHandler(this.btnDown, "mouseup"),
            this.removeHandler(this.btnUp, "mouseup"),
            this.removeHandler(this.btnDown, "mousedown"),
            this.removeHandler(this.btnUp, "mousedown"),
            this.removeHandler(this.areaUp, "mousedown"),
            this.removeHandler(this.areaDown, "mousedown"),
            this.removeHandler(this.areaUp, "click"),
            this.removeHandler(this.areaDown, "click"),
            this.removeHandler(this.btnThumb, "mousedown"),
            this.removeHandler(this.btnThumb, "dragstart"),
            this.removeHandler(i(document), "mouseup." + this.element.id),
            this.mousemoveFunc ? this.removeHandler(i(document), "mousemove." + this.element.id, this.mousemoveFunc) : this.removeHandler(i(document), "mousemove." + this.element.id),
            this.removeHandler(i(document), "mouseleave." + this.element.id),
            this.removeHandler(i(document), "mouseenter." + this.element.id)
        },
        _addArrowClasses: function(e, t) {
            "pressed" == e && (e = "selected"),
            "" != e && (e = "-" + e),
            this.vertical ? ("up" != t && null != t || this.arrowUp.addClass(this.toThemeProperty("jqx-icon-arrow-up" + e)),
            "down" != t && null != t || this.arrowDown.addClass(this.toThemeProperty("jqx-icon-arrow-down" + e))) : ("up" != t && null != t || this.arrowUp.addClass(this.toThemeProperty("jqx-icon-arrow-left" + e)),
            "down" != t && null != t || this.arrowDown.addClass(this.toThemeProperty("jqx-icon-arrow-right" + e)))
        },
        _removeArrowClasses: function(e, t) {
            "pressed" == e && (e = "selected"),
            "" != e && (e = "-" + e),
            this.vertical ? ("up" != t && null != t || this.arrowUp.removeClass(this.toThemeProperty("jqx-icon-arrow-up" + e)),
            "down" != t && null != t || this.arrowDown.removeClass(this.toThemeProperty("jqx-icon-arrow-down" + e))) : ("up" != t && null != t || this.arrowUp.removeClass(this.toThemeProperty("jqx-icon-arrow-left" + e)),
            "down" != t && null != t || this.arrowDown.removeClass(this.toThemeProperty("jqx-icon-arrow-right" + e)))
        },
        setTheme: function() {
            var e = this.btnUp
              , t = this.btnDown
              , r = this.btnThumb
              , s = this.scrollWrap
              , n = (this.areaUp,
            this.areaDown,
            this.arrowUp)
              , o = this.arrowDown;
            this.scrollWrap[0].className = this.toThemeProperty("jqx-reset"),
            this.scrollOuterWrap[0].className = this.toThemeProperty("jqx-reset");
            var a = this.toThemeProperty("jqx-reset");
            this.areaDown[0].className = a,
            this.areaUp[0].className = a;
            var l = this.toThemeProperty("jqx-scrollbar") + " " + this.toThemeProperty("jqx-widget") + " " + this.toThemeProperty("jqx-widget-content");
            this.host.addClass(l),
            this.isTouchDevice && this.host.addClass(this.toThemeProperty("jqx-scrollbar-mobile")),
            t[0].className = this.toThemeProperty("jqx-scrollbar-button-state-normal"),
            e[0].className = this.toThemeProperty("jqx-scrollbar-button-state-normal");
            var d = "";
            if (this.vertical ? (n[0].className = a + " " + this.toThemeProperty("jqx-icon-arrow-up"),
            o[0].className = a + " " + this.toThemeProperty("jqx-icon-arrow-down"),
            d = this.toThemeProperty("jqx-scrollbar-thumb-state-normal")) : (n[0].className = a + " " + this.toThemeProperty("jqx-icon-arrow-left"),
            o[0].className = a + " " + this.toThemeProperty("jqx-icon-arrow-right"),
            d = this.toThemeProperty("jqx-scrollbar-thumb-state-normal-horizontal")),
            d += " " + this.toThemeProperty("jqx-fill-state-normal"),
            r[0].className = d,
            this.disabled ? (s.addClass(this.toThemeProperty("jqx-fill-state-disabled")),
            s.removeClass(this.toThemeProperty("jqx-scrollbar-state-normal"))) : (s.addClass(this.toThemeProperty("jqx-scrollbar-state-normal")),
            s.removeClass(this.toThemeProperty("jqx-fill-state-disabled"))),
            "all" == this.roundedCorners)
                if (this.host.addClass(this.toThemeProperty("jqx-rc-all")),
                this.vertical) {
                    var h = i.jqx.cssroundedcorners("top");
                    h = this.toThemeProperty(h),
                    e.addClass(h);
                    var c = i.jqx.cssroundedcorners("bottom");
                    c = this.toThemeProperty(c),
                    t.addClass(c)
                } else {
                    var u = i.jqx.cssroundedcorners("left");
                    u = this.toThemeProperty(u),
                    e.addClass(u);
                    var p = i.jqx.cssroundedcorners("right");
                    p = this.toThemeProperty(p),
                    t.addClass(p)
                }
            else {
                var f = i.jqx.cssroundedcorners(this.roundedCorners);
                f = this.toThemeProperty(f),
                elBtnUp.addClass(f),
                elBtnDown.addClass(f)
            }
            f = i.jqx.cssroundedcorners(this.roundedCorners),
            f = this.toThemeProperty(f),
            r.hasClass(f) || r.addClass(f),
            "none" === e.css("display") && (this.showButtons = !1,
            this.touchModeStyle = !0,
            r.addClass(this.toThemeProperty("jqx-scrollbar-thumb-state-normal-touch"))),
            this.isTouchDevice && 0 != this.touchModeStyle && (this.showButtons = !1,
            r.addClass(this.toThemeProperty("jqx-scrollbar-thumb-state-normal-touch")))
        },
        isScrolling: function() {
            return null != this.thumbCapture && null != this.buttonDownCapture && null != this.buttonUpCapture && null != this.areaDownCapture && null != this.areaUpCapture && (this.thumbCapture || this.buttonDownCapture || this.buttonUpCapture || this.areaDownCapture || this.areaUpCapture)
        },
        track: function() {
            var e, t, i, r;
            t = (e = Date.now()) - this.timestamp,
            this.timestamp = e,
            i = this.offset - this.frame,
            this.frame = this.offset,
            r = 1e3 * i / (1 + t),
            this.velocity = .2 * r + .2 * this.velocity
        },
        handlemousedown: function(e) {
            if (null == this.thumbCapture || 0 == this.thumbCapture) {
                this.thumbCapture = !0;
                var t = this.btnThumb;
                null != t && (t.addClass(this.toThemeProperty("jqx-fill-state-pressed")),
                this.vertical ? t.addClass(this.toThemeProperty("jqx-scrollbar-thumb-state-pressed")) : t.addClass(this.toThemeProperty("jqx-scrollbar-thumb-state-pressed-horizontal")))
            }
            var r = this;
            this.thumbCapture && i.jqx.scrollAnimation && (r.reference = parseInt(r.btnThumb[0].style.top),
            r.offset = parseInt(r.btnThumb[0].style.top),
            r.vertical || (r.reference = parseInt(r.btnThumb[0].style.left),
            r.offset = parseInt(r.btnThumb[0].style.left)),
            r.velocity = r.amplitude = 0,
            r.frame = r.offset,
            r.timestamp = Date.now(),
            clearInterval(r.ticker),
            r.ticker = setInterval(function() {
                r.track()
            }, 100)),
            this.dragStartX = e.clientX,
            this.dragStartY = e.clientY,
            this.dragStartValue = this.value
        },
        toggleHover: function(e, t) {},
        refresh: function() {
            this._arrange()
        },
        _setElementPosition: function(e, t, i) {
            isNaN(t) || parseInt(e[0].style.left) != parseInt(t) && (e[0].style.left = t + "px"),
            isNaN(i) || parseInt(e[0].style.top) != parseInt(i) && (e[0].style.top = i + "px")
        },
        _setElementTopPosition: function(e, t) {
            isNaN(t) || (e[0].style.top = t + "px")
        },
        _setElementLeftPosition: function(e, t) {
            isNaN(t) || (e[0].style.left = t + "px")
        },
        handlemouseleave: function(e) {
            var t = this.btnUp
              , i = this.btnDown;
            if ((this.buttonDownCapture || this.buttonUpCapture) && (t.removeClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed")),
            i.removeClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed")),
            this._removeArrowClasses("pressed")),
            1 == this.thumbCapture) {
                var r = this.btnThumb
                  , s = this.vertical ? this.toThemeProperty("jqx-scrollbar-thumb-state-pressed") : this.toThemeProperty("jqx-scrollbar-thumb-state-pressed-horizontal");
                r.removeClass(s),
                r.removeClass(this.toThemeProperty("jqx-fill-state-pressed"))
            }
        },
        handlemouseenter: function(e) {
            var t = this.btnUp
              , i = this.btnDown;
            if (this.buttonUpCapture && (t.addClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed")),
            t.addClass(this.toThemeProperty("jqx-fill-state-pressed")),
            this._addArrowClasses("pressed", "up")),
            this.buttonDownCapture && (i.addClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed")),
            i.addClass(this.toThemeProperty("jqx-fill-state-pressed")),
            this._addArrowClasses("pressed", "down")),
            1 == this.thumbCapture) {
                var r = this.btnThumb;
                this.vertical ? r.addClass(this.toThemeProperty("jqx-scrollbar-thumb-state-pressed")) : r.addClass(this.toThemeProperty("jqx-scrollbar-thumb-state-pressed-horizontal")),
                r.addClass(this.toThemeProperty("jqx-fill-state-pressed"))
            }
        },
        handlemousemove: function(e) {
            var t = this.btnUp
              , i = this.btnDown;
            if (null != i && null != t) {
                if (null != t && null != i && null != this.buttonDownCapture && null != this.buttonUpCapture && (this.buttonDownCapture && 0 == e.which ? (i.removeClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed")),
                i.removeClass(this.toThemeProperty("jqx-fill-state-pressed")),
                this._removeArrowClasses("pressed", "down"),
                this.buttonDownCapture = !1) : this.buttonUpCapture && 0 == e.which && (t.removeClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed")),
                t.removeClass(this.toThemeProperty("jqx-fill-state-pressed")),
                this._removeArrowClasses("pressed", "up"),
                this.buttonUpCapture = !1)),
                1 != this.thumbCapture)
                    return !1;
                var r = this.btnThumb;
                if (0 == e.which && !this.isTouchDevice && !this._touchSupport) {
                    this.thumbCapture = !1,
                    this._arrange();
                    var s = this.vertical ? this.toThemeProperty("jqx-scrollbar-thumb-state-pressed") : this.toThemeProperty("jqx-scrollbar-thumb-state-pressed-horizontal");
                    return r.removeClass(s),
                    r.removeClass(this.toThemeProperty("jqx-fill-state-pressed")),
                    !0
                }
                null != e.preventDefault && e.preventDefault(),
                null != e.originalEvent && (e.originalEvent.mouseHandled = !0),
                null != e.stopPropagation && e.stopPropagation();
                var n = 0;
                try {
                    n = this.vertical ? e.clientY - this.dragStartY : e.clientX - this.dragStartX;
                    var o = this._btnAndThumbSize;
                    this._btnAndThumbSize || (o = this.vertical ? t.height() + i.height() + r.height() : t.width() + i.width() + r.width());
                    var a = (this.max - this.min) / (this.scrollBarSize - o);
                    if ("auto" != this.thumbStep) {
                        if (n *= a,
                        Math.abs(this.dragStartValue + n - this.value) >= parseInt(this.thumbStep)) {
                            var l = Math.round(parseInt(n) / this.thumbStep) * this.thumbStep;
                            return this.rtl && !this.vertical ? this.setPosition(this.dragStartValue - l) : this.setPosition(this.dragStartValue + l),
                            !1
                        }
                        return !1
                    }
                    l = n *= a,
                    this.rtl && !this.vertical && (l = -n),
                    this.setPosition(this.dragStartValue + l),
                    this.offset = parseInt(r[0].style.left),
                    this.vertical && (this.offset = parseInt(r[0].style.top))
                } catch (e) {
                    alert(e)
                }
                return !1
            }
        },
        handlemouseup: function(e, t) {
            var r = !1;
            if (this.thumbCapture) {
                this.thumbCapture = !1;
                var s = this.btnThumb
                  , n = this.vertical ? this.toThemeProperty("jqx-scrollbar-thumb-state-pressed") : this.toThemeProperty("jqx-scrollbar-thumb-state-pressed-horizontal");
                if (s.removeClass(n),
                s.removeClass(this.toThemeProperty("jqx-fill-state-pressed")),
                r = !0,
                this._mouseup = new Date,
                i.jqx.scrollAnimation) {
                    var o = this;
                    clearInterval(this.ticker),
                    (this.velocity > 25 || this.velocity < -25) && (this.amplitude = .8 * this.velocity,
                    this.target = Math.round(this.offset + this.amplitude),
                    this.vertical,
                    this.target -= this.reference,
                    this.timestamp = Date.now(),
                    requestAnimationFrame(function e() {
                        var t, i;
                        if (o.amplitude)
                            if (t = Date.now() - o.timestamp,
                            (i = -o.amplitude * Math.exp(-t / 325)) > .5 || i < -.5) {
                                var r = s = (o.max - o.min) / (o.scrollBarSize - o._btnAndThumbSize) * (o.target + i);
                                o.rtl && !o.vertical && (r = -s),
                                o.setPosition(o.dragStartValue + r),
                                requestAnimationFrame(e)
                            } else {
                                var s;
                                r = s = (o.max - o.min) / (o.scrollBarSize - o._btnAndThumbSize) * (o.target + i),
                                o.rtl && !o.vertical && (r = -s),
                                o.setPosition(o.dragStartValue + r)
                            }
                    }))
                }
            }
            if (this.areaDownCapture = this.areaUpCapture = !1,
            this.buttonUpCapture || this.buttonDownCapture) {
                var a = this.btnUp
                  , l = this.btnDown;
                this.buttonUpCapture = !1,
                this.buttonDownCapture = !1,
                a.removeClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed")),
                l.removeClass(this.toThemeProperty("jqx-scrollbar-button-state-pressed")),
                a.removeClass(this.toThemeProperty("jqx-fill-state-pressed")),
                l.removeClass(this.toThemeProperty("jqx-fill-state-pressed")),
                this._removeArrowClasses("pressed"),
                r = !0,
                this._mouseup = new Date
            }
            r && (null != t.preventDefault && t.preventDefault(),
            null != t.originalEvent && (t.originalEvent.mouseHandled = !0),
            null != t.stopPropagation && t.stopPropagation())
        },
        setPosition: function(e, t) {
            if (this.element,
            null != e && NaN != e || (e = this.min),
            e >= this.max && (e = this.max),
            e < this.min && (e = this.min),
            this.value !== e || 1 == t) {
                if (e == this.max) {
                    var r = new i.Event("complete");
                    this.host.trigger(r)
                }
                var s = this.value;
                if (this._triggervaluechanged) {
                    var n = new i.Event("valueChanged");
                    n.previousValue = this.value,
                    n.currentValue = e
                }
                this.value = e,
                this._positionelements(),
                this._triggervaluechanged && this.host.trigger(n),
                this.valueChanged && this.valueChanged({
                    currentValue: this.value,
                    previousvalue: s
                })
            }
            return e
        },
        val: function(e) {
            return function(t) {
                for (var i in t)
                    if (t.hasOwnProperty(i))
                        return !1;
                return "number" != typeof e && "date" != typeof e && "boolean" != typeof e && "string" != typeof e
            }(e) || 0 == arguments.length ? this.value : (this.setPosition(e),
            e)
        },
        _getThumbSize: function(e) {
            var t = this.max - this.min
              , i = 0;
            return t > 1 ? i = e / (t + e) * e : 1 == t ? i = e - 1 : 0 == t && (i = e),
            this.thumbSize > 0 && (i = this.thumbSize),
            i < this.thumbMinSize && (i = this.thumbMinSize),
            Math.min(i, e)
        },
        _positionelements: function() {
            this.element;
            var e = this.areaUp
              , t = this.areaDown
              , i = (this.btnUp,
            this.btnDown,
            this.btnThumb)
              , r = (this.scrollWrap,
            this._height ? this._height : this.host.height())
              , s = this._width ? this._width : this.host.width()
              , n = this.vertical ? s : r;
            this.showButtons || (n = 0);
            var o = this.vertical ? r : s;
            this.scrollBarSize = o;
            var a = this._getThumbSize(o - 2 * n);
            (a = Math.floor(a)) < this.thumbMinSize && (a = this.thumbMinSize),
            (NaN == r || r < 10) && (r = 10),
            (NaN == s || s < 10) && (s = 10),
            n += 2,
            this.btnSize = n;
            var l = this._btnAndThumbSize;
            this._btnAndThumbSize || (l = this.vertical ? 2 * this.btnSize + i.outerHeight() : 2 * this.btnSize + i.outerWidth(),
            l = Math.round(l));
            var d = (o - l) / (this.max - this.min) * (this.value - this.min);
            if (this.rtl && !this.vertical && (d = (o - l) / (this.max - this.min) * (this.max - this.value - this.min)),
            (d = Math.round(d)) < 0 && (d = 0),
            this.vertical) {
                var h = o - d - l;
                h < 0 && (h = 0),
                t[0].style.height = h + "px",
                e[0].style.height = d + "px",
                this._setElementTopPosition(e, n),
                this._setElementTopPosition(i, n + d),
                this._setElementTopPosition(t, n + d + a)
            } else
                e[0].style.width = d + "px",
                t[0].style.width = o - d - l >= 0 ? o - d - l + "px" : "0px",
                this._setElementLeftPosition(e, n),
                this._setElementLeftPosition(i, n + d),
                this._setElementLeftPosition(t, 2 + n + d + a)
        },
        _arrange: function() {
            var e = this;
            if (e._initialLayout)
                e._initialLayout = !1;
            else {
                if (e.min > e.max) {
                    var t = e.min;
                    e.min = e.max,
                    e.max = t
                }
                if (e.min < 0) {
                    var i = e.max - e.min;
                    e.min = 0,
                    e.max = i
                }
                e.element;
                var r = e.areaUp
                  , s = e.areaDown
                  , n = e.btnUp
                  , o = e.btnDown
                  , a = e.btnThumb
                  , l = e.scrollWrap
                  , d = parseInt(e.element.style.height)
                  , h = parseInt(e.element.style.width);
                e.isPercentage && (d = e.host.height(),
                h = e.host.width()),
                isNaN(d) && (d = 0),
                isNaN(h) && (h = 0),
                e._width = h,
                e._height = d;
                var c = e.vertical ? h : d;
                e.showButtons || (c = 0),
                n[0].style.width = c + "px",
                n[0].style.height = c + "px",
                o[0].style.width = c + "px",
                o[0].style.height = c + "px",
                e.vertical ? l[0].style.width = h + 2 + "px" : l[0].style.height = d + 2 + "px",
                e._setElementPosition(n, 0, 0);
                var u = c + 2;
                e.vertical ? e._setElementPosition(o, 0, d - u) : e._setElementPosition(o, h - u, 0);
                var p = e.vertical ? d : h;
                e.scrollBarSize = p;
                var f = e._getThumbSize(p - 2 * u);
                (f = Math.floor(f - 2)) < e.thumbMinSize && (f = e.thumbMinSize);
                var m = !1;
                e.isTouchDevice && 0 != e.touchModeStyle && (m = !0),
                e.vertical ? (a[0].style.width = h + "px",
                a[0].style.height = f + "px",
                m && 0 !== e.thumbTouchSize && (a.css({
                    width: e.thumbTouchSize + "px"
                }),
                a.css("margin-left", (e.host.width() - e.thumbTouchSize) / 2))) : (a[0].style.width = f + "px",
                a[0].style.height = d + "px",
                m && 0 !== e.thumbTouchSize && (a.css({
                    height: e.thumbTouchSize + "px"
                }),
                a.css("margin-top", (e.host.height() - e.thumbTouchSize) / 2))),
                (NaN == d || d < 10) && (d = 10),
                (NaN == h || h < 10) && (h = 10),
                e.btnSize = c;
                var g = e.vertical ? 2 * u + (2 + parseInt(a[0].style.height)) : 2 * u + (2 + parseInt(a[0].style.width));
                g = Math.round(g),
                e._btnAndThumbSize = g;
                var v = (p - g) / (e.max - e.min) * (e.value - e.min);
                if (e.rtl && !e.vertical && (v = (p - g) / (e.max - e.min) * (e.max - e.value - e.min)),
                v = Math.round(v),
                (isNaN(v) || v < 0 || v === -1 / 0 || v === 1 / 0) && (v = 0),
                e.vertical) {
                    var w = p - v - g;
                    w < 0 && (w = 0),
                    s[0].style.height = w + "px",
                    s[0].style.width = h + "px",
                    r[0].style.height = v + "px",
                    r[0].style.width = h + "px";
                    var x = parseInt(e.element.style.height);
                    e.isPercentage && (x = e.host.height()),
                    a[0].style.visibility = "inherit",
                    (x - 3 * parseInt(c) < 0 || x < g) && (a[0].style.visibility = "hidden"),
                    e._setElementPosition(r, 0, u),
                    e._setElementPosition(a, 0, u + v),
                    e._setElementPosition(s, 0, u + v + f)
                } else {
                    v > 0 && (r[0].style.width = v + "px"),
                    d > 0 && (r[0].style.height = d + "px");
                    var b = p - v - g;
                    b < 0 && (b = 0),
                    s[0].style.width = b + "px",
                    s[0].style.height = d + "px";
                    var y = parseInt(e.element.style.width);
                    e.isPercentage && (y = e.host.width()),
                    a[0].style.visibility = "inherit",
                    (y - 3 * parseInt(c) < 0 || y < g) && (a[0].style.visibility = "hidden"),
                    e._setElementPosition(r, u, 0),
                    e._setElementPosition(a, u + v, 0),
                    e._setElementPosition(s, u + v + f, 0)
                }
            }
        }
    })
}
, function(e, t) {
    !function(e) {
        e.jqx.observableArray = function(t, i) {
            if ("string" == typeof t && (t = e.parseJSON(t)),
            !Object.defineProperty || !function() {
                try {
                    return Object.defineProperty({}, "x", {}),
                    !0
                } catch (e) {
                    return !1
                }
            }()) {
                var r = Object.defineProperty;
                Object.defineProperty = function(e, t, i) {
                    if (r)
                        try {
                            return r(e, t, i)
                        } catch (e) {}
                    if (e !== Object(e))
                        throw TypeError("Object.defineProperty called on non-object");
                    return Object.prototype.__defineGetter__ && "get"in i && Object.prototype.__defineGetter__.call(e, t, i.get),
                    Object.prototype.__defineSetter__ && "set"in i && Object.prototype.__defineSetter__.call(e, t, i.set),
                    "value"in i ? e[t] = i.value : e[t] || (e[t] = i),
                    e
                }
            }
            Array.prototype.forEach || (Array.prototype.forEach = function(e) {
                if (null == this)
                    throw TypeError();
                var t = Object(this)
                  , i = t.length >>> 0;
                if ("function" != typeof e)
                    throw TypeError();
                var r, s = arguments[1];
                for (r = 0; r < i; r++)
                    r in t && e.call(s, t[r], r, t)
            }
            ),
            "function" != typeof Object.getOwnPropertyNames && (Object.getOwnPropertyNames = function(e) {
                if (e !== Object(e))
                    throw TypeError("Object.getOwnPropertyNames called on non-object");
                var t, i = [];
                for (t in e)
                    Object.prototype.hasOwnProperty.call(e, t) && i.push(t);
                return i
            }
            );
            var s, n = this, o = [];
            n.notifier = null,
            n.name = "observableArray",
            n.observing = !0,
            n.changes = new Array;
            i = i;
            return n.observe = function() {
                n.observing = !0,
                1 == arguments.length && (i = arguments[0])
            }
            ,
            n.unobserve = function() {
                n.observing = !1
            }
            ,
            n.toArray = function() {
                return o.slice(0)
            }
            ,
            n.toJSON = function(e, t) {
                var i = o;
                t && (i = t);
                var r = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g
                  , s = {
                    "\b": "\\b",
                    "\t": "\\t",
                    "\n": "\\n",
                    "\f": "\\f",
                    "\r": "\\r",
                    '"': '\\"',
                    "\\": "\\\\"
                };
                function n(e) {
                    return '"' + e.replace(r, function(e) {
                        var t = s[e];
                        return "string" == typeof t ? t : "\\u" + ("0000" + e.charCodeAt(0).toString(16)).slice(-4)
                    }) + '"'
                }
                function a(e) {
                    return e < 10 ? "0" + e : e
                }
                function l(t) {
                    switch (Object.prototype.toString.call(t)) {
                    case "[object Date]":
                        return i = t,
                        isFinite(i.valueOf()) ? i.getUTCFullYear() + "-" + a(i.getUTCMonth() + 1) + "-" + a(i.getUTCDate()) + "T" + a(i.getUTCHours()) + ":" + a(i.getUTCMinutes()) + ":" + a(i.getUTCSeconds()) + 'Z"' : "null";
                    case "[object Array]":
                        return function(e) {
                            var t, i = e.length, r = [];
                            for (t = 0; t < i; t++)
                                r.push(d(t, e) || "null");
                            return "[" + r.join(",") + "]"
                        }(t)
                    }
                    var i;
                    return function(t) {
                        var i, r, s = [];
                        for (i in t)
                            if (Object.prototype.hasOwnProperty.call(t, i)) {
                                if ("" != i && e && -1 === e.indexOf(i))
                                    continue;
                                (r = d(i, t)) && s.push(n(i) + ":" + r)
                            }
                        return "{" + s.join(",") + "}"
                    }(t)
                }
                function d(e, t) {
                    var i = t[e]
                      , r = typeof i;
                    return i && "object" == typeof i && "function" == typeof i.toJSON && (r = typeof (i = i.toJSON(e))),
                    /(number|float|int|integer|string|boolean)/.test(r) || !i && "object" === r ? function(e, t) {
                        switch (t) {
                        case "string":
                            return n(e);
                        case "number":
                        case "float":
                        case "integer":
                        case "int":
                            return isFinite(e) ? e : "null";
                        case "boolean":
                            return e
                        }
                        return "null"
                    }(i, r) : l(i)
                }
                return !e && window.JSON && "function" == typeof window.JSON.stringify ? window.JSON.stringify(i) : d("", {
                    "": i
                })
            }
            ,
            n.defineIndexProperty = function(t) {
                if (!(t in n)) {
                    var i = function(t, i, r, a) {
                        var l = t[i]
                          , d = l
                          , h = function() {
                            return d
                        }
                          , c = function(t) {
                            if (d !== (l = t)) {
                                var r = d;
                                if (d = l,
                                "function" == typeof s) {
                                    var h = o.indexOf(a)
                                      , c = ""
                                      , u = function(t, r) {
                                        Object.getOwnPropertyNames(t).forEach(function(s) {
                                            var n = e.type(t[s]);
                                            "array" == n || "object" == n ? u(t[s], r + "." + s) : i === s && (c = r + "." + s)
                                        })
                                    };
                                    u(a, h),
                                    s({
                                        object: n,
                                        type: "update",
                                        path: c,
                                        index: h,
                                        name: i,
                                        newValue: l,
                                        oldValue: r
                                    })
                                }
                            }
                            return d = l,
                            l
                        };
                        null != t[i] && "length" != i && (Object.defineProperty ? Object.defineProperty(t, i, {
                            get: h,
                            set: c
                        }) : Object.prototype.__defineGetter__ && Object.prototype.__defineSetter__ && (Object.prototype.__defineGetter__.call(t, i, h),
                        Object.prototype.__defineSetter__.call(t, i, c)))
                    }
                      , r = function(t, s, n) {
                        var o = e.type(t);
                        /(number|float|int|integer|string|boolean)/.test(o) || void 0 !== t && Object.getOwnPropertyNames(t).forEach(function(o) {
                            var a = e.type(t[o]);
                            "array" == a || "object" == a ? (i(t, o, 0, n),
                            r(t[o], s + "." + o, n)) : i(t, o, 0, n)
                        })
                    };
                    Object.defineProperty(n, t, {
                        configurable: !0,
                        enumerable: !0,
                        get: function() {
                            return o[t]
                        },
                        set: function(e) {
                            var i = o[t];
                            n.toJSON(null, i) != n.toJSON(null, e) && (o[t] = e,
                            "function" == typeof s && s({
                                object: n,
                                type: "update",
                                path: t.toString(),
                                index: t,
                                name: "index",
                                newValue: e,
                                oldValue: i
                            }),
                            r(e, t, e))
                        }
                    }),
                    r(n[t], t, n[t])
                }
            }
            ,
            n.push = function() {
                for (var e, t = 0, i = arguments.length; t < i; t++)
                    e = o.length,
                    o.push(arguments[t]),
                    n.defineIndexProperty(e),
                    "function" == typeof s && s({
                        object: n,
                        type: "add",
                        name: "length",
                        index: e,
                        newValue: o.length,
                        oldValue: e
                    });
                return o.length
            }
            ,
            n.pop = function() {
                if (~o.length) {
                    var e = o.length - 1
                      , t = o.pop();
                    return delete n[e],
                    "function" == typeof s && s({
                        object: n,
                        type: "delete",
                        name: "length",
                        index: e,
                        newValue: o.length,
                        oldValue: e
                    }),
                    t
                }
            }
            ,
            n.unshift = function() {
                for (var e = o.length, t = 0, i = arguments.length; t < i; t++)
                    o.splice(t, 0, arguments[t]),
                    n.defineIndexProperty(o.length - 1);
                return "function" == typeof s && s({
                    object: n,
                    type: "add",
                    index: 0,
                    name: "length",
                    newValue: o.length,
                    oldValue: e
                }),
                o.length
            }
            ,
            n.shift = function() {
                var e = o.length;
                if (~o.length) {
                    var t = o.shift();
                    return 0 === o.length && delete n[e],
                    "function" == typeof s && s({
                        object: n,
                        type: "delete",
                        index: e,
                        name: "length",
                        newValue: o.length,
                        oldValue: e
                    }),
                    t
                }
            }
            ,
            n.slice = function(t, i, r) {
                var s = o.slice(t, i);
                return new e.jqx.observableArray(s,r)
            }
            ,
            n.splice = function(t, i, r) {
                var a, l = [];
                for (t = ~t ? t : o.length - t,
                i = (null == i ? o.length - t : i) || 0; i--; )
                    a = o.splice(t, 1)[0],
                    l.push(a),
                    delete n[o.length],
                    "function" == typeof s && s({
                        object: n,
                        type: "delete",
                        index: t,
                        name: "length",
                        newValue: -1,
                        oldValue: t
                    });
                for (var d = 2, h = arguments.length; d < h; d++)
                    o.splice(t, 0, arguments[d]),
                    defineIndexProperty(o.length - 1),
                    "function" == typeof s && s({
                        object: n,
                        type: "add",
                        index: t,
                        name: "length",
                        newValue: o.length - 1,
                        oldValue: t
                    }),
                    t++;
                return new e.jqx.observableArray(l,r)
            }
            ,
            Object.defineProperty(n, "length", {
                configurable: !1,
                enumerable: !0,
                get: function() {
                    return o.length
                },
                set: function(e) {
                    var t = Number(e);
                    if (!(t % 1 == 0 && t >= 0))
                        throw new RangeError("Invalid array length");
                    return t < o.length ? n.splice(t) : t > o.length && n.push.apply(n, new Array(t - o.length)),
                    e
                }
            }),
            e.jqx.observableArray.prototype.fromArray = function(t, i) {
                return new e.jqx.observableArray(t,i)
            }
            ,
            e.jqx.observableArray.prototype.clone = function() {
                var t = new e.jqx.observableArray(o,i);
                return t.observing = n.observing,
                t.changes = n.changes,
                t.notifier = n.notifier,
                t
            }
            ,
            n.remove = function(e) {
                if (e < 0 || e >= n.length)
                    throw new Error("Invalid index : " + e);
                if (n.hasOwnProperty(e)) {
                    var t = n[e];
                    return n[e] = void 0,
                    o[e] = void 0,
                    "function" == typeof s && s({
                        object: n,
                        type: "delete",
                        index: e,
                        name: "index",
                        newValue: void 0,
                        oldValue: t
                    }),
                    !0
                }
                return !1
            }
            ,
            n.concat = function(t, i) {
                var r = o.concat(t);
                return new e.jqx.observableArray(r,i)
            }
            ,
            Object.getOwnPropertyNames(Array.prototype).forEach(function(e) {
                if (!(e in n)) {
                    Object.defineProperty(n, e, {
                        configurable: !1,
                        enumerable: !0,
                        writeable: !1,
                        value: function() {
                            var t = n.observing;
                            n.observing = !1;
                            var i = o[e].apply(o, arguments);
                            return n.observing = t,
                            i
                        }
                    })
                }
            }),
            n.set = function(t, i) {
                if ("string" == e.type(t) && t.split(".").length > 1) {
                    for (var r = t.split("."), s = n, o = 0; o < r.length; o++) {
                        if (0 === o && r[o] >= n.length)
                            throw new Error("Invalid Index: " + t);
                        o < r.length - 1 ? s = s[r[o]] : s[r[o]] = i
                    }
                    return !0
                }
                return t >= n.length ? n.push(i) : n[t] = i,
                !0
            }
            ,
            n.get = function(e) {
                return n[e]
            }
            ,
            t instanceof Array && n.push.apply(n, t),
            s = function() {
                n.observing && (arguments && arguments[0] && n.changes.push(arguments[0]),
                i && i.apply(n, arguments),
                n.notifier && n.notifier.apply(n, arguments))
            }
            ,
            n
        }
        ,
        e.jqx.formatDate = function(t, i, r) {
            return e.jqx.dataFormat.formatdate(t, i, r)
        }
        ,
        e.jqx.formatNumber = function(t, i, r) {
            return e.jqx.dataFormat.formatnumber(t, i, r)
        }
        ,
        e.jqx.dataAdapter = function(t, i) {
            if (null != t && (void 0 !== t.dataFields && (t.datafields = t.dataFields),
            void 0 !== t.dataType && (t.datatype = t.dataType),
            void 0 !== t.localData && (t.localdata = t.localData),
            void 0 !== t.sortColumn && (t.sortcolumn = t.sortColumn),
            void 0 !== t.sortDirection && (t.sortdirection = t.sortDirection),
            void 0 !== t.sortColumns && (t.sortcolumns = t.sortColumns),
            void 0 !== t.sortDirections && (t.sortdirections = t.sortDirections),
            void 0 !== t.sortOrder && (t.sortdirection = t.sortOrder),
            void 0 !== t.formatData && (t.formatdata = t.formatData),
            void 0 !== t.processData && (t.processdata = t.processData),
            void 0 !== t.pageSize && (t.pagesize = t.pageSize),
            void 0 !== t.pageNum && (t.pagenum = t.pageNum),
            void 0 !== t.updateRow && (t.updaterow = t.updateRow),
            void 0 !== t.addRow && (t.addrow = t.addRow),
            void 0 !== t.deleteRow && (t.deleterow = t.deleteRow),
            void 0 !== t.contentType && (t.contenttype = t.contentType),
            null != t.totalRecords && (t.totalrecords = t.totalRecords),
            null != t.loadError && (t.loadError = t.loadError),
            null != t.sortComparer && (t.sortcomparer = t.sortComparer)),
            this._source = t,
            this._options = i || {},
            null != t.beforeLoadComplete && (this._options.beforeLoadComplete = this._source.beforeLoadComplete),
            null != t.downloadComplete && (this._options.downloadComplete = this._source.downloadComplete),
            null != t.loadComplete && (this._options.loadComplete = this._source.loadComplete),
            null != t.autoBind && (this._options.downloadComplete = this._source.autoBind),
            null != t.formatData && (this._options.formatData = this._source.formatData),
            null != t.loadError && (this._options.loadError = this._source.loadError),
            null != t.beforeSend && (this._options.beforeSend = this._source.beforeSend),
            null != t.contentType && (this._options.contentType = this._source.contentType),
            null != t.async && (this._options.async = this._source.async),
            null != t.loadServerData && (this._options.loadServerData = this._source.loadServerData),
            null != t.uniqueDataFields && (this._options.uniqueDataFields = this._source.uniqueDataFields),
            this.records = new Array,
            this._downloadComplete = new Array,
            this._bindingUpdate = new Array,
            null != t && null != t.localdata && "function" == typeof t.localdata) {
                var r = t.localdata();
                if (null != r) {
                    t._localdata = t.localdata;
                    var s = this;
                    t._localdata.subscribe && (s._oldlocaldata = [],
                    t._localdata.subscribe(function(t) {
                        var i = function(t) {
                            return e.isArray(t) ? e.makeArray(i(e(t))) : e.extend(!0, {}, t)
                        };
                        0 != s.suspendKO && null != s.suspendKO && 0 != s._oldlocaldata.length || (s._oldlocaldata = i(t))
                    }, t._localdata, "beforeChange"),
                    t._localdata.subscribe(function(e) {
                        if (0 == s.suspendKO || null == s.suspendKO) {
                            var i = "";
                            s._oldrecords = s.records,
                            0 == s._oldlocaldata.length && (t.localdata = t._localdata()),
                            0 == s._oldlocaldata.length ? i = "change" : e && (s._oldlocaldata.length == e.length && (i = "update"),
                            s._oldlocaldata.length > e.length && (i = "remove"),
                            s._oldlocaldata.length < e.length && (i = "add")),
                            s.dataBind(null, i)
                        }
                    }, t._localdata, "change"),
                    s._knockoutdatasource = !0),
                    t.localdata = r
                }
            }
            1 == this._options.autoBind && this.dataBind()
        }
        ,
        e.jqx.dataAdapter.prototype = {
            getrecords: function() {
                return this.records
            },
            beginUpdate: function() {
                this.isUpdating = !0
            },
            endUpdate: function(e) {
                this.isUpdating = !1,
                0 != e && (this._changedrecords && this._changedrecords.length > 0 ? (this.callBindingUpdate("update"),
                this._changedrecords = []) : this.dataBind(null, ""))
            },
            formatDate: function(t, i, r) {
                return e.jqx.dataFormat.formatdate(t, i, r)
            },
            formatNumber: function(t, i, r) {
                return e.jqx.dataFormat.formatnumber(t, i, r)
            },
            dataBind: function(t, i) {
                if (1 != this.isUpdating) {
                    var r = this._source;
                    if (r) {
                        r.generatedfields && (r.datafields = null,
                        r.generatedfields = null),
                        e.jqx.dataFormat.datescache = new Array,
                        null != r.dataFields && (r.datafields = r.dataFields),
                        null == r.recordstartindex && (r.recordstartindex = 0),
                        null == r.recordendindex && (r.recordendindex = 0),
                        null == r.loadallrecords && (r.loadallrecords = !0),
                        null == r.root && (r.root = ""),
                        null == r.record && (r.record = ""),
                        null != r.sort && (this.sort = r.sort),
                        null != r.filter ? this.filter = r.filter : this.filter = null,
                        null != r.sortcolumn && (this.sortcolumn = r.sortcolumn),
                        null != r.sortdirection && (this.sortdirection = r.sortdirection),
                        null != r.sortcolumns && (this.sortcolumns = r.sortcolumns),
                        null != r.sortdirections && (this.sortdirections = r.sortdirections),
                        null != r.sortcomparer && (this.sortcomparer = r.sortcomparer),
                        this.records = new Array;
                        var s = this._options || {};
                        if (this.virtualmode = null != s.virtualmode && s.virtualmode,
                        this.totalrecords = null != s.totalrecords ? s.totalrecords : 0,
                        this.pageable = null != s.pageable && s.pageable,
                        this.pagesize = null != s.pagesize ? s.pagesize : 0,
                        this.pagenum = null != s.pagenum ? s.pagenum : 0,
                        this.cachedrecords = null != s.cachedrecords ? s.cachedrecords : new Array,
                        this.originaldata = new Array,
                        this.recordids = new Array,
                        this.updaterow = null != s.updaterow ? s.updaterow : null,
                        this.addrow = null != s.addrow ? s.addrow : null,
                        this.deleterow = null != s.deleterow ? s.deleterow : null,
                        this.cache = null != s.cache && s.cache,
                        this.unboundmode = !1,
                        null != r.formatdata && (s.formatData = r.formatdata),
                        null != r.data && (null == s.data && (s.data = {}),
                        e.extend(s.data, r.data)),
                        null != r.mapChar && (r.mapchar = r.mapChar),
                        null != r.mapchar ? this.mapChar = r.mapchar ? r.mapchar : ">" : this.mapChar = s.mapChar ? s.mapChar : ">",
                        (s.unboundmode || r.unboundmode) && (this.unboundmode = s.unboundmode || r.unboundmode),
                        null != r.cache && (this.cache = r.cache),
                        this.koSubscriptions)
                            for (var n = 0; n < this.koSubscriptions.length; n++)
                                this.koSubscriptions[n].dispose();
                        this.koSubscriptions = new Array,
                        this.pagenum < 0 && (this.pagenum = 0);
                        var o = this
                          , a = r.datatype;
                        "csv" !== r.datatype && "tab" !== r.datatype && "tsv" !== r.datatype && "text" != r.datatype || (a = "text");
                        var l = null == s.async || s.async;
                        switch (null != r.async && (l = r.async),
                        a) {
                        case "local":
                        case "array":
                        case "observablearray":
                        case "observableArray":
                        default:
                            if (null == r.localdata && r.length) {
                                r.localdata = new Array;
                                for (var d = 0; d < r.length; d++)
                                    r.localdata[r.localdata.length] = r[d],
                                    r[d].uid = d
                            }
                            r.beforeprocessing && e.isFunction(r.beforeprocessing) && r.beforeprocessing(r.localdata);
                            var h = r.localdata.length;
                            if (this.totalrecords = this.virtualmode && r.totalrecords || h,
                            this.unboundmode)
                                if (this.totalrecords = this.unboundmode && r.totalrecords || h,
                                (p = r.datafields ? r.datafields.length : 0) > 0)
                                    for (d = 0; d < this.totalrecords; d++) {
                                        for (var c = {}, u = 0; u < p; u++)
                                            c[r.datafields[u].name] = "";
                                        c.uid = d,
                                        r.localdata[r.localdata.length] = c
                                    }
                            null == this.totalrecords && (this.totalrecords = 0);
                            var p = r.datafields ? r.datafields.length : 0
                              , f = function(t, i) {
                                for (var s = {}, n = 0; n < i; n++) {
                                    var a = r.datafields ? r.datafields[n] : {}
                                      , l = "";
                                    if (null != a && null != a) {
                                        if (a.map) {
                                            if (e.isFunction(a.map))
                                                l = a.map(t);
                                            else {
                                                var d = a.map.split(o.mapChar);
                                                if (d.length > 0) {
                                                    for (var h = t, c = 0; c < d.length; c++)
                                                        h && (h = h[d[c]]);
                                                    l = h
                                                } else
                                                    l = t[a.map]
                                            }
                                            null != l && null != l ? l = l.toString() : null == l && null != l && (l = "")
                                        }
                                        var u = !1;
                                        "" == l && (u = !0,
                                        null != (l = t[a.name]) && null != l && (r._localdata && l.subscribe ? l = l() : "array" != a.type && ("date" === a.type ? l && l instanceof Date && (l = l) : l = l.toString()))),
                                        "[object Object]" == l && a.map && u && (l = ""),
                                        l = o.getvaluebytype(l, a),
                                        null != a.displayname ? s[a.displayname] = l : s[a.name] = l
                                    }
                                }
                                return s
                            };
                            if (r._localdata) {
                                this._changedrecords = [],
                                this.records = new Array;
                                var m = r._localdata();
                                if (e.each(m, function(t, s) {
                                    if ("string" == typeof s)
                                        o.records.push(s);
                                    else {
                                        var n = {}
                                          , a = 0
                                          , l = this;
                                        e.each(this, function(i, s) {
                                            var d = null
                                              , h = "string"
                                              , c = i;
                                            if (p > 0) {
                                                for (var u = !1, f = !1, m = 0; m < p; m++) {
                                                    var g = r.datafields[m];
                                                    if (null != g && g.name == i) {
                                                        u = !0,
                                                        d = g.map,
                                                        h = g.type,
                                                        c = g.name;
                                                        break
                                                    }
                                                    if (null != g && g.map && g.map.indexOf(i) >= 0) {
                                                        u = !0,
                                                        d = g.map,
                                                        h = g.type,
                                                        c = g.name,
                                                        f = !0;
                                                        var v = l[i];
                                                        if (null != d)
                                                            if ((y = d.split(o.mapChar)).length > 0) {
                                                                for (var w = l, x = 0; x < y.length; x++)
                                                                    w = w[y[x]];
                                                                v = w
                                                            } else
                                                                v = l[d];
                                                        "string" != h && (v = o.getvaluebytype(v, {
                                                            type: h
                                                        })),
                                                        n[c] = v,
                                                        null != n[c] && (a += n[c].toString().length + n[c].toString().substr(0, 1))
                                                    }
                                                }
                                                if (!u)
                                                    return !0;
                                                if (f)
                                                    return !0
                                            }
                                            if (e.isFunction(l[i])) {
                                                v = l[i]();
                                                if ("string" != h && (v = o.getvaluebytype(v, {
                                                    type: h
                                                })),
                                                n[i] = v,
                                                l[i].subscribe) {
                                                    var b = t;
                                                    o.koSubscriptions[o.koSubscriptions.length] = l[i].subscribe(function(e) {
                                                        var t = b;
                                                        n[i] = e;
                                                        var r = {
                                                            index: t,
                                                            oldrecord: n,
                                                            record: n
                                                        };
                                                        if (o._changedrecords.push(r),
                                                        !o.isUpdating)
                                                            return o.callBindingUpdate("update"),
                                                            o._changedrecords = [],
                                                            !1
                                                    })
                                                }
                                            } else {
                                                var y;
                                                v = l[i];
                                                if (null != d)
                                                    if ((y = d.split(o.mapChar)).length > 0) {
                                                        for (w = l,
                                                        x = 0; x < y.length; x++)
                                                            w = w[y[x]];
                                                        v = w
                                                    } else
                                                        v = l[d];
                                                "string" != h && (v = o.getvaluebytype(v, {
                                                    type: h
                                                })),
                                                n[c] = v,
                                                null != n[c] && (a += n[c].toString().length + n[c].toString().substr(0, 1))
                                            }
                                        });
                                        var d = o.getid(r.id, l, t);
                                        if (n.uid = d,
                                        o.records.push(n),
                                        n._koindex = a,
                                        o._oldrecords) {
                                            var h = o.records.length - 1;
                                            if ("update" == i && o._oldrecords[h]._koindex != a) {
                                                var c = {
                                                    index: h,
                                                    oldrecord: o._oldrecords[h],
                                                    record: n
                                                };
                                                o._changedrecords.push(c)
                                            }
                                        }
                                    }
                                }),
                                "add" == i)
                                    for (h = o.records.length,
                                    d = 0; d < h; d++) {
                                        c = o.records[d];
                                        for (var g = !1, v = 0; v < o._oldrecords.length; v++)
                                            if (o._oldrecords[v]._koindex === c._koindex) {
                                                g = !0;
                                                break
                                            }
                                        g || o._changedrecords.push({
                                            index: d,
                                            oldrecord: null,
                                            record: c,
                                            position: 0 != d ? "last" : "first"
                                        })
                                    }
                                else if ("remove" == i)
                                    for (h = o._oldrecords.length,
                                    d = 0; d < h; d++) {
                                        var w = o._oldrecords[d];
                                        o.records[d] ? o.records[d]._koindex != w._koindex && o._changedrecords.push({
                                            index: d,
                                            oldrecord: w,
                                            record: null
                                        }) : o._changedrecords.push({
                                            index: d,
                                            oldrecord: w,
                                            record: null
                                        })
                                    }
                            } else if (e.isArray(r.localdata))
                                if (0 == p) {
                                    x = 0,
                                    b = new Array;
                                    e.each(r.localdata, function(t, i) {
                                        var s = new Object(this);
                                        if ("string" == typeof i)
                                            return o.records = r.localdata,
                                            !1;
                                        var n = o.getid(r.id, s, t);
                                        if ("object" == typeof n && (n = t),
                                        s.uid = n,
                                        0 == t) {
                                            for (var a in this) {
                                                x++;
                                                var l = e.type(this[a]);
                                                b.push({
                                                    name: a,
                                                    type: l
                                                })
                                            }
                                            p = x,
                                            r.datafields = b,
                                            r.generatedfields = b
                                        }
                                        if (p > 0) {
                                            var d = f(s, p);
                                            d.uid = n,
                                            o.records[o.records.length] = d
                                        } else
                                            o.records[o.records.length] = s
                                    })
                                } else
                                    e.each(r.localdata, function(e) {
                                        var t, i = f(t = this, p), s = o.getid(r.id, i, e);
                                        "object" == typeof s && (s = e),
                                        (t = new Object(i)).uid = s,
                                        o.records[o.records.length] = t
                                    });
                            else {
                                this.records = new Array;
                                var x = 0
                                  , b = new Array;
                                e.each(r.localdata, function(t) {
                                    var i = o.getid(r.id, this, t);
                                    if (0 == p && !("string" == typeof this || this instanceof String)) {
                                        for (var s in this) {
                                            x++;
                                            var n = e.type(this[s]);
                                            b.push({
                                                name: s,
                                                type: n
                                            })
                                        }
                                        p = x,
                                        r.datafields = b,
                                        r.generatedfields = b
                                    }
                                    if (p > 0) {
                                        var a = f(this, p);
                                        a.uid = i,
                                        o.records[o.records.length] = a
                                    } else
                                        this.uid = i,
                                        o.records[o.records.length] = this
                                })
                            }
                            if (this.originaldata = r.localdata,
                            this.cachedrecords = this.records,
                            this.addForeignValues(r),
                            s.uniqueDataFields) {
                                var y = this.getUniqueRecords(this.records, s.uniqueDataFields);
                                this.records = y,
                                this.cachedrecords = y
                            }
                            if (s.beforeLoadComplete)
                                null != (q = s.beforeLoadComplete(o.records, this.originaldata)) && (o.records = q,
                                o.cachedrecords = q);
                            if (s.autoSort && s.autoSortField) {
                                var _ = Object.prototype.toString;
                                Object.prototype.toString = "function" == typeof field ? field : function() {
                                    return this[s.autoSortField]
                                }
                                ,
                                o.records.sort(function(t, i) {
                                    if (void 0 === t && (t = null),
                                    void 0 === i && (i = null),
                                    null === t && null === i)
                                        return 0;
                                    if (null === t && null !== i)
                                        return 1;
                                    if (null !== t && null === i)
                                        return -1;
                                    if (t = t.toString(),
                                    i = i.toString(),
                                    null === t && null === i)
                                        return 0;
                                    if (null === t && null !== i)
                                        return 1;
                                    if (null !== t && null === i)
                                        return -1;
                                    if (e.jqx.dataFormat.isNumber(t) && e.jqx.dataFormat.isNumber(i))
                                        return t < i ? -1 : t > i ? 1 : 0;
                                    if (e.jqx.dataFormat.isDate(t) && e.jqx.dataFormat.isDate(i))
                                        return t < i ? -1 : t > i ? 1 : 0;
                                    e.jqx.dataFormat.isNumber(t) || e.jqx.dataFormat.isNumber(i) || (t = String(t).toLowerCase(),
                                    i = String(i).toLowerCase());
                                    try {
                                        if (t < i)
                                            return -1;
                                        if (t > i)
                                            return 1
                                    } catch (e) {}
                                    return 0
                                }),
                                Object.prototype.toString = _
                            }
                            o.loadedData = r.localdata,
                            o.buildHierarchy(),
                            e.isFunction(s.loadComplete) && s.loadComplete(r.localdata, o.records);
                            break;
                        case "json":
                        case "jsonp":
                        case "xml":
                        case "xhtml":
                        case "script":
                        case "text":
                        case "ics":
                            if (null != r.localdata && !r.url) {
                                if (e.isFunction(r.beforeprocessing) && r.beforeprocessing(r.localdata),
                                "xml" === r.datatype ? o.loadxml(r.localdata, r.localdata, r) : "text" === a ? o.loadtext(r.localdata, r) : "ics" === a ? o.loadics(r.localdata, r) : o.loadjson(r.localdata, r.localdata, r),
                                o.addForeignValues(r),
                                s.uniqueDataFields) {
                                    y = o.getUniqueRecords(o.records, s.uniqueDataFields);
                                    o.records = y,
                                    o.cachedrecords = y
                                }
                                var q;
                                if (s.beforeLoadComplete)
                                    null != (q = s.beforeLoadComplete(o.records, this.originaldata)) && (o.records = q,
                                    o.cachedrecords = q);
                                return o.loadedData = r.localdata,
                                o.buildHierarchy.call(o),
                                e.isFunction(s.loadComplete) && s.loadComplete(r.localdata, o.records),
                                void o.callBindingUpdate(i)
                            }
                            var j = null != s.data ? s.data : {};
                            if (r.processdata && r.processdata(j),
                            e.isFunction(s.processData) && s.processData(j),
                            e.isFunction(s.formatData)) {
                                var S = s.formatData(j);
                                null != S && (j = S)
                            }
                            var C = "application/x-www-form-urlencoded";
                            s.contentType && (C = s.contentType);
                            var T = "GET";
                            r.type && (T = r.type),
                            s.type && (T = s.type);
                            var I = a;
                            if ("ics" == a && (I = "text"),
                            r.url && r.url.length > 0)
                                e.isFunction(s.loadServerData) ? o._requestData(j, r, s) : this.xhr = e.jqx.data.ajax({
                                    dataType: I,
                                    cache: this.cache,
                                    type: T,
                                    url: r.url,
                                    async: l,
                                    timeout: r.timeout,
                                    contentType: C,
                                    data: j,
                                    success: function(t, i, n) {
                                        var l;
                                        e.isFunction(r.beforeprocessing) && (null != (l = r.beforeprocessing(t, i, n)) && (t = l));
                                        e.isFunction(s.downloadComplete) && (null != (l = s.downloadComplete(t, i, n)) && (t = l));
                                        if (null == t)
                                            return o.records = new Array,
                                            o.cachedrecords = new Array,
                                            o.originaldata = new Array,
                                            o.callDownloadComplete(),
                                            void (e.isFunction(s.loadComplete) && s.loadComplete(new Array));
                                        var d = t;
                                        if (t.records && (d = t.records),
                                        null != t.totalrecords ? r.totalrecords = t.totalrecords : null != t.totalRecords && (r.totalrecords = t.totalRecords),
                                        "xml" === r.datatype ? o.loadxml(null, d, r) : "text" === a ? o.loadtext(d, r) : "ics" === a ? o.loadics(d, r) : o.loadjson(null, d, r),
                                        o.addForeignValues(r),
                                        s.uniqueDataFields) {
                                            var h = o.getUniqueRecords(o.records, s.uniqueDataFields);
                                            o.records = h,
                                            o.cachedrecords = h
                                        }
                                        if (s.beforeLoadComplete) {
                                            var c = s.beforeLoadComplete(o.records, t);
                                            null != c && (o.records = c,
                                            o.cachedrecords = c)
                                        }
                                        o.loadedData = t,
                                        o.buildHierarchy.call(o),
                                        o.callDownloadComplete(),
                                        e.isFunction(s.loadComplete) && s.loadComplete(t, i, n, o.records)
                                    },
                                    error: function(t, i, n) {
                                        e.isFunction(r.loaderror) && r.loaderror(t, i, n),
                                        e.isFunction(s.loadError) && s.loadError(t, i, n),
                                        t = null,
                                        o.callDownloadComplete()
                                    },
                                    beforeSend: function(t, i) {
                                        e.isFunction(s.beforeSend) && s.beforeSend(t, i),
                                        e.isFunction(r.beforesend) && r.beforesend(t, i)
                                    }
                                });
                            else if (o.buildHierarchy(new Array),
                            o.callDownloadComplete(),
                            e.isFunction(s.loadComplete)) {
                                if (!k)
                                    var k = {};
                                s.loadComplete(k)
                            }
                        }
                        this.callBindingUpdate(i)
                    }
                }
            },
            buildHierarchy: function(e) {
                var t = this._source
                  , i = new Array;
                if (t.datafields) {
                    if (t.hierarchy && !t.hierarchy.reservedNames)
                        t.hierarchy.reservedNames = {
                            leaf: "leaf",
                            parent: "parent",
                            expanded: "expanded",
                            checked: "checked",
                            selected: "selected",
                            level: "level",
                            icon: "icon",
                            data: "data"
                        };
                    else if (t.hierarchy)
                        (s = t.hierarchy.reservedNames).leaf || (s.leaf = "leaf"),
                        s.parent || (s.parent = "parent"),
                        s.expanded || (s.expanded = "expanded"),
                        s.checked || (s.checked = "checked"),
                        s.selected || (s.selected = "selected"),
                        s.level || (s.level = "level"),
                        s.data || (s.data = "data");
                    if (t.hierarchy) {
                        var r = this
                          , s = t.hierarchy.reservedNames;
                        if (t.hierarchy.root) {
                            if ("xml" == t.dataType) {
                                i = this.getRecordsHierarchy("uid", "parentuid", "records", null, e);
                                return this.hierarchy = i,
                                i
                            }
                            this.hierarchy = this.records;
                            for (var n = t.hierarchy.root, o = 0; o < this.records.length; o++) {
                                var a = this.records[o];
                                if (a) {
                                    var l = function(e) {
                                        if (t.hierarchy.record)
                                            e.records = e[n][t.hierarchy.record];
                                        else {
                                            var i = n.split(r.mapChar)
                                              , o = null;
                                            if (i.length > 1) {
                                                for (var a = e, l = 0; l < i.length; l++)
                                                    null != a && (a = a[i[l]]);
                                                o = a
                                            } else
                                                o = e[n];
                                            e.records = o
                                        }
                                        (null == e.records || e.records && 0 == e.records.length) && (e[s.leaf] = !0)
                                    };
                                    l(a),
                                    a[s.level] = 0;
                                    var d = this.getid(t.id, a, o);
                                    a.uid = d,
                                    a[s.parent] = null,
                                    a[s.data] = a,
                                    void 0 === a[s.expanded] && (a[s.expanded] = !1);
                                    var h = function(e, i) {
                                        if (i)
                                            for (var n = 0; n < i.length; n++) {
                                                var o = i[n];
                                                if (o) {
                                                    l(o),
                                                    o[s.level] = e[s.level] + 1,
                                                    o[s.parent] = e,
                                                    o[s.data] = o;
                                                    var a = r.getid(t.id, o, n);
                                                    a == n && null == t.id ? o.uid = e.uid + "_" + a : o.uid = a,
                                                    void 0 === o[s.expanded] && (o[s.expanded] = !1),
                                                    h(o, o.records)
                                                }
                                            }
                                        else
                                            e.records = new Array
                                    };
                                    h(a, a.records)
                                }
                            }
                            return this.hierarchy
                        }
                        if (t.hierarchy.keyDataField && t.hierarchy.parentDataField) {
                            i = this.getRecordsHierarchy(t.hierarchy.keyDataField.name, t.hierarchy.parentDataField.name, "records", null, e);
                            return this.hierarchy = i,
                            i
                        }
                        if (t.hierarchy.groupingDataFields) {
                            var c = new Array;
                            for (o = 0; o < t.hierarchy.groupingDataFields.length; o++)
                                c.push(t.hierarchy.groupingDataFields[o].name);
                            i = this.getGroupedRecords(c, "records", "label", null, "data", null, "parent", e);
                            return this.hierarchy = i,
                            i
                        }
                    }
                }
            },
            addRecord: function(e, t, i, r) {
                var s = this;
                if (null != e) {
                    if (null == i) {
                        if (this.hierarchy && this.hierarchy.length >= 0 && (this._source.hierarchy || r)) {
                            var n = s._source && s._source.hierarchy ? s._source.hierarchy.reservedNames : null;
                            null == n && (n = {
                                leaf: "leaf",
                                parent: "parent",
                                expanded: "expanded",
                                checked: "checked",
                                selected: "selected",
                                level: "level",
                                icon: "icon",
                                data: "data"
                            }),
                            e[n.level] = 0,
                            "last" == t ? this.hierarchy.push(e) : "number" == typeof t && isFinite(t) ? this.hierarchy.splice(t, 0, e) : this.hierarchy.splice(0, 0, e)
                        } else
                            "last" == t ? this.records.push(e) : "number" == typeof t && isFinite(t) ? this.records.splice(t, 0, e) : this.records.splice(0, 0, e);
                        return !0
                    }
                    if (this.hierarchy.length > 0) {
                        var o = function(r) {
                            if (r)
                                for (var n = 0; n < r.length; n++) {
                                    var a = r[n];
                                    if (a.uid == i) {
                                        var l = s._source && s._source.hierarchy ? s._source.hierarchy.reservedNames : null;
                                        return null == l && (l = {
                                            leaf: "leaf",
                                            parent: "parent",
                                            expanded: "expanded",
                                            checked: "checked",
                                            selected: "selected",
                                            level: "level",
                                            icon: "icon",
                                            data: "data"
                                        }),
                                        e[l.parent] = a,
                                        e[l.level] = a[l.level] + 1,
                                        a.records ? a[l.leaf] = !1 : (a.records = new Array,
                                        a[l.leaf] = !1),
                                        "last" == t ? a.records.push(e) : "number" == typeof t && isFinite(t) ? a.records.splice(t, 0, e) : a.records.splice(0, 0, e),
                                        !0
                                    }
                                    a.records && o(a.records)
                                }
                        };
                        o(this.hierarchy)
                    }
                }
                return !1
            },
            deleteRecord: function(e) {
                var t = this;
                if (this.hierarchy.length > 0) {
                    var i = function(r) {
                        if (r)
                            for (var s = 0; s < r.length; s++) {
                                if ((a = r[s]).uid == e) {
                                    r.splice(s, 1),
                                    t.recordids[e] && delete t.recordids[e];
                                    var n = function(e) {
                                        for (var i = 0; i < e.length; i++) {
                                            for (var r = e[i].uid, s = 0; s < t.records.length; s++) {
                                                if (t.records[s].uid == r) {
                                                    t.records.splice(s, 1);
                                                    break
                                                }
                                            }
                                            e[i].records && n(e[i].records)
                                        }
                                    };
                                    a.records && n(a.records);
                                    for (var o = 0; o < t.records.length; o++) {
                                        var a;
                                        if ((a = t.records[o]).uid == e) {
                                            t.records.splice(o, 1);
                                            break
                                        }
                                    }
                                    return !0
                                }
                                a.records && i(a.records)
                            }
                    };
                    i(this.hierarchy)
                } else
                    for (var r = 0; r < this.records.length; r++) {
                        if (this.records[r].uid == e)
                            return this.records.splice(r, 1),
                            !0
                    }
                return !1
            },
            addForeignValues: function(e) {
                for (var t = this, i = e.datafields ? e.datafields.length : 0, r = 0; r < i; r++) {
                    var s = e.datafields[r];
                    if (null != s)
                        if (null != s.values) {
                            null == s.value && (s.value = s.name),
                            null == s.values.value && (s.values.value = s.value);
                            var n, o, a = new Array;
                            t.pageable && t.virtualmode ? (o = (n = t.pagenum * t.pagesize) + t.pagesize) > t.totalrecords && (o = t.totalrecords) : t.virtualmode ? (n = e.recordstartindex,
                            (o = e.recordendindex) > t.totalrecords && (o = t.totalrecords)) : (n = 0,
                            o = t.records.length);
                            for (var l = n; l < o; l++) {
                                var d = t.records[l]
                                  , h = s.name
                                  , c = d[s.value];
                                if (null != a[c])
                                    d[h] = a[c];
                                else
                                    for (var u = 0; u < s.values.source.length; u++) {
                                        var p = s.values.source[u]
                                          , f = p[s.values.value];
                                        if (null == f && (f = p.uid),
                                        f == c) {
                                            var m = p[s.values.name];
                                            d[h] = m,
                                            a[c] = m;
                                            break
                                        }
                                    }
                            }
                        } else if (null != s.value)
                            for (l = 0; l < t.records.length; l++) {
                                (d = t.records[l])[s.name] = d[s.value]
                            }
                }
            },
            abort: function() {
                this.xhr && 4 != this.xhr.readyState && (this.xhr.abort(),
                me.callDownloadComplete())
            },
            _requestData: function(t, i, r) {
                var s = this;
                r.loadServerData(t, i, function(t) {
                    if (t.totalrecords && (i.totalrecords = t.totalrecords,
                    s.totalrecords = t.totalrecords),
                    t.records && (s.records = t.records,
                    s.cachedrecords = t.records),
                    s.addForeignValues(i),
                    r.uniqueDataFields) {
                        var n = s.getUniqueRecords(s.records, r.uniqueDataFields);
                        s.records = n,
                        s.cachedrecords = n
                    }
                    if (r.beforeLoadComplete) {
                        var o = r.beforeLoadComplete(s.records, t);
                        null != o && (s.records = o,
                        s.cachedrecords = o)
                    }
                    for (var a = 0; a < s.records.length; a++) {
                        var l = s.records[a];
                        null != l && null == l.uid && (l.uid = s.getid(i.id, l, a))
                    }
                    s.buildHierarchy.call(s),
                    e.isFunction(r.loadComplete) && r.loadComplete(t),
                    s.callDownloadComplete()
                })
            },
            getUniqueRecords: function(e, t) {
                if (e && t)
                    for (var i = e.length, r = t.length, s = new Array, n = new Array, o = 0; o < i; o++) {
                        var a = e[o]
                          , l = "";
                        if (null != a) {
                            for (var d = 0; d < r; d++) {
                                l += a[t[d]] + "_"
                            }
                            n[l] || (s[s.length] = a),
                            n[l] = !0
                        }
                    }
                return s
            },
            getAggregatedData: function(t, i, r, s) {
                var n = r;
                n || (n = this.records);
                var o = {}
                  , a = new Array
                  , l = n.length;
                if (0 != l && null != l) {
                    for (var d = 0; d < l; d++)
                        for (var h = n[d], c = 0; c < t.length; c++) {
                            var u = t[c]
                              , p = h[u.name];
                            if (u.aggregates) {
                                o[u.name] = o[u.name] || {},
                                a[u.name] = a[u.name] || 0,
                                a[u.name]++;
                                var f = function(t) {
                                    for (obj in t) {
                                        var i = o[u.name][obj];
                                        null == i && (o[u.name][obj] = 0,
                                        i = 0),
                                        e.isFunction(t[obj]) && (i = t[obj](i, p, u.name, h, s)),
                                        o[u.name][obj] = i
                                    }
                                }
                                  , m = parseFloat(p);
                                (m = !isNaN(m)) && (p = parseFloat(p)),
                                "number" == typeof p && isFinite(p) ? e.each(u.aggregates, function() {
                                    var e = o[u.name][this];
                                    if (null == e && (e = 0,
                                    "min" == this && (e = 9999999999999),
                                    "max" == this && (e = -9999999999999)),
                                    "sum" == this || "avg" == this || "stdev" == this || "stdevp" == this || "var" == this || "varp" == this)
                                        e += parseFloat(p);
                                    else if ("product" == this)
                                        0 == d ? e = parseFloat(p) : e *= parseFloat(p);
                                    else if ("min" == this)
                                        e = Math.min(e, parseFloat(p));
                                    else if ("max" == this)
                                        e = Math.max(e, parseFloat(p));
                                    else if ("count" == this)
                                        e++;
                                    else if ("object" == typeof this)
                                        return void f(this);
                                    o[u.name][this] = e
                                }) : e.each(u.aggregates, function() {
                                    if ("min" == this || "max" == this || "count" == this || "product" == this || "sum" == this || "avg" == this || "stdev" == this || "stdevp" == this || "var" == this || "varp" == this) {
                                        if (null === p)
                                            return !0;
                                        var e = o[u.name][this];
                                        return null == e && (e = 0),
                                        o[u.name][this] = e,
                                        !0
                                    }
                                    "object" == typeof this && f(this)
                                })
                            }
                        }
                    for (c = 0; c < t.length; c++) {
                        u = t[c];
                        if (o[u.name] || (o[u.name] = {},
                        e.each(u.aggregates, function(e) {
                            o[u.name][this] = 0
                        })),
                        null != o[u.name].avg) {
                            p = o[u.name].avg;
                            var g = a[u.name];
                            o[u.name].avg = 0 === g || null == g ? 0 : p / g
                        } else
                            null != o[u.name].count && (o[u.name].count = l);
                        (o[u.name].stdev || o[u.name].stdevp || o[u.name].var || o[u.name].varp) && e.each(u.aggregates, function(e) {
                            if ("stdev" == this || "var" == this || "varp" == this || "stdevp" == this) {
                                for (var t = o[u.name][this], i = l, r = t / l, s = 0, a = 0; a < l; a++) {
                                    var d = n[a][u.name];
                                    s += (d - r) * (d - r)
                                }
                                var h = "stdevp" == this || "varp" == this ? i : i - 1;
                                0 == h && (h = 1),
                                "var" == this || "varp" == this ? o[u.name][this] = s / h : "stdevp" != this && "stdev" != this || (o[u.name][this] = Math.sqrt(s / h))
                            }
                        }),
                        u.formatStrings && e.each(u.aggregates, function(t) {
                            var r = u.formatStrings[t];
                            if (r)
                                if ("min" == this || "max" == this || "count" == this || "product" == this || "sum" == this || "avg" == this || "stdev" == this || "stdevp" == this || "var" == this || "varp" == this) {
                                    var s = o[u.name][this];
                                    o[u.name][this] = e.jqx.dataFormat.formatnumber(s, r, i)
                                } else if ("object" == typeof this)
                                    for (obj in this) {
                                        s = o[u.name][obj];
                                        o[u.name][obj] = e.jqx.dataFormat.formatnumber(s, r, i)
                                    }
                        })
                    }
                    return o
                }
            },
            bindDownloadComplete: function(e, t) {
                this._downloadComplete[this._downloadComplete.length] = {
                    id: e,
                    func: t
                }
            },
            unbindDownloadComplete: function(e) {
                for (var t = 0; t < this._downloadComplete.length; t++)
                    if (this._downloadComplete[t].id == e) {
                        this._downloadComplete[t].func = null,
                        this._downloadComplete.splice(t, 1);
                        break
                    }
            },
            callDownloadComplete: function() {
                for (var e = 0; e < this._downloadComplete.length; e++) {
                    var t = this._downloadComplete[e];
                    null != t.func && t.func()
                }
            },
            setSource: function(e) {
                this._source = e
            },
            generatekey: function() {
                var e = function() {
                    return (65536 * (1 + Math.random()) | 0).toString(16).substring(1)
                };
                return e() + e() + "-" + e() + "-" + e() + "-" + e() + "-" + e() + e() + e()
            },
            getGroupedRecords: function(t, i, r, s, n, o, a, l, d) {
                d || (d = 0);
                for (var h = new Array, c = 0; c < t.length; c++)
                    h[c] = this.generatekey();
                i || (i = "items"),
                r || (r = "group"),
                n || (n = "record"),
                a || (a = "parentItem"),
                void 0 === o && (o = "value");
                var u = new Array
                  , p = 0
                  , f = new Array
                  , m = t.length;
                new Array;
                if (!l)
                    l = this.records;
                for (var g = l.length, v = function(t) {
                    var i = t;
                    return s && e.each(s, function() {
                        this.name && this.map && (i[this.map] = i[this.name])
                    }),
                    i
                }, w = 0; w < g; w++) {
                    var x = v(l[w]);
                    id = x[this.uniqueId];
                    var b = new Array
                      , y = 0;
                    for (c = 0; c < m; c++) {
                        var _ = x[t[c]];
                        null != _ && (b[y++] = {
                            value: _,
                            hash: h[c]
                        })
                    }
                    if (b.length != m)
                        break;
                    for (var q = null, j = "", S = 0; S < b.length; S++) {
                        0;
                        var C = b[S].value;
                        if (null == f[j = j + "_" + b[S].hash + "_" + C] || null == f[j]) {
                            if (null == q) {
                                (q = {
                                    level: 0
                                })[a] = null,
                                q[r] = C,
                                q[n] = x,
                                void 0 !== x.expanded ? q.expanded = x.expanded : q.expanded = !1,
                                o && (q[o] = x[o]),
                                q[i] = new Array;
                                var T = u.length + d;
                                this._source.id && "number" != typeof x.uid && !isFinite(x.uid) || (T = "Row" + T),
                                q.uid = T,
                                u[p++] = q
                            } else {
                                var I = {
                                    level: q.level + 1
                                };
                                I[a] = q,
                                I[r] = C,
                                I[i] = new Array,
                                I[n] = x,
                                void 0 !== x.expanded ? I.expanded = x.expanded : I.expanded = !1,
                                o && (I[o] = x[o]),
                                I.uid = q.uid + "_" + q[i].length,
                                q[i][q[i].length] = I,
                                q = I
                            }
                            f[j] = q
                        } else
                            q = f[j]
                    }
                    x && (x.leaf = !0),
                    null != q ? (null == this._source.id && (null == x.uid ? x.uid = q.uid + "_" + q[i].length : -1 == x.uid.toString().indexOf(q.uid) && (x.uid = q.uid + "_" + x.uid)),
                    x[a] = q,
                    x.level = q.level + 1,
                    q[i][q[i].length] = x) : null == x.uid && (x.uid = this.generatekey())
                }
                return u
            },
            getRecordsHierarchy: function(t, i, r, s, n) {
                var o = new Array
                  , a = this.records;
                if (n && (a = n),
                0 == this.records.length)
                    return null;
                for (var l = null != r ? r : "items", d = [], h = a, c = h.length, u = this._source && this._source.hierarchy ? this._source.hierarchy.reservedNames : null, p = function(t) {
                    var i = t;
                    return s && e.each(s, function() {
                        this.name && this.map && (i[this.map] = i[this.name])
                    }),
                    i
                }, f = 0; f < c; f++) {
                    var m = (v = e.extend({}, h[f]))[i];
                    d[g = v[t]] = {
                        parentid: m,
                        item: v
                    }
                }
                for (f = 0; f < c; f++) {
                    m = (v = e.extend({}, h[f]))[i];
                    var g = v[t];
                    if (null != d[m]) {
                        var v = {
                            parentid: m,
                            item: d[g].item
                        }
                          , w = d[m].item;
                        w[l] || (w[l] = []);
                        var x = w[l].length
                          , b = v.item;
                        u ? null == b[u.parent] && (b[u.parent] = w) : null == b.parent && (b.parent = w);
                        var y = p(b);
                        w[l][x] = y,
                        d[m].item = w,
                        d[g] = v
                    } else {
                        b = d[g].item;
                        u ? null == b[u.parent] && (b[u.parent] = null) : null == b.parent && (b.parent = null);
                        y = p(b);
                        u ? y[u.level] = 0 : y.level = 0,
                        o[o.length] = y
                    }
                }
                if (0 != o.length) {
                    var _ = function(e, t) {
                        for (var i = 0; i < t.length; i++) {
                            u ? t[i][u.level] = e : t[i].level = e;
                            var r = t[i][l];
                            r && r.length > 0 ? _(e + 1, r) : u ? t[i][u.leaf] = !0 : t[i].leaf = !0
                        }
                    };
                    _(0, o)
                }
                return o
            },
            bindBindingUpdate: function(e, t) {
                this._bindingUpdate[this._bindingUpdate.length] = {
                    id: e,
                    func: t
                }
            },
            unbindBindingUpdate: function(e) {
                for (var t = 0; t < this._bindingUpdate.length; t++)
                    if (this._bindingUpdate[t].id == e) {
                        this._bindingUpdate[t].func = null,
                        this._bindingUpdate.splice(t, 1);
                        break
                    }
            },
            callBindingUpdate: function(e) {
                for (var t = 0; t < this._bindingUpdate.length; t++) {
                    var i = this._bindingUpdate[t];
                    null != i.func && i.func(e)
                }
            },
            getid: function(t, i, r) {
                if (null == t || null == t.name || !t.name) {
                    if (e(t, i).length > 0)
                        return e(t, i).text();
                    if (t && t.toString().length > 0) {
                        if (null != (a = e(i).attr(t)) && a.toString().length > 0)
                            return e.trim(a).split(" ").join("").replace(/([ #;?%&,.+*~\':"!^$[\]()=>|\/\\@])/g, "");
                        var s = t.split(this.mapChar);
                        if (s.length > 1) {
                            for (var n = i, o = 0; o < s.length; o++)
                                null != n && (n = n[s[o]]);
                            if (null != n)
                                return n
                        } else if (null != i[t])
                            return i[t]
                    }
                    return r
                }
                if (null != (a = e(i).attr(t.name)) && a.toString().length > 0)
                    return a;
                if (t.map)
                    try {
                        var a;
                        if (null != (a = e(i).attr(t.map)) && a.toString().length > 0)
                            return a;
                        if (e(t.map, i).length > 0)
                            return e(t.map, i).text();
                        if (e(t.name, i).length > 0)
                            return e(t.name, i).text()
                    } catch (e) {
                        return r
                    }
            },
            loadjson: function(t, i, r) {
                "string" == typeof t && (t = e.parseJSON(t)),
                null == r.root && (r.root = ""),
                null == r.record && (r.record = ""),
                (t = t || i) || (t = []);
                var s = this;
                if ("" != r.root)
                    if ((q = r.root.split(s.mapChar)).length > 1) {
                        for (var n = t, o = 0; o < q.length; o++)
                            null != n && (n = n[q[o]]);
                        t = n
                    } else {
                        if (void 0 !== t[r.root] ? t = t[r.root] : t[0] && void 0 !== t[0][r.root] ? t = t[0][r.root] : e.each(t, function(e) {
                            if (this == r.root)
                                return t = this,
                                !1;
                            null != this[r.root] && (t = this[r.root])
                        }),
                        !t)
                            if ((q = r.root.split(s.mapChar)).length > 0) {
                                for (n = t,
                                o = 0; o < q.length; o++)
                                    null != n && (n = n[q[o]]);
                                t = n
                            }
                    }
                else if (!t.length)
                    for (obj in t)
                        if (e.isArray(t[obj])) {
                            t = t[obj];
                            break
                        }
                if (null != t && null == t.length && (t = e.makeArray(t)),
                null == t || null == t || "undefined" == t || null == t.length)
                    throw new Error("jqxDataAdapter: JSON Parse error! Invalid JSON. Please, check your JSON or your jqxDataAdapter initialization!");
                if (0 != t.length) {
                    var a = t.length;
                    this.totalrecords = this.virtualmode && r.totalrecords || a,
                    this.records = new Array,
                    this.originaldata = new Array;
                    var l = this.records
                      , d = this.pageable ? this.pagesize * this.pagenum : r.recordstartindex;
                    this.recordids = new Array,
                    r.loadallrecords && (d = 0,
                    a = this.totalrecords);
                    var h = 0;
                    this.virtualmode && (h = d = this.pageable ? this.pagesize * this.pagenum : r.recordstartindex,
                    d = 0,
                    a = this.totalrecords);
                    var c = r.datafields ? r.datafields.length : 0;
                    if (0 == c) {
                        var u = t[0]
                          , p = new Array;
                        for (obj in u) {
                            var f = obj;
                            p[p.length] = {
                                name: f
                            }
                        }
                        r.datafields = p,
                        r.generatedfields = r.datafields,
                        c = p.length
                    }
                    for (var m = d, g = d; g < a; g++) {
                        var v = t[g];
                        if (null == v)
                            break;
                        if (!r.record || "" == r.record || null != (v = v[r.record])) {
                            var w = this.getid(r.id, v, g);
                            if ("object" == typeof w && (w = g),
                            !this.recordids[w]) {
                                this.recordids[w] = v;
                                for (var x = {}, b = 0; b < c; b++) {
                                    var y = r.datafields[b]
                                      , _ = "";
                                    if (null != y && null != y) {
                                        if (y.map) {
                                            var q;
                                            if (e.isFunction(y.map))
                                                _ = y.map(v);
                                            else if ((q = y.map.split(s.mapChar)).length > 0) {
                                                var j = v;
                                                for (o = 0; o < q.length; o++)
                                                    null != j && (j = j[q[o]]);
                                                _ = j
                                            } else
                                                _ = v[y.map];
                                            null != _ && null != _ ? _ = this.getvaluebytype(_, y) : null == _ && null != _ && (_ = "")
                                        }
                                        if ("" == _ && !y.map && (null == (_ = v[y.name]) && null != _ && (_ = ""),
                                        null != y.value && null != _)) {
                                            var S = _[y.value];
                                            null != S && (_ = S)
                                        }
                                        if (_ = this.getvaluebytype(_, y),
                                        null != y.displayname ? x[y.displayname] = _ : x[y.name] = _,
                                        "array" === y.type) {
                                            var C = function(t) {
                                                if (t)
                                                    for (var i = 0; i < t.length; i++) {
                                                        var n = t[i];
                                                        if (n)
                                                            for (var o = 0; o < c; o++) {
                                                                var a = r.datafields[o]
                                                                  , l = "";
                                                                if (null != a && null != a) {
                                                                    if (a.map) {
                                                                        if (e.isFunction(a.map))
                                                                            l = a.map(n);
                                                                        else {
                                                                            var d = a.map.split(s.mapChar);
                                                                            if (d.length > 0) {
                                                                                for (var h = n, u = 0; u < d.length; u++)
                                                                                    null != h && (h = h[d[u]]);
                                                                                l = h
                                                                            } else
                                                                                l = n[a.map]
                                                                        }
                                                                        null != l && null != l ? l = this.getvaluebytype(l, a) : null == l && null != l && (l = "")
                                                                    }
                                                                    if ("" == l && !a.map && (null == (l = n[a.name]) && null != l && (l = ""),
                                                                    null != a.value && null != l)) {
                                                                        var p = l[a.value];
                                                                        null != p && (l = p)
                                                                    }
                                                                    l = this.getvaluebytype(l, a),
                                                                    null != a.displayname ? n[a.displayname] = l : n[a.name] = l,
                                                                    "array" === a.type && C.call(this, l)
                                                                }
                                                            }
                                                    }
                                            };
                                            C.call(this, _)
                                        }
                                    }
                                }
                                (r.recordendindex <= 0 || d < r.recordendindex) && (l[h + m] = new Object(x),
                                l[h + m].uid = w,
                                this.originaldata[h + m] = new Object(l[g]),
                                m++)
                            }
                        }
                    }
                    this.records = l,
                    this.cachedrecords = this.records
                } else
                    this.totalrecords = 0
            },
            loadxml: function(t, i, r) {
                "string" == typeof t && (t = i = e(e.parseXML(t)),
                t = null),
                null == r.root && (r.root = ""),
                null == r.record && (r.record = ""),
                (t = e.jqx.browser.msie && i && null != i.xml ? e(r.root + " " + r.record, e.parseXML(i.xml)) : t || e(r.root + " " + r.record, i)) || (t = []);
                var s = t.length;
                if (0 != t.length) {
                    this.totalrecords = this.virtualmode && r.totalrecords || s,
                    this.records = new Array,
                    this.originaldata = new Array;
                    var n = this.records
                      , o = this.pageable ? this.pagesize * this.pagenum : r.recordstartindex;
                    this.recordids = new Array,
                    r.loadallrecords && (o = 0,
                    s = this.totalrecords);
                    var a = 0;
                    this.virtualmode && (a = o = this.pageable ? this.pagesize * this.pagenum : r.recordstartindex,
                    o = 0,
                    s = this.totalrecords);
                    var l = r.datafields ? r.datafields.length : 0;
                    if (0 == l) {
                        var d = t[0]
                          , h = new Array;
                        for (obj in d) {
                            var c = obj;
                            h[h.length] = {
                                name: c
                            }
                        }
                        r.datafields = h,
                        r.generatedfields = r.datafields,
                        l = h.length
                    }
                    for (var u = o, p = o; p < s; p++) {
                        if (null == (C = t[p]))
                            break;
                        var f = this.getid(r.id, C, p);
                        if (!this.recordids[f]) {
                            this.recordids[f] = C;
                            var m = {}
                              , g = !1;
                            r.hierarchy && r.hierarchy.root && (g = !0);
                            for (var v = 0; v < l; v++) {
                                var w = r.datafields[v]
                                  , x = "";
                                if (null != w && null != w) {
                                    if (w.map)
                                        if (e.isFunction(w.map))
                                            x = w.map(C);
                                        else {
                                            var b = w.map.indexOf("[");
                                            if (b < 0)
                                                if (1 == (x = e(w.map, C)).length)
                                                    x = x.text();
                                                else {
                                                    !0;
                                                    for (var y = new Array, _ = 0; _ < x.length; _++)
                                                        y.push(e(x[_]).text());
                                                    x = y,
                                                    g && y.length > 0 && (x = y[0])
                                                }
                                            else {
                                                var q = w.map.substring(0, b - 1)
                                                  , j = w.map.indexOf("]")
                                                  , S = w.map.substring(b + 1, j);
                                                null == (x = e(q, C).attr(S)) && (x = e(C).attr(S)),
                                                null == x && (x = "")
                                            }
                                            "" == x && null == (x = e(C).attr(w.map)) && (x = "")
                                        }
                                    if ("" == x) {
                                        if (1 == (x = e(w.name, C)).length)
                                            x = x.text();
                                        else {
                                            for (y = new Array,
                                            _ = 0; _ < x.length; _++)
                                                y.push(e(x[_]).text());
                                            x = y,
                                            g && y.length > 0 && (x = y[0])
                                        }
                                        "" == x && null == (x = e(C).attr(w.name)) && (x = ""),
                                        "" == x && C.nodeName && C.nodeName == w.name && C.firstChild && (x = e(C.firstChild).text())
                                    }
                                    x = this.getvaluebytype(x, w),
                                    null != w.displayname ? m[w.displayname] = x : m[w.name] = x
                                }
                            }
                            (r.recordendindex <= 0 || o < r.recordendindex) && (n[a + u] = e.extend({}, m),
                            n[a + u].uid = f,
                            this.originaldata[a + u] = e.extend({}, n[p]),
                            u++)
                        }
                    }
                    if (r.hierarchy && r.hierarchy.root)
                        for (p = o; p < s; p++) {
                            var C = t[p]
                              , T = n[p];
                            if (e(C).parent().length > 0) {
                                f = this.getid(r.id, e(C).parents(r.hierarchy.record + ":first"));
                                T.parentuid = f
                            } else
                                T.parentuid = null
                        }
                    this.records = n,
                    this.cachedrecords = this.records
                }
            },
            loadics: function(e, t) {
                if (null != e) {
                    var i = t.rowDelimiter || this.rowDelimiter || "\n"
                      , r = e.split(i)
                      , s = r.length
                      , n = e.split("\r");
                    1 == s && n.length > 1 && (s = (r = n).length),
                    this.records = new Array,
                    this.originaldata = new Array;
                    var o = this.records;
                    this.recordids = new Array;
                    for (var a = function(e) {
                        var t = /^(\d{4})(\d{2})(\d{2})(T(\d{2})(\d{2})(\d{2})Z)?$/.exec(e);
                        if (!t)
                            throw new Error("Invalid UNTIL value: " + e);
                        return new Date(Date.UTC(t[1], t[2] - 1, t[3], t[5] || 0, t[6] || 0, t[7] || 0))
                    }, l = 0; l < s; l++) {
                        var d = r[l];
                        if ("BEGIN:VEVENT" != d)
                            if (d.indexOf("SUMMARY") >= 0)
                                c.SUMMARY = d.substring(d.indexOf("SUMMARY") + 8);
                            else if (d.indexOf("LOCATION") >= 0)
                                c.LOCATION = d.substring(d.indexOf("LOCATION") + 9);
                            else if (d.indexOf("DESCRIPTION") >= 0)
                                c.DESCRIPTION = d.substring(d.indexOf("DESCRIPTION") + 12);
                            else if (d.indexOf("RRULE") >= 0)
                                c.RRULE = d.substring(d.indexOf("RRULE") + 6);
                            else if (d.indexOf("EXDATE") >= 0) {
                                var h = d.substring(d.indexOf("EXDATE") + 7);
                                c.EXDATE = h
                            } else
                                d.indexOf("DTEND") >= 0 ? c.DTEND = a(d.substring(d.indexOf("DTEND") + 6)) : d.indexOf("DTSTART") >= 0 ? c.DTSTART = a(d.substring(d.indexOf("DTSTART") + 8)) : d.indexOf("UID") >= 0 ? c.uid = c.UID = d.substring(d.indexOf("UID") + 4) : d.indexOf("STATUS") >= 0 ? c.STATUS = d.substring(d.indexOf("STATUS") + 7) : "END:VEVENT" != d || o.push(c);
                        else
                            var c = {}
                    }
                    this.records = o,
                    this.cachedrecords = this.records
                }
            },
            loadtext: function(t, i) {
                if (null != t) {
                    var r = i.rowDelimiter || this.rowDelimiter || "\n"
                      , s = t.split(r)
                      , n = s.length
                      , o = t.split("\r");
                    1 == n && o.length > 1 && (n = (s = o).length),
                    this.totalrecords = this.virtualmode && i.totalrecords || n,
                    this.records = new Array,
                    this.originaldata = new Array;
                    var a = this.records
                      , l = this.pageable ? this.pagesize * this.pagenum : i.recordstartindex;
                    this.recordids = new Array,
                    i.loadallrecords && (l = 0,
                    n = this.totalrecords);
                    var d = 0;
                    this.virtualmode && (d = l = this.pageable ? this.pagesize * this.pagenum : i.recordstartindex,
                    l = 0,
                    n = this.totalrecords);
                    var h = i.datafields.length
                      , c = i.columnDelimiter || this.columnDelimiter;
                    c || (c = "tab" === i.datatype || "tsv" === i.datatype ? "\t" : ",");
                    for (var u = l; u < n; u++) {
                        var p = s[u]
                          , f = null;
                        if (!this.recordids[f]) {
                            null == i.id && (f = u,
                            this.recordids[f] = p);
                            for (var m = {}, g = s[u].split(c), v = 0; v < h; v++)
                                if (!(v >= g.length)) {
                                    var w = i.datafields[v]
                                      , x = g[v];
                                    w.map && e.isFunction(w.map) && (x = w.map(p)),
                                    w.type && (x = this.getvaluebytype(x, w)),
                                    m[w.map || w.name || v.toString()] = x,
                                    null != i.id && i.id === w.name && (f = x,
                                    this.recordids[f] = p)
                                }
                            null == f && (f = u),
                            a[d + u] = e.extend({}, m),
                            a[d + u].uid = f,
                            this.originaldata[d + u] = e.extend({}, a[u])
                        }
                    }
                    this.records = a,
                    this.cachedrecords = this.records
                }
            },
            getvaluebytype: function(t, i) {
                var r = t;
                if (null == t)
                    return t;
                if (e.isArray(t) && "array" != i.type) {
                    for (var s = 0; s < t.length; s++)
                        t[s] = this.getvaluebytype(t[s], i);
                    return t
                }
                if ("date" == i.type)
                    if ("NaN" == t)
                        t = "";
                    else {
                        if (t && t instanceof Date)
                            return t;
                        var n = new Date(t);
                        if ("string" == typeof t && i.format) {
                            var o = e.jqx.dataFormat.parsedate(t, i.format);
                            null != o && (n = o)
                        }
                        null == (t = ("NaN" == n.toString() || "Invalid Date" == n.toString()) && e.jqx.dataFormat ? e.jqx.dataFormat.tryparsedate(t) : n) && (t = r)
                    }
                else if ("float" == i.type || "number" == i.type || "decimal" == i.type)
                    if ("NaN" == t)
                        t = "";
                    else {
                        t = parseFloat(t);
                        isNaN(t) && (t = r)
                    }
                else if ("int" == i.type || "integer" == i.type) {
                    t = parseInt(t);
                    isNaN(t) && (t = r)
                } else
                    "bool" != i.type && "boolean" != i.type || (null != t && null != t.toLowerCase && ("false" == t.toLowerCase() ? t = !1 : "true" == t.toLowerCase() && (t = !0)),
                    t = 1 == t || (0 != t || "" === t) && "");
                return t
            }
        },
        e.jqx.dataFormat = {},
        e.extend(e.jqx.dataFormat, {
            regexTrim: /^\s+|\s+$/g,
            regexInfinity: /^[+-]?infinity$/i,
            regexHex: /^0x[a-f0-9]+$/i,
            regexParseFloat: /^[+-]?\d*\.?\d*(e[+-]?\d+)?$/,
            toString: Object.prototype.toString,
            isBoolean: function(e) {
                return "boolean" == typeof e
            },
            isObject: function(t) {
                return t && ("object" == typeof t || e.isFunction(t)) || !1
            },
            isDate: function(e) {
                return e instanceof Date
            },
            arrayIndexOf: function(e, t) {
                if (e.indexOf)
                    return e.indexOf(t);
                for (var i = 0, r = e.length; i < r; i++)
                    if (e[i] === t)
                        return i;
                return -1
            },
            isString: function(e) {
                return "string" == typeof e
            },
            isNumber: function(e) {
                return "number" == typeof e && isFinite(e)
            },
            isNull: function(e) {
                return null === e
            },
            isUndefined: function(e) {
                return void 0 === e
            },
            isValue: function(e) {
                return this.isObject(e) || this.isString(e) || this.isNumber(e) || this.isBoolean(e)
            },
            isEmpty: function(t) {
                return !(!this.isString(t) && this.isValue(t)) && (!this.isValue(t) || "" === (t = e.trim(t).replace(/\&nbsp\;/gi, "").replace(/\&#160\;/gi, "")))
            },
            startsWith: function(e, t) {
                return 0 === e.indexOf(t)
            },
            endsWith: function(e, t) {
                return e.substr(e.length - t.length) === t
            },
            trim: function(e) {
                return (e + "").replace(this.regexTrim, "")
            },
            isArray: function(e) {
                return "[object Array]" === this.toString.call(e)
            },
            defaultcalendar: function() {
                return {
                    "/": "/",
                    ":": ":",
                    firstDay: 0,
                    days: {
                        names: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                        namesAbbr: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                        namesShort: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"]
                    },
                    months: {
                        names: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", ""],
                        namesAbbr: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", ""]
                    },
                    AM: ["AM", "am", "AM"],
                    PM: ["PM", "pm", "PM"],
                    eras: [{
                        name: "A.D.",
                        start: null,
                        offset: 0
                    }],
                    twoDigitYearMax: 2029,
                    patterns: {
                        d: "M/d/yyyy",
                        D: "dddd, MMMM dd, yyyy",
                        t: "h:mm tt",
                        T: "h:mm:ss tt",
                        f: "dddd, MMMM dd, yyyy h:mm tt",
                        F: "dddd, MMMM dd, yyyy h:mm:ss tt",
                        M: "MMMM dd",
                        Y: "yyyy MMMM",
                        S: "yyyy'-'MM'-'dd'T'HH':'mm':'ss",
                        ISO: "yyyy-MM-dd hh:mm:ss",
                        ISO2: "yyyy-MM-dd HH:mm:ss",
                        d1: "dd.MM.yyyy",
                        d2: "dd-MM-yyyy",
                        d3: "MM-dd-yyyy",
                        zone1: "yyyy-MM-ddTHH:mm:ss-HH:mm",
                        zone2: "yyyy-MM-ddTHH:mm:ss+HH:mm",
                        custom: "yyyy-MM-ddTHH:mm:ss.fff",
                        custom2: "yyyy-MM-dd HH:mm:ss.fff"
                    },
                    percentsymbol: "%",
                    currencysymbol: "$",
                    currencysymbolposition: "before",
                    decimalseparator: ".",
                    thousandsseparator: ","
                }
            },
            expandFormat: function(e, t) {
                t = t || "F";
                var i, r = e.patterns, s = t.length;
                if (1 === s) {
                    if (!(i = r[t]))
                        throw "Invalid date format string '" + t + "'.";
                    t = i
                } else
                    2 === s && "%" === t.charAt(0) && (t = t.charAt(1));
                return t
            },
            getEra: function(e, t) {
                if (!t)
                    return 0;
                if ("string" == typeof e)
                    return 0;
                for (var i, r = e.getTime(), s = 0, n = t.length; s < n; s++)
                    if (null === (i = t[s].start) || r >= i)
                        return s;
                return 0
            },
            toUpper: function(e) {
                return e.split(" ").join(" ").toUpperCase()
            },
            toUpperArray: function(e) {
                for (var t = [], i = 0, r = e.length; i < r; i++)
                    t[i] = this.toUpper(e[i]);
                return t
            },
            getEraYear: function(e, t, i, r) {
                var s = e.getFullYear();
                return !r && t.eras && (s -= t.eras[i].offset),
                s
            },
            toUpper: function(e) {
                return e ? e.toUpperCase() : ""
            },
            getDayIndex: function(e, t, i) {
                var r, s = e.days, n = e._upperDays;
                return n || (e._upperDays = n = [this.toUpperArray(s.names), this.toUpperArray(s.namesAbbr), this.toUpperArray(s.namesShort)]),
                t = t.toUpperCase(),
                i ? -1 === (r = this.arrayIndexOf(n[1], t)) && (r = this.arrayIndexOf(n[2], t)) : r = this.arrayIndexOf(n[0], t),
                r
            },
            getMonthIndex: function(e, t, i) {
                var r = e.months
                  , s = e.monthsGenitive || e.months
                  , n = e._upperMonths
                  , o = e._upperMonthsGen;
                n || (e._upperMonths = n = [this.toUpperArray(r.names), this.toUpperArray(r.namesAbbr)],
                e._upperMonthsGen = o = [this.toUpperArray(s.names), this.toUpperArray(s.namesAbbr)]),
                t = this.toUpper(t);
                var a = this.arrayIndexOf(i ? n[1] : n[0], t);
                return a < 0 && (a = this.arrayIndexOf(i ? o[1] : o[0], t)),
                a
            },
            appendPreOrPostMatch: function(e, t) {
                for (var i = 0, r = !1, s = 0, n = e.length; s < n; s++) {
                    var o = e.charAt(s);
                    switch (o) {
                    case "'":
                        r ? t.push("'") : i++,
                        r = !1;
                        break;
                    case "\\":
                        r && t.push("\\"),
                        r = !r;
                        break;
                    default:
                        t.push(o),
                        r = !1
                    }
                }
                return i
            },
            getTokenRegExp: function() {
                return /\/|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|hh|h|HH|H|mm|m|ss|s|tt|t|fff|ff|f|zzz|zz|z|gg|g/g
            },
            formatlink: function(e, t) {
                var i = "";
                return t && t.target && (i = "target=" + t.target),
                "" != i ? "<a " + i + ' href="' + e + '">' + e + "</a>" : '<a href="' + e + '">' + e + "</a>"
            },
            formatemail: function(e) {
                return '<a href="mailto:' + e + '">' + e + "</a>"
            },
            formatNumber: function(e, t, i) {
                return this.formatnumber(e, t, i)
            },
            formatnumber: function(e, t, i) {
                if (null != i && null != i && "" != i || (i = this.defaultcalendar()),
                "" === t || null === t)
                    return e;
                var r;
                this.isNumber(e) || (e *= 1),
                t.length > 1 && (r = parseInt(t.slice(1), 10));
                var s = {}
                  , n = t.charAt(0).toUpperCase();
                switch (s.thousandsSeparator = i.thousandsseparator,
                s.decimalSeparator = i.decimalseparator,
                n) {
                case "D":
                case "d":
                case "F":
                case "f":
                    s.decimalPlaces = r;
                    break;
                case "N":
                case "n":
                    s.decimalPlaces = 0;
                    break;
                case "C":
                case "c":
                    s.decimalPlaces = r,
                    "before" == i.currencysymbolposition ? s.prefix = i.currencysymbol : s.suffix = i.currencysymbol;
                    break;
                case "P":
                case "p":
                    s.suffix = i.percentsymbol,
                    s.decimalPlaces = r;
                    break;
                default:
                    throw "Bad number format specifier: " + n
                }
                if (this.isNumber(e)) {
                    var o, a = e < 0, l = e + "", d = s.decimalSeparator ? s.decimalSeparator : ".";
                    if (this.isNumber(s.decimalPlaces)) {
                        var h = s.decimalPlaces
                          , c = Math.pow(10, h);
                        if (o = (l = (e * c).toFixed(0) / c + "").lastIndexOf("."),
                        h > 0)
                            for (o < 0 ? o = (l += d).length - 1 : "." !== d && (l = l.replace(".", d)); l.length - 1 - o < h; )
                                l += "0"
                    } else {
                        (o = (l = e + "").lastIndexOf(".")) > 0 && null == h && "." !== d && (l = l.replace(".", d))
                    }
                    if (s.thousandsSeparator) {
                        var u = s.thousandsSeparator;
                        o = (o = l.lastIndexOf(d)) > -1 ? o : l.length;
                        for (var p = l.substring(o), f = -1, m = o; m > 0; m--)
                            ++f % 3 == 0 && m !== o && (!a || m > 1) && (p = u + p),
                            p = l.charAt(m - 1) + p;
                        l = p
                    }
                    return l = s.prefix ? s.prefix + l : l,
                    l = s.suffix ? l + s.suffix : l
                }
                return e
            },
            tryparsedate: function(t, i) {
                null != i && null != i || (i = this.defaultcalendar());
                var r, s, n = this;
                if ("" == t)
                    return null;
                if (null == t || t.substring || (t = t.toString()),
                null != t && "/Date(" == t.substring(0, 6)) {
                    if ("Invalid Date" == (o = new Date(+t.replace(/\/Date\((\d+)\)\//, "$1")))) {
                        var o = null;
                        (M = t.match(/^\/Date\((\d+)([-+]\d\d)(\d\d)\)\/$/)) && (o = new Date(1 * M[1] + 36e5 * M[2] + 6e4 * M[3]))
                    }
                    if (null == o || "Invalid Date" == o || isNaN(o)) {
                        var a = /^\/Date\((-?\d+)(\+|-)?(\d+)?\)\/$/.exec(t);
                        if (a) {
                            var l = new Date(parseInt(a[1]));
                            if (a[2]) {
                                var d = parseInt(a[3]);
                                "-" === a[2] && (d = -d);
                                var h = l.getUTCMinutes();
                                l.setUTCMinutes(h - d)
                            }
                            if (!isNaN(l.valueOf()))
                                return l
                        }
                    }
                    return o
                }
                for (prop in patterns = i.patterns,
                patterns)
                    if (o = n.parsedate(t, patterns[prop], i)) {
                        if ("ISO" == prop)
                            if (c = n.parsedate(t, patterns.ISO2, i))
                                return c;
                        return o
                    }
                if (null != t) {
                    for (var c = null, u = [":", "/", "-"], p = !0, f = 0; f < u.length; f++)
                        -1 != t.indexOf(u[f]) && (p = !1);
                    if (p) {
                        var m = new Number(t);
                        if (!isNaN(m))
                            return new Date(m)
                    }
                }
                if ("string" === e.type(t)) {
                    var g = n;
                    t = g.trim(t);
                    var v = [":", "/", "-", " ", ","];
                    r = ", ",
                    s = ",";
                    var w = ""
                      , x = t = t.replace(new RegExp(r,"g"), s);
                    t.indexOf(":") >= 0 ? (w = t.substring(t.indexOf(":") - 2),
                    w = g.trim(w),
                    x = t.substring(0, t.indexOf(":") - 2)) : t.toUpperCase().indexOf("AM") >= 0 ? (w = t.substring(t.toUpperCase().indexOf("AM") - 2),
                    w = g.trim(w),
                    x = t.substring(0, t.toUpperCase().indexOf("AM") - 2)) : t.toUpperCase().indexOf("PM") >= 0 && (w = t.substring(t.toUpperCase().indexOf("PM") - 2),
                    w = g.trim(w),
                    x = t.substring(0, t.toUpperCase().indexOf("PM") - 2));
                    var b = new Date
                      , y = !1;
                    if (x) {
                        for (var _ = 0; _ < v.length; _++)
                            if (x.indexOf(v[_]) >= 0) {
                                u = x.split(v[_]);
                                break
                            }
                        var q = new Array
                          , j = new Array
                          , S = new Array
                          , C = null
                          , T = null;
                        for (_ = 0; _ < u.length; _++) {
                            f = u[_];
                            var I = g.parsedate(f, "d", i) || g.parsedate(f, "dd", i) || g.parsedate(f, "ddd", i) || g.parsedate(f, "dddd", i);
                            if (I && f.length <= 2) {
                                C = _,
                                q.push(I.getDate());
                                break
                            }
                        }
                        for (_ = 0; _ < u.length; _++) {
                            f = u[_];
                            var k = g.parsedate(f, "M", i) || g.parsedate(f, "MM", i) || g.parsedate(f, "MMM", i) || g.parsedate(f, "MMMM", i);
                            if (k) {
                                if (null != C && C == _)
                                    continue;
                                if (j.push(k.getMonth()),
                                f.length > 2) {
                                    T = _;
                                    break
                                }
                            }
                        }
                        for (_ = 0; _ < u.length; _++) {
                            f = u[_];
                            var D = g.parsedate(f, "yyyy", i);
                            if (D) {
                                if (null != C && C == _)
                                    continue;
                                if (null != T && T == _)
                                    continue;
                                S.push(D.getFullYear())
                            }
                        }
                        for (var P = new Array, B = 0; B < q.length; B++)
                            for (var M = 0; M < j.length; M++)
                                for (var H = 0; H < S.length; H++) {
                                    l = new Date(S[H],j[M],q[B]);
                                    S[H] < 1970 && l.setFullYear(S[H]),
                                    NaN != l.getTime() && P.push(l)
                                }
                        P.length > 0 && (b = P[0],
                        y = !0)
                    }
                    if (w) {
                        var O = w.indexOf(":") >= 0 ? w.split(":") : w
                          , z = g.parsedate(w, "h:mm tt", i) || g.parsedate(w, "h:mm:ss tt", i) || g.parsedate(w, "HH:mm:ss.fff", i) || g.parsedate(w, "HH:mm:ss.ff", i) || g.parsedate(w, "HH:mm:ss.tttt", i) || g.parsedate(w, "HH:mm:ss", i) || g.parsedate(w, "HH:mm", i) || g.parsedate(w, "HH", i)
                          , A = 0
                          , L = 0
                          , E = 0
                          , N = 0;
                        z && NaN != z.getTime() ? (A = z.getHours(),
                        L = z.getMinutes(),
                        E = z.getSeconds(),
                        N = z.getMilliseconds()) : (1 == O.length && (A = parseInt(O[0])),
                        2 == O.length && (A = parseInt(O[0]),
                        L = parseInt(O[1])),
                        3 == O.length && (A = parseInt(O[0]),
                        L = parseInt(O[1]),
                        O[2].indexOf(".") >= 0 ? (E = parseInt(O[2].toString().split(".")[0]),
                        N = parseInt(O[2].toString().split(".")[1])) : E = parseInt(O[2])),
                        4 == O.length && (A = parseInt(O[0]),
                        L = parseInt(O[1]),
                        E = parseInt(O[2]),
                        N = parseInt(O[3]))),
                        !b || isNaN(A) || isNaN(L) || isNaN(E) || isNaN(N) || (b.setHours(A, L, E, N),
                        y = !0)
                    }
                    if (y)
                        return b
                }
                return null
            },
            getparseregexp: function(e, t) {
                var i = e._parseRegExp;
                if (i) {
                    var r = i[t];
                    if (r)
                        return r
                } else
                    e._parseRegExp = i = {};
                for (var s, n = this.expandFormat(e, t).replace(/([\^\$\.\*\+\?\|\[\]\(\)\{\}])/g, "\\\\$1"), o = ["^"], a = [], l = 0, d = 0, h = this.getTokenRegExp(); null !== (s = h.exec(n)); ) {
                    var c = n.slice(l, s.index);
                    if (l = h.lastIndex,
                    (d += this.appendPreOrPostMatch(c, o)) % 2)
                        o.push(s[0]);
                    else {
                        var u, p = s[0], f = p.length;
                        switch (p) {
                        case "dddd":
                        case "ddd":
                        case "MMMM":
                        case "MMM":
                        case "gg":
                        case "g":
                            u = "(\\D+)";
                            break;
                        case "tt":
                        case "t":
                            u = "(\\D*)";
                            break;
                        case "yyyy":
                        case "fff":
                        case "ff":
                        case "f":
                            u = "(\\d{" + f + "})";
                            break;
                        case "dd":
                        case "d":
                        case "MM":
                        case "M":
                        case "yy":
                        case "y":
                        case "HH":
                        case "H":
                        case "hh":
                        case "h":
                        case "mm":
                        case "m":
                        case "ss":
                        case "s":
                            u = "(\\d\\d?)";
                            break;
                        case "zzz":
                            u = "([+-]?\\d\\d?:\\d{2})";
                            break;
                        case "zz":
                        case "z":
                            u = "([+-]?\\d\\d?)";
                            break;
                        case "/":
                            u = "(\\" + e["/"] + ")";
                            break;
                        default:
                            throw "Invalid date format pattern '" + p + "'."
                        }
                        u && o.push(u),
                        a.push(s[0])
                    }
                }
                this.appendPreOrPostMatch(n.slice(l), o),
                o.push("$");
                var m = {
                    regExp: o.join("").replace(/\s+/g, "\\s+"),
                    groups: a
                };
                return i[t] = m
            },
            outOfRange: function(e, t, i) {
                return e < t || e > i
            },
            expandYear: function(e, t) {
                var i = new Date
                  , r = this.getEra(i);
                if (t < 100) {
                    var s = e.twoDigitYearMax;
                    s = "string" == typeof s ? (new Date).getFullYear() % 100 + parseInt(s, 10) : s;
                    var n = this.getEraYear(i, e, r);
                    (t += n - n % 100) > s && (t -= 100)
                }
                return t
            },
            parsedate: function(e, t, i) {
                null != i && null != i || (i = this.defaultcalendar()),
                e = this.trim(e);
                var r = i
                  , s = this.getparseregexp(r, t)
                  , n = new RegExp(s.regExp).exec(e);
                if (null === n)
                    return null;
                for (var o, a = s.groups, l = null, d = null, h = null, c = null, u = null, p = 0, f = 0, m = 0, g = 0, v = null, w = !1, x = 0, b = a.length; x < b; x++) {
                    var y = n[x + 1];
                    if (y) {
                        var _ = a[x]
                          , q = _.length
                          , j = parseInt(y, 10);
                        switch (_) {
                        case "dd":
                        case "d":
                            if (c = j,
                            this.outOfRange(c, 1, 31))
                                return null;
                            break;
                        case "MMM":
                        case "MMMM":
                            if (h = this.getMonthIndex(r, y, 3 === q),
                            this.outOfRange(h, 0, 11))
                                return null;
                            break;
                        case "M":
                        case "MM":
                            if (h = j - 1,
                            this.outOfRange(h, 0, 11))
                                return null;
                            break;
                        case "y":
                        case "yy":
                        case "yyyy":
                            if (d = q < 4 ? this.expandYear(r, j) : j,
                            this.outOfRange(d, 0, 9999))
                                return null;
                            break;
                        case "h":
                        case "hh":
                            if (12 === (p = j) && (p = 0),
                            this.outOfRange(p, 0, 11))
                                return null;
                            break;
                        case "H":
                        case "HH":
                            if (p = j,
                            this.outOfRange(p, 0, 23))
                                return null;
                            break;
                        case "m":
                        case "mm":
                            if (f = j,
                            this.outOfRange(f, 0, 59))
                                return null;
                            break;
                        case "s":
                        case "ss":
                            if (m = j,
                            this.outOfRange(m, 0, 59))
                                return null;
                            break;
                        case "tt":
                        case "t":
                            if (!(w = r.PM && (y === r.PM[0] || y === r.PM[1] || y === r.PM[2])) && (!r.AM || y !== r.AM[0] && y !== r.AM[1] && y !== r.AM[2]))
                                return null;
                            break;
                        case "f":
                        case "ff":
                        case "fff":
                            if (g = j * Math.pow(10, 3 - q),
                            this.outOfRange(g, 0, 999))
                                return null;
                            break;
                        case "ddd":
                        case "dddd":
                            if (u = this.getDayIndex(r, y, 3 === q),
                            this.outOfRange(u, 0, 6))
                                return null;
                            break;
                        case "zzz":
                            var S = y.split(/:/);
                            if (2 !== S.length)
                                return null;
                            if (o = parseInt(S[0], 10),
                            this.outOfRange(o, -12, 13))
                                return null;
                            var C = parseInt(S[1], 10);
                            if (this.outOfRange(C, 0, 59))
                                return null;
                            v = 60 * o + (this.startsWith(y, "-") ? -C : C);
                            break;
                        case "z":
                        case "zz":
                            if (o = j,
                            this.outOfRange(o, -12, 13))
                                return null;
                            v = 60 * o;
                            break;
                        case "g":
                        case "gg":
                            var T = y;
                            if (!T || !r.eras)
                                return null;
                            T = trim(T.toLowerCase());
                            for (var I = 0, k = r.eras.length; I < k; I++)
                                if (T === r.eras[I].name.toLowerCase()) {
                                    l = I;
                                    break
                                }
                            if (null === l)
                                return null
                        }
                    }
                }
                var D, P = new Date, B = r.convert;
                if (D = P.getFullYear(),
                null === d ? d = D : r.eras && (d += r.eras[l || 0].offset),
                null === h && (h = 0),
                null === c && (c = 1),
                B) {
                    if (null === (P = B.toGregorian(d, h, c)))
                        return null
                } else {
                    if (P.setFullYear(d, h, c),
                    P.getDate() !== c)
                        return null;
                    if (null !== u && P.getDay() !== u)
                        return null
                }
                if (w && p < 12 && (p += 12),
                P.setHours(p, f, m, g),
                null !== v) {
                    var M = P.getMinutes() - (v + P.getTimezoneOffset());
                    P.setHours(P.getHours() + parseInt(M / 60, 10), M % 60)
                }
                return P
            },
            cleardatescache: function() {
                this.datescache = new Array
            },
            formatDate: function(e, t, i) {
                return this.formatdate(e, t, i)
            },
            formatdate: function(e, t, i) {
                if (null != i && null != i || (i = this.defaultcalendar()),
                "string" == typeof e)
                    return e;
                var r, s = e.toString() + "_" + t;
                if (this.datescache && this.datescache[s] && -1 == t.indexOf("f"))
                    return this.datescache[s];
                if (!t || !t.length || "i" === t)
                    return r = this.formatDate(e, i.patterns.F, i);
                var n = i.eras
                  , o = "s" === t;
                t = this.expandFormat(i, t),
                r = [];
                var a, l, d = ["0", "00", "000"], h = 0, c = this.getTokenRegExp();
                function u(e, t) {
                    var i, r = e + "";
                    return t > 1 && r.length < t ? (i = d[t - 2] + r).substr(i.length - t, t) : i = r
                }
                function p(e, t) {
                    if (l)
                        return l[t];
                    if (null != e.getMonth)
                        switch (t) {
                        case 0:
                            return e.getFullYear();
                        case 1:
                            return e.getMonth();
                        case 2:
                            return e.getDate()
                        }
                }
                for (; ; ) {
                    var f = c.lastIndex
                      , m = c.exec(t)
                      , g = t.slice(f, m ? m.index : t.length);
                    if (h += this.appendPreOrPostMatch(g, r),
                    !m)
                        break;
                    if (h % 2)
                        r.push(m[0]);
                    else {
                        var v = m[0]
                          , w = v.length;
                        switch (v) {
                        case "ddd":
                        case "dddd":
                            var x = 3 === w ? i.days.namesAbbr : i.days.names;
                            r.push(x[e.getDay()]);
                            break;
                        case "d":
                        case "dd":
                            !0,
                            r.push(u(p(e, 2), w));
                            break;
                        case "MMM":
                        case "MMMM":
                            var b = p(e, 1);
                            r.push(i.months[3 === w ? "namesAbbr" : "names"][b]);
                            break;
                        case "M":
                        case "MM":
                            r.push(u(p(e, 1) + 1, w));
                            break;
                        case "y":
                        case "yy":
                        case "yyyy":
                            b = this.getEraYear(e, i, this.getEra(e, n), o),
                            w < 4 && (b %= 100),
                            r.push(u(b, w));
                            break;
                        case "h":
                        case "hh":
                            0 === (a = e.getHours() % 12) && (a = 12),
                            r.push(u(a, w));
                            break;
                        case "H":
                        case "HH":
                            r.push(u(e.getHours(), w));
                            break;
                        case "m":
                        case "mm":
                            r.push(u(e.getMinutes(), w));
                            break;
                        case "s":
                        case "ss":
                            r.push(u(e.getSeconds(), w));
                            break;
                        case "t":
                        case "tt":
                            b = e.getHours() < 12 ? i.AM ? i.AM[0] : " " : i.PM ? i.PM[0] : " ",
                            r.push(1 === w ? b.charAt(0) : b);
                            break;
                        case "f":
                        case "ff":
                        case "fff":
                            r.push(u(e.getMilliseconds(), 3).substr(0, w));
                            break;
                        case "z":
                        case "zz":
                            a = e.getTimezoneOffset() / 60,
                            r.push((a <= 0 ? "+" : "-") + u(Math.floor(Math.abs(a)), w));
                            break;
                        case "zzz":
                            a = e.getTimezoneOffset() / 60,
                            r.push((a <= 0 ? "+" : "-") + u(Math.floor(Math.abs(a)), 2) + ":" + u(Math.abs(e.getTimezoneOffset() % 60), 2));
                            break;
                        case "g":
                        case "gg":
                            i.eras && r.push(i.eras[this.getEra(e, n)].name);
                            break;
                        case "/":
                            r.push(i["/"]);
                            break;
                        default:
                            throw "Invalid date format pattern '" + v + "'."
                        }
                    }
                }
                var y = r.join("");
                return this.datescache || (this.datescache = new Array),
                this.datescache[s] = y,
                y
            }
        }),
        e.jqx.data = {};
        var t, i, r = /#.*$/, s = /^(.*?):[ \t]*([^\r\n]*)\r?$/gm, n = /^(?:GET|HEAD)$/, o = /^\/\//, a = /\?/, l = /([?&])_=[^&]*/, d = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/, h = /\s+/, c = (e.fn.load,
        {}), u = {}, p = ["*/"] + ["*"];
        try {
            i = location.href
        } catch (e) {
            (i = document.createElement("a")).href = "",
            i = i.href
        }
        function f(t) {
            return function(i, r) {
                "string" != typeof i && (r = i,
                i = "*");
                var s, n, o = i.toLowerCase().split(h), a = 0, l = o.length;
                if (e.isFunction(r))
                    for (; a < l; a++)
                        s = o[a],
                        (n = /^\+/.test(s)) && (s = s.substr(1) || "*"),
                        (t[s] = t[s] || [])[n ? "unshift" : "push"](r)
            }
        }
        function m(e, t, i, r, s, n) {
            (n = n || {})[s = s || t.dataTypes[0]] = !0;
            for (var o, a = e[s], l = 0, d = a ? a.length : 0, h = e === c; l < d && (h || !o); l++)
                "string" == typeof (o = a[l](t, i, r)) && (!h || n[o] ? o = void 0 : (t.dataTypes.unshift(o),
                o = m(e, t, i, r, o, n)));
            return !h && o || n["*"] || (o = m(e, t, i, r, "*", n)),
            o
        }
        function g(t, i) {
            var r, s, n = e.jqx.data.ajaxSettings.flatOptions || {};
            for (r in i)
                void 0 !== i[r] && ((n[r] ? t : s || (s = {}))[r] = i[r]);
            s && e.extend(!0, t, s)
        }
        t = d.exec(i.toLowerCase()) || [],
        e.extend(e.jqx.data, {
            ajaxSetup: function(t, i) {
                return i ? g(t, e.jqx.data.ajaxSettings) : (i = t,
                t = e.jqx.data.ajaxSettings),
                g(t, i),
                t
            },
            ajaxSettings: {
                url: i,
                isLocal: /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/.test(t[1]),
                global: !0,
                type: "GET",
                contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                processData: !0,
                async: !0,
                accepts: {
                    xml: "application/xml, text/xml",
                    html: "text/html",
                    text: "text/plain",
                    json: "application/json, text/javascript",
                    "*": p
                },
                contents: {
                    xml: /xml/,
                    html: /html/,
                    json: /json/
                },
                responseFields: {
                    xml: "responseXML",
                    text: "responseText"
                },
                converters: {
                    "* text": window.String,
                    "text html": !0,
                    "text json": e.parseJSON,
                    "text xml": e.parseXML
                },
                flatOptions: {
                    context: !0,
                    url: !0
                }
            },
            ajaxPrefilter: f(c),
            ajaxTransport: f(u),
            ajax: function(i, f) {
                "object" == typeof i && (f = i,
                i = void 0),
                f = f || {};
                var g, v, w, x, b, y, _, q, j = e.jqx.data.ajaxSetup({}, f), S = j.context || j, C = S !== j && (S.nodeType || S instanceof e) ? e(S) : e.event, T = e.Deferred(), I = e.Callbacks("once memory"), k = j.statusCode || {}, D = {}, P = {}, B = 0, M = "canceled", H = {
                    readyState: 0,
                    setRequestHeader: function(e, t) {
                        if (!B) {
                            var i = e.toLowerCase();
                            e = P[i] = P[i] || e,
                            D[e] = t
                        }
                        return this
                    },
                    getAllResponseHeaders: function() {
                        return 2 === B ? v : null
                    },
                    getResponseHeader: function(e) {
                        var t;
                        if (2 === B) {
                            if (!w)
                                for (w = {}; t = s.exec(v); )
                                    w[t[1].toLowerCase()] = t[2];
                            t = w[e.toLowerCase()]
                        }
                        return void 0 === t ? null : t
                    },
                    overrideMimeType: function(e) {
                        return B || (j.mimeType = e),
                        this
                    },
                    abort: function(e) {
                        return e = e || M,
                        x && x.abort(e),
                        O(0, e),
                        this
                    }
                };
                function O(t, i, r, s) {
                    var n, o, a, l, d, h = i;
                    2 !== B && (B = 2,
                    b && clearTimeout(b),
                    x = void 0,
                    v = s || "",
                    H.readyState = t > 0 ? 4 : 0,
                    r && (l = function(e, t, i) {
                        var r, s, n, o, a = e.contents, l = e.dataTypes, d = e.responseFields;
                        for (s in d)
                            s in i && (t[d[s]] = i[s]);
                        for (; "*" === l[0]; )
                            l.shift(),
                            void 0 === r && (r = e.mimeType || t.getResponseHeader("content-type"));
                        if (r)
                            for (s in a)
                                if (a[s] && a[s].test(r)) {
                                    l.unshift(s);
                                    break
                                }
                        if (l[0]in i)
                            n = l[0];
                        else {
                            for (s in i) {
                                if (!l[0] || e.converters[s + " " + l[0]]) {
                                    n = s;
                                    break
                                }
                                o || (o = s)
                            }
                            n = n || o
                        }
                        if (n)
                            return n !== l[0] && l.unshift(n),
                            i[n]
                    }(j, H, r)),
                    t >= 200 && t < 300 || 304 === t ? (j.ifModified && ((d = H.getResponseHeader("Last-Modified")) && (e.lastModified[g] = d),
                    (d = H.getResponseHeader("Etag")) && (e.etag[g] = d)),
                    304 === t ? (h = "notmodified",
                    n = !0) : (h = (n = function(e, t) {
                        var i, r, s, n, o = e.dataTypes.slice(), a = o[0], l = {}, d = 0;
                        e.dataFilter && (t = e.dataFilter(t, e.dataType));
                        if (o[1])
                            for (i in e.converters)
                                l[i.toLowerCase()] = e.converters[i];
                        for (; s = o[++d]; )
                            if ("*" !== s) {
                                if ("*" !== a && a !== s) {
                                    if (!(i = l[a + " " + s] || l["* " + s]))
                                        for (r in l)
                                            if ((n = r.split(" "))[1] === s && (i = l[a + " " + n[0]] || l["* " + n[0]])) {
                                                !0 === i ? i = l[r] : !0 !== l[r] && (s = n[0],
                                                o.splice(d--, 0, s));
                                                break
                                            }
                                    if (!0 !== i)
                                        if (i && e.throws)
                                            t = i(t);
                                        else
                                            try {
                                                t = i(t)
                                            } catch (e) {
                                                return {
                                                    state: "parsererror",
                                                    error: i ? e : "No conversion from " + a + " to " + s
                                                }
                                            }
                                }
                                a = s
                            }
                        return {
                            state: "success",
                            data: t
                        }
                    }(j, l)).state,
                    o = n.data,
                    n = !(a = n.error))) : (a = h,
                    h && !t || (h = "error",
                    t < 0 && (t = 0))),
                    H.status = t,
                    H.statusText = (i || h) + "",
                    n ? T.resolveWith(S, [o, h, H]) : T.rejectWith(S, [H, h, a]),
                    H.statusCode(k),
                    k = void 0,
                    _ && C.trigger("ajax" + (n ? "Success" : "Error"), [H, j, n ? o : a]),
                    I.fireWith(S, [H, h]),
                    _ && (C.trigger("ajaxComplete", [H, j]),
                    --e.active || e.event.trigger("ajaxStop")))
                }
                if (T.promise(H),
                H.success = H.done,
                H.error = H.fail,
                H.complete = I.add,
                H.statusCode = function(e) {
                    var t;
                    if (e)
                        if (B < 2)
                            for (t in e)
                                k[t] = [k[t], e[t]];
                        else
                            t = e[H.status],
                            H.always(t);
                    return this
                }
                ,
                j.url = ((i || j.url) + "").replace(r, "").replace(o, t[1] + "//"),
                j.dataTypes = e.trim(j.dataType || "*").toLowerCase().split(h),
                null == j.crossDomain && (y = d.exec(j.url.toLowerCase()),
                j.crossDomain = !(!y || y[1] === t[1] && y[2] === t[2] && (y[3] || ("http:" === y[1] ? 80 : 443)) == (t[3] || ("http:" === t[1] ? 80 : 443)))),
                j.data && j.processData && "string" != typeof j.data && (j.data = e.param(j.data, j.traditional)),
                m(c, j, f, H),
                2 === B)
                    return H;
                if (_ = j.global,
                j.type = j.type.toUpperCase(),
                j.hasContent = !n.test(j.type),
                _ && 0 == e.active++ && e.event.trigger("ajaxStart"),
                !j.hasContent && (j.data && (j.url += (a.test(j.url) ? "&" : "?") + j.data,
                delete j.data),
                g = j.url,
                !1 === j.cache)) {
                    var z = (new Date).getTime()
                      , A = j.url.replace(l, "$1_=" + z);
                    j.url = A + (A === j.url ? (a.test(j.url) ? "&" : "?") + "_=" + z : "")
                }
                for (q in (j.data && j.hasContent && !1 !== j.contentType || f.contentType) && H.setRequestHeader("Content-Type", j.contentType),
                j.ifModified && (g = g || j.url,
                e.lastModified[g] && H.setRequestHeader("If-Modified-Since", e.lastModified[g]),
                e.etag[g] && H.setRequestHeader("If-None-Match", e.etag[g])),
                H.setRequestHeader("Accept", j.dataTypes[0] && j.accepts[j.dataTypes[0]] ? j.accepts[j.dataTypes[0]] + ("*" !== j.dataTypes[0] ? ", " + p + "; q=0.01" : "") : j.accepts["*"]),
                j.headers)
                    H.setRequestHeader(q, j.headers[q]);
                if (j.beforeSend && (!1 === j.beforeSend.call(S, H, j) || 2 === B))
                    return H.abort();
                for (q in M = "abort",
                {
                    success: 1,
                    error: 1,
                    complete: 1
                })
                    H[q](j[q]);
                if (x = m(u, j, f, H)) {
                    H.readyState = 1,
                    _ && C.trigger("ajaxSend", [H, j]),
                    j.async && j.timeout > 0 && (b = setTimeout(function() {
                        H.abort("timeout")
                    }, j.timeout));
                    try {
                        B = 1,
                        x.send(D, O)
                    } catch (e) {
                        if (!(B < 2))
                            throw e;
                        O(-1, e)
                    }
                } else
                    O(-1, "No Transport");
                return H
            },
            active: 0,
            lastModified: {},
            etag: {}
        });
        var v = []
          , w = /\?/
          , x = /(=)\?(?=&|$)|\?\?/
          , b = (new Date).getTime();
        e.jqx.data.ajaxSetup({
            jsonp: "callback",
            jsonpCallback: function() {
                var t = v.pop() || e.expando + "_" + b++;
                return this[t] = !0,
                t
            }
        }),
        e.jqx.data.ajaxPrefilter("json jsonp", function(t, i, r) {
            var s, n, o, a = t.data, l = t.url, d = !1 !== t.jsonp, h = d && x.test(l), c = d && !h && "string" == typeof a && !(t.contentType || "").indexOf("application/x-www-form-urlencoded") && x.test(a);
            if ("jsonp" === t.dataTypes[0] || h || c)
                return s = t.jsonpCallback = e.isFunction(t.jsonpCallback) ? t.jsonpCallback() : t.jsonpCallback,
                n = window[s],
                h ? t.url = l.replace(x, "$1" + s) : c ? t.data = a.replace(x, "$1" + s) : d && (t.url += (w.test(l) ? "&" : "?") + t.jsonp + "=" + s),
                t.converters["script json"] = function() {
                    return o || e.error(s + " was not called"),
                    o[0]
                }
                ,
                t.dataTypes[0] = "json",
                window[s] = function() {
                    o = arguments
                }
                ,
                r.always(function() {
                    window[s] = n,
                    t[s] && (t.jsonpCallback = i.jsonpCallback,
                    v.push(s)),
                    o && e.isFunction(n) && n(o[0]),
                    o = n = void 0
                }),
                "script"
        }),
        e.jqx.data.ajaxSetup({
            accepts: {
                script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
            },
            contents: {
                script: /javascript|ecmascript/
            },
            converters: {
                "text script": function(t) {
                    return e.globalEval(t),
                    t
                }
            }
        }),
        e.jqx.data.ajaxPrefilter("script", function(e) {
            void 0 === e.cache && (e.cache = !1),
            e.crossDomain && (e.type = "GET",
            e.global = !1)
        }),
        e.jqx.data.ajaxTransport("script", function(e) {
            if (e.crossDomain) {
                var t, i = document.head || document.getElementsByTagName("head")[0] || document.documentElement;
                return {
                    send: function(r, s) {
                        (t = document.createElement("script")).async = "async",
                        e.scriptCharset && (t.charset = e.scriptCharset),
                        t.src = e.url,
                        t.onload = t.onreadystatechange = function(e, r) {
                            (r || !t.readyState || /loaded|complete/.test(t.readyState)) && (t.onload = t.onreadystatechange = null,
                            i && t.parentNode && i.removeChild(t),
                            t = void 0,
                            r || s(200, "success"))
                        }
                        ,
                        i.insertBefore(t, i.firstChild)
                    },
                    abort: function() {
                        t && t.onload(0, 1)
                    }
                }
            }
        });
        var y, _, q = !!window.ActiveXObject && function() {
            for (var e in y)
                y[e](0, 1)
        }
        , j = 0;
        function S() {
            try {
                return new window.XMLHttpRequest
            } catch (e) {}
        }
        e.jqx.data.ajaxSettings.xhr = window.ActiveXObject ? function() {
            return !this.isLocal && S() || function() {
                try {
                    return new window.ActiveXObject("Microsoft.XMLHTTP")
                } catch (e) {}
            }()
        }
        : S,
        _ = e.jqx.data.ajaxSettings.xhr(),
        e.extend(e.support, {
            ajax: !!_,
            cors: !!_ && "withCredentials"in _
        }),
        e.support || (e.support = {
            ajax: !0
        }),
        e.support.ajax && e.jqx.data.ajaxTransport(function(t) {
            var i;
            if (!t.crossDomain || e.support.cors)
                return {
                    send: function(r, s) {
                        var n, o, a = t.xhr();
                        if (t.username ? a.open(t.type, t.url, t.async, t.username, t.password) : a.open(t.type, t.url, t.async),
                        t.xhrFields)
                            for (o in t.xhrFields)
                                a[o] = t.xhrFields[o];
                        t.mimeType && a.overrideMimeType && a.overrideMimeType(t.mimeType),
                        t.crossDomain || r["X-Requested-With"] || (r["X-Requested-With"] = "XMLHttpRequest");
                        try {
                            for (o in r)
                                a.setRequestHeader(o, r[o])
                        } catch (e) {}
                        a.send(t.hasContent && t.data || null),
                        i = function(e, r) {
                            var o, l, d, h, c;
                            try {
                                if (i && (r || 4 === a.readyState))
                                    if (i = void 0,
                                    n && (a.onreadystatechange = function() {}
                                    ,
                                    q && delete y[n]),
                                    r)
                                        4 !== a.readyState && a.abort();
                                    else {
                                        o = a.status,
                                        d = a.getAllResponseHeaders(),
                                        h = {},
                                        (c = a.responseXML) && c.documentElement && (h.xml = c);
                                        try {
                                            h.text = a.responseText
                                        } catch (e) {}
                                        try {
                                            l = a.statusText
                                        } catch (e) {
                                            l = ""
                                        }
                                        o || !t.isLocal || t.crossDomain ? 1223 === o && (o = 204) : o = h.text ? 200 : 404
                                    }
                            } catch (e) {
                                r || s(-1, e)
                            }
                            h && s(o, l, h, d)
                        }
                        ,
                        t.async ? 4 === a.readyState ? setTimeout(i, 0) : (n = ++j,
                        q && (y || (y = {},
                        e(window).unload(q)),
                        y[n] = i),
                        a.onreadystatechange = i) : i()
                    },
                    abort: function() {
                        i && i(0, 1)
                    }
                }
        }),
        e.jqx.filter = function() {
            this.operator = "and";
            var t = ["EMPTY", "NOT_EMPTY", "CONTAINS", "CONTAINS_CASE_SENSITIVE", "DOES_NOT_CONTAIN", "DOES_NOT_CONTAIN_CASE_SENSITIVE", "STARTS_WITH", "STARTS_WITH_CASE_SENSITIVE", "ENDS_WITH", "ENDS_WITH_CASE_SENSITIVE", "EQUAL", "EQUAL_CASE_SENSITIVE", "NULL", "NOT_NULL"]
              , i = ["EQUAL", "NOT_EQUAL", "LESS_THAN", "LESS_THAN_OR_EQUAL", "GREATER_THAN", "GREATER_THAN_OR_EQUAL", "NULL", "NOT_NULL"]
              , r = ["EQUAL", "NOT_EQUAL", "LESS_THAN", "LESS_THAN_OR_EQUAL", "GREATER_THAN", "GREATER_THAN_OR_EQUAL", "NULL", "NOT_NULL"]
              , s = ["EQUAL", "NOT_EQUAL"]
              , n = new Array
              , o = new Array;
            this.evaluate = function(e) {
                for (var t = !0, i = 0; i < n.length; i++) {
                    var r = n[i].evaluate(e);
                    t = 0 == i ? r : 1 == o[i] || "or" == o[i] ? t || r : t && r
                }
                return t
            }
            ,
            this.getfilterscount = function() {
                return n.length
            }
            ,
            this.setoperatorsbyfiltertype = function(e, n) {
                switch (e) {
                case "numericfilter":
                    i = n;
                    break;
                case "stringfilter":
                    t = n;
                    break;
                case "datefilter":
                    r = n;
                    break;
                case "booleanfilter":
                    s = n
                }
            }
            ,
            this.getoperatorsbyfiltertype = function(e) {
                var n = new Array;
                switch (e) {
                case "numericfilter":
                    n = i.slice(0);
                    break;
                case "stringfilter":
                    n = t.slice(0);
                    break;
                case "datefilter":
                    n = r.slice(0);
                    break;
                case "booleanfilter":
                    n = s.slice(0)
                }
                return n
            }
            ;
            var a = function() {
                var e = function() {
                    return (65536 * (1 + Math.random()) | 0).toString(16).substring(1)
                };
                return e() + "-" + e() + "-" + e()
            };
            this.createfilter = function(e, t, i, r, s, n) {
                if (null == e || null == e)
                    return null;
                switch (e) {
                case "numericfilter":
                    return new h(t,i.toUpperCase());
                case "stringfilter":
                    return new l(t,i.toUpperCase());
                case "datefilter":
                    return new c(t,i.toUpperCase(),s,n);
                case "booleanfilter":
                    return new d(t,i.toUpperCase());
                case "custom":
                    return new u(t,i.toUpperCase(),r)
                }
                throw new Error("jqxGrid: There is no such filter type. The available filter types are: 'numericfilter', 'stringfilter', 'datefilter' and 'booleanfilter'")
            }
            ,
            this.getfilters = function() {
                for (var e = new Array, t = 0; t < n.length; t++) {
                    var i = {
                        value: n[t].filtervalue,
                        condition: n[t].comparisonoperator,
                        operator: o[t],
                        type: n[t].type
                    };
                    n[t].data && (i.id = n[t].data),
                    e[t] = i
                }
                return e
            }
            ,
            this.addfilter = function(e, t) {
                n[n.length] = t,
                t.key = a(),
                o[o.length] = e
            }
            ,
            this.removefilter = function(e) {
                for (var t = 0; t < n.length; t++)
                    if (n[t].key == e.key) {
                        n.splice(t, 1),
                        o.splice(t, 1);
                        break
                    }
            }
            ,
            this.getoperatorat = function(e) {
                return null == e || null == e ? null : e < 0 || e > n.length ? null : o[e]
            }
            ,
            this.setoperatorat = function(e, t) {
                return null == e || null == e ? null : e < 0 || e > n.length ? null : void (o[t] = t)
            }
            ,
            this.getfilterat = function(e) {
                return null == e || null == e ? null : e < 0 || e > n.length ? null : n[e]
            }
            ,
            this.setfilterat = function(e, t) {
                return null == e || null == e ? null : e < 0 || e > n.length ? null : (t.key = a(),
                void (n[e] = t))
            }
            ,
            this.clear = function() {
                n = new Array,
                o = new Array
            }
            ;
            var l = function(t, i) {
                this.filtervalue = t,
                this.comparisonoperator = i,
                this.type = "stringfilter",
                this.evaluate = function(t) {
                    var i = this.filtervalue
                      , r = this.comparisonoperator;
                    if (null == t || null == t || "" == t) {
                        if ("NULL" == r)
                            return !0;
                        if ("EQUAL" == r && t == i)
                            return !0;
                        if ("NOT_EQUAL" == r && t != i)
                            return !0;
                        if ("EMPTY" != r)
                            return !1;
                        if ("" == t)
                            return !0
                    }
                    var s = "";
                    try {
                        s = t.toString()
                    } catch (e) {
                        return !0
                    }
                    var n = function(t, i) {
                        switch (r) {
                        case "EQUAL":
                            return e.jqx.string.equalsIgnoreCase(t, i);
                        case "EQUAL_CASE_SENSITIVE":
                            return e.jqx.string.equals(t, i);
                        case "NOT_EQUAL":
                            return !e.jqx.string.equalsIgnoreCase(t, i);
                        case "NOT_EQUAL_CASE_SENSITIVE":
                            return !e.jqx.string.equals(t, i);
                        case "CONTAINS":
                            return e.jqx.string.containsIgnoreCase(t, i);
                        case "CONTAINS_CASE_SENSITIVE":
                            return e.jqx.string.contains(t, i);
                        case "DOES_NOT_CONTAIN":
                            return !e.jqx.string.containsIgnoreCase(t, i);
                        case "DOES_NOT_CONTAIN_CASE_SENSITIVE":
                            return !e.jqx.string.contains(t, i);
                        case "EMPTY":
                            return "" == t;
                        case "NOT_EMPTY":
                            return "" != t;
                        case "NOT_NULL":
                            return null != t;
                        case "STARTS_WITH":
                            return e.jqx.string.startsWithIgnoreCase(t, i);
                        case "ENDS_WITH":
                            return e.jqx.string.endsWithIgnoreCase(t, i);
                        case "ENDS_WITH_CASE_SENSITIVE":
                            return e.jqx.string.endsWith(t, i);
                        case "STARTS_WITH_CASE_SENSITIVE":
                            return e.jqx.string.startsWith(t, i);
                        default:
                            return !1
                        }
                    }
                      , o = new Array;
                    if (i && i.indexO && "NOT_EQUAL" !== r && (i.indexOf("|") >= 0 || i.indexOf(" AND ") >= 0 || i.indexOf(" OR ") >= 0 || i.indexOf(" and ") >= 0 || i.indexOf(" or ") >= 0)) {
                        if (g = n(s, i))
                            return g;
                        var a = i.indexOf(" AND ") >= 0 ? i.split(" AND ") : new Array
                          , l = i.indexOf(" OR ") >= 0 ? i.split(" OR ") : new Array
                          , d = i.indexOf(" and ") >= 0 ? i.split(" and ") : new Array
                          , h = i.indexOf(" or ") >= 0 ? i.split(" or ") : new Array
                          , c = i.indexOf("|") >= 0 ? i.split("|") : new Array;
                        if (c.length > 0)
                            for (var u = 0; u < c.length; u++)
                                c[u] = e.trim(c[u]);
                        var p = i.indexOf(" ") >= 0 ? i.split(" ") : new Array;
                        if (p.length > 0)
                            for (u = 0; u < p.length; u++)
                                p[u] = e.trim(p[u]);
                        if (a = (a = a.concat(p)).concat(d),
                        l = (l = l.concat(c)).concat(h),
                        a.length > 0)
                            for (u = 0; u < a.length; u++)
                                !a[u].indexOf(" OR ") >= 0 && o.push(a[u]);
                        if (l.length > 0)
                            for (u = 0; u < l.length; u++)
                                !l[u].indexOf(" AND ") >= 0 && o.push(l[u]);
                        for (var f = void 0, m = 0; m < o.length; m++) {
                            var g = n(s, t = o[m])
                              , v = m < a.length ? "and" : "or";
                            f = null == f ? g : "or" == v ? f || g : f && g
                        }
                        return f
                    }
                    return n(s, i)
                }
            }
              , d = function(e, t) {
                this.filtervalue = e,
                this.comparisonoperator = t,
                this.type = "booleanfilter",
                this.evaluate = function(e) {
                    var t = this.filtervalue
                      , i = this.comparisonoperator;
                    if (null == e || null == e)
                        return "NULL" == i;
                    var r = e;
                    switch (i) {
                    case "EQUAL":
                        return r == t || r.toString() == t.toString();
                    case "NOT_EQUAL":
                        return r != t && r.toString() != t.toString();
                    default:
                        return !1
                    }
                }
            }
              , h = function(t, i) {
                this.filtervalue = t,
                this.comparisonoperator = i,
                this.type = "numericfilter",
                this.evaluate = function(t) {
                    var i = this.filtervalue
                      , r = this.comparisonoperator;
                    if (null == t || "" === t) {
                        if ("NOT_NULL" == r)
                            return !1;
                        if ("NULL" == r)
                            return !0;
                        switch (r) {
                        case "EQUAL":
                            return t == i;
                        case "NOT_EQUAL":
                            return t != i
                        }
                        return !1
                    }
                    if ("NULL" == r)
                        return !1;
                    if ("NOT_NULL" == r)
                        return !0;
                    var s = t;
                    try {
                        s = parseFloat(s)
                    } catch (e) {
                        if ("" != t.toString())
                            return !1
                    }
                    var n = function(t, i) {
                        switch (r) {
                        case "EQUAL":
                            return t == i;
                        case "NOT_EQUAL":
                            return t != i;
                        case "GREATER_THAN":
                            return t > i;
                        case "GREATER_THAN_OR_EQUAL":
                            return t >= i;
                        case "LESS_THAN":
                            return t < i;
                        case "LESS_THAN_OR_EQUAL":
                            return t <= i;
                        case "STARTS_WITH":
                            return e.jqx.string.startsWithIgnoreCase(t.toString(), i.toString());
                        case "ENDS_WITH":
                            return e.jqx.string.endsWithIgnoreCase(t.toString(), i.toString());
                        case "ENDS_WITH_CASE_SENSITIVE":
                            return e.jqx.string.endsWith(t.toString(), i.toString());
                        case "STARTS_WITH_CASE_SENSITIVE":
                            return e.jqx.string.startsWith(t.toString(), i.toString());
                        case "CONTAINS":
                            return e.jqx.string.containsIgnoreCase(t.toString(), i.toString());
                        case "CONTAINS_CASE_SENSITIVE":
                            return e.jqx.string.contains(t.toString(), i.toString());
                        case "DOES_NOT_CONTAIN":
                            return !e.jqx.string.containsIgnoreCase(t.toString(), i.toString());
                        case "DOES_NOT_CONTAIN_CASE_SENSITIVE":
                            return !e.jqx.string.contains(t.toString(), i.toString());
                        default:
                            return !0
                        }
                    }
                      , o = new Array;
                    if (i && i.indexOf && (i = i.replace("$", "")),
                    i.indexOf && (i.indexOf("|") >= 0 || i.indexOf(" AND ") >= 0 || i.indexOf(" OR ") >= 0 || i.indexOf(" and ") >= 0 || i.indexOf(" or ") >= 0)) {
                        if (g = n(s, i))
                            return g;
                        var a = (i = i.toString()).indexOf(" AND ") >= 0 ? i.split(" AND ") : new Array
                          , l = i.indexOf(" OR ") >= 0 ? i.split(" OR ") : new Array
                          , d = i.indexOf(" and ") >= 0 ? i.split(" and ") : new Array
                          , h = i.indexOf(" or ") >= 0 ? i.split(" or ") : new Array;
                        a = a.concat(d),
                        l = l.concat(h);
                        var c = i.indexOf("|") >= 0 ? i.split("|") : new Array;
                        if (c.length > 0)
                            for (var u = 0; u < c.length; u++)
                                c[u] = e.trim(c[u]);
                        if (l = l.concat(c),
                        a.length > 0)
                            for (u = 0; u < a.length; u++)
                                !a[u].indexOf(" OR ") >= 0 && o.push(a[u]);
                        if (l.length > 0)
                            for (u = 0; u < l.length; u++)
                                !l[u].indexOf(" AND ") >= 0 && o.push(l[u]);
                        for (var p = void 0, f = 0; f < o.length; f++) {
                            if ((t = o[f]) && t.indexOf && t.indexOf("..") >= 0) {
                                var m = t.toString().split("..");
                                2 == m.length && (g = s >= m[0] && s <= m[1])
                            } else
                                var g = n(s, t);
                            var v = f < a.length ? "and" : "or";
                            p = null == p ? g : "or" == v ? p || g : p && g
                        }
                        return p
                    }
                    return i && i.indexOf && i.indexOf("..") >= 0 && 2 == (o = i.toString().split("..")).length ? s >= o[0] && s <= o[1] : n(s, i)
                }
            }
              , c = function(t, i, r, s) {
                this.filtervalue = t,
                this.type = "datefilter";
                var n = this;
                if (null != r && null != s) {
                    var o = e.jqx.dataFormat.parsedate(t, r, s);
                    if (null != o)
                        this.filterdate = o;
                    else {
                        var a = e.jqx.dataFormat.tryparsedate(t, s);
                        null != a && (this.filterdate = a)
                    }
                } else {
                    var l;
                    "NaN" == (l = new Date(t)).toString() || "Invalid Date" == l.toString() ? this.filterdate = e.jqx.dataFormat.tryparsedate(t) : this.filterdate = l
                }
                this.filterdate || ("NaN" == (l = new Date(t)).toString() || "Invalid Date" == l.toString() ? this.filterdate = e.jqx.dataFormat.tryparsedate(t) : this.filterdate = l);
                this.comparisonoperator = i,
                this.evaluate = function(t) {
                    var i = this.filtervalue
                      , o = this.comparisonoperator;
                    if (null == t || null == t || "" == t) {
                        if ("NOT_NULL" == o)
                            return !1;
                        if ("NULL" == o)
                            return !0;
                        switch (o) {
                        case "EQUAL":
                            return t == i;
                        case "NOT_EQUAL":
                            return t != i
                        }
                        return !1
                    }
                    if ("NULL" == o)
                        return !1;
                    if ("NOT_NULL" == o)
                        return !0;
                    var a = new Date;
                    a.setFullYear(1900, 0, 1),
                    a.setHours(12, 0, 0, 0);
                    try {
                        var l = new Date(t);
                        a = t = "NaN" == l.toString() || "Invalid Date" == l.toString() ? e.jqx.dataFormat.tryparsedate(t) : l;
                        var d = !1;
                        if (null != r && null != s)
                            if (r.indexOf("t") >= 0 || r.indexOf("T") >= 0 || r.indexOf(":") >= 0 || r.indexOf("f") >= 0)
                                if (d = !0,
                                i && -1 == i.toString().indexOf(":"))
                                    null != (q = e.jqx.dataFormat.tryparsedate(i.toString() + ":00", s)) && (n.filterdate = q);
                        null != r && (r.indexOf("hh") >= 0 || r.indexOf("t") >= 0) && (d = !0),
                        d || (a.setHours(0),
                        a.setMinutes(0),
                        a.setSeconds(0))
                    } catch (e) {
                        if ("" != t.toString())
                            return !1
                    }
                    if (null != n.filterdate)
                        i = n.filterdate;
                    else if (i && i.indexOf && (-1 != i.indexOf(":") || !isNaN(parseInt(i)))) {
                        var h = new Date(a);
                        h.setHours(12, 0, 0, 0);
                        for (var c = i.split(":"), u = 0; u < c.length; u++)
                            0 == u && h.setHours(c[u]),
                            1 == u && h.setMinutes(c[u]),
                            2 == u && h.setSeconds(c[u]);
                        i = h
                    }
                    d && i && i.setFullYear && a && a.getFullYear && -1 == r.indexOf("d") && -1 == r.indexOf("M") && -1 == r.indexOf("y") && i.setFullYear(a.getFullYear(), a.getMonth(), a.getDate());
                    var p = function(t, i) {
                        switch (null == t && (t = ""),
                        o) {
                        case "EQUAL":
                            return t.toString() == i.toString();
                        case "NOT_EQUAL":
                            return t.toString() != i.toString();
                        case "GREATER_THAN":
                            return t > i;
                        case "GREATER_THAN_OR_EQUAL":
                            return t >= i;
                        case "LESS_THAN":
                            return t < i;
                        case "LESS_THAN_OR_EQUAL":
                            return t <= i;
                        case "STARTS_WITH":
                            return e.jqx.string.startsWithIgnoreCase(t.toString(), i.toString());
                        case "ENDS_WITH":
                            return e.jqx.string.endsWithIgnoreCase(t.toString(), i.toString());
                        case "ENDS_WITH_CASE_SENSITIVE":
                            return e.jqx.string.endsWith(t.toString(), i.toString());
                        case "STARTS_WITH_CASE_SENSITIVE":
                            return e.jqx.string.startsWith(t.toString(), i.toString());
                        case "CONTAINS":
                            return e.jqx.string.containsIgnoreCase(t.toString(), i.toString());
                        case "CONTAINS_CASE_SENSITIVE":
                            return e.jqx.string.contains(t.toString(), i.toString());
                        case "DOES_NOT_CONTAIN":
                            return !e.jqx.string.containsIgnoreCase(t.toString(), i.toString());
                        case "DOES_NOT_CONTAIN_CASE_SENSITIVE":
                            return !e.jqx.string.contains(t.toString(), i.toString());
                        default:
                            return !0
                        }
                    }
                      , f = new Array;
                    if (i && i.indexOf && (i.indexOf("|") >= 0 || i.indexOf(" AND ") >= 0 || i.indexOf(" OR ") >= 0 || i.indexOf(" and ") >= 0 || i.indexOf(" or ") >= 0)) {
                        if (q = p(a, i))
                            return q;
                        var m = i.indexOf(" AND ") >= 0 ? i.split(" AND ") : new Array
                          , g = i.indexOf(" OR ") >= 0 ? i.split(" OR ") : new Array
                          , v = i.indexOf(" and ") >= 0 ? i.split(" and ") : new Array
                          , w = i.indexOf(" or ") >= 0 ? i.split(" or ") : new Array;
                        m = m.concat(v),
                        g = g.concat(w);
                        var x = i.indexOf("|") >= 0 ? i.split("|") : new Array;
                        if (x.length > 0)
                            for (u = 0; u < x.length; u++)
                                x[u] = e.trim(x[u]);
                        if (g = g.concat(x),
                        m.length > 0)
                            for (u = 0; u < m.length; u++)
                                !m[u].indexOf(" OR ") >= 0 && f.push(m[u]);
                        if (g.length > 0)
                            for (u = 0; u < g.length; u++)
                                !g[u].indexOf(" AND ") >= 0 && f.push(g[u]);
                        for (var b = void 0, y = 0; y < f.length; y++) {
                            if ((t = f[y]) && t.indexOf && t.indexOf("..") >= 0) {
                                var _ = t.toString().split("..");
                                2 == _.length && (q = a >= _[0] && a <= _[1])
                            } else
                                var q = p(a, t);
                            var j = y < m.length ? "and" : "or";
                            b = null == b ? q : "or" == j ? b || q : b && q
                        }
                        return b
                    }
                    return i && i.indexOf && i.indexOf("..") >= 0 && 2 == (f = i.toString().split("..")).length ? a >= f[0] && a <= f[1] : p(a, i)
                }
            }
              , u = function(e, t, i) {
                this.filtervalue = e,
                this.comparisonoperator = t,
                this.evaluate = function(e, t) {
                    return i(this.filtervalue, e, this.comparisonoperator)
                }
            }
        }
    }(jqxBaseFramework)
}
, function(e, t) {
    var i;
    (i = jqxBaseFramework).jqx.jqxWidget("jqxCheckBox", "", {}),
    i.extend(i.jqx._jqxCheckBox.prototype, {
        defineInstance: function() {
            var e = {
                animationShowDelay: 300,
                animationHideDelay: 300,
                width: null,
                height: null,
                boxSize: "16px",
                checked: !1,
                hasThreeStates: !1,
                disabled: !1,
                enableContainerClick: !0,
                locked: !1,
                groupName: "",
                keyboardCheck: !0,
                enableHover: !0,
                hasInput: !0,
                rtl: !1,
                updated: null,
                disabledContainer: !1,
                changeType: null,
                _canFocus: !0,
                aria: {
                    "aria-checked": {
                        name: "checked",
                        type: "boolean"
                    },
                    "aria-disabled": {
                        name: "disabled",
                        type: "boolean"
                    }
                },
                events: ["checked", "unchecked", "indeterminate", "change"]
            };
            return this === i.jqx._jqxCheckBox.prototype ? e : (i.extend(!0, this, e),
            e)
        },
        createInstance: function(e) {
            this._createFromInput("CheckBox"),
            this.render()
        },
        _createFromInput: function(e) {
            var t = this;
            if ("input" == t.element.nodeName.toLowerCase()) {
                t.field = t.element,
                t.field.className && (t._className = t.field.className);
                var r = {
                    title: t.field.title
                };
                t.field.value && (r.value = t.field.value),
                t.field.checked && (r.checked = !0),
                t.field.id.length ? r.id = t.field.id.replace(/[^\w]/g, "_") + "_" + e : r.id = i.jqx.utilities.createId() + "_" + e;
                var s = t.element.nextSibling
                  , n = !1;
                !s || "#text" != s.nodeName && "span" != s.nodeName || (n = !0);
                var o = 0
                  , a = i("<div></div>", r);
                if (n) {
                    a.append(s);
                    var l = i("<span>" + i(s).text() + "</span>");
                    l.appendTo(i(document.body)),
                    o += l.width(),
                    l.remove()
                }
                a[0].style.cssText = t.field.style.cssText,
                t.width || (t.width = i(t.field).width() + o + 10),
                t.height || (t.height = i(t.field).outerHeight() + 10),
                i(t.field).hide().after(a);
                var d = t.host.data();
                if (t.host = a,
                t.host.data(d),
                t.element = a[0],
                t.element.id = t.field.id,
                t.field.id = r.id,
                t._className && (t.host.addClass(t._className),
                i(t.field).removeClass(t._className)),
                t.field.tabIndex) {
                    var h = t.field.tabIndex;
                    t.field.tabIndex = -1,
                    t.element.tabIndex = h
                }
            }
        },
        _addInput: function() {
            if (this.hasInput) {
                this.input && this.input.remove();
                var e = this.host.attr("name");
                this.input = i("<input type='hidden'/>"),
                this.host.append(this.input),
                e && this.input.attr("name", e),
                this.input.val(this.checked),
                this.host.attr("role", "checkbox"),
                i.jqx.aria(this)
            }
        },
        render: function() {
            this.init = !0;
            var e = this;
            this.setSize(),
            this.propertyChangeMap.width = function(t, i, r, s) {
                e.setSize()
            }
            ,
            this.propertyChangeMap.height = function(t, i, r, s) {
                e.setSize()
            }
            ,
            this._removeHandlers(),
            this.width || this.host.css("overflow-x", "visible"),
            this.height || this.host.css("overflow-y", "visible"),
            this.checkbox && (this.checkbox.remove(),
            this.checkbox = null),
            this.checkMark && (this.checkMark.remove(),
            this.checkMark = null),
            this.box && (this.box.remove(),
            this.box = null),
            this.clear && (this.clear.remove(),
            this.clear = null),
            null == this.boxSize && (this.boxSize = 16);
            var t = parseInt(this.boxSize) + "px"
              , r = "16px"
              , s = Math.floor((parseInt(this.boxSize) - 16) / 2)
              , n = s;
            s += "px",
            n += "px",
            16 != parseInt(this.boxSize) ? this.checkbox = i('<div><div style="width: ' + t + "; height: " + t + ';"><span style="position: relative; left: ' + s + "; top: " + n + "; width: " + r + "; height: " + r + ';"></span></div></div>') : this.checkbox = i('<div><div style="width: ' + t + "; height: " + t + ';"><span style="width: ' + t + "; height: " + t + ';"></span></div></div>'),
            this.host.prepend(this.checkbox),
            this.disabledContainer || (this.host.attr("tabIndex") || this.host.attr("tabIndex", 0),
            this.clear = i('<div style="clear: both;"></div>'),
            this.host.append(this.clear)),
            this.checkMark = i(this.checkbox[0].firstChild.firstChild),
            this.box = this.checkbox,
            this.box.addClass(this.toThemeProperty("jqx-checkbox-default") + " " + this.toThemeProperty("jqx-fill-state-normal") + " " + this.toThemeProperty("jqx-rc-all")),
            this.disabled && this.disable(),
            this.disabledContainer || (this.host.addClass(this.toThemeProperty("jqx-widget")),
            this.host.addClass(this.toThemeProperty("jqx-checkbox"))),
            this.locked && !this.disabledContainer && this.host.css("cursor", "auto");
            var o = this.element.getAttribute("checked");
            "checked" != o && "true" != o && 1 != o || (this.checked = !0),
            this._addInput(),
            this._render(),
            this._addHandlers(),
            this.init = !1,
            this._centerBox(),
            this.isMaterialized() && (i(this.checkbox).addClass("ripple"),
            i.jqx.ripple(i(this.checkbox), this.host, "checkbox"))
        },
        _centerBox: function() {
            if (this.height && -1 == this.height.toString().indexOf("%") && this.box) {
                var e = parseInt(this.height);
                this.host.css("line-height", e + "px");
                var t = e - parseInt(this.boxSize) - 1;
                t /= 2,
                this.box.css("margin-top", parseInt(t))
            }
        },
        refresh: function(e) {
            e || (this.setSize(),
            this._render())
        },
        resize: function(e, t) {
            this.width = e,
            this.height = t,
            this.refresh()
        },
        setSize: function() {
            null != this.width && -1 != this.width.toString().indexOf("px") ? this.host.width(this.width) : null == this.width || isNaN(this.width) ? null != this.width && -1 != this.width.toString().indexOf("%") && (this.element.style.width = this.width) : this.host.width(this.width),
            null != this.height && -1 != this.height.toString().indexOf("px") ? this.host.height(this.height) : null == this.height || isNaN(this.height) ? null != this.height && -1 != this.height.toString().indexOf("%") && (this.element.style.height = this.height) : this.host.height(this.height),
            this._centerBox()
        },
        _addHandlers: function() {
            var e = this
              , t = "mousedown";
            i.jqx.mobile.isTouchDevice() && (t = i.jqx.mobile.getTouchEventName("touchend")),
            this.addHandler(this.box, t, function(t) {
                if (!e.disabled && !e.enableContainerClick && !e.locked)
                    return e.changeType = "mouse",
                    e.toggle(),
                    e.updated && (t.owner = e,
                    e.updated(t, e.checked, e.oldChecked)),
                    t.preventDefault && t.preventDefault(),
                    !1
            }),
            this.disabledContainer || (this.addHandler(this.host, "keydown", function(t) {
                if (!e.disabled && !e.locked && e.keyboardCheck && 32 == t.keyCode)
                    return !e._canFocus || (e.changeType = "keyboard",
                    e.toggle(),
                    e.updated && (t.owner = e,
                    e.updated(t, e.checked, e.oldChecked)),
                    t.preventDefault && t.preventDefault(),
                    !1)
            }),
            this.addHandler(this.host, t, function(t) {
                if (!e.disabled && e.enableContainerClick && !e.locked)
                    return e.clickTime = new Date,
                    e.changeType = "mouse",
                    e.toggle(),
                    t.preventDefault && t.preventDefault(),
                    e._canFocus && e.focus(),
                    !1
            }),
            this.addHandler(this.host, "selectstart", function(t) {
                if (!e.disabled && e.enableContainerClick)
                    return t.preventDefault && t.preventDefault(),
                    !1
            }),
            this.addHandler(this.host, "mouseup", function(t) {
                !e.disabled && e.enableContainerClick && t.preventDefault && t.preventDefault()
            }),
            this.addHandler(this.host, "focus", function(t) {
                if (!e.disabled && !e.locked)
                    return !e._canFocus || (e.enableHover && e.box.addClass(e.toThemeProperty("jqx-checkbox-hover")),
                    e.box.addClass(e.toThemeProperty("jqx-fill-state-focus")),
                    t.preventDefault && t.preventDefault(),
                    i(e.checkbox).removeClass("active"),
                    (!e.clickTime || e.clickTime && new Date - e.clickTime > 300) && i(e.checkbox).addClass("active"),
                    e.hovered = !0,
                    !1)
            }),
            this.addHandler(this.host, "blur", function(t) {
                if (i(e.checkbox).removeClass("active"),
                !e.disabled && !e.locked)
                    return !e._canFocus || (e.enableHover && e.box.removeClass(e.toThemeProperty("jqx-checkbox-hover")),
                    e.box.removeClass(e.toThemeProperty("jqx-fill-state-focus")),
                    t.preventDefault && t.preventDefault(),
                    e.hovered = !1,
                    !1)
            }),
            this.addHandler(this.host, "mouseenter", function(t) {
                if (e.locked && e.host.css("cursor", "arrow"),
                e.enableHover && !e.disabled && e.enableContainerClick && !e.locked)
                    return e.box.addClass(e.toThemeProperty("jqx-checkbox-hover")),
                    e.box.addClass(e.toThemeProperty("jqx-fill-state-hover")),
                    t.preventDefault && t.preventDefault(),
                    e.hovered = !0,
                    !1
            }),
            this.addHandler(this.host, "mouseleave", function(t) {
                if (e.enableHover && !e.disabled && e.enableContainerClick && !e.locked)
                    return e.box.removeClass(e.toThemeProperty("jqx-checkbox-hover")),
                    e.box.removeClass(e.toThemeProperty("jqx-fill-state-hover")),
                    t.preventDefault && t.preventDefault(),
                    e.hovered = !1,
                    !1
            }),
            this.addHandler(this.box, "mouseenter", function() {
                e.locked || e.disabled || e.enableContainerClick || (e.box.addClass(e.toThemeProperty("jqx-checkbox-hover")),
                e.box.addClass(e.toThemeProperty("jqx-fill-state-hover")))
            }),
            this.addHandler(this.box, "mouseleave", function() {
                e.disabled || e.enableContainerClick || (e.box.removeClass(e.toThemeProperty("jqx-checkbox-hover")),
                e.box.removeClass(e.toThemeProperty("jqx-fill-state-hover")))
            }))
        },
        focus: function() {
            try {
                this.host.focus()
            } catch (e) {}
        },
        _removeHandlers: function() {
            var e = "mousedown";
            i.jqx.mobile.isTouchDevice() && (e = "touchend"),
            this.box && (this.removeHandler(this.box, e),
            this.removeHandler(this.box, "mouseenter"),
            this.removeHandler(this.box, "mouseleave")),
            this.removeHandler(this.host, e),
            this.removeHandler(this.host, "mouseup"),
            this.removeHandler(this.host, "selectstart"),
            this.removeHandler(this.host, "mouseenter"),
            this.removeHandler(this.host, "mouseleave"),
            this.removeHandler(this.host, "keydown"),
            this.removeHandler(this.host, "blur"),
            this.removeHandler(this.host, "focus")
        },
        _render: function() {
            this.disabled ? this.disable() : this.enableContainerClick ? this.host.css("cursor", "pointer") : this.init || this.host.css("cursor", "auto"),
            this.rtl && (this.box.addClass(this.toThemeProperty("jqx-checkbox-rtl")),
            this.host.addClass(this.toThemeProperty("jqx-rtl"))),
            this.updateStates(),
            this.host.attr("checked", this.checked)
        },
        _setState: function(e, t) {
            this.checked != e && (this.checked = e,
            this.checked ? this.checkMark[0].className = this.toThemeProperty("jqx-checkbox-check-checked") : null == this.checked ? this.checkMark[0].className = this.toThemeProperty("jqx-checkbox-check-indeterminate") : this.checkMark[0].className = ""),
            !1 !== t && !0 !== t || (this.locked = t),
            e ? this.element.setAttribute("checked", !0) : this.element.removeAttribute("checked")
        },
        val: function(e) {
            return 0 == arguments.length || null != e && "object" == typeof e ? this.checked : ("string" == typeof e ? ("true" == e && this.check(),
            "false" == e && this.uncheck(),
            "" == e && this.indeterminate()) : (1 == e && this.check(),
            0 == e && this.uncheck(),
            null == e && this.indeterminate()),
            this.checked)
        },
        check: function() {
            this.checked = !0;
            var e = this;
            if (this.checkMark.removeClass(),
            this.element.setAttribute("checked", !0),
            i.jqx.browser.msie || 0 == this.animationShowDelay ? this.checkMark.addClass(this.toThemeProperty("jqx-checkbox-check-checked")) : (this.checkMark.addClass(this.toThemeProperty("jqx-checkbox-check-checked")),
            this.checkMark.css("opacity", 0),
            this.checkMark.stop().animate({
                opacity: 1
            }, this.animationShowDelay, function() {})),
            null != this.groupName && this.groupName.length > 0) {
                var t = i.find(this.toThemeProperty(".jqx-checkbox", !0));
                i.each(t, function() {
                    i(this).jqxCheckBox("groupName") == e.groupName && this != e.element && i(this).jqxCheckBox("uncheck")
                })
            }
            var r = this.changeType;
            this._raiseEvent("0", !0),
            this.changeType = r,
            this._raiseEvent("3", {
                checked: !0
            }),
            null != this.input && (this.input.val(this.checked),
            i.jqx.aria(this, "aria-checked", this.checked),
            this.host.attr("checked", this.checked))
        },
        uncheck: function() {
            this.checked = !1;
            var e = this;
            this.element.removeAttribute("checked"),
            i.jqx.browser.msie || 0 == this.animationHideDelay ? "" != e.checkMark[0].className && (e.checkMark[0].className = "") : (this.checkMark.css("opacity", 1),
            this.checkMark.stop().animate({
                opacity: 0
            }, this.animationHideDelay, function() {
                "" != e.checkMark[0].className && (e.checkMark[0].className = "")
            }));
            var t = this.changeType;
            this._raiseEvent("1"),
            this.changeType = t,
            this._raiseEvent("3", {
                checked: !1
            }),
            null != this.input && (this.input.val(this.checked),
            i.jqx.aria(this, "aria-checked", this.checked),
            this.host.attr("checked", this.checked))
        },
        indeterminate: function() {
            this.checked = null,
            this.checkMark.removeClass(),
            i.jqx.browser.msie || 0 == this.animationShowDelay ? this.checkMark.addClass(this.toThemeProperty("jqx-checkbox-check-indeterminate")) : (this.checkMark.addClass(this.toThemeProperty("jqx-checkbox-check-indeterminate")),
            this.checkMark.css("opacity", 0),
            this.checkMark.stop().animate({
                opacity: 1
            }, this.animationShowDelay, function() {})),
            this.changeType,
            this._raiseEvent("2"),
            this._raiseEvent("3", {
                checked: null
            }),
            null != this.input && (this.input.val(this.checked),
            i.jqx.aria(this, "aria-checked", "undefined"),
            this.host.attr("checked", "undefined"))
        },
        toggle: function() {
            this.disabled || this.locked || (null != this.groupName && this.groupName.length > 0 ? 1 != this.checked && (this.checked = !0,
            this.updateStates()) : (this.oldChecked = this.checked,
            1 == this.checked ? this.checked = !!this.hasThreeStates && null : this.checked = null != this.checked,
            this.updateStates(),
            null != this.input && this.input.val(this.checked)))
        },
        updateStates: function() {
            this.checked ? this.check() : 0 == this.checked ? this.uncheck() : null == this.checked && this.indeterminate()
        },
        disable: function() {
            this.disabled = !0,
            1 == this.checked ? this.checkMark.addClass(this.toThemeProperty("jqx-checkbox-check-disabled")) : null == this.checked && this.checkMark.addClass(this.toThemeProperty("jqx-checkbox-check-indeterminate-disabled")),
            this.box.addClass(this.toThemeProperty("jqx-checkbox-disabled-box")),
            this.host.addClass(this.toThemeProperty("jqx-checkbox-disabled")),
            this.host.addClass(this.toThemeProperty("jqx-fill-state-disabled")),
            this.box.addClass(this.toThemeProperty("jqx-checkbox-disabled")),
            i.jqx.aria(this, "aria-disabled", this.disabled)
        },
        enable: function() {
            1 == this.checked ? this.checkMark.removeClass(this.toThemeProperty("jqx-checkbox-check-disabled")) : null == this.checked && this.checkMark.removeClass(this.toThemeProperty("jqx-checkbox-check-indeterminate-disabled")),
            this.box.removeClass(this.toThemeProperty("jqx-checkbox-disabled-box")),
            this.host.removeClass(this.toThemeProperty("jqx-checkbox-disabled")),
            this.host.removeClass(this.toThemeProperty("jqx-fill-state-disabled")),
            this.box.removeClass(this.toThemeProperty("jqx-checkbox-disabled")),
            this.disabled = !1,
            i.jqx.aria(this, "aria-disabled", this.disabled)
        },
        destroy: function() {
            this.host.remove()
        },
        _raiseEvent: function(e, t) {
            if (!this.init) {
                var r = this.events[e]
                  , s = new i.Event(r);
                s.owner = this,
                t || (t = {}),
                t.type = this.changeType,
                this.changeType = null,
                s.args = t;
                try {
                    var n = this.host.trigger(s)
                } catch (e) {}
                return n
            }
        },
        propertiesChangedHandler: function(e, t, i) {
            i.width && i.height && 2 == Object.keys(i).length && e.setSize()
        },
        propertyChangedHandler: function(e, t, r, s) {
            if (null != this.isInitialized && 0 != this.isInitialized && !(e.batchUpdate && e.batchUpdate.width && e.batchUpdate.height && 2 == Object.keys(e.batchUpdate).length)) {
                if ("enableContainerClick" != t || e.disabled || e.locked || (s ? e.host.css("cursor", "pointer") : e.host.css("cursor", "auto")),
                "rtl" == t && (s ? (e.box.addClass(e.toThemeProperty("jqx-checkbox-rtl")),
                e.host.addClass(e.toThemeProperty("jqx-rtl"))) : (e.box.removeClass(e.toThemeProperty("jqx-checkbox-rtl")),
                e.host.removeClass(e.toThemeProperty("jqx-rtl")))),
                "boxSize" == t && e.render(),
                "theme" == t && i.jqx.utilities.setTheme(r, s, e.host),
                "checked" == t && s != r)
                    switch (s) {
                    case !0:
                        e.check();
                        break;
                    case !1:
                        e.uncheck();
                        break;
                    case null:
                        e.indeterminate()
                    }
                "disabled" == t && s != r && (s ? e.disable() : e.enable())
            }
        }
    })
}
, function(e, t) {
    var i;
    (i = jqxBaseFramework).jqx.jqxWidget("jqxListBox", "", {}),
    i.extend(i.jqx._jqxListBox.prototype, {
        defineInstance: function() {
            var e = {
                disabled: !1,
                checkboxSize: 16,
                checkboxes: !1,
                width: null,
                height: null,
                items: new Array,
                multiple: !1,
                selectedIndex: -1,
                selectedIndexes: new Array,
                source: null,
                scrollBarSize: i.jqx.utilities.scrollBarSize,
                enableHover: !0,
                enableSelection: !0,
                visualItems: new Array,
                groups: new Array,
                equalItemsWidth: !0,
                itemHeight: -1,
                visibleItems: new Array,
                emptyGroupText: "Group",
                hasThreeStates: !1,
                autoHeight: !1,
                autoItemsHeight: !1,
                roundedcorners: !0,
                touchMode: "auto",
                displayMember: "",
                groupMember: "",
                valueMember: "",
                searchMember: "",
                searchMode: "startswithignorecase",
                incrementalSearch: !0,
                incrementalSearchDelay: 1e3,
                incrementalSearchKeyDownDelay: 300,
                allowDrag: !1,
                allowDrop: !0,
                dropAction: "default",
                touchModeStyle: "auto",
                keyboardNavigation: !0,
                enableMouseWheel: !0,
                multipleextended: !1,
                selectedValues: new Array,
                emptyString: "",
                rtl: !1,
                rendered: null,
                renderer: null,
                dragStart: null,
                dragEnd: null,
                focusable: !0,
                ready: null,
                _checkForHiddenParent: !0,
                autoBind: !0,
                _renderOnDemand: !1,
                filterable: !1,
                filterHeight: 27,
                filterPlaceHolder: "Looking for",
                filterDelay: 100,
                filterChange: null,
                aria: {
                    "aria-disabled": {
                        name: "disabled",
                        type: "boolean"
                    }
                },
                events: ["select", "unselect", "change", "checkChange", "dragStart", "dragEnd", "bindingComplete", "itemAdd", "itemRemove", "itemUpdate"]
            };
            return this === i.jqx._jqxListBox.prototype ? e : (i.extend(!0, this, e),
            e)
        },
        createInstance: function(e) {
            var t = this;
            15 != i.jqx.utilities.scrollBarSize && (t.scrollBarSize = i.jqx.utilities.scrollBarSize),
            null == t.width && (t.width = 200),
            null == t.height && (t.height = 200),
            t.renderListBox();
            var r = t;
            i.jqx.utilities.resize(t.host, function() {
                r._updateSize()
            }, !1, t._checkForHiddenParent)
        },
        resize: function(e, t) {
            this.width = e,
            this.height = t,
            this._updateSize()
        },
        render: function() {
            this.renderListBox(),
            this.refresh()
        },
        renderListBox: function() {
            var e = (a = this).element.nodeName.toLowerCase();
            if ("select" == e || "ul" == e || "ol" == e) {
                a.field = a.element,
                a.field.className && (a._className = a.field.className);
                var t = {
                    title: a.field.title
                };
                a.field.id.length ? t.id = a.field.id.replace(/[^\w]/g, "_") + "_jqxListBox" : t.id = i.jqx.utilities.createId() + "_jqxListBox";
                var r = i("<div></div>", t);
                a.width || (a.width = i(a.field).width()),
                a.height || (a.height = i(a.field).outerHeight()),
                a.element.style.cssText = a.field.style.cssText,
                i(a.field).hide().after(r);
                var s = a.host.data();
                if (a.host = r,
                a.host.data(s),
                a.element = r[0],
                a.element.id = a.field.id,
                a.field.id = t.id,
                a._className && (a.host.addClass(a._className),
                i(a.field).removeClass(a._className)),
                a.field.tabIndex) {
                    var n = a.field.tabIndex;
                    a.field.tabIndex = -1,
                    a.element.tabIndex = n
                }
            } else if (a.host.find("li").length > 0 || a.host.find("option").length > 0) {
                var o = i.jqx.parseSourceTag(a.element);
                a.source = o.items
            }
            a.element.innerHTML = "";
            var a, l = (a = a).element.className;
            l += " " + a.toThemeProperty("jqx-listbox"),
            l += " " + a.toThemeProperty("jqx-reset"),
            l += " " + a.toThemeProperty("jqx-rc-all"),
            l += " " + a.toThemeProperty("jqx-widget"),
            l += " " + a.toThemeProperty("jqx-widget-content"),
            a.element.className = l;
            var d = window.getComputedStyle(this.element)
              , h = 2 * parseInt(d.borderLeftWidth)
              , c = d.boxSizing;
            0 === this.element.offsetWidth && (h = 2),
            ("border-box" === c || isNaN(h)) && (h = 0),
            null != a.width && -1 != a.width.toString().indexOf("%") && (a.host.width(a.width),
            h > 0 && this.host.css("box-sizing", "border-box")),
            null != a.height && -1 != a.height.toString().indexOf("%") && (a.host.height(a.height),
            0 == a.host.height() && a.host.height(200)),
            null != a.width && -1 != a.width.toString().indexOf("px") ? a.element.style.width = parseInt(a.width) - h + "px" : null == a.width || isNaN(a.width) || (a.element.style.width = parseInt(a.width) - h + "px"),
            null != a.height && -1 != a.height.toString().indexOf("px") ? a.element.style.height = parseInt(a.height) - h + "px" : null == a.height || isNaN(a.height) || (a.element.style.height = parseInt(a.height) - h + "px"),
            a.multiple || a.multipleextended || a.checkboxes ? i.jqx.aria(a, "aria-multiselectable", !0) : i.jqx.aria(a, "aria-multiselectable", !1);
            var u = "<div style='-webkit-appearance: none; background: transparent; outline: none; width:100%; height: 100%; align:left; border: 0px; padding: 0px; margin: 0px; left: 0px; top: 0px; valign:top; position: relative;'><div style='-webkit-appearance: none; border: none; background: transparent; outline: none; width:100%; height: 100%; padding: 0px; margin: 0px; align:left; left: 0px; top: 0px; valign:top; position: relative;'><div id='filter" + a.element.id + "' style='display: none; visibility: inherit; align:left; valign:top; left: 0px; top: 0px; position: absolute;'><input style='position: absolute;'/></div><div id='listBoxContent' style='-webkit-appearance: none; border: none; background: transparent; outline: none; border: none; padding: 0px; overflow: hidden; margin: 0px; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='verticalScrollBar" + a.element.id + "' style='visibility: inherit; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='horizontalScrollBar" + a.element.id + "' style='visibility: inherit; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='bottomRight' style='align:left; valign:top; left: 0px; top: 0px; border: none; position: absolute;'/></div></div>";
            a.host.attr("role", "listbox"),
            a.element.innerHTML = u,
            a._checkForHiddenParent && (a._addInput(),
            a.host.attr("tabIndex") || a.host.attr("tabIndex", 1)),
            a.filter = i(a.element.firstChild.firstChild.firstChild),
            a.filterInput = i(a.filter[0].firstChild),
            a.filterInput.attr("placeholder", a.filterPlaceHolder),
            a.filterInput.addClass(a.toThemeProperty("jqx-widget jqx-listbox-filter-input jqx-input jqx-rc-all")),
            a.addHandler(a.filterInput, "keyup.textchange", function(e) {
                13 == e.keyCode ? a._search(e) : a.filterDelay > 0 && (a._filterTimer && clearTimeout(a._filterTimer),
                a._filterTimer = setTimeout(function() {
                    a._search(e)
                }, a.filterDelay)),
                e.stopPropagation()
            });
            var p = i(a.element.firstChild.firstChild.firstChild.nextSibling.nextSibling);
            if (!a.host.jqxButton)
                throw new Error("jqxListBox: Missing reference to jqxbuttons.js.");
            if (!p.jqxScrollBar)
                throw new Error("jqxListBox: Missing reference to jqxscrollbar.js.");
            var f = parseInt(a.host.height()) / 2;
            0 == f && (f = 10),
            a.vScrollBar = p.jqxScrollBar({
                _initialLayout: !0,
                vertical: !0,
                rtl: a.rtl,
                theme: a.theme,
                touchMode: a.touchMode,
                largestep: f
            });
            var m = i(a.element.firstChild.firstChild.firstChild.nextSibling.nextSibling.nextSibling);
            if (a.hScrollBar = m.jqxScrollBar({
                _initialLayout: !0,
                vertical: !1,
                rtl: a.rtl,
                touchMode: a.touchMode,
                theme: a.theme
            }),
            a.content = i(a.element.firstChild.firstChild.firstChild.nextSibling),
            a.content[0].id = "listBoxContent" + a.element.id,
            a.bottomRight = i(a.element.firstChild.firstChild.firstChild.nextSibling.nextSibling.nextSibling.nextSibling).addClass(a.toThemeProperty("jqx-listbox-bottomright")).addClass(a.toThemeProperty("jqx-scrollbar-state-normal")),
            a.bottomRight[0].id = "bottomRight" + a.element.id,
            a.vScrollInstance = i.data(a.vScrollBar[0], "jqxScrollBar").instance,
            a.hScrollInstance = i.data(a.hScrollBar[0], "jqxScrollBar").instance,
            a.isTouchDevice() && !(i.jqx.browser.msie && i.jqx.browser.version < 9)) {
                var g = i("<div class='overlay' unselectable='on' style='z-index: 99; -webkit-appearance: none; border: none; background: black; opacity: 0.01; outline: none; border: none; padding: 0px; overflow: hidden; margin: 0px; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div>");
                a.content.parent().append(g),
                a.overlayContent = a.host.find(".overlay"),
                a.filterable && a.overlayContent.css("top", "30px")
            }
            a._updateTouchScrolling(),
            a.host.addClass("jqx-disableselect"),
            a.host.jqxDragDrop && jqxListBoxDragDrop()
        },
        _highlight: function(e, t) {
            var i = t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
            return e.replace(new RegExp("(" + i + ")","ig"), function(e, t) {
                return "<b>" + t + "</b>"
            })
        },
        _addInput: function() {
            var e = this.host.attr("name");
            e && this.host.attr("name", ""),
            this.input = i("<input type='hidden'/>"),
            this.host.append(this.input),
            this.input.attr("name", e)
        },
        _updateTouchScrolling: function() {
            var e = this;
            if (this.isTouchDevice()) {
                e.enableHover = !1;
                var t = this.overlayContent ? this.overlayContent : this.content;
                this.removeHandler(i(t), i.jqx.mobile.getTouchEventName("touchstart") + ".touchScroll"),
                this.removeHandler(i(t), i.jqx.mobile.getTouchEventName("touchmove") + ".touchScroll"),
                this.removeHandler(i(t), i.jqx.mobile.getTouchEventName("touchend") + ".touchScroll"),
                this.removeHandler(i(t), "touchcancel.touchScroll"),
                i.jqx.mobile.touchScroll(t, e.vScrollInstance.max, function(t, i) {
                    null != i && "hidden" != e.vScrollBar.css("visibility") && (e.vScrollInstance.value,
                    e.vScrollInstance.setPosition(i),
                    e._lastScroll = new Date),
                    null != t && "hidden" != e.hScrollBar.css("visibility") && (e.hScrollInstance.value,
                    e.hScrollInstance.setPosition(t),
                    e._lastScroll = new Date)
                }, this.element.id, this.hScrollBar, this.vScrollBar),
                "visible" != e.vScrollBar.css("visibility") && "visible" != e.hScrollBar.css("visibility") ? i.jqx.mobile.setTouchScroll(!1, this.element.id) : i.jqx.mobile.setTouchScroll(!0, this.element.id),
                this._arrange()
            }
        },
        isTouchDevice: function() {
            var e = i.jqx.mobile.isTouchDevice();
            if (1 == this.touchMode) {
                if (this.touchDevice)
                    return !0;
                if (i.jqx.browser.msie && i.jqx.browser.version < 9)
                    return !1;
                this.touchDevice = !0,
                e = !0,
                i.jqx.mobile.setMobileSimulator(this.element)
            } else
                0 == this.touchMode && (e = !1);
            return e && 0 != this.touchModeStyle && (this.scrollBarSize = i.jqx.utilities.touchScrollBarSize),
            e && this.host.addClass(this.toThemeProperty("jqx-touch")),
            e
        },
        beginUpdate: function() {
            this.updatingListBox = !0
        },
        endUpdate: function() {
            this.updatingListBox = !1,
            this._addItems(),
            this._renderItems()
        },
        beginUpdateLayout: function() {
            this.updating = !0
        },
        resumeUpdateLayout: function() {
            this.updating = !1,
            this.vScrollInstance.value = 0,
            this._render(!1)
        },
        propertiesChangedHandler: function(e, t, i) {
            i.width && i.height && 2 == Object.keys(i).length && (e._cachedItemHtml = new Array,
            e.refresh())
        },
        propertyChangedHandler: function(e, t, r, s) {
            if (null != this.isInitialized && 0 != this.isInitialized && r != s && !(e.batchUpdate && e.batchUpdate.width && e.batchUpdate.height && 2 == Object.keys(e.batchUpdate).length)) {
                if ("_renderOnDemand" == t && (e._render(!1, !0),
                -1 != e.selectedIndex)) {
                    var n = e.selectedIndex;
                    e.selectedIndex = -1,
                    e._stopEvents = !0,
                    e.selectIndex(n, !1, !0),
                    -1 == e.selectedIndex && (e.selectedIndex = n),
                    e._stopEvents = !1
                }
                if ("filterable" == t && e.refresh(),
                "filterHeight" == t && e._arrange(),
                "filterPlaceHolder" == t && e.filterInput.attr("placeholder", s),
                "renderer" == t && (e._cachedItemHtml = new Array,
                e.refresh()),
                "itemHeight" != t && "checkboxSize" !== t || e.refresh(),
                "source" != t && "checkboxes" != t || (null == s && r && r.unbindBindingUpdate && (r.unbindBindingUpdate(e.element.id),
                r.unbindDownloadComplete(e.element.id)),
                e.clearSelection(),
                e.refresh()),
                "scrollBarSize" != t && "equalItemsWidth" != t || s != r && e._updatescrollbars(),
                "disabled" == t && (e._renderItems(),
                e.vScrollBar.jqxScrollBar({
                    disabled: s
                }),
                e.hScrollBar.jqxScrollBar({
                    disabled: s
                })),
                "touchMode" == t || "rtl" == t) {
                    if (e._removeHandlers(),
                    e.vScrollBar.jqxScrollBar({
                        touchMode: s
                    }),
                    e.hScrollBar.jqxScrollBar({
                        touchMode: s
                    }),
                    "touchMode" == t && !(i.jqx.browser.msie && i.jqx.browser.version < 9)) {
                        var o = i("<div class='overlay' unselectable='on' style='z-index: 99; -webkit-appearance: none; border: none; background: black; opacity: 0.01; outline: none; border: none; padding: 0px; overflow: hidden; margin: 0px; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div>");
                        e.content.parent().append(o),
                        e.overlayContent = e.host.find(".overlay")
                    }
                    e.filterable && e.filterInput && ("rtl" == t && s ? e.filterInput.addClass(e.toThemeProperty("jqx-rtl")) : "rtl" != t || s || e.filterInput.removeClass(e.toThemeProperty("jqx-rtl")),
                    e._arrange()),
                    e._updateTouchScrolling(),
                    e._addHandlers(),
                    e._render(!1)
                }
                if (this.updating || "width" != t && "height" != t || e._updateSize(),
                "theme" == t && r != s && (e.hScrollBar.jqxScrollBar({
                    theme: e.theme
                }),
                e.vScrollBar.jqxScrollBar({
                    theme: e.theme
                }),
                e.host.removeClass(),
                e.host.addClass(e.toThemeProperty("jqx-listbox")),
                e.host.addClass(e.toThemeProperty("jqx-widget")),
                e.host.addClass(e.toThemeProperty("jqx-widget-content")),
                e.host.addClass(e.toThemeProperty("jqx-reset")),
                e.host.addClass(e.toThemeProperty("jqx-rc-all")),
                e.refresh()),
                "selectedIndex" == t && (e.clearSelection(),
                e.selectIndex(s, !0)),
                "displayMember" == t || "valueMember" == t) {
                    if (r != s) {
                        var a = e.selectedIndex;
                        e.refresh(),
                        e.selectedIndex = a,
                        e.selectedIndexes[a] = a
                    }
                    e._renderItems()
                }
                "autoHeight" == t && (r != s ? e._render(!1) : (e._updatescrollbars(),
                e._renderItems())),
                e._checkForHiddenParent && i.jqx.isHidden(e.host) && i.jqx.utilities.resize(this.host, function() {
                    e._updateSize()
                }, !1, e._checkForHiddenParent)
            }
        },
        loadFromSelect: function(e) {
            if (null != e) {
                var t = i("#" + e);
                if (t.length > 0) {
                    var r = i.jqx.parseSourceTag(t[0])
                      , s = r.items
                      , n = r.index;
                    this.source = s,
                    this.fromSelect = !0,
                    this.clearSelection(),
                    this.selectedIndex = n,
                    this.selectedIndexes[this.selectedIndex] = this.selectedIndex,
                    this.refresh()
                }
            }
        },
        invalidate: function() {
            this._cachedItemHtml = [],
            this._renderItems(),
            this.virtualSize = null,
            this._updateSize()
        },
        refresh: function(e) {
            var t = this;
            if (null != this.vScrollBar) {
                this.itemHeight = parseInt(this.itemHeight),
                this._cachedItemHtml = [],
                this.visibleItems = new Array;
                var r = function(e) {
                    if (1 == e && -1 != t.selectedIndex) {
                        var i = t.selectedIndex;
                        t.selectedIndex = -1,
                        t._stopEvents = !0,
                        t.selectIndex(i, !1, !0),
                        -1 == t.selectedIndex && (t.selectedIndex = i),
                        t._stopEvents = !1
                    }
                };
                if (null != this.itemswrapper && (this.itemswrapper.remove(),
                this.itemswrapper = null),
                i.jqx.dataAdapter && null != this.source && this.source._source)
                    return this.databind(this.source, e),
                    void r(e);
                (this.autoBind || !this.autoBind && !e) && (this.field && this.loadSelectTag(),
                this.items = this.loadItems(this.source)),
                this._render(!1, 1 == e),
                r(e),
                this._raiseEvent("6")
            }
        },
        loadSelectTag: function() {
            var e = i.jqx.parseSourceTag(this.field);
            this.source = e.items,
            -1 == this.selectedIndex && (this.selectedIndex = e.index)
        },
        _render: function(e, t) {
            return this._renderOnDemand ? (this.visibleItems = new Array,
            this.renderedVisibleItems = new Array,
            void this._renderItems()) : (this._addItems(),
            this._renderItems(),
            this.vScrollInstance.setPosition(0),
            this._cachedItemHtml = new Array,
            (null == e || e) && null != this.items && null != this.items && this.selectedIndex >= 0 && this.selectedIndex < this.items.length && this.selectIndex(this.selectedIndex, !0, !0, !0),
            this.allowDrag && this._enableDragDrop && (this._enableDragDrop(),
            this.isTouchDevice()) ? (this._removeHandlers(),
            this.overlayContent && (this.overlayContent.remove(),
            this.overlayContent = null),
            this._updateTouchScrolling(),
            void this._addHandlers()) : (this._updateTouchScrolling(),
            this.rendered && this.rendered(),
            void (this.ready && this.ready())))
        },
        _hitTest: function(e, t) {
            this.filterable && (t -= this.filterHeight) < 0 && (t = 0);
            var i = parseInt(this.vScrollInstance.value)
              , r = this._searchFirstVisibleIndex(t + i, this.renderedVisibleItems);
            if (null != this.renderedVisibleItems[r] && this.renderedVisibleItems[r].isGroup)
                return null;
            if (this.renderedVisibleItems.length > 0) {
                var s = this.renderedVisibleItems[this.renderedVisibleItems.length - 1];
                if (s.height + s.top < t + i)
                    return null
            }
            return r = this._searchFirstVisibleIndex(t + i),
            this.visibleItems[r]
        },
        _searchFirstVisibleIndex: function(e, t) {
            null == e && (e = parseInt(this.vScrollInstance.value));
            var i = 0;
            null != t && null != t || (t = this.visibleItems);
            for (var r = t.length; i <= r; ) {
                mid = parseInt((i + r) / 2);
                var s = t[mid];
                if (null == s)
                    break;
                if (s.initialTop > e && s.initialTop + s.height > e)
                    r = mid - 1;
                else {
                    if (!(s.initialTop < e && s.initialTop + s.height <= e))
                        return mid;
                    i = mid + 1
                }
            }
            return 0
        },
        _renderItems: function() {
            if (null != this.items && 0 != this.items.length) {
                if (1 != this.updatingListBox) {
                    var e = this.isTouchDevice()
                      , t = this.vScrollInstance
                      , r = this.hScrollInstance
                      , s = parseInt(t.value)
                      , n = parseInt(r.value);
                    this.rtl && "hidden" != this.hScrollBar[0].style.visibility && (n = r.max - n),
                    this.items.length,
                    this.host.width();
                    var o = parseInt(this.content[0].style.width)
                      , a = o + parseInt(r.max);
                    parseInt(this.vScrollBar[0].style.width),
                    this.vScrollBar[0].style.visibility,
                    "visible" != this.hScrollBar[0].style.visibility && (a = o),
                    this._getVirtualItemsCount();
                    var l = new Array
                      , d = 0
                      , h = parseInt(this.element.style.height) + 2;
                    -1 != this.element.style.height.indexOf("%") && (h = this.host.outerHeight()),
                    isNaN(h) && (h = 0);
                    var c = 0
                      , u = 0
                      , p = 0;
                    if (0 == t.value || 0 == this.visibleItems.length)
                        for (var f = 0; f < this.items.length; f++)
                            (C = this.items[f]).visible && (C.top = -s,
                            C.initialTop = -s,
                            !C.isGroup && C.visible && (this.visibleItems[u++] = C,
                            C.visibleIndex = u - 1),
                            this.renderedVisibleItems[p++] = C,
                            C.left = -n,
                            C.top + C.height >= 0 && C.top - C.height <= h && (l[d++] = {
                                index: f,
                                item: C
                            }),
                            s -= C.height,
                            s--);
                    var m = s > 0 ? this._searchFirstVisibleIndex(this.vScrollInstance.value, this.renderedVisibleItems) : 0
                      , g = 0;
                    d = 0;
                    for (var v = this.vScrollInstance.value, w = 0; g < 100 + h && null != (C = this.renderedVisibleItems[m]) && (C.visible && (C.left = -n,
                    C.top + C.height - v >= 0 && C.initialTop - v - C.height <= 2 * h && (l[d++] = {
                        index: m,
                        item: C
                    })),
                    m++,
                    C.visible && (g += C.initialTop - v + C.height - g),
                    !(++w > this.items.length - 1)); )
                        ;
                    if (!this._renderOnDemand) {
                        var x = this.toThemeProperty("jqx-listitem-state-normal") + " " + this.toThemeProperty("jqx-item")
                          , b = this.toThemeProperty("jqx-listitem-state-group")
                          , y = this.toThemeProperty("jqx-listitem-state-disabled") + " " + this.toThemeProperty("jqx-fill-state-disabled");
                        this.checkboxes && (x += " checkboxes");
                        var _ = 0
                          , q = this;
                        for (f = 0; f < this.visualItems.length; f++) {
                            var j = this.visualItems[f]
                              , S = function() {
                                var e = j[0].firstChild;
                                q.checkboxes && (e = j[0].lastChild),
                                null != e && (e.style.visibility = "hidden",
                                e.className = ""),
                                q.checkboxes && (j[0].firstChild.style.visibility = "hidden")
                            };
                            if (f < l.length) {
                                var C;
                                if ((C = l[f].item).initialTop - v >= h) {
                                    S();
                                    continue
                                }
                                var T = i(j[0].firstChild);
                                if (this.checkboxes && (T = i(j[0].lastChild)),
                                0 == T.length)
                                    continue;
                                if (null == T[0])
                                    continue;
                                T[0].className = "",
                                T[0].style.display = "block",
                                T[0].style.visibility = "inherit";
                                var I = "";
                                if (I = !C.isGroup && !this.selectedIndexes[C.index] >= 0 ? x : b,
                                (C.disabled || this.disabled) && (I += " " + y),
                                this.roundedcorners && (I += " " + this.toThemeProperty("jqx-rc-all")),
                                e && (I += " " + this.toThemeProperty("jqx-listitem-state-normal-touch")),
                                T[0].className = I,
                                this.renderer)
                                    if (C.key || (C.key = this.generatekey()),
                                    this._cachedItemHtml || (this._cachedItemHtml = new Array),
                                    this._cachedItemHtml[C.key])
                                        T[0].innerHTML != this._cachedItemHtml[C.key] && (T[0].innerHTML = this._cachedItemHtml[C.key]);
                                    else {
                                        var k = this.renderer(C.index, C.label, C.value);
                                        T[0].innerHTML = k,
                                        this._cachedItemHtml[C.key] = T[0].innerHTML
                                    }
                                else {
                                    if (-1 !== this.itemHeight) {
                                        var D = 2 + 2 * parseInt(T.css("padding-top"));
                                        T[0].style.lineHeight = C.height - D + "px",
                                        T.css("vertical-align", "middle")
                                    }
                                    null != C.html && C.html.toString().length > 0 ? T[0].innerHTML = C.html : null != C.label || null != C.value ? null != C.label ? (T[0].innerHTML !== C.label && (T[0].innerHTML = C.label),
                                    "" == i.trim(C.label) && (T[0].innerHTML = this.emptyString,
                                    "" == this.emptyString && (T[0].style.height = C.height - 8 + "px")),
                                    this.incrementalSearch || C.disabled || null != this.searchString && "" != this.searchString && (T[0].innerHTML = this._highlight(C.label.toString(), this.searchString))) : null === C.label ? (T[0].innerHTML = this.emptyString,
                                    "" == this.emptyString && (T[0].style.height = C.height - 8 + "px")) : T[0].innerHTML !== C.value ? T[0].innerHTML = C.value : "" == C.label && (T[0].innerHTML = " ") : "" != C.label && null != C.label || (T[0].innerHTML = "",
                                    T[0].style.height = C.height - 8 + "px")
                                }
                                if (j[0].style.left = C.left + "px",
                                j[0].style.top = C.initialTop - v + "px",
                                C.element = T[0],
                                this.isMaterialized() && !this.renderer && this._checkForHiddenParent && (i(C.element).addClass("ripple"),
                                i.jqx.ripple(i(C.element))),
                                C.title && (T[0].title = C.title),
                                this.equalItemsWidth && !C.isGroup) {
                                    if (0 == c) {
                                        var P = parseInt(a);
                                        P -= parseInt(T.outerWidth()) - parseInt(T.width());
                                        var B = 1;
                                        B = null != B ? parseInt(B) : 0,
                                        "border-box" === this.host.css("box-sizing") && (P -= 2),
                                        c = P,
                                        this.checkboxes && "hidden" == this.hScrollBar[0].style.visibility && (c -= this.checkboxSize + 13)
                                    }
                                    o > this.virtualSize.width ? (T[0].style.width = c + "px",
                                    C.width = c) : (T[0].style.width = -4 + this.virtualSize.width + "px",
                                    C.width = this.virtualSize.width - 4)
                                } else
                                    T.width() < this.host.width() && T.width(this.host.width() - 2);
                                if (this.rtl && (T[0].style.textAlign = "right"),
                                this.autoItemsHeight && (T[0].style.whiteSpace = "pre-line",
                                T.width(c),
                                C.width = c),
                                _ = 0,
                                this.checkboxes && !C.isGroup) {
                                    if (0 == _ && (_ = (C.height - this.checkboxSize - 3) / 2,
                                    _ = parseInt(_),
                                    _++),
                                    (z = i(j.children()[0]))[0].item = C,
                                    this.rtl)
                                        "0px" != T[0].style.left && (T[0].style.left = "0px");
                                    else {
                                        var M = this.checkboxSize + 9;
                                        T[0].style.left != M + "px" && (T[0].style.left = M + "px")
                                    }
                                    this.rtl && z.css("left", 8 + C.width + "px"),
                                    z[0].style.top = _ + "px",
                                    z[0].style.display = "block",
                                    z[0].style.visibility = "inherit";
                                    var H = C.checked
                                      , O = C.checked ? " " + this.toThemeProperty("jqx-checkbox-check-checked") : "";
                                    z[0].setAttribute("checked", C.checked),
                                    z[0].firstChild && z[0].firstChild.firstChild && z[0].firstChild.firstChild.firstChild && z[0].firstChild.firstChild && (H ? z[0].firstChild.firstChild.firstChild.className = O : !1 === H ? z[0].firstChild.firstChild.firstChild.className = "" : null === H && (z[0].firstChild.firstChild.firstChild.className = this.toThemeProperty("jqx-checkbox-check-indeterminate"))),
                                    i.jqx.ariaEnabled && (H ? j[0].setAttribute("aria-selected", !0) : j[0].removeAttribute("aria-selected"))
                                } else {
                                    var z;
                                    this.checkboxes && (z = i(j.children()[0])).css({
                                        display: "none",
                                        visibility: "inherit"
                                    })
                                }
                                !C.disabled && (!this.filterable && this.selectedIndexes[C.visibleIndex] >= 0 || C.selected && this.filterable) ? (T.addClass(this.toThemeProperty("jqx-listitem-state-selected")),
                                T.addClass(this.toThemeProperty("jqx-fill-state-pressed")),
                                i.jqx.ariaEnabled && (j[0].setAttribute("aria-selected", !0),
                                this._activeElement = j[0])) : this.checkboxes || i.jqx.ariaEnabled && j[0].removeAttribute("aria-selected")
                            } else
                                S()
                        }
                    }
                }
            } else
                this.visibleItems = new Array
        },
        generatekey: function() {
            var e = function() {
                return (65536 * (1 + Math.random()) | 0).toString(16).substring(1)
            };
            return e() + e() + "-" + e() + "-" + e() + "-" + e() + "-" + e() + e() + e()
        },
        _calculateVirtualSize: function(e) {
            if (!this._renderOnDemand) {
                var t = 0
                  , r = 2
                  , s = 0
                  , n = document.createElement("span");
                this.equalItemsWidth && i(n).css("float", "left"),
                n.style.whiteSpace = "pre";
                var o = 0
                  , a = void 0 === e ? this.host.outerHeight() : e + 2;
                document.body.appendChild(n);
                var l = this.items.length
                  , d = this.host.width();
                if (this.autoItemsHeight && (d -= 10,
                "hidden" != this.vScrollBar.css("visibility") && (d -= 20)),
                this.autoItemsHeight || this.renderer || this.groups.length >= 1 || l > 0 && null != this.items[0].html && "" != this.items[0].html) {
                    for (s = 0; s < l; s++)
                        if ((!(y = this.items[s]).isGroup || "" != y.label || "" != y.html) && y.visible) {
                            var h = "";
                            if (y.isGroup ? h += this.toThemeProperty("jqx-listitem-state-group jqx-rc-all") : h += this.toThemeProperty("jqx-widget jqx-listitem-state-normal jqx-rc-all"),
                            h += " " + this.toThemeProperty("jqx-fill-state-normal"),
                            this.isTouchDevice() && (h += " " + this.toThemeProperty("jqx-touch")),
                            n.className = h,
                            this.autoItemsHeight) {
                                n.style.whiteSpace = "pre-line";
                                var c = this.checkboxSize + 9
                                  , u = this.checkboxes ? -c : 0;
                                n.style.width = u + d + "px"
                            }
                            if (this.renderer) {
                                var p = this.renderer(y.index, y.label, y.value);
                                n.innerHTML = p
                            } else
                                null != y.html && y.html.toString().length > 0 ? n.innerHTML = y.html : null == y.label && null == y.value || (null != y.label ? (n.innerHTML = y.label,
                                "" == y.label && (n.innerHTML = "Empty")) : n.innerHTML = y.value);
                            var f = n.offsetHeight
                              , m = n.offsetWidth;
                            this.itemHeight > -1 && (f = this.itemHeight),
                            y.height = f,
                            y.width = m,
                            r += ++f,
                            t = Math.max(t, m),
                            r <= a && o++
                        }
                } else {
                    r = 0;
                    var g = 0
                      , v = ""
                      , w = 0
                      , x = 0
                      , b = -1;
                    for (s = 0; s < l; s++) {
                        var y;
                        (y = this.items[s]).isGroup && "" == y.label && "" == y.html || !y.visible || (h = "",
                        0 == ++b && (h += this.toThemeProperty("jqx-listitem-state-normal jqx-rc-all"),
                        h += " " + this.toThemeProperty("jqx-fill-state-normal"),
                        h += " " + this.toThemeProperty("jqx-widget"),
                        h += " " + this.toThemeProperty("jqx-listbox"),
                        h += " " + this.toThemeProperty("jqx-widget-content"),
                        this.isTouchDevice() && (h += " " + this.toThemeProperty("jqx-touch"),
                        h += " " + this.toThemeProperty("jqx-listitem-state-normal-touch")),
                        n.className = h,
                        this.autoItemsHeight && (n.style.whiteSpace = "pre-line",
                        c = this.checkboxSize + 9,
                        u = this.checkboxes ? -c : 0,
                        n.style.width = u + d + "px"),
                        null == y.html || "" == y.label || null == y.label ? n.innerHTML = "Item" : null != y.html && y.html.toString().length > 0 ? n.innerHTML = y.html : null == y.label && null == y.value || (null != y.label ? null != y.label.toString().match(new RegExp("\\w")) || null != y.label.toString().match(new RegExp("\\d")) ? n.innerHTML = y.label : n.innerHTML = "Item" : n.innerHTML = y.value),
                        f = 1 + n.offsetHeight,
                        this.itemHeight > -1 && (f = this.itemHeight),
                        g = f),
                        null != w && (x = w),
                        null != y.html && y.html.toString().length > 0 ? x != (w = Math.max(w, y.html.toString().length)) && (v = y.html) : null != y.label ? x != (w = Math.max(w, y.label.length)) && (v = y.label) : null != y.value && x != (w = Math.max(w, y.value.length)) && (v = y.value),
                        y.height = g,
                        r += g,
                        ++r <= a && o++)
                    }
                    n.innerHTML = v,
                    t = n.offsetWidth
                }
                return r += 2,
                o < 10 && (o = 10),
                this.filterable && (r += this.filterHeight),
                r -= 4,
                n.parentNode.removeChild(n),
                {
                    width: t,
                    height: r,
                    itemsPerPage: o
                }
            }
        },
        _getVirtualItemsCount: function() {
            if (0 == this.virtualItemsCount) {
                var e = parseInt(this.host.height()) / 5;
                return e > this.items.length && (e = this.items.length),
                e
            }
            return this.virtualItemsCount
        },
        _addItems: function(e) {
            if (!this._renderOnDemand && 1 != (n = this).updatingListBox) {
                if (null == n.items || 0 == n.items.length)
                    return n.virtualSize = {
                        width: 0,
                        height: 0,
                        itemsPerPage: 0
                    },
                    n._updatescrollbars(),
                    n.renderedVisibleItems = new Array,
                    void (n.itemswrapper && n.itemswrapper.children().remove());
                var t = n.host.height();
                if (0 == e) {
                    var r = 2 * (m = n._calculateVirtualSize(t)).itemsPerPage;
                    return n.autoHeight && (r = n.items.length),
                    n.virtualItemsCount = Math.min(r, n.items.length),
                    m.width,
                    n.virtualSize = m,
                    void n._updatescrollbars()
                }
                var s = 0;
                n.visibleItems = new Array,
                n.renderedVisibleItems = new Array,
                n._removeHandlers(),
                n.allowDrag && n._enableDragDrop && (n.itemswrapper = null),
                null == n.itemswrapper && (n.content[0].innerHTML = "",
                n.itemswrapper = i('<div style="outline: 0 none; overflow:hidden; width:100%; position: relative;"></div>'),
                n.itemswrapper[0].style.height = 2 * t + "px",
                n.content[0].appendChild(n.itemswrapper[0])),
                r = 2 * (m = n._calculateVirtualSize(t)).itemsPerPage,
                n.autoHeight && (r = n.items.length),
                n.virtualItemsCount = Math.min(r, n.items.length);
                var n = this;
                m.width,
                n.virtualSize = m;
                var o = Math.max(n.host.width(), 17 + m.width);
                n.itemswrapper[0].style.width = o + "px";
                for (var a = "", l = i.jqx.browser.msie && i.jqx.browser.version < 9 ? ' unselectable="on"' : "", d = 0; d < n.virtualItemsCount; d++) {
                    var h = n.items[d]
                      , c = "listitem" + d + n.element.id;
                    if ("" != n.theme ? a += "<div" + l + " role='option' id='" + c + "' class='jqx-listitem-element jqx-listitem-element-" + n.theme + "'>" : a += "<div" + l + " role='option' id='" + c + "' class='jqx-listitem-element'>",
                    n.checkboxes) {
                        var u = this.checkboxSize + 8;
                        a += '<div style="background-color: transparent; padding: 0; margin: 0; overflow:hidden; position: absolute; float: left; width: ' + u + "px; height:  " + u + 'px;" class="' + n.toThemeProperty("jqx-checkbox") + ' chkbox">';
                        var p = '<div class="' + n.toThemeProperty("jqx-checkbox-default") + " " + n.toThemeProperty("jqx-fill-state-normal") + " " + n.toThemeProperty("jqx-rc-all") + '"><div style="cursor: pointer; width:  ' + this.checkboxSize + "px; height:  " + this.checkboxSize + 'px;">'
                          , f = h.checked ? " " + n.toThemeProperty("jqx-checkbox-check-checked") : "";
                        p += '<span style="width: ' + this.checkboxSize + "px; height:  " + this.checkboxSize + 'px;" class="checkBoxCheck' + f + '"></span>',
                        a += p += "</div></div>",
                        a += "</div>"
                    }
                    a += "<span" + l + " style='white-space: pre; -ms-touch-action: none;'></span></div>"
                }
                this.WinJS ? n.itemswrapper.html(a) : n.itemswrapper[0].innerHTML = a;
                var m, g = n.itemswrapper.children();
                for (d = 0; d < n.virtualItemsCount; d++) {
                    h = n.items[d];
                    var v = i(g[d]);
                    n.allowDrag && n._enableDragDrop && v.addClass("draggable"),
                    n.checkboxes && (i(v.children()[0]),
                    v.css("float", "left"),
                    i(v[0].firstChild).css("float", "left")),
                    v[0].style.height = h.height + "px",
                    v[0].style.top = s + "px",
                    s += h.height + 1,
                    n.visualItems[d] = v
                }
                if (n._addHandlers(),
                n._updatescrollbars(),
                n.autoItemsHeight)
                    r = 2 * (m = n._calculateVirtualSize(t)).itemsPerPage,
                    n.autoHeight && (r = n.items.length),
                    n.virtualItemsCount = Math.min(r, n.items.length),
                    n = this,
                    m.width,
                    n.virtualSize = m,
                    n._updatescrollbars();
                i.jqx.browser.msie && i.jqx.browser.version < 8 && (n.host.attr("hideFocus", !0),
                n.host.find("div").attr("hideFocus", !0))
            }
        },
        _updatescrollbars: function() {
            var e = this;
            if (e.virtualSize) {
                var t = e.virtualSize.height
                  , r = e.virtualSize.width
                  , s = e.vScrollInstance
                  , n = e.hScrollInstance;
                e._arrange(!1);
                var o = !1
                  , a = e.host.outerWidth()
                  , l = e.host.outerHeight()
                  , d = 0;
                if (r > a && (d = e.hScrollBar.outerHeight() + 2),
                t + d > l) {
                    var h = s.max;
                    s.max = 2 + parseInt(t) + d - parseInt(l - 2),
                    "inherit" != e.vScrollBar[0].style.visibility && (e.vScrollBar[0].style.visibility = "inherit",
                    o = !0),
                    h != s.max && s._arrange()
                } else
                    "hidden" != e.vScrollBar[0].style.visibility && (e.vScrollBar[0].style.visibility = "hidden",
                    o = !0,
                    s.setPosition(0));
                var c = 0;
                "hidden" != e.vScrollBar[0].style.visibility && (c = e.scrollBarSize + 6);
                var u = e.checkboxes ? this.checkboxSize + 6 : 0;
                if (e.autoItemsHeight)
                    e.hScrollBar[0].style.visibility = "hidden";
                else if (r >= a - c - u) {
                    var p = n.max;
                    "inherit" == e.vScrollBar[0].style.visibility ? n.max = u + c + parseInt(r) - e.host.width() + 2 : n.max = u + parseInt(r) - e.host.width() + 4,
                    "inherit" != e.hScrollBar[0].style.visibility && (e.hScrollBar[0].style.visibility = "inherit",
                    o = !0),
                    p != n.max && n._arrange(),
                    "inherit" == e.vScrollBar[0].style.visibility && (s.max = 2 + parseInt(t) + e.hScrollBar.outerHeight() + 2 - parseInt(e.host.height()))
                } else
                    "hidden" != e.hScrollBar[0].style.visibility && (e.hScrollBar[0].style.visibility = "hidden",
                    o = !0);
                n.setPosition(0),
                o && e._arrange(),
                e.itemswrapper && (e.itemswrapper[0].style.width = Math.max(0, Math.max(a - 2, 17 + r)) + "px",
                e.itemswrapper[0].style.height = Math.max(0, 2 * l) + "px"),
                e.isTouchDevice() && ("visible" != e.vScrollBar.css("visibility") && "visible" != e.hScrollBar.css("visibility") ? i.jqx.mobile.setTouchScroll(!1, e.element.id) : i.jqx.mobile.setTouchScroll(!0, e.element.id))
            }
        },
        clear: function() {
            this.source = null,
            this.visibleItems = new Array,
            this.renderedVisibleItems = new Array,
            this.itemsByValue = new Array,
            this.clearSelection(),
            this.refresh()
        },
        clearSelection: function(e) {
            for (var t = 0; t < this.selectedIndexes.length; t++)
                this.selectedIndexes[t] && -1 != this.selectedIndexes[t] && this._raiseEvent("1", {
                    index: t,
                    type: "api",
                    item: this.getVisibleItem(t),
                    originalEvent: null
                }),
                this.selectedIndexes[t] = -1;
            this.selectedIndex = -1,
            this.selectedValue = null,
            this.selectedValues = new Array,
            0 != e && this._renderItems()
        },
        unselectIndex: function(e, t) {
            if (!isNaN(e)) {
                this.selectedIndexes[e] = -1;
                for (var i = !1, r = 0; r < this.selectedIndexes.length; r++) {
                    var s = this.selectedIndexes[r];
                    -1 != s && null != s && (i = !0)
                }
                if (!i) {
                    this.selectedValue = null,
                    this.selectedIndex = -1;
                    var n = this.getVisibleItem(e);
                    n && this.selectedValues[n.value] && (this.selectedValues[n.value] = null)
                }
                null != t && 1 != t || (this._renderItems(),
                this._raiseEvent("1", {
                    index: e,
                    type: "api",
                    item: this.getVisibleItem(e),
                    originalEvent: null
                })),
                this._updateInputSelection(),
                this._raiseEvent("2", {
                    index: e,
                    type: "api",
                    item: this.getItem(e)
                })
            }
        },
        getInfo: function() {
            var e = this
              , t = this.getItems()
              , i = this.getVisibleItems()
              , r = function() {
                var t = e.vScrollInstance.value;
                e.filterable && (t -= e.filterHeight);
                for (var r = new Array, s = 0; s < i.length; s++) {
                    var n = i[s];
                    if (n) {
                        var o = n.initialTop
                          , a = !0;
                        (o + n.height - t < 0 || o - t >= e.host.height()) && (a = !1),
                        a && r.push(n)
                    }
                }
                return r
            }();
            return {
                items: t,
                visibleItems: i,
                viewItems: r
            }
        },
        getItem: function(e) {
            if (-1 == e || isNaN(e) || "string" == typeof e)
                return -1 === e ? null : this.getItemByValue(e);
            var t = null;
            return i.each(this.items, function() {
                if (this.index == e)
                    return t = this,
                    !1
            }),
            t
        },
        getVisibleItem: function(e) {
            return -1 == e || isNaN(e) || "string" == typeof e ? -1 === e ? null : this.getItemByValue(e) : this.visibleItems[e]
        },
        getVisibleItems: function() {
            return this.visibleItems
        },
        checkIndex: function(e, t, r) {
            if (this.checkboxes && !isNaN(e) && !(e < 0 || e >= this.visibleItems.length || null != this.visibleItems[e] && this.visibleItems[e].disabled || this.disabled)) {
                var s = this.getItem(e);
                (this.groups.length > 0 || this.filterable) && (s = this.getVisibleItem(e)),
                null != s && (i(s.checkBoxElement),
                s.checked = !0,
                null != t && 1 != t || this._updateCheckedItems()),
                null != r && 1 != r || this._raiseEvent(3, {
                    label: s.label,
                    value: s.value,
                    checked: !0,
                    item: s
                })
            }
        },
        getCheckedItems: function() {
            if (!this.checkboxes)
                return null;
            var e = new Array;
            return null != this.items ? (i.each(this.items, function() {
                this.checked && (e[e.length] = this)
            }),
            e) : void 0
        },
        checkAll: function(e) {
            if (this.checkboxes && !this.disabled) {
                var t = this;
                i.each(this.items, function() {
                    var i = this;
                    !1 !== e && !0 !== i.checked && t._raiseEvent(3, {
                        label: i.label,
                        value: i.value,
                        checked: !0,
                        item: i
                    }),
                    this.checked = !0
                }),
                this._updateCheckedItems()
            }
        },
        uncheckAll: function(e) {
            if (this.checkboxes && !this.disabled) {
                var t = this;
                i.each(this.items, function() {
                    var i = this;
                    !1 !== e && !1 !== i.checked && (this.checked = !1,
                    t._raiseEvent(3, {
                        label: i.label,
                        value: i.value,
                        checked: !1,
                        item: i
                    })),
                    this.checked = !1
                }),
                this._updateCheckedItems()
            }
        },
        uncheckIndex: function(e, t, r) {
            if (this.checkboxes && !isNaN(e) && !(e < 0 || e >= this.visibleItems.length || null != this.visibleItems[e] && this.visibleItems[e].disabled || this.disabled)) {
                var s = this.getItem(e);
                (this.groups.length > 0 || this.filterable) && (s = this.getVisibleItem(e)),
                null != s && (i(s.checkBoxElement),
                s.checked = !1,
                null != t && 1 != t || this._updateCheckedItems()),
                null != r && 1 != r || this._raiseEvent(3, {
                    label: s.label,
                    value: s.value,
                    checked: !1,
                    item: s
                })
            }
        },
        indeterminateIndex: function(e, t, r) {
            if (this.checkboxes && !isNaN(e) && !(e < 0 || e >= this.visibleItems.length || null != this.visibleItems[e] && this.visibleItems[e].disabled || this.disabled)) {
                var s = this.getItem(e);
                (this.groups.length > 0 || this.filterable) && (s = this.getVisibleItem(e)),
                null != s && (i(s.checkBoxElement),
                s.checked = null,
                null != t && 1 != t || this._updateCheckedItems()),
                null != r && 1 != r || this._raiseEvent(3, {
                    checked: null
                })
            }
        },
        getSelectedIndex: function() {
            return this.selectedIndex
        },
        getSelectedItems: function() {
            var e = this.getVisibleItems()
              , t = this.selectedIndexes
              , i = [];
            for (var r in t)
                -1 != t[r] && (i[i.length] = e[r]);
            return i
        },
        getSelectedItem: function() {
            var e = this.getSelectedItems();
            return e && e.length > 0 ? e[0] : null
        },
        _updateCheckedItems: function() {
            var e = this.selectedIndex;
            this.clearSelection(!1),
            this.getCheckedItems(),
            this.selectedIndex = e,
            this._renderItems();
            var t = i.data(this.element, "hoveredItem");
            null != t && (i(t).addClass(this.toThemeProperty("jqx-listitem-state-hover")),
            i(t).addClass(this.toThemeProperty("jqx-fill-state-hover"))),
            this._updateInputSelection()
        },
        getItemByValue: function(e) {
            if (null != this.visibleItems) {
                if (e && e.value && (e = e.value),
                this.itemsByValue)
                    return this.itemsByValue[i.trim(e).split(" ").join("?")];
                for (var t = this.visibleItems, r = 0; r < t.length; r++)
                    if (t[r].value == e)
                        return t[r]
            }
        },
        checkItem: function(e) {
            if (null != e) {
                var t = this._getItemByParam(e);
                return this.checkIndex(t.visibleIndex, !0)
            }
            return !1
        },
        uncheckItem: function(e) {
            if (null != e) {
                var t = this._getItemByParam(e);
                return this.uncheckIndex(t.visibleIndex, !0)
            }
            return !1
        },
        indeterminateItem: function(e) {
            if (null != e) {
                var t = this._getItemByParam(e);
                return this.indeterminateIndex(t.visibleIndex, !0)
            }
            return !1
        },
        val: function(e) {
            if (this.input) {
                if (function(t) {
                    for (var i in t)
                        if (t.hasOwnProperty(i))
                            return !1;
                    return "number" != typeof e && "date" != typeof e && "boolean" != typeof e && "string" != typeof e
                }(e) || 0 == arguments.length)
                    return this.input.val();
                var t = this.getItemByValue(e);
                return null != t && this.selectItem(t),
                this.input ? this.input.val() : void 0
            }
        },
        selectItem: function(e) {
            if (null != e) {
                if (null == e.index) {
                    var t = this.getItemByValue(e);
                    t && (e = t)
                }
                return this.selectIndex(e.visibleIndex, !0)
            }
            return this.clearSelection(),
            !1
        },
        unselectItem: function(e) {
            if (null != e) {
                if (null == e.index) {
                    var t = this.getItemByValue(e);
                    t && (e = t)
                }
                return this.unselectIndex(e.visibleIndex, !0)
            }
            return !1
        },
        selectIndex: function(e, t, i, r, s, n) {
            if (!isNaN(e)) {
                var o = this.selectedIndex;
                if (this.filterable && (this.selectedIndex = -1),
                !(e < -1 || e >= this.visibleItems.length || null != this.visibleItems[e] && this.visibleItems[e].disabled || this.disabled)) {
                    if (this.multiple || this.multipleextended || this.selectedIndex != e || r || this.checkboxes) {
                        if (this.checkboxes) {
                            this._updateCheckedItems();
                            var a = o;
                            this.selectedIndex != e || this.multiple || (a = -1),
                            null == s && (s = "none");
                            var l = this.getItem(e)
                              , d = this.getItem(a);
                            return this.visibleItems && this.items && this.visibleItems.length != this.items.length && (l = this.getVisibleItem(e),
                            d = this.getVisibleItem(a)),
                            this._raiseEvent("1", {
                                index: a,
                                type: s,
                                item: d,
                                originalEvent: n
                            }),
                            this.selectedIndex = e,
                            this.selectedIndexes[a] = -1,
                            this.selectedIndexes[e] = e,
                            l && (this.selectedValue = l.value,
                            this.selectedValues[l.value] = l.value),
                            this._raiseEvent("0", {
                                index: e,
                                type: s,
                                item: l,
                                originalEvent: n
                            }),
                            void this._renderItems()
                        }
                        this.focused = !0;
                        var h = !1;
                        if (this.selectedIndex != e && (h = !0),
                        a = o,
                        this.selectedIndex != e || this.multiple || (a = -1),
                        null == s && (s = "none"),
                        l = this.getItem(e),
                        d = this.getItem(a),
                        this.visibleItems && this.items && this.visibleItems.length != this.items.length && (l = this.getVisibleItem(e),
                        d = this.getVisibleItem(a)),
                        null != r && r)
                            this._raiseEvent("1", {
                                index: a,
                                type: s,
                                item: d,
                                originalEvent: n
                            }),
                            this.selectedIndex = e,
                            this.selectedIndexes[a] = -1,
                            this.selectedIndexes[e] = e,
                            l && (this.selectedValue = l.value,
                            this.selectedValues[l.value] = l.value),
                            this._raiseEvent("0", {
                                index: e,
                                type: s,
                                item: l,
                                originalEvent: n
                            });
                        else {
                            var c = this
                              , u = function(e, t, i, r, s, n) {
                                c._raiseEvent("1", {
                                    index: t,
                                    type: i,
                                    item: r,
                                    originalEvent: n
                                }),
                                c.selectedIndex = e,
                                c.selectedIndexes = [],
                                t = e,
                                c.selectedIndexes[e] = e,
                                c.selectedValues = new Array,
                                s && (c.selectedValues[s.value] = s.value),
                                c._raiseEvent("0", {
                                    index: e,
                                    type: i,
                                    item: s,
                                    originalEvent: n
                                })
                            }
                              , p = function(e, t, i, r, s, n) {
                                null == c.selectedIndexes[e] || -1 == c.selectedIndexes[e] ? (c.selectedIndexes[e] = e,
                                c.selectedIndex = e,
                                s && (c.selectedValues[s.value] = s.value,
                                c._raiseEvent("0", {
                                    index: e,
                                    type: i,
                                    item: s,
                                    originalEvent: n
                                }))) : (t = c.selectedIndexes[e],
                                (r = c.getVisibleItem(t)) && (c.selectedValues[r.value] = null),
                                c.selectedIndexes[e] = -1,
                                c.selectedIndex = -1,
                                c._raiseEvent("1", {
                                    index: t,
                                    type: i,
                                    item: r,
                                    originalEvent: n
                                }))
                            };
                            if (this.multipleextended)
                                if (this._shiftKey || this._ctrlKey) {
                                    if (this._ctrlKey)
                                        "keyboard" == s && (this.clearSelection(!1),
                                        c._clickedIndex = e),
                                        p(e, a, s, d, l, n);
                                    else if (this._shiftKey) {
                                        null == c._clickedIndex && (c._clickedIndex = a);
                                        var f = Math.min(c._clickedIndex, e)
                                          , m = Math.max(c._clickedIndex, e);
                                        this.clearSelection(!1);
                                        for (var g = f; g <= m; g++)
                                            c.selectedIndexes[g] = g,
                                            c.selectedValues[c.getVisibleItem(g).value] = c.getVisibleItem(g).value,
                                            c._raiseEvent("0", {
                                                index: g,
                                                type: s,
                                                item: this.getVisibleItem(g),
                                                originalEvent: n
                                            });
                                        c.selectedIndex = "keyboard" != s ? c._clickedIndex : e
                                    }
                                } else
                                    "keyboard" != s && "mouse" != s ? (p(e, a, s, d, l, n),
                                    c._clickedIndex = e) : (this.clearSelection(!1),
                                    c._clickedIndex = e,
                                    u(e, a, s, d, l, n));
                            else
                                this.multiple ? p(e, a, s, d, l, n) : (l && (this.selectedValue = l.value),
                                u(e, a, s, d, l, n))
                        }
                        return null != i && 1 != i || this._renderItems(),
                        null != t && null != t && 1 == t && this.ensureVisible(e),
                        this._raiseEvent("2", {
                            index: e,
                            item: l,
                            oldItem: d,
                            type: s,
                            originalEvent: n
                        }),
                        this._updateInputSelection(),
                        h
                    }
                    this.visibleItems && this.items && this.visibleItems.length != this.items.length && (l = this.getVisibleItem(e)) && (this.selectedValue = l.value,
                    this.selectedValues[l.value] = l.value)
                }
            }
        },
        _updateInputSelection: function() {
            this._syncSelection();
            var e = new Array;
            if (this.input && (-1 == this.selectedIndex ? this.input.val("") : this.items && null != this.items[this.selectedIndex] && (this.input.val(this.items[this.selectedIndex].value),
            e.push(this.items[this.selectedIndex].value)),
            this.multiple || this.multipleextended || this.checkboxes)) {
                var t = this.checkboxes ? this.getCheckedItems() : this.getSelectedItems()
                  , r = "";
                if (t) {
                    for (var s = 0; s < t.length; s++)
                        null != t[s] && (s == t.length - 1 ? r += t[s].value : r += t[s].value + ",",
                        e.push(t[s].value));
                    this.input.val(r)
                }
            }
            this.field && this.input && ("select" == this.field.nodeName.toLowerCase() ? i.each(this.field, function(t, r) {
                i(this).removeAttr("selected"),
                this.selected = e.indexOf(this.value) >= 0,
                this.selected && i(this).attr("selected", !0)
            }) : i.each(this.items, function(t, r) {
                i(this.originalItem.originalItem).removeAttr("data-selected"),
                this.selected = e.indexOf(this.value) >= 0,
                this.selected && i(this.originalItem.originalItem).attr("data-selected", !0)
            }))
        },
        isIndexInView: function(e) {
            if (isNaN(e))
                return !1;
            if (!this.items)
                return !1;
            if (e < 0 || e >= this.items.length)
                return !1;
            var t = this.vScrollInstance.value
              , i = 0;
            this.filterable && (i = this.filterHeight);
            var r = this.visibleItems[e];
            if (null == r)
                return !0;
            var s = r.initialTop
              , n = r.height;
            return !(s - t < i || s - t + i + n >= this.host.outerHeight())
        },
        _itemsInPage: function() {
            var e = 0
              , t = this;
            return this.items && i.each(this.items, function() {
                if (this.initialTop + this.height >= t.content.height())
                    return !1;
                e++
            }),
            e
        },
        _firstItemIndex: function() {
            return null != this.visibleItems ? this.visibleItems[0] && this.visibleItems[0].isGroup ? this._nextItemIndex(0) : 0 : -1
        },
        _lastItemIndex: function() {
            return null != this.visibleItems ? this.visibleItems[this.visibleItems.length - 1] && this.visibleItems[this.visibleItems.length - 1].isGroup ? this._prevItemIndex(this.visibleItems.length - 1) : this.visibleItems.length - 1 : -1
        },
        _nextItemIndex: function(e) {
            for (indx = e + 1; indx < this.visibleItems.length; indx++)
                if (this.visibleItems[indx] && !this.visibleItems[indx].disabled && !this.visibleItems[indx].isGroup)
                    return indx;
            return -1
        },
        _prevItemIndex: function(e) {
            for (indx = e - 1; indx >= 0; indx--)
                if (this.visibleItems[indx] && !this.visibleItems[indx].disabled && !this.visibleItems[indx].isGroup)
                    return indx;
            return -1
        },
        clearFilter: function() {
            this.filterInput.val(""),
            this._updateItemsVisibility("")
        },
        _search: function(e) {
            var t = this
              , i = t.filterInput.val();
            if (9 != e.keyCode && "none" != t.searchMode && null != t.searchMode && "undefined" != t.searchMode && 16 != e.keyCode && 17 != e.keyCode && 20 != e.keyCode)
                return 37 != e.keyCode && 39 != e.keyCode && void (e.altKey || 18 == e.keyCode || e.keyCode >= 33 && e.keyCode <= 40 || (e.ctrlKey || e.metaKey || t.ctrlKey) && 88 != e.keyCode && 86 != e.keyCode || i !== t.searchString && t._updateItemsVisibility(i))
        },
        _updateItemsVisibility: function(e) {
            var t = this.getItems();
            if (null == t)
                return {
                    index: -1,
                    matchItem: new Array
                };
            var r = this
              , s = new Array
              , n = 0;
            i.each(t, function(t) {
                var o = "";
                if (!this.isGroup) {
                    o = (o = this.searchLabel ? this.searchLabel : this.label ? this.label : this.value ? this.value : this.title ? this.title : "jqxItem").toString();
                    var a = !1;
                    switch (r.searchMode) {
                    case "containsignorecase":
                        a = i.jqx.string.containsIgnoreCase(o, e);
                        break;
                    case "contains":
                        a = i.jqx.string.contains(o, e);
                        break;
                    case "equals":
                        a = i.jqx.string.equals(o, e);
                        break;
                    case "equalsignorecase":
                        a = i.jqx.string.equalsIgnoreCase(o, e);
                        break;
                    case "startswith":
                        a = i.jqx.string.startsWith(o, e);
                        break;
                    case "startswithignorecase":
                        a = i.jqx.string.startsWithIgnoreCase(o, e);
                        break;
                    case "endswith":
                        a = i.jqx.string.endsWith(o, e);
                        break;
                    case "endswithignorecase":
                        a = i.jqx.string.endsWithIgnoreCase(o, e)
                    }
                    a || (this.visible = !1),
                    a && (s[n++] = this,
                    this.visible = !0,
                    this.visibleIndex),
                    "" == e && (this.visible = !0,
                    a = !1)
                }
            }),
            r.renderedVisibleItems = new Array,
            r.visibleItems = new Array,
            r.vScrollInstance.setPosition(0, !0),
            r._addItems(!1),
            r._renderItems();
            for (var o = 0; o < r.items.length; o++)
                r.selectedIndexes[o] = -1;
            for (var a in r.selectedIndex = -1,
            r.selectedValues) {
                e = r.selectedValues[a];
                var l = r.getItemByValue(e);
                l && l.visible && (r.selectedIndex = l.visibleIndex,
                r.selectedIndexes[l.visibleIndex] = l.visibleIndex)
            }
            r._syncSelection(),
            r.filterChange && r.filterChange(e)
        },
        _getMatches: function(e, t) {
            if (null == e || 0 == e.length)
                return -1;
            null == t && (t = 0);
            var r = this.getItems()
              , s = this
              , n = -1;
            return i.each(r, function(r) {
                var o = "";
                if (!this.isGroup) {
                    o = this.searchLabel ? this.searchLabel.toString() : this.label ? this.label.toString() : this.value ? this.value.toString() : this.title ? this.title.toString() : "jqxItem";
                    var a = !1;
                    switch (s.searchMode) {
                    case "containsignorecase":
                        a = i.jqx.string.containsIgnoreCase(o, e);
                        break;
                    case "contains":
                        a = i.jqx.string.contains(o, e);
                        break;
                    case "equals":
                        a = i.jqx.string.equals(o, e);
                        break;
                    case "equalsignorecase":
                        a = i.jqx.string.equalsIgnoreCase(o, e);
                        break;
                    case "startswith":
                        a = i.jqx.string.startsWith(o, e);
                        break;
                    case "startswithignorecase":
                        a = i.jqx.string.startsWithIgnoreCase(o, e);
                        break;
                    case "endswith":
                        a = i.jqx.string.endsWith(o, e);
                        break;
                    case "endswithignorecase":
                        a = i.jqx.string.endsWithIgnoreCase(o, e)
                    }
                    if (a && this.visibleIndex >= t)
                        return n = this.visibleIndex,
                        !1
                }
            }),
            n
        },
        findItems: function(e) {
            var t = this.getItems()
              , r = this
              , s = 0
              , n = new Array;
            return i.each(t, function(t) {
                var o = "";
                if (!this.isGroup) {
                    o = this.label ? this.label : this.value ? this.value : this.title ? this.title : "jqxItem";
                    var a = !1;
                    switch (r.searchMode) {
                    case "containsignorecase":
                        a = i.jqx.string.containsIgnoreCase(o, e);
                        break;
                    case "contains":
                        a = i.jqx.string.contains(o, e);
                        break;
                    case "equals":
                        a = i.jqx.string.equals(o, e);
                        break;
                    case "equalsignorecase":
                        a = i.jqx.string.equalsIgnoreCase(o, e);
                        break;
                    case "startswith":
                        a = i.jqx.string.startsWith(o, e);
                        break;
                    case "startswithignorecase":
                        a = i.jqx.string.startsWithIgnoreCase(o, e);
                        break;
                    case "endswith":
                        a = i.jqx.string.endsWith(o, e);
                        break;
                    case "endswithignorecase":
                        a = i.jqx.string.endsWithIgnoreCase(o, e)
                    }
                    a && (n[s++] = this)
                }
            }),
            n
        },
        _syncSelection: function() {
            var e = this;
            if (e.filterable) {
                if (e.items)
                    for (var t = 0; t < e.items.length; t++)
                        (i = e.items[t]).selected = !1;
                for (t = 0; t < e.visibleItems.length; t++) {
                    var i = e.visibleItems[t];
                    e.selectedIndexes && e.selectedIndexes[t] == i.visibleIndex && (i.selected = !0)
                }
                e.itemswrapper && e._renderItems()
            }
        },
        _handleKeyDown: function(e) {
            var t = e.keyCode
              , r = this
              , s = r.selectedIndex
              , n = r.selectedIndex;
            if (this.keyboardNavigation && this.enableSelection && !(this.filterInput && e.target == this.filterInput[0] || e.target instanceof HTMLInputElement && i(e.target).ischildof(this.host))) {
                var o, a = function() {
                    (r.multiple || r.checkboxes) && r.clearSelection(!1)
                };
                if (e.altKey && (t = -1),
                32 == t && this.checkboxes)
                    return null != (o = this.getItem(s)) && (r._updateItemCheck(o, s),
                    e.preventDefault()),
                    r._searchString = "",
                    r.selectIndex(o.visibleIndex, !1, !0, !0, "keyboard", e),
                    void r._renderItems();
                if (r.incrementalSearch) {
                    var l = -1;
                    r._searchString || (r._searchString = ""),
                    (8 == t || 46 == t) && r._searchString.length >= 1 && (r._searchString = r._searchString.substr(0, r._searchString.length - 1));
                    var d = String.fromCharCode(t)
                      , h = !isNaN(parseInt(d))
                      , c = !1;
                    if (t >= 65 && t <= 97 || h || 8 == t || 32 == t || 46 == t) {
                        e.shiftKey || (d = d.toLocaleLowerCase());
                        var u = 1 + r.selectedIndex;
                        8 != t && 32 != t && 46 != t && (r._searchString.length > 0 && r._searchString.substr(0, 1) == d ? (u = 1 + r.selectedIndex,
                        r._searchString += d) : r._searchString += d),
                        32 == t && (r._searchString += " ");
                        var p = this._getMatches(r._searchString, u);
                        (l = p) != r._lastMatchIndex && -1 != l || (p = this._getMatches(r._searchString, 0),
                        l = p),
                        r._lastMatchIndex = l,
                        l >= 0 && (r._toSelectTimer && clearTimeout(r._toSelectTimer),
                        r._toSelectTimer = setTimeout(function() {
                            a(),
                            r.selectIndex(l, !1, !1, !1, "keyboard", e),
                            r.isIndexInView(l) ? r._renderItems() : r.ensureVisible(l)
                        }, r.incrementalSearchKeyDownDelay)),
                        c = !0
                    }
                    if (null != r._searchTimer && clearTimeout(r._searchTimer),
                    27 != t && 13 != t || (r._searchString = ""),
                    r._searchTimer = setTimeout(function() {
                        r._searchString = "",
                        r._renderItems()
                    }, r.incrementalSearchDelay),
                    l >= 0)
                        return;
                    if (c)
                        return !1
                }
                if (33 == t) {
                    var f = r._itemsInPage();
                    r.selectedIndex - f >= 0 ? (a(),
                    r.selectIndex(n - f, !1, !1, !1, "keyboard", e)) : (a(),
                    r.selectIndex(r._firstItemIndex(), !1, !1, !1, "keyboard", e)),
                    r._searchString = ""
                }
                if (32 == t && this.checkboxes && (null != (o = this.getItem(s)) && (r._updateItemCheck(o, s),
                e.preventDefault()),
                r._searchString = ""),
                36 == t && (a(),
                r.selectIndex(r._firstItemIndex(), !1, !1, !1, "keyboard", e),
                r._searchString = ""),
                35 == t && (a(),
                r.selectIndex(r._lastItemIndex(), !1, !1, !1, "keyboard", e),
                r._searchString = ""),
                34 == t && (f = r._itemsInPage(),
                r.selectedIndex + f < r.visibleItems.length ? (a(),
                r.selectIndex(n + f, !1, !1, !1, "keyboard", e)) : (a(),
                r.selectIndex(r._lastItemIndex(), !1, !1, !1, "keyboard", e)),
                r._searchString = ""),
                38 == t) {
                    if (r._searchString = "",
                    !(r.selectedIndex > 0))
                        return !1;
                    if ((m = r._prevItemIndex(r.selectedIndex)) == r.selectedIndex || -1 == m)
                        return !0;
                    a(),
                    r.selectIndex(m, !1, !1, !1, "keyboard", e)
                } else if (40 == t) {
                    if (r._searchString = "",
                    !(r.selectedIndex + 1 < r.visibleItems.length))
                        return !1;
                    var m;
                    if ((m = r._nextItemIndex(r.selectedIndex)) == r.selectedIndex || -1 == m)
                        return !0;
                    a(),
                    r.selectIndex(m, !1, !1, !1, "keyboard", e)
                }
                return 35 != t && 36 != t && 38 != t && 40 != t && 34 != t && 33 != t || (r.isIndexInView(r.selectedIndex) ? r._renderItems() : r.ensureVisible(r.selectedIndex),
                !1)
            }
        },
        _updateItemCheck: function(e, t) {
            if (!this.disabled)
                switch (1 == e.checked ? e.checked = !(!e.hasThreeStates || !this.hasThreeStates) && null : e.checked = null != e.checked,
                e.checked) {
                case !0:
                    this.checkIndex(t);
                    break;
                case !1:
                    this.uncheckIndex(t);
                    break;
                default:
                    this.indeterminateIndex(t)
                }
        },
        wheel: function(e, t) {
            if (t.autoHeight || !t.enableMouseWheel)
                return e.returnValue = !0,
                !0;
            if (t.disabled)
                return !0;
            var i = 0;
            if (e || (e = window.event),
            e.originalEvent && e.originalEvent.wheelDelta && (e.wheelDelta = e.originalEvent.wheelDelta),
            e.wheelDelta ? i = e.wheelDelta / 120 : e.detail && (i = -e.detail / 3),
            i) {
                var r = t._handleDelta(i);
                return r && (e.preventDefault && e.preventDefault(),
                null != e.originalEvent && (e.originalEvent.mouseHandled = !0),
                null != e.stopPropagation && e.stopPropagation()),
                !!r && (r = !1,
                e.returnValue = r,
                r)
            }
            e.preventDefault && e.preventDefault(),
            e.returnValue = !1
        },
        _handleDelta: function(e) {
            var t = this.vScrollInstance.value;
            return e < 0 ? this.scrollDown() : this.scrollUp(),
            t != this.vScrollInstance.value
        },
        focus: function() {
            try {
                this.focused = !0,
                this.host.focus();
                var e = this;
                setTimeout(function() {
                    e.host.focus()
                }, 25)
            } catch (e) {}
        },
        _removeHandlers: function() {
            this.removeHandler(i(document), "keydown.listbox" + this.element.id),
            this.removeHandler(i(document), "keyup.listbox" + this.element.id),
            this.removeHandler(this.vScrollBar, "valueChanged"),
            this.removeHandler(this.hScrollBar, "valueChanged"),
            this._mousewheelfunc ? this.removeHandler(this.host, "mousewheel", this._mousewheelfunc) : this.removeHandler(this.host, "mousewheel"),
            this.removeHandler(this.host, "keydown"),
            this.removeHandler(this.content, "mouseleave"),
            this.removeHandler(this.content, "focus"),
            this.removeHandler(this.content, "blur"),
            this.removeHandler(this.host, "focus"),
            this.removeHandler(this.host, "blur"),
            this.removeHandler(this.content, "mouseenter"),
            this.removeHandler(this.content, "mouseup"),
            this.removeHandler(this.content, "mousedown"),
            this.removeHandler(this.content, "touchend"),
            this._mousemovefunc ? this.removeHandler(this.content, "mousemove", this._mousemovefunc) : this.removeHandler(this.content, "mousemove"),
            this.removeHandler(this.content, "selectstart"),
            this.overlayContent && this.removeHandler(this.overlayContent, i.jqx.mobile.getTouchEventName("touchend"))
        },
        _updateSize: function() {
            this.virtualSize || (this._oldheight = null,
            this.virtualSize = this._calculateVirtualSize());
            var e = this;
            if (e._arrange(),
            e.host.height() != e._oldheight || e.host.width() != e._oldwidth) {
                if (e.host.width(),
                e._oldwidth,
                e.autoItemsHeight)
                    e._render(!1);
                else if (e.items)
                    if (e.items.length > 0 && e.virtualItemsCount * e.items[0].height < e._oldheight - 2)
                        e._render(!1);
                    else {
                        var t = e.vScrollInstance.value;
                        e._updatescrollbars(),
                        e._renderItems(),
                        t < e.vScrollInstance.max ? e.vScrollInstance.setPosition(t) : e.vScrollInstance.setPosition(e.vScrollInstance.max)
                    }
                e._oldwidth = e.host.width(),
                e._oldheight = e.host.height()
            }
        },
        _addHandlers: function() {
            var e = this;
            this.focused = !1,
            new Date;
            var t = this.isTouchDevice();
            this.addHandler(this.vScrollBar, "valueChanged", function(t) {
                i.jqx.browser.msie && i.jqx.browser.version > 9 ? setTimeout(function() {
                    e._renderItems()
                }, 1) : e._renderItems()
            }),
            this.addHandler(this.hScrollBar, "valueChanged", function() {
                e._renderItems()
            }),
            this._mousewheelfunc && this.removeHandler(this.host, "mousewheel", this._mousewheelfunc),
            this._mousewheelfunc = function(t) {
                e.wheel(t, e)
            }
            ,
            this.addHandler(this.host, "mousewheel", this._mousewheelfunc),
            this.addHandler(i(document), "keydown.listbox" + this.element.id, function(t) {
                e._ctrlKey = t.ctrlKey || t.metaKey,
                e._shiftKey = t.shiftKey
            }),
            this.addHandler(i(document), "keyup.listbox" + this.element.id, function(t) {
                e._ctrlKey = t.ctrlKey || t.metaKey,
                e._shiftKey = t.shiftKey
            }),
            this.addHandler(this.host, "keydown", function(t) {
                return e._handleKeyDown(t)
            }),
            this.addHandler(this.content, "mouseleave", function(t) {
                e.focused = !1;
                var r = i.data(e.element, "hoveredItem");
                null != r && (i(r).removeClass(e.toThemeProperty("jqx-listitem-state-hover")),
                i(r).removeClass(e.toThemeProperty("jqx-fill-state-hover")),
                i.data(e.element, "hoveredItem", null))
            }),
            this.addHandler(this.content, "focus", function(t) {
                e.disabled || (e.host.addClass(e.toThemeProperty("jqx-fill-state-focus")),
                e.focused = !0)
            }),
            this.addHandler(this.content, "blur", function(t) {
                e.focused = !1,
                e.host.removeClass(e.toThemeProperty("jqx-fill-state-focus"))
            }),
            this.addHandler(this.host, "focus", function(t) {
                e.disabled || (e.host.addClass(e.toThemeProperty("jqx-fill-state-focus")),
                e.focused = !0)
            }),
            this.addHandler(this.host, "blur", function(t) {
                i.jqx.browser.msie && i.jqx.browser.version < 9 && e.focused || (e.host.removeClass(e.toThemeProperty("jqx-fill-state-focus")),
                e.focused = !1)
            }),
            this.addHandler(this.content, "mouseenter", function(t) {
                e.focused = !0
            });
            var r = i.jqx.utilities.hasTransform(this.host)
              , s = e.isTouchDevice() && !0 !== this.touchMode
              , n = s ? "touchend" : "mousedown";
            if (this.overlayContent)
                this.addHandler(this.overlayContent, i.jqx.mobile.getTouchEventName("touchend"), function(t) {
                    if (!e.enableSelection)
                        return !0;
                    if (s && (e._newScroll = new Date,
                    e._newScroll - e._lastScroll < 500))
                        return !0;
                    var r = i.jqx.mobile.getTouches(t)[0];
                    if (null != r) {
                        var n = e.host.offset()
                          , o = parseInt(r.pageX)
                          , a = parseInt(r.pageY);
                        1 == e.touchMode && null != r._pageX && (o = parseInt(r._pageX),
                        a = parseInt(r._pageY)),
                        o -= n.left,
                        a -= n.top;
                        var l = e._hitTest(o, a);
                        if (null != l && !l.isGroup) {
                            if (e._newScroll = new Date,
                            e._newScroll - e._lastScroll < 500)
                                return !1;
                            if (e.checkboxes)
                                return void e._updateItemCheck(l, l.visibleIndex);
                            if (-1 == l.html.indexOf("href"))
                                return e.selectIndex(l.visibleIndex, !1, !0, !1, "mouse", t),
                                t.preventDefault && t.preventDefault(),
                                e.content.trigger("click"),
                                !1;
                            setTimeout(function() {
                                return e.selectIndex(l.visibleIndex, !1, !0, !1, "mouse", t),
                                e.content.trigger("click"),
                                !1
                            }, 100)
                        }
                    }
                });
            else {
                var o = !1;
                this.addHandler(this.content, n, function(t) {
                    if (!e.enableSelection)
                        return !0;
                    if (o = !0,
                    s && (e._newScroll = new Date,
                    e._newScroll - e._lastScroll < 500))
                        return !1;
                    if (e.focused = !0,
                    !e.isTouchDevice() && e.focusable && e.host.focus(),
                    t.target.id != "listBoxContent" + e.element.id && e.itemswrapper[0] != t.target) {
                        var a = t.target
                          , l = i(a).offset()
                          , d = e.host.offset();
                        if (r) {
                            var h = i.jqx.mobile.getLeftPos(a)
                              , c = i.jqx.mobile.getTopPos(a);
                            l.left = h,
                            l.top = c,
                            h = i.jqx.mobile.getLeftPos(e.element),
                            c = i.jqx.mobile.getTopPos(e.element),
                            d.left = h,
                            d.top = c
                        }
                        var u = parseInt(l.top) - parseInt(d.top)
                          , p = parseInt(l.left) - parseInt(d.left)
                          , f = e._hitTest(p, u);
                        if (null != f && !f.isGroup) {
                            var m = function(t, i) {
                                e._shiftKey || (e._clickedIndex = t.visibleIndex),
                                e.checkboxes ? (p = 20 + i.pageX - l.left,
                                e.rtl ? ("hidden" != e.hScrollBar.css("visibility") ? e.hScrollInstance.max : e.host.width(),
                                p <= e.host.width() - 20 && (e.allowDrag ? setTimeout(function() {
                                    e._dragItem || o || (e._updateItemCheck(t, t.visibleIndex),
                                    e.selectIndex(t.visibleIndex, !1, !0, !1, "mouse", i))
                                }, 200) : (e._updateItemCheck(t, t.visibleIndex),
                                e.selectIndex(t.visibleIndex, !1, !0, !1, "mouse", i)))) : p + e.hScrollInstance.value >= 20 && (e.allowDrag ? setTimeout(function() {
                                    e._dragItem || o || (e._updateItemCheck(t, t.visibleIndex),
                                    e.selectIndex(t.visibleIndex, !1, !0, !1, "mouse", i))
                                }, 200) : (e._updateItemCheck(t, t.visibleIndex),
                                e.selectIndex(t.visibleIndex, !1, !0, !1, "mouse", i)))) : e.selectIndex(t.visibleIndex, !1, !0, !1, "mouse", i)
                            };
                            f.disabled || (-1 != f.html.indexOf("href") ? setTimeout(function() {
                                m(f, t)
                            }, 100) : m(f, t))
                        }
                        if ("mousedown" == n) {
                            var g = !1;
                            if (t.which ? g = 3 == t.which : t.button && (g = 2 == t.button),
                            g)
                                return !0
                        }
                    }
                    return !0
                })
            }
            this.addHandler(this.content, "mouseup", function(t) {
                e.vScrollInstance.handlemouseup(e, t),
                o = !1
            }),
            i.jqx.browser.msie && this.addHandler(this.content, "selectstart", function(e) {
                return !1
            }),
            t = this.isTouchDevice(),
            this.enableHover && !t && (this._mousemovefunc = function(s) {
                if (t)
                    return !0;
                if (!e.enableHover)
                    return !0;
                if (1 == i.jqx.browser.msie && i.jqx.browser.version,
                null == s.target)
                    return !0;
                if (e.disabled)
                    return !0;
                if (e.focused = !0,
                !e.vScrollInstance.isScrolling() && s.target.id != "listBoxContent" + e.element.id && e.itemswrapper[0] != s.target) {
                    var n = s.target
                      , o = i(n).offset()
                      , a = e.host.offset();
                    if (r) {
                        var l = i.jqx.mobile.getLeftPos(n)
                          , d = i.jqx.mobile.getTopPos(n);
                        o.left = l,
                        o.top = d,
                        l = i.jqx.mobile.getLeftPos(e.element),
                        d = i.jqx.mobile.getTopPos(e.element),
                        a.left = l,
                        a.top = d
                    }
                    var h = parseInt(o.top) - parseInt(a.top)
                      , c = parseInt(o.left) - parseInt(a.left)
                      , u = e._hitTest(c, h);
                    if (null != u && !u.isGroup && !u.disabled) {
                        var p = i.data(e.element, "hoveredItem");
                        null != p && (i(p).removeClass(e.toThemeProperty("jqx-listitem-state-hover")),
                        i(p).removeClass(e.toThemeProperty("jqx-fill-state-hover"))),
                        i.data(e.element, "hoveredItem", u.element);
                        var f = i(u.element);
                        f.addClass(e.toThemeProperty("jqx-listitem-state-hover")),
                        f.addClass(e.toThemeProperty("jqx-fill-state-hover"))
                    }
                }
            }
            ,
            this.addHandler(this.content, "mousemove", this._mousemovefunc))
        },
        _arrange: function(e) {
            null == e && (e = !0);
            var t = this
              , i = null
              , r = null
              , s = t.filterable ? t.filterHeight : 0
              , n = window.getComputedStyle(this.element)
              , o = 2 * parseInt(n.borderLeftWidth)
              , a = n.boxSizing;
            0 === this.element.offsetWidth && (o = 2),
            ("border-box" === a || isNaN(o)) && (o = 0);
            var l = function(e) {
                return 0 == (e = t.host.height() - o) && (e = 200,
                t.host.height(e)),
                e
            };
            null != t.width && -1 != t.width.toString().indexOf("px") ? i = t.width : null == t.width || isNaN(t.width) || (i = t.width),
            null != t.height && -1 != t.height.toString().indexOf("px") ? r = t.height : null == t.height || isNaN(t.height) || (r = t.height),
            null != t.width && -1 != t.width.toString().indexOf("%") && (t.host.css("width", t.width),
            i = t.host.width()),
            null != t.height && -1 != t.height.toString().indexOf("%") && (t.host.css("height", t.height),
            r = l(r)),
            null != i && (i = parseInt(i) - o,
            parseInt(t.element.style.width) != parseInt(t.width) && (t.element.style.width = parseInt(i) + "px")),
            t.autoHeight ? t.virtualSize && ("hidden" != t.hScrollBar.css("visibility") ? (t.host.height(t.virtualSize.height + parseInt(t.scrollBarSize) + 3),
            t.height = t.virtualSize.height + parseInt(t.scrollBarSize) + 3,
            r = t.height) : (t.host.height(t.virtualSize.height),
            t.height = t.virtualSize.height,
            r = t.virtualSize.height)) : null != r && (r = parseInt(r),
            parseInt(t.element.style.height) != parseInt(t.height) && (t.host.height(t.height),
            l(r)));
            var d = t.scrollBarSize;
            isNaN(d) && (d = parseInt(d),
            isNaN(d) ? d = "17px" : d += "px"),
            d = parseInt(d);
            var h = 2
              , c = 1;
            if (t.vScrollBar && ("hidden" != t.vScrollBar[0].style.visibility ? c = d + 4 : (c = 0,
            t.vScrollInstance.setPosition(0)),
            0 == d && (c = 0,
            h = 0),
            t.hScrollBar)) {
                "hidden" != t.hScrollBar[0].style.visibility ? h = d + 4 : (t.hScrollInstance.setPosition(0),
                h = 0),
                t.autoItemsHeight && (t.hScrollBar[0].style.visibility = "hidden",
                h = 0),
                null == r && (r = 0);
                var u = parseInt(r) - 4 - d;
                u < 0 && (u = 0),
                parseInt(t.hScrollBar[0].style.height) != d && (parseInt(d) < 0 && (d = 0),
                t.hScrollBar[0].style.height = parseInt(d) + "px"),
                t.hScrollBar[0].style.top != u + "px" && (t.hScrollBar[0].style.top = u + "px",
                t.hScrollBar[0].style.left = "0px");
                var p = i - d - 4;
                p < 0 && (p = 0);
                var f = p + "px";
                if (t.hScrollBar[0].style.width != f && (t.hScrollBar[0].style.width = f),
                c <= 1 && i >= 2 && (t.hScrollBar[0].style.width = parseInt(i - 2) + "px"),
                d != parseInt(t.vScrollBar[0].style.width) && (t.vScrollBar[0].style.width = parseInt(d) + "px"),
                parseInt(r) - h != parseInt(t.vScrollBar[0].style.height)) {
                    var m = parseInt(r) - h;
                    m < 0 && (m = 0),
                    t.vScrollBar[0].style.height = m + "px"
                }
                null == i && (i = 0);
                var g = parseInt(i) - parseInt(d) - 4 + "px";
                "border-box" === this.host.css("box-sizing") && (g = parseInt(g) - 2 + "px"),
                g != t.vScrollBar[0].style.left && (parseInt(g) >= 0 && (t.vScrollBar[0].style.left = g),
                t.vScrollBar[0].style.top = "0px");
                var v = t.vScrollInstance;
                v.disabled = t.disabled,
                e && v._arrange();
                var w = t.hScrollInstance;
                if (w.disabled = t.disabled,
                e && w._arrange(),
                "hidden" != t.vScrollBar[0].style.visibility && "hidden" != t.hScrollBar[0].style.visibility ? (t.bottomRight[0].style.visibility = "inherit",
                t.bottomRight[0].style.left = 1 + parseInt(t.vScrollBar[0].style.left) + "px",
                t.bottomRight[0].style.top = 1 + parseInt(t.hScrollBar[0].style.top) + "px",
                t.rtl && t.bottomRight.css({
                    left: 0
                }),
                t.bottomRight[0].style.width = parseInt(d) + 3 + "px",
                t.bottomRight[0].style.height = parseInt(d) + 3 + "px") : t.bottomRight[0].style.visibility = "hidden",
                parseInt(t.content[0].style.width) != parseInt(i) - c) {
                    var x = parseInt(i) - c;
                    x < 0 && (x = 0),
                    t.content[0].style.width = x + "px"
                }
                if (t.rtl && (t.vScrollBar.css({
                    left: "0px",
                    top: "0px"
                }),
                t.hScrollBar.css({
                    left: t.vScrollBar.width() + 2 + "px"
                }),
                "hidden" != t.vScrollBar[0].style.visibility ? t.content.css("margin-left", 4 + t.vScrollBar.width()) : (t.content.css("margin-left", 0),
                t.hScrollBar.css({
                    left: "0px"
                })),
                t.filterable && t.filterInput && t.filterInput.css({
                    left: t.vScrollBar.width() + 6 + "px"
                })),
                parseInt(t.content[0].style.height) != parseInt(r) - h) {
                    var b = parseInt(r) - h;
                    b < 0 && (b = 0),
                    t.content[0].style.height = b + "px",
                    t.content[0].style.top = "0px"
                }
                s > 0 && (t.content[0].style.top = s + "px",
                t.content[0].style.height = parseInt(t.content[0].style.height) - s + "px"),
                t.filterable ? (t.filterInput[0].style.height = s - 6 + "px",
                t.filterInput[0].style.top = "3px",
                t.rtl || (t.filterInput[0].style.left = parseInt(t.content.css("left")) + 3 + "px"),
                t.filterInput[0].style.width = parseInt(t.content.css("width")) - 7 + "px",
                t.filter[0].style.display = "block") : t.filter[0].style.display = "none",
                t.overlayContent && (t.overlayContent.width(parseInt(i) - c),
                t.overlayContent.height(parseInt(r) - h))
            }
        },
        ensureVisible: function(e, t) {
            if (isNaN(e) && (r = this.getItemByValue(e)) && (e = r.index),
            this.isIndexInView(e)) {
                if (t)
                    for (indx = 0; indx < this.visibleItems.length; indx++)
                        (r = this.visibleItems[indx]).visibleIndex != e || r.isGroup || (n = this.vScrollInstance.value,
                        d = r.initialTop,
                        this.filterable && (d = this.filterHeight + 2 + r.initialTop),
                        n + this.host.height() < this.vScrollInstance.max && this.vScrollInstance.setPosition(d))
            } else {
                if (e < 0)
                    return;
                if (this.autoHeight)
                    (s = i.data(this.vScrollBar[0], "jqxScrollBar").instance).setPosition(0);
                else
                    for (indx = 0; indx < this.visibleItems.length; indx++) {
                        var r;
                        if ((r = this.visibleItems[indx]).visibleIndex == e && !r.isGroup) {
                            var s, n = (s = i.data(this.vScrollBar[0], "jqxScrollBar").instance).value, o = this.filterable ? this.filterHeight + 2 : 0, a = "hidden" === this.hScrollBar.css("visibility") ? 0 : this.scrollBarSize + 4;
                            if (r.initialTop < n)
                                s.setPosition(r.initialTop),
                                0 == indx && s.setPosition(0);
                            else if (r.initialTop + r.height > n + this.host.height() - o) {
                                var l = this.host.height();
                                if (this.filterable ? s.setPosition(this.filterHeight + 2 + r.initialTop + r.height + 2 - l + a) : (s.setPosition(r.initialTop + r.height + 2 - l + a),
                                indx === this.visibleItems.length - 1 && s.setPosition(s.max)),
                                t) {
                                    var n = s.value
                                      , d = r.initialTop;
                                    this.filterable && (d = this.filterHeight + 2 + r.initialTop),
                                    n + l < s.max && s.setPosition(d)
                                }
                            }
                            break
                        }
                    }
            }
            this._renderItems()
        },
        scrollTo: function(e, t) {
            "hidden" != this.vScrollBar.css("visibility") && this.vScrollInstance.setPosition(t),
            "hidden" != this.hScrollBar.css("visibility") && this.hScrollInstance.setPosition(e)
        },
        scrollDown: function() {
            if ("hidden" == this.vScrollBar.css("visibility"))
                return !1;
            var e = this.vScrollInstance;
            return e.value + e.largestep <= e.max ? (e.setPosition(e.value + e.largestep),
            !0) : (e.setPosition(e.max),
            !0)
        },
        scrollUp: function() {
            if ("hidden" == this.vScrollBar.css("visibility"))
                return !1;
            var e = this.vScrollInstance;
            return e.value - e.largestep >= e.min ? (e.setPosition(e.value - e.largestep),
            !0) : e.value != e.min && (e.setPosition(e.min),
            !0)
        },
        databind: function(e, t) {
            this.records = new Array;
            var r = !!e._source
              , s = new i.jqx.dataAdapter(e,{
                autoBind: !1
            });
            r && (s = e,
            e = e._source);
            var n = function(e, t) {
                var r = function(t) {
                    var r = null;
                    if ("string" == typeof t)
                        var s = t
                          , n = t
                          , o = "";
                    else
                        null != e.displayMember && "" != e.displayMember && (n = t[e.valueMember],
                        s = t[e.displayMember]);
                    o = "",
                    e.groupMember ? o = t[e.groupMember] : t && null != t.group && (o = t.group),
                    e.searchMember ? r = t[e.searchMember] : t && null != t.searchLabel && (r = t.searchLabel),
                    e.valueMember || e.displayMember || "string" == i.type(t) && (s = n = t.toString()),
                    t && null != t.label && (s = t.label),
                    t && null != t.value && (n = t.value);
                    var a = !1;
                    t && null != t.checked && (a = t.checked);
                    var l = "";
                    t && null != t.html && (l = t.html);
                    var d = !0;
                    t && null != t.visible && (d = t.visible);
                    var h = !1;
                    t && null != t.disabled && (h = t.disabled);
                    var c = !1;
                    t && null != t.hasThreeStates && (c = t.hasThreeStates);
                    var u = {};
                    return u.label = s,
                    u.value = n,
                    u.searchLabel = r,
                    u.html = l,
                    u.visible = d,
                    u.originalItem = t,
                    u.group = o,
                    u.groupHtml = "",
                    u.disabled = h,
                    u.checked = a,
                    u.hasThreeStates = c,
                    u
                };
                if (null != t && s._changedrecords[0])
                    i.each(s._changedrecords, function() {
                        var i = this.index
                          , s = this.record;
                        if ("remove" != t)
                            var n = r(s);
                        switch (t) {
                        case "update":
                            e.updateAt(n, i);
                            break;
                        case "add":
                            e.insertAt(n, i);
                            break;
                        case "remove":
                            e.removeAt(i)
                        }
                    });
                else {
                    e.records = s.records;
                    for (var n = e.records.length, o = new Array, a = 0; a < n; a++) {
                        var l = e.records[a]
                          , d = r(l);
                        d.index = a,
                        o[a] = d
                    }
                    e.items = e.loadItems(o, !0),
                    e._render(),
                    e._raiseEvent("6")
                }
            };
            null != e.type && (s._options.type = e.type),
            null != e.formatdata && (s._options.formatData = e.formatdata),
            null != e.contenttype && (s._options.contentType = e.contenttype),
            null != e.async && (s._options.async = e.async);
            var o = this;
            switch (e.datatype) {
            case "local":
            case "array":
            default:
                (null != e.localdata || i.isArray(e)) && (s.unbindBindingUpdate(this.element.id),
                (this.autoBind || !this.autoBind && !t) && s.dataBind(),
                n(this),
                s.bindBindingUpdate(this.element.id, function(e) {
                    n(o, e)
                }));
                break;
            case "json":
            case "jsonp":
            case "xml":
            case "xhtml":
            case "script":
            case "text":
            case "csv":
            case "tab":
                if (null != e.localdata)
                    return s.unbindBindingUpdate(this.element.id),
                    (this.autoBind || !this.autoBind && !t) && s.dataBind(),
                    n(this),
                    void s.bindBindingUpdate(this.element.id, function() {
                        n(o)
                    });
                var a = {};
                s._options.data ? i.extend(s._options.data, a) : (e.data && i.extend(a, e.data),
                s._options.data = a),
                s.unbindDownloadComplete(o.element.id),
                s.bindDownloadComplete(o.element.id, function() {
                    n(o)
                }),
                (this.autoBind || !this.autoBind && !t) && s.dataBind()
            }
        },
        loadItems: function(e, t) {
            if (null == e)
                return this.groups = new Array,
                this.items = new Array,
                void (this.visualItems = new Array);
            var r = this
              , s = 0
              , n = 0
              , o = 0;
            this.groups = new Array,
            this.items = new Array,
            this.visualItems = new Array;
            var a = new Array;
            this.itemsByValue = new Array,
            i.map(e, function(e) {
                if (null == e)
                    return null;
                var l = new i.jqx._jqxListBox.item
                  , d = e.group
                  , h = e.groupHtml
                  , c = e.title
                  , u = null;
                if (r.searchMember ? u = e[r.searchMember] : e && null != e.searchLabel && (u = e.searchLabel),
                null != c && null != c || (c = ""),
                null != d && null != d || (d = ""),
                r.groupMember && (d = e[r.groupMember]),
                null != h && null != h || (h = ""),
                !r.groups[d]) {
                    r.groups[d] = {
                        items: new Array,
                        index: -1,
                        caption: d,
                        captionHtml: h
                    };
                    var p = ++s + "jqxGroup";
                    r.groups[p] = r.groups[d],
                    n++,
                    r.groups.length = n
                }
                var f = r.groups[d];
                return f.index++,
                f.items[f.index] = l,
                "string" == typeof e ? (l.label = e,
                l.value = e,
                arguments.length > 1 && arguments[1] && "string" == i.type(arguments[1]) && (l.label = e,
                l.value = arguments[1])) : null == e.label && null == e.value && null == e.html && null == e.group && null == e.groupHtml ? (l.label = e.toString(),
                l.value = e.toString()) : (l.label = e.label,
                l.value = e.value,
                void 0 === l.label && (l.label = e.value),
                void 0 === l.value && (l.value = e.label)),
                "string" != typeof e && (void 0 === e.label && "" != r.displayMember && (null != e[r.displayMember] ? l.label = e[r.displayMember] : l.label = ""),
                void 0 === e.value && "" != r.valueMember && (l.value = e[r.valueMember])),
                l.hasThreeStates = null == e.hasThreeStates || e.hasThreeStates,
                l.originalItem = e,
                t && (l.originalItem = e.originalItem),
                l.title = c,
                c && void 0 === l.value && void 0 === l.label && (l.value = l.label = c),
                l.html = e.html || "",
                e.html && e.html,
                l.label,
                l.group = d,
                l.checked = e.checked || !1,
                l.groupHtml = e.groupHtml || "",
                l.disabled = e.disabled || !1,
                l.visible = null == e.visible || e.visible,
                l.searchLabel = u,
                l.index = o,
                a[o] = l,
                o++,
                l
            });
            var l = new Array
              , d = 0;
            if (null == this.fromSelect || 0 == this.fromSelect)
                for (var h = 0; h < n; h++) {
                    var c = (s = h + 1) + "jqxGroup"
                      , u = this.groups[c];
                    if (null == u || null == u)
                        break;
                    if (0 == h && "" == u.caption && "" == u.captionHtml && n <= 1) {
                        for (var p = 0; p < u.items.length; p++) {
                            var f = u.items[p].value;
                            null != u.items[p].value && null != u.items[p].value || (f = p),
                            this.itemsByValue[i.trim(f).split(" ").join("?")] = u.items[p]
                        }
                        return u.items
                    }
                    var m = new i.jqx._jqxListBox.item;
                    m.isGroup = !0,
                    m.label = u.caption,
                    "" == u.caption && "" == u.captionHtml && (u.caption = this.emptyGroupText,
                    m.label = u.caption),
                    m.html = u.captionHtml,
                    l[d] = m,
                    d++;
                    for (var g = 0; g < u.items.length; g++)
                        l[d] = u.items[g],
                        f = u.items[g].value,
                        "" != u.items[g].value && null != u.items[g].value || (f = d),
                        r.itemsByValue[i.trim(f).split(" ").join("?")] = u.items[g],
                        d++
                }
            else {
                d = 0;
                var v = new Array;
                i.each(a, function() {
                    if (!v[this.group] && "" != this.group) {
                        var e = new i.jqx._jqxListBox.item;
                        e.isGroup = !0,
                        e.label = this.group,
                        l[d] = e,
                        d++,
                        v[this.group] = !0
                    }
                    l[d] = this;
                    var t = this.value;
                    "" != this.value && null != this.value || (t = d - 1),
                    r.itemsByValue[i.trim(t).split(" ").join("?")] = this,
                    d++
                })
            }
            return l
        },
        _mapItem: function(e) {
            var t = new i.jqx._jqxListBox.item;
            return this.displayMember && (null == e.label && (e.label = e[this.displayMember]),
            null == e.value && (e.value = e[this.valueMember])),
            "string" == typeof e ? (t.label = e,
            t.value = e) : "number" == typeof e ? (t.label = e.toString(),
            t.value = e.toString()) : (t.label = void 0 !== e.label ? e.label : e.value,
            t.value = void 0 !== e.value ? e.value : e.label),
            null == t.label && null == t.value && null == t.html && (t.label = t.value = e),
            t.html = e.html || "",
            t.group = e.group || "",
            t.checked = e.checked || !1,
            t.title = e.title || "",
            t.groupHtml = e.groupHtml || "",
            t.disabled = e.disabled || !1,
            t.visible = e.visible || !0,
            t
        },
        addItem: function(e) {
            return this.insertAt(e, this.items ? this.items.length : 0)
        },
        _getItemByParam: function(e) {
            if (null != e && null == e.index) {
                var t = this.getItemByValue(e);
                t && (e = t)
            }
            return e
        },
        insertItem: function(e, t) {
            var i = this._getItemByParam(e);
            return this.insertAt(i, t)
        },
        updateItem: function(e, t) {
            var i = this._getItemByParam(t);
            return !(!i || null == i.index) && this.updateAt(e, i.index)
        },
        updateAt: function(e, t) {
            if (null != e) {
                var r = this._mapItem(e);
                this.itemsByValue[i.trim(r.value).split(" ").join("?")] = this.items[t],
                this.items[t].value = r.value,
                this.items[t].label = r.label,
                this.items[t].html = r.html,
                this.items[t].disabled = r.disabled,
                this._raiseEvent("9", {
                    item: this.items[t]
                })
            }
            this._cachedItemHtml = [],
            this._renderItems(),
            this.rendered && this.rendered()
        },
        insertAt: function(e, t) {
            if (null == e)
                return !1;
            if (this._cachedItemHtml = [],
            null == this.items || 0 == this.items.length) {
                this.source = new Array,
                this.refresh(),
                (s = this._mapItem(e)).index = 0,
                this.items[this.items.length] = s,
                this._addItems(!0),
                this._renderItems(),
                this.rendered && this.rendered(),
                this.allowDrag && this._enableDragDrop && this._enableDragDrop();
                var r = s.value;
                return "" != s.value && null != s.value || (r = t),
                this.itemsByValue[i.trim(r).split(" ").join("?")] = s,
                !1
            }
            var s = this._mapItem(e);
            if (-1 == t || null == t || null == t || t >= this.items.length)
                s.index = this.items.length,
                this.items[this.items.length] = s;
            else {
                for (var n = new Array, o = 0, a = !1, l = 0, d = 0; d < this.items.length; d++)
                    0 == this.items[d].isGroup && l >= t && !a && (n[o++] = s,
                    s.index = t,
                    l++,
                    a = !0),
                    n[o] = this.items[d],
                    this.items[d].isGroup || (n[o].index = l,
                    l++),
                    o++;
                this.items = n
            }
            r = s.value,
            "" != s.value && null != s.value || (r = t),
            this.itemsByValue[i.trim(r).split(" ").join("?")] = s,
            this.visibleItems = new Array,
            this.renderedVisibleItems = new Array;
            var h = i.data(this.vScrollBar[0], "jqxScrollBar").instance
              , c = h.value;
            return h.setPosition(0),
            this.allowDrag && this._enableDragDrop || this.virtualSize && this.virtualSize.height < 10 + this.host.height() ? this._addItems(!0) : this._addItems(!1),
            this.groups.length,
            this._renderItems(),
            this.allowDrag && this._enableDragDrop && this._enableDragDrop(),
            h.setPosition(c),
            this._raiseEvent("7", {
                item: s
            }),
            this.rendered && this.rendered(),
            !0
        },
        removeAt: function(e) {
            if (e < 0 || e > this.items.length - 1)
                return !1;
            if (null == e)
                return !1;
            var t = this.items[e].height;
            "" != (p = this.items[e].value) && null != p || (p = e),
            this.itemsByValue[i.trim(p).split(" ").join("?")] = null;
            var r = this.items[e];
            if (this.groups.length > 1) {
                for (var s = new Array, n = 0; n < this.items.length; n++)
                    this.items[n].isGroup || s.push({
                        item: this.items[n],
                        key: n
                    });
                if (!s[e])
                    return !1;
                this.items.splice(s[e].key, 1)
            } else
                this.items.splice(e, 1);
            var o = new Array
              , a = 0
              , l = 0;
            for (n = 0; n < this.items.length; n++)
                o[a] = this.items[n],
                this.items[n].isGroup || (o[a].index = l,
                l++),
                a++;
            this.items = o;
            var d = i.data(this.vScrollBar[0], "jqxScrollBar").instance
              , h = (d = i.data(this.vScrollBar[0], "jqxScrollBar").instance).value;
            if (d.setPosition(0),
            this.visibleItems = new Array,
            this.renderedVisibleItems = new Array,
            this.items.length > 0) {
                if (this.virtualSize) {
                    this.virtualSize.height -= t;
                    var c = 2 * this.virtualSize.itemsPerPage;
                    this.autoHeight && (c = this.items.length),
                    this.virtualItemsCount = Math.min(c, this.items.length)
                }
                this._updatescrollbars()
            } else
                this._addItems();
            this._renderItems(),
            this.allowDrag && this._enableDragDrop && this._enableDragDrop(),
            "hidden" != this.vScrollBar.css("visibility") ? d.setPosition(h) : d.setPosition(0),
            this.itemsByValue = new Array;
            for (var u = 0; u < this.items.length; u++) {
                var p = this.items[u].value;
                "" != this.items[u].value && null != this.items[u].value || (p = u),
                this.itemsByValue[i.trim(p).split(" ").join("?")] = this.items[u]
            }
            return this._raiseEvent("8", {
                item: r
            }),
            0 === this.items.length && (this.selectedIndex = -1,
            this.selectedValue = null,
            this._updateInputSelection()),
            this.rendered && this.rendered(),
            !0
        },
        removeItem: function(e, t) {
            var i = this._getItemByParam(e)
              , r = -1;
            if (i && null != i.index && !0 !== t) {
                for (var s = 0; s < this.items.length; s++)
                    if (this.items[s].label == i.label && this.items[s].value == i.value) {
                        r = s;
                        break
                    }
                if (-1 != r)
                    return this.removeAt(r)
            }
            if (-1 == r)
                return this.removeAt(i.index)
        },
        getItems: function() {
            return this.items
        },
        disableItem: function(e) {
            var t = this._getItemByParam(e);
            this.disableAt(t.index)
        },
        enableItem: function(e) {
            var t = this._getItemByParam(e);
            this.enableAt(t.index)
        },
        disableAt: function(e) {
            return !(!this.items || e < 0 || e > this.items.length - 1 || (this.items[e].disabled = !0,
            this._renderItems(),
            0))
        },
        enableAt: function(e) {
            return !(!this.items || e < 0 || e > this.items.length - 1 || (this.items[e].disabled = !1,
            this._renderItems(),
            0))
        },
        destroy: function() {
            this.source && this.source.unbindBindingUpdate && this.source.unbindBindingUpdate(this.element.id),
            this._removeHandlers(),
            this.vScrollBar.jqxScrollBar("destroy"),
            this.hScrollBar.jqxScrollBar("destroy"),
            this.vScrollBar.remove(),
            this.hScrollBar.remove(),
            this.content.remove(),
            i.jqx.utilities.resize(this.host, null, !0);
            var e = i.data(this.element, "jqxListBox");
            delete this.hScrollInstance,
            delete this.vScrollInstance,
            delete this.vScrollBar,
            delete this.hScrollBar,
            delete this.content,
            delete this.bottomRight,
            delete this.itemswrapper,
            delete this.visualItems,
            delete this.visibleItems,
            delete this.items,
            delete this.groups,
            delete this.renderedVisibleItems,
            delete this._mousewheelfunc,
            delete this._mousemovefunc,
            delete this._cachedItemHtml,
            delete this.itemsByValue,
            delete this._activeElement,
            delete this.source,
            delete this.events,
            this.input && (this.input.remove(),
            delete this.input),
            e && delete e.instance,
            this.host.removeData(),
            this.host.removeClass(),
            this.host.remove(),
            this.element = null,
            delete this.element,
            this.host = null,
            delete this.set,
            delete this.get,
            delete this.call,
            delete this.host
        },
        _raiseEvent: function(e, t) {
            if (1 == this._stopEvents)
                return !0;
            null == t && (t = {
                owner: null
            });
            var r = this.events[e];
            args = t,
            args.owner = this,
            this._updateInputSelection();
            var s = new i.Event(r);
            if (s.owner = this,
            s.args = args,
            null != this.host)
                var n = this.host.trigger(s);
            return n
        }
    }),
    function(e) {
        e.jqx.parseSourceTag = function(t) {
            var i = new Array
              , r = e(t).find("option")
              , s = e(t).find("optgroup")
              , n = !1;
            if (0 === r.length && (r = e(t).find("li")).length > 0 && (n = !0),
            0 === r.length) {
                var o = []
                  , a = e(t).find("tr")
                  , l = e(t).find("th")
                  , d = 0;
                0 === l.length && a.length > 0 && (l = e(a[0]).find("td"),
                d = 1);
                for (var h = [], c = [], u = (o = [],
                0); u < a.length; u++) {
                    var p = a[u]
                      , f = {};
                    u === d + 1 && (c = []);
                    for (var m = 0; m < l.length; m++) {
                        var g = e.trim(e(l[m]).text())
                          , v = e(p).find("td:eq(" + m + ")");
                        if (f[g] = e.trim(v.text()),
                        u === d && (h.push({
                            text: g,
                            dataField: g
                        }),
                        c.push({
                            name: g
                        })),
                        u === d + 1) {
                            var w = typeof f[g]
                              , x = "";
                            "string" === w && ("true" === f[g] || "false" === f[g] ? w = "bool" : isNaN(parseFloat(f[g])) || -1 !== f[g].indexOf("-") || -1 !== f[g].indexOf("/") ? f[g].indexOf("$") >= 0 || f[g].indexOf("%") >= 0 ? (w = "number",
                            f[g].indexOf("$") >= 0 && (x = "c"),
                            f[g].indexOf("%") >= 0 && (x = "p"),
                            f[g] = f[g].replace("%", "").replace("$", "")) : "Invalid Date" !== new Date(f[g]).toString() && (w = "date",
                            x = "d") : (w = "number",
                            x = f[g].indexOf(".") >= 0 ? "f" : "n")),
                            h[m].cellsformat = x,
                            "number" === w && (h[m].cellsalign = "right",
                            h[m].align = "right"),
                            c.push({
                                name: g,
                                type: w
                            })
                        }
                    }
                    u >= 1 && (o[o.length] = f)
                }
                var b = {
                    localdata: o,
                    datatype: "array",
                    datafields: c
                };
                return {
                    source: new e.jqx.dataAdapter(b),
                    columns: h
                }
            }
            var y = null
              , _ = (y = -1,
            new Array);
            if (e.each(r, function(t) {
                var r = s.find(this).length > 0
                  , o = null;
                null == this.text || null != this.label && "" != this.label || (this.label = this.text),
                !0 === n && (this.label = e(this).text().trim(),
                this.selected = e(this).attr("data-selected"),
                this.checked = this.selected,
                this.value = e(this).attr("data-value") || t,
                this.disabled = e(this).attr("disabled"));
                var a = {
                    style: this.style.cssText,
                    selected: this.selected,
                    html: this.innerHTML.trim(),
                    classes: this.className,
                    disabled: this.disabled,
                    value: this.value,
                    label: this.label,
                    title: this.title,
                    originalItem: this
                };
                e.jqx.browser.msie && e.jqx.browser.version < 8 && !n && "" == a.value && null != this.text && this.text.length > 0 && (a.value = this.text),
                r && (o = s.find(this).parent()[0].label,
                a.group = o,
                _[o] || (_[o] = new Array,
                _.length++),
                _[o].push(a)),
                this.selected && (y = t),
                a.checked = this.selected,
                void 0 !== a.label && i.push(a)
            }),
            _.length > 0) {
                var q = new Array;
                for (var j in _)
                    if ("indexOf" !== j) {
                        for (u = 0; u < s.length; u++)
                            if (j === s[u].label || s[u].text) {
                                s[u];
                                break
                            }
                        e.each(_[j], function(e, t) {
                            void 0 !== this.label && q.push(this)
                        })
                    }
            }
            return q && q.length > 0 ? {
                items: q,
                index: y
            } : {
                items: i,
                index: y
            }
        }
        ,
        e.jqx._jqxListBox.item = function() {
            return {
                group: "",
                groupHtml: "",
                selected: !1,
                isGroup: !1,
                highlighted: !1,
                value: null,
                label: "",
                html: null,
                visible: !0,
                disabled: !1,
                element: null,
                width: null,
                height: null,
                initialTop: null,
                top: null,
                left: null,
                title: "",
                index: -1,
                checkBoxElement: null,
                originalItem: null,
                checked: !1,
                visibleIndex: -1
            }
        }
    }(jqxBaseFramework)
}
, function(e, t) {
    var i;
    (i = jqxBaseFramework).jqx.jqxWidget("jqxDropDownList", "", {}),
    i.extend(i.jqx._jqxDropDownList.prototype, {
        defineInstance: function() {
            var e = {
                disabled: !1,
                width: null,
                height: null,
                items: new Array,
                selectedIndex: -1,
                source: null,
                scrollBarSize: 15,
                arrowSize: 17,
                enableHover: !0,
                enableSelection: !0,
                autoItemsHeight: !1,
                visualItems: new Array,
                groups: new Array,
                equalItemsWidth: !0,
                itemHeight: -1,
                visibleItems: new Array,
                emptyGroupText: "Group",
                checkboxes: !1,
                openDelay: 250,
                closeDelay: 300,
                dropDownContainer: "default",
                animationType: "default",
                autoOpen: !1,
                dropDownWidth: "auto",
                dropDownHeight: "200px",
                autoDropDownHeight: !1,
                keyboardSelection: !0,
                enableBrowserBoundsDetection: !1,
                dropDownHorizontalAlignment: "left",
                dropDownVerticalAlignment: "bottom",
                displayMember: "",
                valueMember: "",
                groupMember: "",
                searchMember: "",
                searchMode: "startswithignorecase",
                incrementalSearch: !0,
                incrementalSearchDelay: 700,
                renderer: null,
                placeHolder: "",
                promptText: "Please Choose:",
                emptyString: "",
                rtl: !1,
                selectionRenderer: null,
                listBox: null,
                popupZIndex: 2e3,
                renderMode: "default",
                touchMode: "auto",
                _checkForHiddenParent: !0,
                autoBind: !0,
                ready: null,
                focusable: !0,
                filterable: !1,
                filterHeight: 27,
                filterPlaceHolder: "Looking for",
                filterDelay: 100,
                hint: !0,
                template: "default",
                aria: {
                    "aria-disabled": {
                        name: "disabled",
                        type: "boolean"
                    }
                },
                events: ["open", "close", "select", "unselect", "change", "checkChange", "bindingComplete", "itemAdd", "itemRemove", "itemUpdate"]
            };
            return this === i.jqx._jqxDropDownList.prototype ? e : (i.extend(!0, this, e),
            e)
        },
        createInstance: function(e) {
            this.render()
        },
        render: function() {
            (c = this).width || (c.width = 200),
            c.height || (c.height = 25),
            c.host.addClass(c.toThemeProperty("jqx-dropdownlist"));
            var e = c.element.nodeName.toLowerCase();
            if ("select" == e || "ul" == e || "ol" == e) {
                c.field = c.element,
                c.field.className && (c._className = c.field.className);
                var t = {
                    title: c.field.title
                };
                c.field.id.length ? t.id = c.field.id.replace(/[^\w]/g, "_") + "_jqxDropDownList" : t.id = i.jqx.utilities.createId() + "_jqxDropDownList";
                var r = i("<div></div>", t);
                c.width || (c.width = i(c.field).width()),
                c.height || (c.height = i(c.field).outerHeight()),
                r[0].style.cssText = c.field.style.cssText,
                i(c.field).hide().after(r);
                var s = c.host.data();
                if (c.host = r,
                c.host.data(s),
                c.element = r[0],
                c.element.id = c.field.id,
                c.field.id = t.id,
                c._className && (c.host.addClass(c._className),
                i(c.field).removeClass(c._className)),
                c.field.tabIndex) {
                    var n = c.field.tabIndex;
                    c.field.tabIndex = -1,
                    c.element.tabIndex = n
                }
                var o = i.jqx.parseSourceTag(c.field);
                c.source = o.items,
                -1 == c.selectedIndex && (c.selectedIndex = o.index)
            } else
                (c.host.find("li").length > 0 || c.host.find("option").length > 0) && (o = i.jqx.parseSourceTag(c.element),
                c.source = o.items);
            c.element.innerHTML = "",
            c.isanimating = !1,
            c.id = c.element.id || i.jqx.utilities.createId(),
            c.host.attr("role", "combobox"),
            i.jqx.aria(c, "aria-autocomplete", "both"),
            i.jqx.aria(c, "aria-readonly", !1);
            var a = "<div style='background-color: transparent; -webkit-appearance: none; outline: none; width:100%; height: 100%; padding: 0px; margin: 0px; border: 0px; position: relative;'><div id='dropdownlistWrapper' style='overflow: hidden; outline: none; background-color: transparent; border: none; float: left; width:100%; height: 100%; position: relative;'><div id='dropdownlistContent' unselectable='on' style='outline: none; background-color: transparent; border: none; float: left; position: relative;'></div><div id='dropdownlistArrow' unselectable='on' style='background-color: transparent; border: none; float: right; position: relative;'><div unselectable='on'></div></div></div></div>";
            if (null == i.jqx._jqxListBox || null == i.jqx._jqxListBox)
                throw new Error("jqxDropDownList: Missing reference to jqxlistbox.js.");
            c.host.attr("tabindex") || c.host.attr("tabindex", 0),
            c.touch = i.jqx.mobile.isTouchDevice(),
            c.comboStructure = a,
            c.element.innerHTML = a,
            c.dropdownlistWrapper = i(c.element.firstChild.firstChild),
            c.dropdownlistArrow = i(c.dropdownlistWrapper[0].firstChild.nextSibling),
            c.arrow = i(c.dropdownlistArrow[0].firstChild),
            c.dropdownlistContent = i(c.dropdownlistWrapper[0].firstChild),
            c.dropdownlistContent.addClass(c.toThemeProperty("jqx-dropdownlist-content jqx-disableselect")),
            c.rtl && c.dropdownlistContent.addClass(c.toThemeProperty("jqx-rtl jqx-dropdownlist-content-rtl")),
            c.addHandler(c.dropdownlistWrapper, "selectstart", function() {
                return !1
            }),
            c.dropdownlistWrapper[0].id = "dropdownlistWrapper" + c.element.id,
            c.dropdownlistArrow[0].id = "dropdownlistArrow" + c.element.id,
            c.dropdownlistContent[0].id = "dropdownlistContent" + c.element.id,
            c._addInput();
            var l = i("<label></label");
            this.hint && (l[0].innerHTML = this.placeHolder),
            l.addClass(c.toThemeProperty("jqx-input-label")),
            c.dropdownlistWrapper.append(l),
            c.label = l;
            var d = i("<span></span>");
            c.dropdownlistWrapper.append(d),
            d.addClass(c.toThemeProperty("jqx-input-bar")),
            c.bar = d,
            c.bar.css("top", this.host.height());
            var h = this;
            h.template && (h.bar.addClass(h.toThemeProperty("jqx-" + h.template)),
            h.label.addClass(h.toThemeProperty("jqx-" + h.template))),
            "Please Choose:" != c.promptText && (c.placeHolder = c.promptText);
            var c, u = c.toThemeProperty("jqx-widget") + " " + c.toThemeProperty("jqx-dropdownlist-state-normal") + " " + c.toThemeProperty("jqx-rc-all") + " " + c.toThemeProperty("jqx-fill-state-normal");
            c.element.className += " " + u,
            c._firstDiv = i(c.element.firstChild);
            try {
                var p = "listBox" + c.id
                  , f = i(i.find("#" + p));
                f.length > 0 && f.remove(),
                i.jqx.aria(c, "aria-owns", p),
                i.jqx.aria(c, "aria-haspopup", !0);
                var m = i("<div style='overflow: hidden; background-color: transparent; border: none; position: absolute;' id='listBox" + c.id + "'><div id='innerListBox" + c.id + "'></div></div>");
                m.hide(),
                m.addClass("jqx-listbox-container"),
                "element" == c.dropDownContainer ? m.appendTo(c.host) : m.appendTo(document.body),
                c.container = m,
                c.listBoxContainer = i(i.find("#innerListBox" + c.id));
                var g = c.width;
                "auto" != c.dropDownWidth && (g = c.dropDownWidth),
                null == g && 0 == (g = c.host.width()) && (g = c.dropDownWidth),
                null == c.dropDownHeight && (c.dropDownHeight = 200),
                c.container.width(parseInt(g) + 25),
                c.container.height(parseInt(c.dropDownHeight) + 25),
                c._ready = !1,
                c.addHandler(c.listBoxContainer, "bindingComplete", function(e) {
                    c.listBox || (c.listBox = i.data(c.listBoxContainer[0], "jqxListBox").instance),
                    c.selectedIndex != c.listBoxContainer.jqxListBox("selectedIndex") ? (c.listBox = i.data(c.listBoxContainer[0], "jqxListBox").instance,
                    c.listBoxContainer.jqxListBox({
                        selectedIndex: c.selectedIndex
                    }),
                    c.renderSelection("mouse")) : c.renderSelection("mouse"),
                    c._ready || (c.ready && c.ready(),
                    c._ready = !0),
                    c._raiseEvent("6")
                }),
                c.addHandler(c.listBoxContainer, "itemAdd", function(e) {
                    c._raiseEvent("7", e.args)
                }),
                c.addHandler(c.listBoxContainer, "itemRemove", function(e) {
                    c._raiseEvent("8", e.args)
                }),
                c.addHandler(c.listBoxContainer, "itemUpdate", function(e) {
                    c._raiseEvent("9", e.args)
                }),
                c.listBoxContainer.jqxListBox({
                    filterHeight: c.filterHeight,
                    filterPlaceHolder: c.filterPlaceHolder,
                    filterDelay: c.filterDelay,
                    autoItemsHeight: c.autoItemsHeight,
                    filterable: c.filterable,
                    allowDrop: !1,
                    allowDrag: !1,
                    autoBind: c.autoBind,
                    _checkForHiddenParent: !1,
                    focusable: c.focusable,
                    touchMode: c.touchMode,
                    checkboxes: c.checkboxes,
                    rtl: c.rtl,
                    _renderOnDemand: !0,
                    emptyString: c.emptyString,
                    itemHeight: c.itemHeight,
                    width: g,
                    searchMode: c.searchMode,
                    incrementalSearch: c.incrementalSearch,
                    incrementalSearchDelay: c.incrementalSearchDelay,
                    groupMember: c.groupMember,
                    searchMember: c.searchMember,
                    displayMember: c.displayMember,
                    valueMember: c.valueMember,
                    height: c.dropDownHeight,
                    autoHeight: c.autoDropDownHeight,
                    scrollBarSize: c.scrollBarSize,
                    selectedIndex: c.selectedIndex,
                    source: c.source,
                    theme: c.theme,
                    rendered: function() {
                        c.selectedIndex != c.listBoxContainer.jqxListBox("selectedIndex") ? (c.listBox = i.data(c.listBoxContainer[0], "jqxListBox").instance,
                        c.listBoxContainer.jqxListBox({
                            selectedIndex: c.selectedIndex
                        }),
                        c.renderSelection("mouse")) : c.renderSelection("mouse")
                    },
                    renderer: c.renderer,
                    filterChange: function(e) {
                        c.autoDropDownHeight && c.container.height(c.listBoxContainer.height() + 25)
                    }
                }),
                "element" === c.dropDownContainer ? c.listBoxContainer.css({
                    position: "absolute",
                    top: 0,
                    left: 0
                }) : c.listBoxContainer.css({
                    position: "absolute",
                    zIndex: c.popupZIndex,
                    top: 0,
                    left: 0
                }),
                c.template && c.listBoxContainer.addClass(c.toThemeProperty("jqx-" + c.template + "-item")),
                c.listBox = i.data(c.listBoxContainer[0], "jqxListBox").instance,
                c.listBox.enableSelection = c.enableSelection,
                c.listBox.enableHover = c.enableHover,
                c.listBox.equalItemsWidth = c.equalItemsWidth,
                c.listBox.selectIndex(c.selectedIndex),
                c.listBox._arrange(),
                c.listBoxContainer.addClass(c.toThemeProperty("jqx-popup")),
                i.jqx.browser.msie && c.listBoxContainer.addClass(c.toThemeProperty("jqx-noshadow")),
                c.addHandler(c.listBoxContainer, "unselect", function(e) {
                    c._raiseEvent("3", {
                        index: e.args.index,
                        type: e.args.type,
                        item: e.args.item
                    })
                }),
                c.addHandler(c.listBoxContainer, "change", function(e) {
                    e.args && ("keyboard" != e.args.type ? c._raiseEvent("4", {
                        index: e.args.index,
                        type: e.args.type,
                        item: e.args.item
                    }) : "keyboard" == e.args.type && (c.isOpened() || c._raiseEvent("4", {
                        index: c.selectedIndex,
                        type: "keyboard",
                        item: c.getItem(c.selectedIndex)
                    })))
                }),
                "none" == c.animationType ? c.container.css("display", "none") : c.container.hide()
            } catch (e) {
                console && console.log(e)
            }
            if ((c = c).propertyChangeMap.disabled = function(e, t, r, s) {
                s ? (e.host.addClass(c.toThemeProperty("jqx-dropdownlist-state-disabled")),
                e.host.addClass(c.toThemeProperty("jqx-fill-state-disabled")),
                e.dropdownlistContent.addClass(c.toThemeProperty("jqx-dropdownlist-content-disabled"))) : (e.host.removeClass(c.toThemeProperty("jqx-dropdownlist-state-disabled")),
                e.host.removeClass(c.toThemeProperty("jqx-fill-state-disabled")),
                e.dropdownlistContent.removeClass(c.toThemeProperty("jqx-dropdownlist-content-disabled"))),
                i.jqx.aria(e, "aria-disabled", e.disabled)
            }
            ,
            c.disabled && (c.host.addClass(c.toThemeProperty("jqx-dropdownlist-state-disabled")),
            c.host.addClass(c.toThemeProperty("jqx-fill-state-disabled")),
            c.dropdownlistContent.addClass(c.toThemeProperty("jqx-dropdownlist-content-disabled"))),
            "top" == c.dropDownVerticalAlignment ? c.arrow.addClass(c.toThemeProperty("jqx-icon-arrow-up")) : c.arrow.addClass(c.toThemeProperty("jqx-icon-arrow-down")),
            c.arrow.addClass(c.toThemeProperty("jqx-icon")),
            "simple" === c.renderMode && (c.arrow.remove(),
            c.host.removeClass(c.toThemeProperty("jqx-fill-state-normal")),
            c.host.removeClass(c.toThemeProperty("jqx-rc-all"))),
            c.template && c.host.addClass(c.toThemeProperty("jqx-" + c.template)),
            c._updateHandlers(),
            c._setSize(),
            c._arrange(),
            c.listBox && c.renderSelection(),
            i.jqx.browser.msie && i.jqx.browser.version < 8 && c.host.parents(".jqx-window").length > 0) {
                var v = c.host.parents(".jqx-window").css("z-index");
                m.css("z-index", v + 10),
                c.listBoxContainer.css("z-index", v + 10)
            }
        },
        resize: function(e, t) {
            this.width = e,
            this.height = t,
            this._setSize(),
            this._arrange()
        },
        val: function(e) {
            if (!this.dropdownlistContent)
                return "";
            if (this.input && (function(t) {
                for (var i in t)
                    if (t.hasOwnProperty(i))
                        return !1;
                return "number" != typeof e && "date" != typeof e && "boolean" != typeof e && "string" != typeof e
            }(e) || 0 == arguments.length))
                return this.input.val();
            var t = this.getItemByValue(e);
            return null != t && this.selectItem(t),
            this.input ? this.input.val() : void 0
        },
        focus: function() {
            try {
                var e = this
                  , t = function() {
                    e.host && (e.host.focus(),
                    e._firstDiv && e._firstDiv.focus())
                };
                t(),
                setTimeout(function() {
                    t()
                }, 10)
            } catch (e) {}
        },
        _addInput: function() {
            var e = this.host.attr("name");
            this.input = i("<input type='hidden'/>"),
            this.host.append(this.input),
            e && this.input.attr("name", e)
        },
        getItems: function() {
            return this.listBox ? this.listBox.items : new Array
        },
        getVisibleItems: function() {
            return this.listBox.getVisibleItems()
        },
        _setSize: function() {
            var e = window.getComputedStyle(this.element)
              , t = 2 * parseInt(e.borderLeftWidth)
              , r = e.boxSizing;
            0 === this.element.offsetWidth && (t = 2),
            ("border-box" === r || isNaN(t)) && (t = 0),
            null != this.width && -1 != this.width.toString().indexOf("px") ? this.element.style.width = parseInt(this.width) - t + "px" : null == this.width || isNaN(this.width) || (this.element.style.width = parseInt(this.width) - t + "px"),
            null != this.height && -1 != this.height.toString().indexOf("px") ? this.element.style.height = parseInt(this.height) - t + "px" : null == this.height || isNaN(this.height) || (this.element.style.height = parseInt(this.height) - t + "px");
            var s = !1;
            null != this.width && -1 != this.width.toString().indexOf("%") && (s = !0,
            this.element.style.width = this.width,
            t > 0 && (this.host.css("box-sizing", "border-box"),
            this.listBoxContainer.css("box-sizing", "border-box"))),
            null != this.height && -1 != this.height.toString().indexOf("%") && (s = !0,
            this.element.style.height = this.height);
            var n = this;
            if (s) {
                var o = this.host.width() + 2;
                "auto" != this.dropDownWidth && (o = this.dropDownWidth),
                this.listBoxContainer.jqxListBox({
                    width: o
                }),
                this.container.width(parseInt(o) + 25)
            }
            i.jqx.utilities.resize(this.host, function() {
                !function() {
                    if (n._arrange(),
                    "auto" == n.dropDownWidth) {
                        var e = n.host.width() + 2;
                        n.listBoxContainer.jqxListBox({
                            width: e
                        }),
                        n.container.width(parseInt(e) + 25)
                    }
                }()
            }, !1, this._checkForHiddenParent)
        },
        isOpened: function() {
            var e = i.data(document.body, "openedJQXListBox" + this.id);
            return null != e && e == this.listBoxContainer
        },
        _updateHandlers: function() {
            var e = this;
            this.removeHandlers(),
            this.touch || (this.addHandler(this.host, "mouseenter", function() {
                !e.disabled && e.enableHover && "simple" !== e.renderMode && (e.host.addClass(e.toThemeProperty("jqx-dropdownlist-state-hover")),
                "top" == e.dropDownVerticalAlignment ? e.arrow.addClass(e.toThemeProperty("jqx-icon-arrow-up-hover")) : e.arrow.addClass(e.toThemeProperty("jqx-icon-arrow-down-hover")),
                e.host.addClass(e.toThemeProperty("jqx-fill-state-hover")))
            }),
            this.addHandler(this.host, "mouseleave", function() {
                !e.disabled && e.enableHover && "simple" !== e.renderMode && (e.host.removeClass(e.toThemeProperty("jqx-dropdownlist-state-hover")),
                e.host.removeClass(e.toThemeProperty("jqx-fill-state-hover")),
                e.arrow.removeClass(e.toThemeProperty("jqx-icon-arrow-down-hover")),
                e.arrow.removeClass(e.toThemeProperty("jqx-icon-arrow-up-hover")))
            })),
            this.host.parents() && this.addHandler(this.host.parents(), "scroll.dropdownlist" + this.element.id, function(t) {
                e.isOpened() && e.close()
            });
            var t = "mousedown";
            this.touch && (t = i.jqx.mobile.getTouchEventName("touchstart")),
            this.addHandler(this.dropdownlistWrapper, t, function(t) {
                if (!e.disabled) {
                    var i = "block" == e.container.css("display");
                    if (!e.isanimating) {
                        if (i)
                            return e.hideListBox(),
                            !1;
                        e.showListBox(),
                        e.focusable ? e.focus() : t.preventDefault && t.preventDefault()
                    }
                }
            }),
            e.autoOpen && (this.addHandler(this.host, "mouseenter", function() {
                !e.isOpened() && e.autoOpen && (e.open(),
                e.host.focus())
            }),
            i(document).on("mousemove." + e.id, function(t) {
                if (e.isOpened() && e.autoOpen) {
                    var i = e.host.coord()
                      , r = i.top
                      , s = i.left
                      , n = e.container.coord()
                      , o = n.left
                      , a = n.top;
                    canClose = !0,
                    t.pageY >= r && t.pageY <= r + e.host.height() && t.pageX >= s && t.pageX < s + e.host.width() && (canClose = !1),
                    t.pageY >= a && t.pageY <= a + e.container.height() && t.pageX >= o && t.pageX < o + e.container.width() && (canClose = !1),
                    canClose && e.close()
                }
            })),
            this.touch ? this.addHandler(i(document), i.jqx.mobile.getTouchEventName("touchstart") + "." + this.id, e.closeOpenedListBox, {
                me: this,
                listbox: this.listBox,
                id: this.id
            }) : this.addHandler(i(document), "mousedown." + this.id, e.closeOpenedListBox, {
                me: this,
                listbox: this.listBox,
                id: this.id
            }),
            this.addHandler(this.host, "keydown", function(t) {
                var i = "block" == e.container.css("display");
                if ("none" == e.host.css("display"))
                    return !0;
                if (("13" == t.keyCode || "9" == t.keyCode) && !e.isanimating)
                    return i && (e.renderSelection(),
                    "13" == t.keyCode && e.focusable && e._firstDiv.focus(),
                    e.hideListBox(),
                    e.keyboardSelection || e._raiseEvent("2", {
                        index: e.selectedIndex,
                        type: "keyboard",
                        item: e.getItem(e.selectedIndex)
                    }),
                    "13" == t.keyCode && e._raiseEvent("4", {
                        index: e.selectedIndex,
                        type: "keyboard",
                        item: e.getItem(e.selectedIndex)
                    })),
                    !i || "9" == t.keyCode;
                if (115 == t.keyCode)
                    return e.isanimating || (e.isOpened() ? e.isOpened() && e.hideListBox() : e.showListBox()),
                    !1;
                if (t.altKey && "block" == e.host.css("display"))
                    if (38 == t.keyCode) {
                        if (e.isOpened())
                            return e.hideListBox(),
                            !0
                    } else if (40 == t.keyCode && !e.isOpened())
                        return e.showListBox(),
                        !0;
                return "27" != t.keyCode || e.ishiding ? e.disabled ? void 0 : (e._kbnavigated = e.listBox._handleKeyDown(t),
                e._kbnavigated) : (e.isOpened() && (e.hideListBox(),
                null != e.tempSelectedIndex && e.selectIndex(e.tempSelectedIndex)),
                !0)
            }),
            this.addHandler(this.listBoxContainer, "checkChange", function(t) {
                e.renderSelection(),
                e._updateInputSelection(),
                e._raiseEvent(5, {
                    label: t.args.label,
                    value: t.args.value,
                    checked: t.args.checked,
                    item: t.args.item
                })
            }),
            this.addHandler(this.listBoxContainer, "select", function(t) {
                if (!e.disabled) {
                    if (!t.args)
                        return;
                    "keyboard" != t.args.type || e.isOpened() || e.renderSelection(),
                    ("keyboard" != t.args.type || e.keyboardSelection) && (e.renderSelection(),
                    e._raiseEvent("2", {
                        index: t.args.index,
                        type: t.args.type,
                        item: t.args.item,
                        originalEvent: t.args.originalEvent
                    }),
                    "mouse" == t.args.type && (e.checkboxes || (e.hideListBox(),
                    e._firstDiv && e.focusable && e._firstDiv.focus())))
                }
            }),
            this.listBox && this.listBox.content && this.addHandler(this.listBox.content, "click", function(t) {
                if (!e.disabled) {
                    if (e.listBox.itemswrapper && t.target === e.listBox.itemswrapper[0])
                        return !0;
                    e.renderSelection("mouse"),
                    e.touch || e.ishiding || e.checkboxes || (e.hideListBox(),
                    e._firstDiv && e.focusable && e._firstDiv.focus()),
                    e.keyboardSelection || (!1 === e._kbnavigated && (e.tempSelectedIndex != e.selectedIndex && e._raiseEvent("4", {
                        index: e.selectedIndex,
                        type: "mouse",
                        item: e.getItem(e.selectedIndex)
                    }),
                    e._kbnavigated = !0),
                    null == e._oldSelectedInd && (e._oldSelectedIndx = e.selectedIndex),
                    e.selectedIndex != e._oldSelectedIndx && (e._raiseEvent("2", {
                        index: e.selectedIndex,
                        type: "keyboard",
                        item: e.getItem(e.selectedIndex)
                    }),
                    e._oldSelectedIndx = e.selectedIndex))
                }
            }),
            this.addHandler(this.host, "focus", function(t) {
                "simple" !== e.renderMode && (e.host.addClass(e.toThemeProperty("jqx-dropdownlist-state-focus")),
                e.host.addClass(e.toThemeProperty("jqx-fill-state-focus"))),
                e.bar.addClass("focused"),
                e.label.addClass("focused")
            }),
            this.addHandler(this.host, "blur", function() {
                "simple" !== e.renderMode && (e.host.removeClass(e.toThemeProperty("jqx-dropdownlist-state-focus")),
                e.host.removeClass(e.toThemeProperty("jqx-fill-state-focus"))),
                e.bar.removeClass("focused"),
                e.label.removeClass("focused")
            }),
            this.addHandler(this._firstDiv, "focus", function(t) {
                "simple" !== e.renderMode && (e.host.addClass(e.toThemeProperty("jqx-dropdownlist-state-focus")),
                e.host.addClass(e.toThemeProperty("jqx-fill-state-focus"))),
                e.bar.addClass("focused"),
                e.label.addClass("focused")
            }),
            this.addHandler(this._firstDiv, "blur", function() {
                "simple" !== e.renderMode && (e.host.removeClass(e.toThemeProperty("jqx-dropdownlist-state-focus")),
                e.host.removeClass(e.toThemeProperty("jqx-fill-state-focus"))),
                e.bar.removeClass("focused"),
                e.label.removeClass("focused")
            })
        },
        removeHandlers: function() {
            var e = "mousedown";
            this.touch && (e = i.jqx.mobile.getTouchEventName("touchstart")),
            this.removeHandler(this.dropdownlistWrapper, e),
            this.listBox && this.listBox.content && this.removeHandler(this.listBox.content, "click"),
            this.removeHandler(this.host, "loadContent"),
            this.removeHandler(this.listBoxContainer, "checkChange"),
            this.removeHandler(this.host, "keydown"),
            this.removeHandler(this.host, "focus"),
            this.removeHandler(this.host, "blur"),
            this.removeHandler(this._firstDiv, "focus"),
            this.removeHandler(this._firstDiv, "blur"),
            this.removeHandler(this.host, "mouseenter"),
            this.removeHandler(this.host, "mouseleave"),
            this.removeHandler(i(document), "mousemove." + this.id)
        },
        getItem: function(e) {
            return this.listBox.getItem(e)
        },
        getItemByValue: function(e) {
            return this.listBox.getItemByValue(e)
        },
        selectItem: function(e) {
            null != this.listBox && (this.listBox.selectItem(e),
            this.selectedIndex = this.listBox.selectedIndex,
            this.renderSelection("mouse"))
        },
        unselectItem: function(e) {
            null != this.listBox && (this.listBox.unselectItem(e),
            this.renderSelection("mouse"))
        },
        checkItem: function(e) {
            null != this.listBox && this.listBox.checkItem(e)
        },
        uncheckItem: function(e) {
            null != this.listBox && this.listBox.uncheckItem(e)
        },
        indeterminateItem: function(e) {
            null != this.listBox && this.listBox.indeterminateItem(e)
        },
        renderSelection: function() {
            if (null != this.listBox) {
                this.height && -1 != this.height.toString().indexOf("%") && this._arrange();
                var e = this.listBox.visibleItems[this.listBox.selectedIndex];
                if (this.filterable && -1 == this.listBox.selectedIndex)
                    for (var t in this.listBox.selectedValues) {
                        var r = this.listBox.selectedValues[t]
                          , s = this.listBox.getItemByValue(r);
                        s && (e = s)
                    }
                if (this.checkboxes) {
                    var n = this.getCheckedItems();
                    e = null != n && n.length > 0 ? n[0] : null
                }
                if (this.hint && (this.label && (this.label[0].innerHTML = this.placeHolder),
                null != e ? this.element.setAttribute("hint", !0) : this.element.removeAttribute("hint")),
                this.bar.css("top", this.host.height()),
                null == e) {
                    var o;
                    (o = i('<span unselectable="on" style="color: inherit; border: none; background-color: transparent;"></span>')).appendTo(i(document.body)),
                    o.addClass(this.toThemeProperty("jqx-widget")),
                    o.addClass(this.toThemeProperty("jqx-listitem-state-normal")),
                    o.addClass(this.toThemeProperty("jqx-item")),
                    i.jqx.utilities.html(o, this.placeHolder),
                    this.isMaterialized() && !this.element.getAttribute("default-placeholder") && this.hint && (o[0].innerHTML = "",
                    this.label && (this.label[0].innerHTML = this.placeHolder));
                    var a = this.dropdownlistContent.css("padding-top")
                      , l = this.dropdownlistContent.css("padding-bottom");
                    o.css("padding-top", a),
                    o.css("padding-bottom", l);
                    var d = o.outerHeight();
                    o.remove(),
                    o.removeClass(),
                    i.jqx.utilities.html(this.dropdownlistContent, o);
                    var h = this.host.height();
                    return null != this.height && null != this.height && -1 === this.height.toString().indexOf("%") && (h = parseInt(this.height)),
                    (u = parseInt((parseInt(h) - parseInt(d)) / 2)) > 0 && (this.dropdownlistContent.css("margin-top", u + "px"),
                    this.dropdownlistContent.css("margin-bottom", u + "px")),
                    this.selectionRenderer ? (i.jqx.utilities.html(this.dropdownlistContent, this.selectionRenderer(o, -1, "", "")),
                    this.dropdownlistContent.css("margin-top", "0px"),
                    this.dropdownlistContent.css("margin-bottom", "0px"),
                    this._updateInputSelection()) : this._updateInputSelection(),
                    this.selectedIndex = this.listBox.selectedIndex,
                    "auto" === this.width && this._arrange(),
                    void (this.focusable && this.isOpened() && this.focus())
                }
                this.selectedIndex = this.listBox.selectedIndex,
                (o = i(document.createElement("span")))[0].setAttribute("unselectable", "on");
                try {
                    o[0].style.color = "inherit"
                } catch (e) {}
                o[0].style.borderWidth = "0px",
                o[0].style.backgroundColor = "transparent",
                o.appendTo(i(document.body)),
                o.addClass(this.toThemeProperty("jqx-widget jqx-listitem-state-normal jqx-item"));
                var c = !1;
                try {
                    null != e.html && null != e.html && e.html.toString().length > 0 ? i.jqx.utilities.html(o, e.html) : null != e.label && null != e.label && e.label.toString().length > 0 ? i.jqx.utilities.html(o, e.label) : null === e.label || "" === e.label ? (c = !0,
                    i.jqx.utilities.html(o, "")) : null != e.value && null != e.value && e.value.toString().length > 0 ? i.jqx.utilities.html(o, e.value) : null != e.title && null != e.title && e.title.toString().length > 0 ? i.jqx.utilities.html(o, e.title) : "" != e.label && null != e.label || (c = !0,
                    i.jqx.utilities.html(o, ""))
                } catch (e) {}
                "" === (a = this.dropdownlistContent[0].style.paddingTop) && (a = "0px"),
                "" === (l = this.dropdownlistContent[0].style.paddingBottom) && (l = "0px"),
                o[0].style.paddingTop = a,
                o[0].style.paddingBottom = l,
                0 === (d = o.outerHeight()) && (d = 16),
                "" != e.label && null != e.label || !c || i.jqx.utilities.html(o, "");
                var u, p = this.width && this.width.toString().indexOf("%") <= 0;
                if (o.remove(),
                o.removeClass(),
                this.selectionRenderer)
                    i.jqx.utilities.html(this.dropdownlistContent, this.selectionRenderer(o, e.index, e.label, e.value)),
                    this.focusable && this.isOpened() && this.focus();
                else if (this.checkboxes) {
                    for (var f = this.getCheckedItems(), m = "", g = 0; g < f.length; g++)
                        g == f.length - 1 ? m += f[g].label : m += f[g].label + ",";
                    o.text(m),
                    p && o.css("max-width", this.host.width() - 30),
                    o.css("overflow", "hidden"),
                    o.css("display", "block"),
                    this.rtl || p && o.css("width", this.host.width() - 30),
                    o.css("text-overflow", "ellipsis"),
                    o.css("padding-bottom", 1 + parseInt(l)),
                    this.dropdownlistContent.html(o),
                    this.focusable && this.isOpened() && this.focus()
                } else {
                    var v = this.host.width() - this.arrowSize - 1;
                    this.width && "auto" !== this.width && (p && (this.rtl || o.css("max-width", v + "px")),
                    o[0].style.overflow = "hidden",
                    o[0].style.display = "block",
                    o[0].style.paddingTop = 1 + parseInt(l) + "px",
                    this.rtl || p && (v < 0 && (v = 0),
                    o[0].style.width = v + "px"),
                    o[0].style.textOverflow = "ellipsis"),
                    this.dropdownlistContent[0].innerHTML = o[0].innerHTML,
                    this.focusable && this.isOpened() && this.focus()
                }
                h = this.host.height(),
                null != this.height && null != this.height && -1 === this.height.toString().indexOf("%") && (h = parseInt(this.height)),
                (u = parseInt((parseInt(h) - parseInt(d)) / 2)) >= 0 && (this.dropdownlistContent[0].style.marginTop = u + "px",
                this.dropdownlistContent[0].style.marginBottom = u + "px"),
                this.selectionRenderer && (this.dropdownlistContent[0].style.marginTop = "0px",
                this.dropdownlistContent[0].style.marginBottom = "0px"),
                this.dropdownlistContent && this.input && this._updateInputSelection(),
                this.listBox && this.listBox._activeElement && i.jqx.aria(this, "aria-activedescendant", this.listBox._activeElement.id),
                "auto" === this.width && this._arrange()
            }
        },
        _updateInputSelection: function() {
            if (this.input) {
                var e = new Array;
                if (-1 == this.selectedIndex)
                    this.input.val("");
                else {
                    var t = this.getSelectedItem();
                    null != t ? (this.input.val(t.value),
                    e.push(t.value)) : this.input.val(this.dropdownlistContent.text())
                }
                if (this.checkboxes) {
                    var r = this.getCheckedItems()
                      , s = "";
                    if (null != r)
                        for (var n = 0; n < r.length; n++) {
                            var o = r[n].value;
                            null != o && (n == r.length - 1 ? s += o : s += o + ",",
                            e.push(o))
                        }
                    this.input.val(s)
                }
            }
            this.field && this.input && ("select" == this.field.nodeName.toLowerCase() ? i.each(this.field, function(t, r) {
                i(this).removeAttr("selected"),
                this.selected = e.indexOf(this.value) >= 0,
                this.selected && i(this).attr("selected", !0)
            }) : i.each(this.items, function(t, r) {
                i(this.originalItem.originalItem).removeAttr("data-selected"),
                this.selected = e.indexOf(this.value) >= 0,
                this.selected && i(this.originalItem.originalItem).attr("data-selected", !0)
            }))
        },
        setContent: function(e) {
            i.jqx.utilities.html(this.dropdownlistContent, e),
            this._updateInputSelection()
        },
        dataBind: function() {
            this.listBoxContainer.jqxListBox({
                source: this.source
            }),
            this.renderSelection("mouse"),
            null == this.source && this.clearSelection()
        },
        clear: function() {
            this.listBoxContainer.jqxListBox({
                source: null
            }),
            this.clearSelection()
        },
        clearSelection: function(e) {
            this.selectedIndex = -1,
            this._updateInputSelection(),
            this.listBox.clearSelection(),
            this.renderSelection(),
            this.selectionRenderer || this.hint || this.isMaterialized() || i.jqx.utilities.html(this.dropdownlistContent, this.placeHolder)
        },
        unselectIndex: function(e, t) {
            isNaN(e) || (this.listBox.unselectIndex(e, t),
            this.renderSelection())
        },
        selectIndex: function(e, t, i, r) {
            this.listBox.selectIndex(e, t, i, r, "api")
        },
        getSelectedIndex: function() {
            return this.selectedIndex
        },
        getSelectedItem: function() {
            return this.listBox.getVisibleItem(this.selectedIndex)
        },
        getCheckedItems: function() {
            return this.listBox.getCheckedItems()
        },
        checkIndex: function(e) {
            this.listBox.checkIndex(e)
        },
        uncheckIndex: function(e) {
            this.listBox.uncheckIndex(e)
        },
        indeterminateIndex: function(e) {
            this.listBox.indeterminateIndex(e)
        },
        checkAll: function() {
            this.listBox.checkAll(),
            this.renderSelection("mouse")
        },
        uncheckAll: function() {
            this.listBox.uncheckAll(),
            this.renderSelection("mouse")
        },
        addItem: function(e) {
            return this.listBox.addItem(e)
        },
        insertAt: function(e, t) {
            return null != e && this.listBox.insertAt(e, t)
        },
        removeAt: function(e) {
            var t = this.listBox.removeAt(e);
            return this.renderSelection("mouse"),
            t
        },
        removeItem: function(e) {
            var t = this.listBox.removeItem(e);
            return this.renderSelection("mouse"),
            t
        },
        updateItem: function(e, t) {
            var i = this.listBox.updateItem(e, t);
            return this.renderSelection("mouse"),
            i
        },
        updateAt: function(e, t) {
            var i = this.listBox.updateAt(e, t);
            return this.renderSelection("mouse"),
            i
        },
        ensureVisible: function(e) {
            return this.listBox.ensureVisible(e)
        },
        disableAt: function(e) {
            return this.listBox.disableAt(e)
        },
        enableAt: function(e) {
            return this.listBox.enableAt(e)
        },
        disableItem: function(e) {
            return this.listBox.disableItem(e)
        },
        enableItem: function(e) {
            return this.listBox.enableItem(e)
        },
        _findPos: function(e) {
            for (; e && ("hidden" == e.type || 1 != e.nodeType || i.expr.filters.hidden(e)); )
                e = e.nextSibling;
            var t = i(e).coord(!0);
            return [t.left, t.top]
        },
        testOffset: function(e, t, r) {
            var s = e.outerWidth()
              , n = e.outerHeight()
              , o = i(window).width() + i(window).scrollLeft()
              , a = i(window).height() + i(window).scrollTop();
            if (t.left + s > o && s > this.host.width()) {
                var l = this.host.coord().left
                  , d = s - this.host.width();
                t.left = l - d + 2
            }
            return t.left < 0 && (t.left = parseInt(this.host.coord().left) + "px"),
            t.top -= Math.min(t.top, t.top + n > a && a > n ? Math.abs(n + r + 22) : 0),
            t
        },
        open: function() {
            this.showListBox()
        },
        close: function() {
            this.hideListBox()
        },
        _getBodyOffset: function() {
            var e = 0
              , t = 0;
            return "0px" != i("body").css("border-top-width") && (e = parseInt(i("body").css("border-top-width")),
            isNaN(e) && (e = 0)),
            "0px" != i("body").css("border-left-width") && (t = parseInt(i("body").css("border-left-width")),
            isNaN(t) && (t = 0)),
            {
                left: t,
                top: e
            }
        },
        showListBox: function() {
            if (i.jqx.aria(this, "aria-expanded", !0),
            this.listBox._renderOnDemand && this.listBoxContainer.jqxListBox({
                _renderOnDemand: !1
            }),
            "auto" == this.dropDownWidth && null != this.width && this.width.indexOf && (-1 != this.width.indexOf("%") || -1 != this.width.indexOf("auto")) && this.listBox.host.width() != this.host.width()) {
                var e = this.element.offsetWidth;
                this.listBoxContainer.jqxListBox({
                    width: e
                }),
                this.container.width(parseInt(e) + 25)
            }
            "auto" == this.dropDownWidth && "0px" === this.host.css("border-left-width") && (e = this.element.offsetWidth,
            this.listBoxContainer.jqxListBox({
                width: e + 1
            }),
            this.container.width(parseInt(e) + 25));
            var t, r = this, s = this.listBoxContainer, n = this.listBox, o = (i(window).scrollTop(),
            i(window).scrollLeft(),
            parseInt(this._findPos(this.host[0])[1]) + parseInt(this.host.outerHeight()) - 1 + "px"), a = parseInt(Math.round(this.host.coord(!0).left));
            if (t = a + "px",
            "element" === this.dropDownContainer && (o = parseInt(this.host.outerHeight()) - 1 + "px",
            t = 0),
            null != this.listBox) {
                this.ishiding = !1,
                this.keyboardSelection || (this.listBox.selectIndex(this.selectedIndex),
                this.listBox.ensureVisible(this.selectedIndex)),
                this.tempSelectedIndex = this.selectedIndex,
                this.autoDropDownHeight && this.container.height(this.listBoxContainer.height() + 25),
                s.stop(),
                "simple" !== this.renderMode && (this.host.addClass(this.toThemeProperty("jqx-dropdownlist-state-selected")),
                this.host.addClass(this.toThemeProperty("jqx-fill-state-pressed")),
                "top" == this.dropDownVerticalAlignment ? this.arrow.addClass(this.toThemeProperty("jqx-icon-arrow-up-selected")) : this.arrow.addClass(this.toThemeProperty("jqx-icon-arrow-down-selected"))),
                this.container.css("left", t),
                this.container.css("top", o),
                n._arrange();
                var l = !1;
                if ("right" == this.dropDownHorizontalAlignment || this.rtl) {
                    var d = this.container.outerWidth()
                      , h = -2 + Math.abs(d - this.host.width());
                    d > this.host.width() ? this.container.css("left", 25 + parseInt(Math.round(a)) - h + "px") : this.container.css("left", 25 + parseInt(Math.round(a)) + h + "px")
                }
                if ("top" == this.dropDownVerticalAlignment) {
                    var c = s.height();
                    l = !0,
                    s.css("top", 23),
                    s.addClass(this.toThemeProperty("jqx-popup-up"));
                    var u = parseInt(this.host.outerHeight())
                      , p = parseInt(o) - Math.abs(c + u + 23);
                    this.container.css("top", p)
                }
                if (this.enableBrowserBoundsDetection) {
                    var f = this.testOffset(s, {
                        left: parseInt(this.container.css("left")),
                        top: parseInt(o)
                    }, parseInt(this.host.outerHeight()));
                    parseInt(this.container.css("top")) != f.top ? (l = !0,
                    s.css("top", 23),
                    s.addClass(this.toThemeProperty("jqx-popup-up"))) : s.css("top", 0),
                    this.container.css("top", f.top),
                    parseInt(this.container.css("left")) != f.left && this.container.css("left", f.left)
                }
                if ("none" == this.animationType)
                    this.container.css("display", "block"),
                    i.data(document.body, "openedJQXListBoxParent", r),
                    i.data(document.body, "openedJQXListBox" + this.id, s),
                    s.css("margin-top", 0),
                    s.css("opacity", 1),
                    n._renderItems(),
                    r._raiseEvent("0", n);
                else if (this.container.css("display", "block"),
                r.isanimating = !0,
                "fade" == this.animationType)
                    s.css("margin-top", 0),
                    s.css("opacity", 0),
                    s.animate({
                        opacity: 1
                    }, this.openDelay, function() {
                        i.data(document.body, "openedJQXListBoxParent", r),
                        i.data(document.body, "openedJQXListBox" + r.id, s),
                        r.ishiding = !1,
                        r.isanimating = !1,
                        n._renderItems(),
                        r._raiseEvent("0", n)
                    });
                else {
                    s.css("opacity", 1);
                    var m = s.outerHeight();
                    l ? s.css("margin-top", m) : s.css("margin-top", -m),
                    s.animate({
                        "margin-top": 0
                    }, this.openDelay, function() {
                        i.data(document.body, "openedJQXListBoxParent", r),
                        i.data(document.body, "openedJQXListBox" + r.id, s),
                        r.ishiding = !1,
                        r.isanimating = !1,
                        n._renderItems(),
                        r._raiseEvent("0", n)
                    })
                }
                l ? (this.host.addClass(this.toThemeProperty("jqx-rc-t-expanded")),
                s.addClass(this.toThemeProperty("jqx-rc-b-expanded"))) : (this.host.addClass(this.toThemeProperty("jqx-rc-b-expanded")),
                s.addClass(this.toThemeProperty("jqx-rc-t-expanded"))),
                "simple" !== this.renderMode && (s.addClass(this.toThemeProperty("jqx-fill-state-focus")),
                this.host.addClass(this.toThemeProperty("jqx-dropdownlist-state-focus")),
                this.host.addClass(this.toThemeProperty("jqx-fill-state-focus"))),
                this.element.setAttribute("opened", !0)
            }
        },
        hideListBox: function() {
            i.jqx.aria(this, "aria-expanded", !1);
            var e = this.listBoxContainer
              , t = this.listBox
              , r = this.container
              , s = this;
            if (this.element.removeAttribute("opened"),
            i.data(document.body, "openedJQXListBox" + this.id, null),
            "none" == this.animationType)
                this.container.css("display", "none");
            else if (!s.ishiding) {
                e.stop();
                var n = e.outerHeight();
                e.css("margin-top", 0),
                s.isanimating = !0;
                var o = -n;
                parseInt(this.container.coord().top) < parseInt(this.host.coord().top) && (o = n),
                "fade" == this.animationType ? (e.css({
                    opacity: 1
                }),
                e.animate({
                    opacity: 0
                }, this.closeDelay, function() {
                    r.css("display", "none"),
                    s.isanimating = !1,
                    s.ishiding = !1
                })) : e.animate({
                    "margin-top": o
                }, this.closeDelay, function() {
                    r.css("display", "none"),
                    s.isanimating = !1,
                    s.ishiding = !1
                })
            }
            this.ishiding = !0,
            this.host.removeClass(this.toThemeProperty("jqx-dropdownlist-state-selected")),
            this.host.removeClass(this.toThemeProperty("jqx-fill-state-pressed")),
            this.arrow.removeClass(this.toThemeProperty("jqx-icon-arrow-down-selected")),
            this.arrow.removeClass(this.toThemeProperty("jqx-icon-arrow-up-selected")),
            this.host.removeClass(this.toThemeProperty("jqx-rc-b-expanded")),
            e.removeClass(this.toThemeProperty("jqx-rc-t-expanded")),
            this.host.removeClass(this.toThemeProperty("jqx-rc-t-expanded")),
            e.removeClass(this.toThemeProperty("jqx-rc-b-expanded")),
            e.removeClass(this.toThemeProperty("jqx-fill-state-focus")),
            this.host.removeClass(this.toThemeProperty("jqx-dropdownlist-state-focus")),
            this.host.removeClass(this.toThemeProperty("jqx-fill-state-focus")),
            this._raiseEvent("1", t)
        },
        closeOpenedListBox: function(e) {
            var t = e.data.me
              , r = i(e.target)
              , s = e.data.listbox;
            if (null == s)
                return !0;
            if (i(e.target).ischildof(e.data.me.host))
                return !0;
            if (!t.isOpened())
                return !0;
            if (i(e.target).ischildof(t.listBoxContainer))
                return !0;
            var n = !1;
            return i.each(r.parents(), function() {
                if ("undefined" != this.className && this.className.indexOf) {
                    if (-1 != this.className.indexOf("jqx-listbox"))
                        return n = !0,
                        !1;
                    if (-1 != this.className.indexOf("jqx-dropdownlist"))
                        return t.element.id == this.id && (n = !0),
                        !1
                }
            }),
            null != s && !n && t.isOpened() && t.hideListBox(),
            !0
        },
        clearFilter: function() {
            this.listBox.clearFilter()
        },
        loadFromSelect: function(e) {
            this.listBox.loadFromSelect(e)
        },
        refresh: function(e) {
            !0 !== e && (this._setSize(),
            this._arrange(),
            this.listBox && this.renderSelection())
        },
        _arrange: function() {
            var e = this
              , t = parseInt(e.host.width())
              , i = parseInt(e.host.height())
              , r = (e.arrowSize,
            e.arrowSize)
              , s = t - r - 6;
            if (s > 0 && "auto" !== e.width ? e.dropdownlistContent[0].style.width = s + "px" : s <= 0 && (e.dropdownlistContent[0].style.width = "0px"),
            "auto" === e.width && (e.dropdownlistContent.css("width", "auto"),
            (t = 2 + e.dropdownlistContent.width() + r + 6) < 47 && (t = 47),
            e.host.width(t)),
            e.dropdownlistContent[0].style.height = i + "px",
            e.dropdownlistContent[0].style.left = "0px",
            e.dropdownlistContent[0].style.top = "0px",
            e.dropdownlistArrow[0].style.width = r + "px",
            e.width && e.width.toString().indexOf("%") >= 0) {
                var n = 100 * r / t
                  , o = 100 * s / t;
                e.dropdownlistArrow[0].style.width = n + "%",
                e.dropdownlistContent[0].style.width = o + "%"
            }
            e.dropdownlistArrow[0].style.height = i + "px",
            e.rtl && (e.dropdownlistArrow.css("float", "left"),
            e.dropdownlistContent.css("float", "right"))
        },
        destroy: function() {
            i.jqx.utilities.resize(this.host, null, !0),
            this.removeHandler(this.listBoxContainer, "select"),
            this.removeHandler(this.listBoxContainer, "unselect"),
            this.removeHandler(this.listBoxContainer, "change"),
            this.removeHandler(this.dropdownlistWrapper, "selectstart"),
            this.removeHandler(this.dropdownlistWrapper, "mousedown"),
            this.removeHandler(this.host, "keydown"),
            this.removeHandler(this.listBoxContainer, "select"),
            this.removeHandler(this.listBox.content, "click"),
            this.removeHandler(this.listBoxContainer, "bindingComplete"),
            this.host.parents() && this.removeHandler(this.host.parents(), "scroll.dropdownlist" + this.element.id),
            this.removeHandlers(),
            this.listBoxContainer.jqxListBox("destroy"),
            this.listBoxContainer.remove(),
            this.host.removeClass(),
            this.removeHandler(i(document), "mousedown." + this.id, this.closeOpenedListBox),
            this.touch && this.removeHandler(i(document), i.jqx.mobile.getTouchEventName("touchstart") + "." + this.id),
            this.dropdownlistArrow.remove(),
            delete this.dropdownlistArrow,
            delete this.dropdownlistWrapper,
            delete this.listBoxContainer,
            delete this.input,
            delete this.arrow,
            delete this.dropdownlistContent,
            delete this.listBox,
            delete this._firstDiv,
            this.container.remove(),
            delete this.container;
            var e = i.data(this.element, "jqxDropDownList");
            e && delete e.instance,
            this.host.removeData(),
            this.host.remove(),
            delete this.comboStructure,
            delete this.host,
            delete this.element
        },
        _raiseEvent: function(e, t) {
            null == t && (t = {
                owner: null
            });
            var r = this.events[e];
            args = t,
            args.owner = this;
            var s = new i.Event(r);
            return s.owner = this,
            2 != e && 3 != e && 4 != e && 5 != e && 6 != e && 7 != e && 8 != e && 9 != e || (s.args = t),
            this.host.trigger(s)
        },
        propertiesChangedHandler: function(e, t, i) {
            if (i.width && i.height && 2 == Object.keys(i).length) {
                if (e._setSize(),
                "width" == t && "auto" == e.dropDownWidth) {
                    var r = e.host.width();
                    e.listBoxContainer.jqxListBox({
                        width: r
                    }),
                    e.container.width(parseInt(r) + 25)
                }
                e._arrange(),
                e.close()
            }
        },
        propertyChangedHandler: function(e, t, r, s) {
            if (null != e.isInitialized && 0 != e.isInitialized && !(e.batchUpdate && e.batchUpdate.width && e.batchUpdate.height && 2 == Object.keys(e.batchUpdate).length)) {
                if ("template" == t && (e.listBoxContainer.removeClass(e.toThemeProperty("jqx-" + r + "-item")),
                e.listBoxContainer.addClass(e.toThemeProperty("jqx-" + e.template + "-item")),
                e.host.removeClass(e.toThemeProperty("jqx-" + r)),
                e.host.addClass(e.toThemeProperty("jqx-" + e.template))),
                "dropDownVerticalAlignment" == t && (e.close(),
                e.arrow.removeClass(e.toThemeProperty("jqx-icon-arrow-up")),
                e.arrow.removeClass(e.toThemeProperty("jqx-icon-arrow-down")),
                "top" == e.dropDownVerticalAlignment ? e.arrow.addClass(e.toThemeProperty("jqx-icon-arrow-up")) : e.arrow.addClass(e.toThemeProperty("jqx-icon-arrow-down")),
                e.listBoxContainer.css("top", 0),
                e.listBoxContainer.removeClass(this.toThemeProperty("jqx-popup-up"))),
                "autoItemsHeight" == t && e.listBoxContainer.jqxListBox({
                    autoItemsHeight: s
                }),
                "filterable" == t && e.listBoxContainer.jqxListBox({
                    filterable: s
                }),
                "filterHeight" == t && e.listBoxContainer.jqxListBox({
                    filterHeight: s
                }),
                "filterPlaceHolder" == t && e.listBoxContainer.jqxListBox({
                    filterPlaceHolder: s
                }),
                "filterDelay" == t && e.listBoxContainer.jqxListBox({
                    filterDelay: s
                }),
                "enableSelection" == t && e.listBoxContainer.jqxListBox({
                    enableSelection: s
                }),
                "enableHover" == t && e.listBoxContainer.jqxListBox({
                    enableHover: s
                }),
                "autoOpen" == t && e._updateHandlers(),
                "emptyString" == t && (e.listBox.emptyString = e.emptyString),
                "itemHeight" == t && e.listBoxContainer.jqxListBox({
                    itemHeight: s
                }),
                "renderer" == t && e.listBoxContainer.jqxListBox({
                    renderer: s
                }),
                "rtl" == t && (s ? (e.dropdownlistArrow.css("float", "left"),
                e.dropdownlistContent.css("float", "right")) : (e.dropdownlistArrow.css("float", "right"),
                e.dropdownlistContent.css("float", "left")),
                e.listBoxContainer.jqxListBox({
                    rtl: e.rtl
                })),
                "source" == t && (e.listBoxContainer.jqxListBox({
                    source: e.source
                }),
                e.listBox.selectedIndex = -1,
                e.listBox.selectIndex(this.selectedIndex),
                e.renderSelection(),
                null == s && e.clear()),
                "displayMember" != t && "valueMember" != t || (e.listBoxContainer.jqxListBox({
                    displayMember: e.displayMember,
                    valueMember: e.valueMember
                }),
                e.renderSelection()),
                "placeHolder" == t && e.renderSelection(),
                "theme" == t && null != s && (e.listBoxContainer.jqxListBox({
                    theme: s
                }),
                e.listBoxContainer.addClass(e.toThemeProperty("jqx-popup")),
                i.jqx.utilities.setTheme(r, s, e.host)),
                "autoDropDownHeight" == t && (e.listBoxContainer.jqxListBox({
                    autoHeight: e.autoDropDownHeight
                }),
                e.autoDropDownHeight ? e.container.height(e.listBoxContainer.height() + 25) : (e.listBoxContainer.jqxListBox({
                    height: e.dropDownHeight
                }),
                e.container.height(parseInt(e.dropDownHeight) + 25)),
                e.listBox._arrange(),
                e.listBox._updatescrollbars()),
                "searchMode" == t && e.listBoxContainer.jqxListBox({
                    searchMode: e.searchMode
                }),
                "incrementalSearch" == t && e.listBoxContainer.jqxListBox({
                    incrementalSearch: e.incrementalSearch
                }),
                "incrementalSearchDelay" == t && e.listBoxContainer.jqxListBox({
                    incrementalSearchDelay: e.incrementalSearchDelay
                }),
                "dropDownHeight" == t && (e.autoDropDownHeight || (e.listBoxContainer.jqxListBox({
                    height: e.dropDownHeight
                }),
                e.container.height(parseInt(e.dropDownHeight) + 25))),
                "dropDownWidth" == t || "scrollBarSize" == t) {
                    var n = e.width;
                    "auto" != e.dropDownWidth && (n = e.dropDownWidth),
                    e.listBoxContainer.jqxListBox({
                        width: n,
                        scrollBarSize: e.scrollBarSize
                    }),
                    e.container.width(parseInt(n) + 25)
                }
                "width" != t && "height" != t || s == r || (this.refresh(),
                "width" == t && "auto" == e.dropDownWidth && (n = 2 + e.host.width(),
                e.listBoxContainer.jqxListBox({
                    width: n
                }),
                e.container.width(parseInt(n) + 25)),
                e.close()),
                "checkboxes" == t && e.listBoxContainer.jqxListBox({
                    checkboxes: e.checkboxes
                }),
                "selectedIndex" == t && null != e.listBox && (e.listBox.selectIndex(parseInt(s)),
                e.renderSelection())
            }
        }
    })
}
, function(e, t) {
    (function(t) {
        e.exports = t
    }
    ).call(this, {})
}
, function(e, t) {
    var i, r;
    i = jqxBaseFramework,
    r = function() {
        var e, t, n, o, a, l = {};
        function d(r, s, n, o, a, l, d) {
            return this.hierarchy = a,
            this.exportFormat = l,
            this.filename = d,
            r.beginFile(d),
            function(e) {
                var r = !0;
                i.each(t, function() {
                    if (this.hidden)
                        return r = !1,
                        !1
                }),
                e.beginHeader(r);
                var s = 0;
                for (var n in t) {
                    t[n].columnsDataFields && (n = t[n].columnsDataFields[s].displayfield);
                    var o = c(n, t[n]);
                    e.appendHeaderCell(t[n], n, o, r, s),
                    s++
                }
                e.endHeader(r)
            }(r),
            function(t) {
                if (t.beginBody(),
                this.hierarchy) {
                    var i = function(e) {
                        for (var r = 0; r < e.length; r += 1)
                            void 0 !== e[r] && (t.beginRow(e[r].level),
                            h(t, e[r], r, !0),
                            e[r].records && (t.beginRows(e[r].level),
                            i(e[r].records),
                            t.endRows(e[r].level)),
                            t.endRow(e[r].level))
                    };
                    return i(e),
                    void t.endBody()
                }
                for (var r = 0; r < e.length; r += 1)
                    void 0 !== e[r] && h(t, e[r], r);
                t.endBody()
            }(r),
            r.endFile(d),
            r.getFile()
        }
        function h(e, r, s, n) {
            var o;
            1 != n && e.beginRow();
            var a = 0;
            for (var l in t) {
                if (t[l].columnsDataFields && (l = t[l].columnsDataFields[a].displayfield),
                o = p(s, l)) {
                    if (null != o.level && o.index - 1 > r.level && o.index - 1 < o.maxLevel) {
                        a++;
                        continue
                    }
                    null != o.maxLevel && o.index - 1 == o.maxLevel && ((o = i.extend({}, o)).merge = o.maxLevel - r.level - 1)
                }
                if (null != r.level && null != r.label && ("xml" === this.exportFormat || "json" === this.exportFormat)) {
                    var d = {
                        text: "group"
                    };
                    e.appendBodyCell(r.label, d, o, r, a, "group");
                    break
                }
                r.hasOwnProperty(l) ? e.appendBodyCell(r[l], t[l], o, r, a) : e.appendBodyCell("", t[l], o, r, a),
                a++
            }
            1 != n && e.endRow()
        }
        function c(e, t) {
            if (t.style)
                return n[t.style];
            var i = u();
            return i.length > 0 ? i[0].style : null
        }
        function u() {
            return a || (a = new Array,
            i.each(n, function(e, t) {
                a[a.length] = {
                    name: e,
                    style: t
                }
            })),
            a
        }
        function p(e, i) {
            var r = t[i];
            if (r) {
                if (r.customCellStyles) {
                    var s = r.customCellStyles[e];
                    if (s)
                        return n[s]
                }
                if (r.cellStyle)
                    return r.cellAltStyle ? 0 == e % 2 ? n[r.cellStyle] : n[r.cellAltStyle] : n[r.cellStyle];
                var o = u();
                if (o.length > 0)
                    return o[e % (o.length - 1) + 1].style
            }
            return null
        }
        function f(e, t, i) {
            var r = document.createElement("input");
            return r.name = t,
            r.value = e,
            r.type = "hidden",
            i.appendChild(r),
            r
        }
        function m(e, t, i, r, s) {
            var n = document.createElement("form");
            return f(e, "filename", n),
            f(t, "format", n),
            function(e, t, i) {
                var r = document.createElement("textarea");
                r.name = t,
                r.value = e,
                i.appendChild(r)
            }(i, "content", n),
            null != r && "" != r || (r = window && window.location.toString().indexOf("jqwidgets.com") >= 0 ? "https://jqwidgets.com/export_server/dataexport.php" : "http://jquerygrid.net/export_server/dataexport.php"),
            n.action = r,
            n.method = "post",
            s && (n.acceptCharset = s),
            document.body.appendChild(n),
            n
        }
        return (o = function(o, a, h, c, u, p) {
            if (!(this instanceof r))
                return new r(o,a,h,u,p);
            e = o,
            t = a,
            n = h,
            this.exportTo = function(e, t, r, n) {
                e = e.toString().toLowerCase();
                var o = l[e];
                if (void 0 === o)
                    throw "You can't export to " + e + " format.";
                if ("pdf" === e && null == n) {
                    var a = this.exportTo(e, t, e, "pdf");
                    i.jqx.pdfExport || (i.jqx.pdfExport = {
                        orientation: "portrait",
                        paperSize: "a4"
                    });
                    var h = new s(i.jqx.pdfExport.orientation,"pt",i.jqx.pdfExport.paperSize);
                    h.cellInitialize();
                    var c = i(a).find("th")
                      , u = i(a).find("tr")
                      , p = 0;
                    h.setFontSize(9.75);
                    var f = 595;
                    switch (i.jqx.pdfExport.paperSize) {
                    case "legal":
                        f = 612;
                        "portrait" !== i.jqx.pdfExport.orientation && (f = 1008);
                        break;
                    case "letter":
                        f = 612;
                        "portrait" !== i.jqx.pdfExport.orientation && (f = 792);
                        break;
                    case "a3":
                        f = 841;
                        "portrait" !== i.jqx.pdfExport.orientation && (f = 1190);
                        break;
                    case "a4":
                        f = 595;
                        "portrait" !== i.jqx.pdfExport.orientation && (f = 842);
                        break;
                    case "a5":
                        f = 420;
                        "portrait" !== i.jqx.pdfExport.orientation && (f = 595)
                    }
                    f -= 20;
                    var m = 0
                      , g = [];
                    if (i.each(c, function(e) {
                        var t = parseInt(this.style.width);
                        isNaN(t) && (t = 25);
                        var i = 72 * t / 96;
                        g[e] = i,
                        m += i
                    }),
                    m > f && i.each(g, function(e) {
                        g[e] = g[e] / m * 100,
                        g[e] = g[e] * f / 100
                    }),
                    i.each(c, function(e) {
                        var t, r = g[e], s = h.getTextDimensions(i(this).html()), n = i(this).html();
                        s.w + 3 > r && (n = (t = h.splitTextToSize(n, r - 3)[0]).length > 3 ? t.substring(0, t.length - 3) + "..." : t.substring(0, 1) + "...",
                        (t = h.splitTextToSize(n, r - 3)[0]) != n && (n = t));
                        h.cell(10, 10, r, 18.75, n, p)
                    }),
                    p++,
                    i.each(u, function(e) {
                        if (0 === e)
                            return !0;
                        var t = i(this).children();
                        if (t.length > c.length) {
                            for (var r = t.length - c.length, s = "", n = g[0], o = 18.75, a = 0; a <= r; a++) {
                                var l = t[a].innerHTML;
                                "+" !== l && "-" !== l || (l += " "),
                                "&nbsp;" === l && (l = "   "),
                                s += l
                            }
                            if (h.getTextDimensions(s).w + 3 > n)
                                s = (d = h.splitTextToSize(s, n - 3)[0]).length > 3 ? d.substring(0, d.length - 3) + "..." : d.substring(0, 1) + "...",
                                (d = h.splitTextToSize(s, n - 3)[0]) != s && (s = d);
                            h.cell(10, 10, n, o, s, p);
                            for (a = r + 1; a < t.length; a++) {
                                var d;
                                n = g[e = a - r],
                                o = 18.75,
                                s = i(t[a]).html();
                                if (h.getTextDimensions(i(t[a]).html()).w + 3 > n)
                                    s = (d = h.splitTextToSize(s, n - 3)[0]).length > 3 ? d.substring(0, d.length - 3) + "..." : d.substring(0, 1) + "...",
                                    (d = h.splitTextToSize(s, n - 3)[0]) != s && (s = d);
                                h.cell(10, 10, n, o, s, p)
                            }
                            return p++,
                            !0
                        }
                        i.each(t, function(e) {
                            var t, r = g[e], s = i(this).html();
                            h.getTextDimensions(i(this).html()).w + 3 > r && (s = (t = h.splitTextToSize(s, r - 3)[0]).length > 3 ? t.substring(0, t.length - 3) + "..." : t.substring(0, 1) + "...",
                            (t = h.splitTextToSize(s, r - 3)[0]) != s && (s = t));
                            h.cell(10, 10, r, 18.75, s, p)
                        }),
                        p++
                    }),
                    i.jqx.browser.msie && i.jqx.browser.version < 10)
                        throw new Error("PDF export requires a browser with HTML5 support");
                    return h
                }
                return d(o, 0, 0, 0, t, r, n)
            }
            ,
            this.exportToFile = function(e, t, r, n, o) {
                if ("pdf" !== e) {
                    var a = m(t, e, this.exportTo(e, o, e, t), r, n);
                    a.submit(),
                    document.body.removeChild(a)
                } else {
                    var l = this.exportTo(e, o, e, t);
                    i.jqx.pdfExport || (i.jqx.pdfExport = {
                        orientation: "portrait",
                        paperSize: "a4"
                    });
                    var d = new s(i.jqx.pdfExport.orientation,"pt",i.jqx.pdfExport.paperSize);
                    "utf-8" != n && "UTF-8" != n || d.setFont("courier", "normal"),
                    d.cellInitialize();
                    var h = i(l).find("th")
                      , c = i(l).find("tr")
                      , u = 0;
                    d.setFontSize(9.75);
                    var p = 595;
                    switch (i.jqx.pdfExport.paperSize) {
                    case "legal":
                        p = 612;
                        "portrait" !== i.jqx.pdfExport.orientation && (p = 1008);
                        break;
                    case "letter":
                        p = 612;
                        "portrait" !== i.jqx.pdfExport.orientation && (p = 792);
                        break;
                    case "a3":
                        p = 841;
                        "portrait" !== i.jqx.pdfExport.orientation && (p = 1190);
                        break;
                    case "a4":
                        p = 595;
                        "portrait" !== i.jqx.pdfExport.orientation && (p = 842);
                        break;
                    case "a5":
                        p = 420;
                        "portrait" !== i.jqx.pdfExport.orientation && (p = 595)
                    }
                    p -= 20;
                    var f = 0
                      , g = [];
                    if (i.each(h, function(e) {
                        var t = parseInt(this.style.width);
                        isNaN(t) && (t = 25);
                        var i = 72 * t / 96;
                        g[e] = i,
                        f += i
                    }),
                    f > p && i.each(g, function(e) {
                        g[e] = g[e] / f * 100,
                        g[e] = g[e] * p / 100
                    }),
                    i.each(h, function(e) {
                        var t, r = g[e], s = d.getTextDimensions(i(this).html()), n = i(this).html();
                        s.w + 3 > r && (n = (t = d.splitTextToSize(n, r - 3)[0]).length > 3 ? t.substring(0, t.length - 3) + "..." : t.substring(0, 1) + "...",
                        (t = d.splitTextToSize(n, r - 3)[0]) != n && (n = t));
                        d.cell(10, 10, r, 18.75, n, u)
                    }),
                    u++,
                    i.each(c, function(e) {
                        if (0 === e)
                            return !0;
                        var t = i(this).children();
                        if (t.length > h.length) {
                            for (var r = t.length - h.length, s = "", n = g[0], o = 18.75, a = 0; a <= r; a++) {
                                var l = t[a].innerHTML;
                                "+" !== l && "-" !== l || (l += " "),
                                "&nbsp;" === l && (l = "   "),
                                s += l
                            }
                            if (d.getTextDimensions(s).w + 3 > n)
                                s = (c = d.splitTextToSize(s, n - 3)[0]).length > 3 ? c.substring(0, c.length - 3) + "..." : c.substring(0, 1) + "...",
                                (c = d.splitTextToSize(s, n - 3)[0]) != s && (s = c);
                            d.cell(10, 10, n, o, s, u);
                            for (a = r + 1; a < t.length; a++) {
                                var c;
                                n = g[e = a - r],
                                o = 18.75;
                                if ("&nbsp;" === (s = i(t[a]).html()) && (s = "   "),
                                d.getTextDimensions(i(t[a]).html()).w + 3 > n)
                                    s = (c = d.splitTextToSize(s, n - 3)[0]).length > 3 ? c.substring(0, c.length - 3) + "..." : c.substring(0, 1) + "...",
                                    (c = d.splitTextToSize(s, n - 3)[0]) != s && (s = c);
                                d.cell(10, 10, n, o, s, u)
                            }
                            return u++,
                            !0
                        }
                        i.each(t, function(e) {
                            var t, r = g[e], s = i(this).html();
                            ("&nbsp;" === s && (s = "   "),
                            d.getTextDimensions(i(this).html()).w + 3 > r) && (s = (t = d.splitTextToSize(s, r - 3)[0]).length > 3 ? t.substring(0, t.length - 3) + "..." : t.substring(0, 1) + "...",
                            (t = d.splitTextToSize(s, r - 3)[0]) != s && (s = t));
                            d.cell(10, 10, r, 18.75, s, u)
                        }),
                        u++
                    }),
                    i.jqx.browser.msie && i.jqx.browser.version < 10)
                        throw new Error("PDF export requires a browser with HTML5 support");
                    d.save(t + ".pdf")
                }
            }
            ,
            this.exportToLocalFile = function(e, t, i, r) {
                var s = this.exportTo(e, i, r);
                document.location.href = "data:application/octet-stream;filename=" + t + "," + encodeURIComponent(s)
            }
        }
        ).extend = function(e, t) {
            if (!(t instanceof i.jqx.dataAdapter.DataExportModuleBase))
                throw "The module " + e + " is not instance of DataExportModuleBase.";
            l[e] = t
        }
        ,
        o
    }(),
    i.jqx.dataAdapter.ArrayExporter = r,
    function(e) {
        e.jqx.dataAdapter.DataExportModuleBase = function() {
            this.formatData = function(t, i, r, s) {
                if ("date" === i) {
                    var n = "";
                    if ("string" == typeof t && (t = n = e.jqx.dataFormat.tryparsedate(t)),
                    "" === t || null === t)
                        return "";
                    if ((n = e.jqx.dataFormat.formatdate(t, r, s)) && "NaN" == n.toString() || null == n)
                        return "";
                    t = n
                } else if ("number" === i || "float" === i || "int" === i || "integer" == i) {
                    if ("" === t || null === t)
                        return "";
                    if (!isNaN(new Number(t))) {
                        var o = e.jqx.dataFormat.formatnumber(t, r, s);
                        if ("NaN" == o.toString())
                            return "";
                        t = o
                    }
                } else
                    t = t;
                return null === t ? "" : t
            }
            ,
            this.getFormat = function(e) {
                var t, i = e ? e.formatString : "", r = e ? e.localization : "";
                return "number" != (t = e ? e.type : "string") && "float" != t || i || (i = "f2"),
                "int" != t && "integer" != t || i || (i = "n0"),
                "date" == t && (i || (i = "d")),
                {
                    type: t,
                    formatString: i,
                    localization: r
                }
            }
            ,
            this.beginFile = function() {
                throw "Not implemented!"
            }
            ,
            this.beginHeader = function() {
                throw "Not implemented!"
            }
            ,
            this.appendHeaderCell = function() {
                throw "Not implemented!"
            }
            ,
            this.endHeader = function() {
                throw "Not implemented!"
            }
            ,
            this.beginBody = function() {
                throw "Not implemented!"
            }
            ,
            this.beginRow = function() {
                throw "Not implemented!"
            }
            ,
            this.beginRows = function() {
                throw "Not implemented!"
            }
            ,
            this.endRows = function() {
                throw "Not implemented!"
            }
            ,
            this.appendBodyCell = function() {
                throw "Not implemented!"
            }
            ,
            this.endRow = function() {
                throw "Not implemented!"
            }
            ,
            this.endBody = function() {
                throw "Not implemented!"
            }
            ,
            this.endFile = function() {
                throw "Not implemented!"
            }
            ,
            this.getFile = function() {
                throw "Not implemented!"
            }
        }
    }(jqxBaseFramework),
    function(e) {
        var t = function(e) {
            var t, i, r = 0, s = this;
            function n(i, r) {
                i = function(e, t) {
                    if (t) {
                        var i = s.getFormat(t);
                        e = s.formatData(e, i.type, i.formatString, i.localization)
                    }
                    return e = '"' + e + '"'
                }(i, r),
                t += i + e
            }
            this.beginFile = function() {
                t = ""
            }
            ,
            this.beginHeader = function() {}
            ,
            this.appendHeaderCell = function(e, t, r, s, o) {
                if (r && null != r.level) {
                    if (o < r.maxLevel)
                        return;
                    if (o === r.maxLevel) {
                        s && n(e.text);
                        for (var a = 0; a < r.maxLevel; a++)
                            n("");
                        return
                    }
                }
                i = s,
                s && n(e.text)
            }
            ,
            this.endHeader = function() {
                this.endRow()
            }
            ,
            this.beginBody = function() {
                r = 0
            }
            ,
            this.beginRow = function() {
                (r > 0 || 0 == r && i) && (t += "\n"),
                r++
            }
            ,
            this.appendBodyCell = function(e, t, i, r, s) {
                if (i && null != i.maxLevel && s === i.maxLevel) {
                    n(e, t);
                    for (var o = 0; o < i.maxLevel - r.level - 1; o++)
                        n("", t)
                } else
                    n(e, t)
            }
            ,
            this.endRow = function() {
                t = t.substring(0, t.length - 1)
            }
            ,
            this.endBody = function() {}
            ,
            this.endFile = function() {}
            ,
            this.getFile = function() {
                return t
            }
        };
        t.prototype = new e.jqx.dataAdapter.DataExportModuleBase;
        var i = function() {};
        i.prototype = new t(",");
        var r = function() {};
        r.prototype = new t("\t"),
        e.jqx.dataAdapter.ArrayExporter.extend("csv", new i),
        e.jqx.dataAdapter.ArrayExporter.extend("tsv", new r)
    }(jqxBaseFramework),
    function(e) {
        var t = function() {
            var e, t, i = !1, r = 0;
            function s(e) {
                var t = "";
                for (var r in e)
                    e.hasOwnProperty(r) && (i && "font-size" == r && (e[r] = "100%"),
                    t += r + ":" + e[r] + ";");
                return t
            }
            this.setPDF = function() {
                i = !0
            }
            ,
            this.beginFile = function(t) {
                e = i || null == t ? '<table style="empty-cells: show;" cellspacing="0" cellpadding="2">' : '<html>\n\t<head>\n\t\t<title></title>\n\t\t<meta http-equiv=Content-type content="text/html; charset=UTF-8">\n\t</head>\n\t<body>\n\t\t<table style="empty-cells: show;" cellspacing="0" cellpadding="2">'
            }
            ,
            this.beginHeader = function() {
                e += i ? "\n\t<thead><tr>" : "\n\t\t\t<thead>"
            }
            ,
            this.appendHeaderCell = function(r, n, o, a) {
                if (t = a,
                a)
                    if (i)
                        e += '\n\t\t\t\t<th style="' + s(o) + '">' + r.text + "</th>";
                    else {
                        if (o.disabled)
                            return;
                        o.merge ? r.width ? e += "\n\t\t\t\t<th colspan=" + (1 + o.merge) + ' style="width: ' + r.width + "px; " + s(o) + '">' + r.text + "</th>" : e += "\n\t\t\t\t<th colspan=" + (1 + o.merge) + ' style="' + s(o) + '">' + r.text + "</th>" : r.width ? e += '\n\t\t\t\t<th style="width: ' + r.width + "px; " + s(o) + '">' + r.text + "</th>" : e += '\n\t\t\t\t<th style="' + s(o) + '">' + r.text + "</th>"
                    }
            }
            ,
            this.endHeader = function() {
                e += i ? "\n\t</tr></thead>" : "\n\t\t\t</thead>"
            }
            ,
            this.beginBody = function() {
                e += i ? "\n\t<tbody>" : "\n\t\t\t<tbody>",
                r = 0
            }
            ,
            this.beginRow = function() {
                e += i ? "\n\t<tr>" : "\n\t\t\t\t<tr>",
                r++
            }
            ,
            this.appendBodyCell = function(n, o, a) {
                var l = this.getFormat(o);
                "" === n && (n = "&nbsp;"),
                i ? e += 1 != r || t ? '\n\t\t\t\t\t<td style="' + s(a) + '">' + this.formatData(n, l.type, l.formatString, l.localization) + "</td>" : '\n\t\t\t\t\t<td style="' + s(a) + ' border-top-width: 1px;">' + this.formatData(n, l.type, l.formatString, l.localization) + "</td>" : a.merge ? e += 1 != r || t ? "\n\t\t\t\t\t<td colspan=" + (1 + a.merge) + ' style="' + s(a) + '">' + this.formatData(n, l.type, l.formatString, l.localization) + "</td>" : "\n\t\t\t\t\t<td colspan=" + (1 + a.merge) + ' style="' + s(a) + ' border-top-width: 1px;">' + this.formatData(n, l.type, l.formatString, l.localization) + "</td>" : e += 1 != r || t ? '\n\t\t\t\t\t<td style="' + s(a) + '">' + this.formatData(n, l.type, l.formatString, l.localization) + "</td>" : '\n\t\t\t\t\t<td style="' + s(a) + ' border-top-width: 1px;">' + this.formatData(n, l.type, l.formatString, l.localization) + "</td>"
            }
            ,
            this.endRow = function() {
                e += i ? "\n\t</tr>" : "\n\t\t\t\t</tr>"
            }
            ,
            this.endBody = function() {
                e += i ? "\n\t</tbody>" : "\n\t\t\t</tbody>"
            }
            ,
            this.endFile = function(t) {
                e += i || null == t ? "\n</table>" : "\n\t\t</table>\n\t</body>\n</html>\n"
            }
            ,
            this.getFile = function() {
                return e
            }
        };
        t.prototype = new e.jqx.dataAdapter.DataExportModuleBase;
        var i = function() {};
        i.prototype = new t;
        var r = function() {};
        r.prototype = new t;
        var s = new r;
        e.jqx.dataAdapter.ArrayExporter.extend("html", new i),
        e.jqx.dataAdapter.ArrayExporter.extend("pdf", s)
    }(jqxBaseFramework),
    function(e) {
        var t = function() {
            var e, t, i, r, s, n, o = {
                style: "",
                stylesMap: {
                    font: {
                        color: "Color",
                        "font-family": "FontName",
                        "font-style": "Italic",
                        "font-weight": "Bold"
                    },
                    interior: {
                        "background-color": "Color",
                        background: "Color"
                    },
                    alignment: {
                        left: "Left",
                        center: "Center",
                        right: "Right"
                    }
                },
                startStyle: function(e) {
                    this.style += '\n\t\t<Style ss:ID="' + e + '" ss:Name="' + e + '">'
                },
                buildAlignment: function(e) {
                    if (e["text-align"]) {
                        var t = this.stylesMap.alignment[e["text-align"]];
                        t || (t = "Left");
                        var i = '\n\t\t\t<Alignment ss:Vertical="Bottom" ss:Horizontal="' + t + '"/>';
                        this.style += i
                    }
                },
                buildBorder: function(e) {
                    if (e["border-color"]) {
                        var t = "\n\t\t\t<Borders>";
                        t += '\n\t\t\t\t<Border ss:Position="Bottom" ss:LineStyle="Continuous" ss:Weight="1" ss:Color="' + e["border-color"] + '"/>',
                        t += '\n\t\t\t\t<Border ss:Position="Left" ss:LineStyle="Continuous" ss:Weight="1" ss:Color="' + e["border-color"] + '"/>',
                        t += '\n\t\t\t\t<Border ss:Position="Right" ss:LineStyle="Continuous" ss:Weight="1" ss:Color="' + e["border-color"] + '"/>',
                        t += '\n\t\t\t\t<Border ss:Position="Top" ss:LineStyle="Continuous" ss:Weight="1" ss:Color="' + e["border-color"] + '"/>',
                        t += "\n\t\t\t</Borders>",
                        this.style += t
                    }
                },
                buildFont: function(e) {
                    var t = this.stylesMap.font
                      , i = "\n\t\t\t<Font ";
                    for (var r in t)
                        void 0 !== e[r] && ("font-style" === r && "italic" === e[r].toString().toLowerCase() ? i += 'ss:Italic="1" ' : "font-weight" === r && "bold" === e[r].toString().toLowerCase() ? i += 'ss:Bold="1" ' : "color" === r && (i += "ss:" + t[r] + '="' + e[r] + '" '));
                    i += "/>",
                    this.style += i
                },
                buildInterior: function(e) {
                    var t = this.stylesMap.interior
                      , i = "\n\t\t\t<Interior "
                      , r = !1;
                    for (var s in t)
                        void 0 !== e[s] && (i += "ss:" + t[s] + '="' + e[s] + '" ',
                        r = !0);
                    r && (i += 'ss:Pattern="Solid"'),
                    i += "/>",
                    this.style += i
                },
                buildFormat: function(e) {
                    if ("number" == e.dataType || "float" == e.dataType || "int" == e.dataType || "integer" == e.dataType) {
                        var t = e.formatString;
                        "" == t || -1 != t.indexOf("n") || -1 != t.indexOf("N") ? this.style += '\n\t\t\t<NumberFormat ss:Format="0"/>' : "f" == t || "F" == t || "D" == t || -1 != t.indexOf("d") ? this.style += '\n\t\t\t<NumberFormat ss:Format="#,##0.00_);[Red](#,##0.00)"/>' : -1 != t.indexOf("p") || -1 != t.indexOf("P") ? this.style += '\n\t\t\t<NumberFormat ss:Format="Percent"/>' : -1 == t.indexOf("c") && -1 == t.indexOf("C") || (e.currencysymbol && 8364 == parseInt(e.currencysymbol.charCodeAt(0)) ? this.style += '\n\t\t\t<NumberFormat ss:Format="Euro Currency"/>' : this.style += '\n\t\t\t<NumberFormat ss:Format="Currency"/>')
                    } else
                        "date" == e.dataType && (this.style += '\n\t\t\t<NumberFormat ss:Format="Short Date"/>')
                },
                closeStyle: function() {
                    this.style += "\n\t\t</Style>"
                },
                toString: function() {
                    var e = this.style;
                    return this.style = "",
                    e
                }
            };
            function a(i, r, a, d) {
                var h = "String"
                  , c = this.getFormat(r);
                null != i && "_AG" == i.toString().substring(0, 3) ? (i = i.toString().substring(3),
                h = "String") : ("date" == c.type && (null !== (i = this.formatData(i, c.type, c.formatString, c.localization)) && "" !== i || (i = "",
                h = "String")),
                "string" == c.type && (null == i ? i = "" : (i.toString().indexOf("&") >= 0 && (i = i.toString().replace(/&/g, "&amp;")),
                i.toString().indexOf(">") >= 0 && (i = i.toString().replace(/>/g, "&gt;")),
                i.toString().indexOf("<") >= 0 && (i = i.toString().replace(/</g, "&lt;")),
                i.toString().indexOf('"') >= 0 && (i = i.toString().replace(/"/g, "&quot;")),
                i.toString().indexOf("'") >= 0 && (i = i.toString().replace(/'/g, "&apos;")))),
                "number" != a.dataType && "float" != a.dataType && "int" != a.dataType && "integer" != a.dataType || (h = "Number",
                (null === (i = parseFloat(i)) || isNaN(i) || "" === i) && (i = "",
                h = "String"),
                i && "String" != h && "" != i && r && r.formatString && r.formatString.indexOf("p") >= 0 && (i /= 100),
                a.currencysymbol = r.localization.currencysymbol));
                var u = function(t) {
                    if (!t)
                        return "";
                    var i = function(e) {
                        for (var t in s)
                            if (l(e, s[t]) && l(s[t], e))
                                return t;
                        return
                    }(t);
                    void 0 === i && (i = "xls-style-" + (n += 1),
                    s[i] = t,
                    function(t, i) {
                        o.startStyle(t),
                        o.buildAlignment(i),
                        o.buildBorder(i),
                        o.buildFont(i),
                        o.buildInterior(i),
                        o.buildFormat(i),
                        o.closeStyle(),
                        e += o.toString()
                    }(i, t));
                    return i
                }(a);
                a.merge ? t += '\n\t\t\t\t<Cell ss:MergeAcross="' + a.merge + '" ss:StyleID="' + u + '"><Data ss:Type="' + h + '">' + i + "</Data></Cell>" : t += '\n\t\t\t\t<Cell ss:StyleID="' + u + '"><Data ss:Type="' + h + '">' + i + "</Data></Cell>"
            }
            function l(e, t) {
                var i = !0;
                for (var r in e)
                    e[r] !== t[r] && (i = !1);
                return i
            }
            this.beginFile = function() {
                s = {},
                n = 0,
                e = '<?xml version="1.0"?>\n\t<?mso-application progid="Excel.Sheet"?> \n\t<Workbook xmlns="urn:schemas-microsoft-com:office:spreadsheet" \n\txmlns:o="urn:schemas-microsoft-com:office:office" \n\txmlns:x="urn:schemas-microsoft-com:office:excel" \n\txmlns:ss="urn:schemas-microsoft-com:office:spreadsheet" \n\txmlns:html="http://www.w3.org/TR/REC-html40"> \n\t<DocumentProperties xmlns="urn:schemas-microsoft-com:office:office"> \n\t<Version>12.00</Version> \n\t</DocumentProperties> \n\t<ExcelWorkbook xmlns="urn:schemas-microsoft-com:office:excel"> \n\t<WindowHeight>8130</WindowHeight> \n\t<WindowWidth>15135</WindowWidth> \n\t<WindowTopX>120</WindowTopX> \n\t<WindowTopY>45</WindowTopY> \n\t<ProtectStructure>False</ProtectStructure> \n\t<ProtectWindows>False</ProtectWindows> \n\t</ExcelWorkbook> \n\t<Styles>'
            }
            ,
            this.beginHeader = function() {
                t = '\n\t<Worksheet ss:Name="Sheet1">\n\t\t<Table>',
                i = [],
                r = []
            }
            ,
            this.appendHeaderCell = function(e, s, n) {
                var o = null != e.width ? e.width : 10 * e.text.length;
                t += '\n\t\t\t<Column ss:Width="' + o + '"/>',
                i.push(e),
                r.push(n)
            }
            ,
            this.endHeader = function(e) {
                if (e) {
                    this.beginRow();
                    for (var t = 0; t < i.length; t += 1)
                        r[t].disabled || a.call(this, i[t].text, null, r[t]);
                    this.endRow()
                }
            }
            ,
            this.beginBody = function() {}
            ,
            this.beginRow = function(e) {
                if (null == e)
                    t += "\n\t\t\t<Row>";
                else {
                    t += "\n\t\t\t";
                    for (var i = 0; i < e; i++)
                        t += "\t";
                    t += "<Row>"
                }
            }
            ,
            this.beginRows = function(e) {
                t += "\n\t\t\t\t<Rows>"
            }
            ,
            this.appendBodyCell = function(e, t, i, r) {
                a.call(this, e, t, i, r)
            }
            ,
            this.endRow = function(e) {
                if (null == e)
                    t += "\n\t\t\t</Row>";
                else {
                    t += "\n\t\t\t";
                    for (var i = 0; i < e; i++)
                        t += "\t";
                    t += "</Row>"
                }
            }
            ,
            this.endRows = function(e) {
                if (null == e)
                    ;
                else {
                    t += "\n\t\t\t";
                    for (var i = 0; i < e; i++)
                        t += "\t";
                    t += "</Rows>"
                }
            }
            ,
            this.endBody = function() {
                t += "\n\t\t</Table>"
            }
            ,
            this.endFile = function() {
                t += "\n\t</Worksheet>\n</Workbook>",
                e += "\n\t</Styles>"
            }
            ,
            this.getFile = function() {
                return e + t
            }
        };
        t.prototype = new e.jqx.dataAdapter.DataExportModuleBase,
        e.jqx.dataAdapter.ArrayExporter.extend("xls", new t)
    }(jqxBaseFramework),
    function(e) {
        var t = function() {
            var e, t, i;
            this.beginFile = function() {
                e = '<?xml version="1.0" encoding="UTF-8" ?>',
                e += "\n<table>"
            }
            ,
            this.beginHeader = function() {
                t = []
            }
            ,
            this.appendHeaderCell = function(e, i) {
                t.push(i)
            }
            ,
            this.endHeader = function() {}
            ,
            this.beginBody = function(e, t) {}
            ,
            this.beginRow = function(t) {
                if (null != t && this.hierarchy) {
                    e += "\n\t";
                    for (var r = 0; r < t; r++)
                        e += "\t\t";
                    return e += "<row>",
                    void (i = 0)
                }
                e += "\n\t<row>",
                i = 0
            }
            ,
            this.beginRows = function(t) {
                if (null != t) {
                    e += "\n\t\t";
                    for (var r = 0; r < t; r++)
                        e += "\t\t";
                    return e += "<rows>",
                    void (i = 0)
                }
                e += "\n\t\t<rows>"
            }
            ,
            this.appendBodyCell = function(r, s, n, o, a, l) {
                var d = this.getFormat(s);
                if (r = this.formatData(r, d.type, d.formatString, d.localization),
                "string" == d.type && (r.toString().indexOf("&") >= 0 && (r = r.toString().replace(/&/g, "&amp;")),
                r.toString().indexOf(">") >= 0 && (r = r.toString().replace(/>/g, "&gt;")),
                r.toString().indexOf("<") >= 0 && (r = r.toString().replace(/</g, "&lt;")),
                r.toString().indexOf('"') >= 0 && (r = r.toString().replace(/"/g, "&quot;")),
                r.toString().indexOf("'") >= 0 && (r = r.toString().replace(/'/g, "&apos;"))),
                null != o.level)
                    if (this.hierarchy) {
                        e += "\n\t\t";
                        for (var h = 0; h < o.level; h++)
                            e += "\t\t";
                        e += void 0 === l ? "<" + t[i] + ">" + r + "</" + t[i] + ">" : "<" + l + ">" + r + "</" + l + ">"
                    } else
                        e += null != l ? "\n\t\t<" + l + ">" + r + "</" + l + ">" : "\n\t\t<" + t[i] + ">" + r + "</" + t[i] + ">";
                else
                    e += "\n\t\t<" + t[i] + ">" + r + "</" + t[i] + ">";
                i++
            }
            ,
            this.endRow = function(t) {
                if (null != t && this.hierarchy) {
                    e += "\n\t";
                    for (var r = 0; r < t; r++)
                        e += "\t\t";
                    return e += "</row>",
                    void (i = 0)
                }
                e += "\n\t</row>",
                i = 0
            }
            ,
            this.endRows = function(t) {
                if (null != t) {
                    e += "\n\t\t";
                    for (var r = 0; r < t; r++)
                        e += "\t\t";
                    return e += "</rows>",
                    void (i = 0)
                }
                e += "\n\t\t</rows>"
            }
            ,
            this.endBody = function() {}
            ,
            this.endFile = function() {
                e += "\n</table>"
            }
            ,
            this.getFile = function() {
                return e
            }
        };
        t.prototype = new e.jqx.dataAdapter.DataExportModuleBase,
        e.jqx.dataAdapter.ArrayExporter.extend("xml", new t)
    }(jqxBaseFramework),
    function(e) {
        var t = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g
          , i = {
            "\b": "\\b",
            "\t": "\\t",
            "\n": "\\n",
            "\f": "\\f",
            "\r": "\\r",
            '"': '\\"',
            "\\": "\\\\"
        };
        function r(e) {
            return '"' + e.replace(t, function(e) {
                var t = i[e];
                return "string" == typeof t ? t : "\\u" + ("0000" + e.charCodeAt(0).toString(16)).slice(-4)
            }) + '"'
        }
        function s(e) {
            return e < 10 ? "0" + e : e
        }
        function n(e) {
            switch (Object.prototype.toString.call(e)) {
            case "[object Date]":
                return t = e,
                isFinite(t.valueOf()) ? t.getUTCFullYear() + "-" + s(t.getUTCMonth() + 1) + "-" + s(t.getUTCDate()) + "T" + s(t.getUTCHours()) + ":" + s(t.getUTCMinutes()) + ":" + s(t.getUTCSeconds()) + 'Z"' : "null";
            case "[object Array]":
                return function(e) {
                    var t, i = e.length, r = [];
                    for (t = 0; t < i; t++)
                        r.push(o(t, e) || "null");
                    return "[" + r.join(",") + "]"
                }(e)
            }
            var t;
            return function(e) {
                var t, i, s = [];
                for (t in e)
                    Object.prototype.hasOwnProperty.call(e, t) && (i = o(t, e)) && s.push(r(t) + ":" + i);
                return "{" + s.join(",") + "}"
            }(e)
        }
        function o(e, t) {
            var i = t[e]
              , s = typeof i;
            return i && "object" == typeof i && "function" == typeof i.toJSON && (s = typeof (i = i.toJSON(e))),
            /(number|float|int|integer|string|boolean)/.test(s) || !i && "object" === s ? function(e, t) {
                switch (t) {
                case "string":
                    return r(e);
                case "number":
                case "float":
                case "integer":
                case "int":
                    return isFinite(e) ? e : "null";
                case "boolean":
                    return e
                }
                return "null"
            }(i, s) : n(i)
        }
        var a = function() {
            var e = this;
            this.prepareData = function(t, i) {
                if (i) {
                    var r = e.getFormat(i);
                    t = e.formatData(t, r.type, r.formatString, r.localization)
                }
                return t
            }
            ;
            var t, i, r, s = [], n = 0;
            this.beginFile = function() {
                i = []
            }
            ,
            this.beginHeader = function() {}
            ,
            this.appendHeaderCell = function(e) {}
            ,
            this.endHeader = function() {}
            ,
            this.beginBody = function(e, t) {}
            ,
            this.beginRow = function() {
                hierarchy ? s[n] = {} : r = {}
            }
            ,
            this.beginRows = function() {
                s[n].rows = [],
                s[++n] = {}
            }
            ,
            this.endRows = function() {
                n--
            }
            ,
            this.appendBodyCell = function(e, t) {
                var i = this.prepareData(e, t);
                hierarchy ? s[n][t.text] = i : r[t.text] = i
            }
            ,
            this.endRow = function() {
                hierarchy ? 0 == n ? i.push(s[n]) : s[n - 1].rows.push(s[n]) : i.push(r)
            }
            ,
            this.endBody = function() {}
            ,
            this.endFile = function() {
                t = function(e) {
                    return window.JSON && "function" == typeof window.JSON.stringify ? window.JSON.stringify(e) : o("", {
                        "": e
                    })
                }(i)
            }
            ,
            this.getFile = function() {
                return t
            }
        };
        a.prototype = new e.jqx.dataAdapter.DataExportModuleBase,
        e.jqx.dataAdapter.ArrayExporter.extend("json", new a)
    }(jqxBaseFramework);
    var s = window.jqxPdfDataExport = function() {
        "undefined" == typeof btoa && (window.btoa = function(e) {
            var t, i, r, s, n, o, a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".split(""), l = 0, d = 0, h = "", c = [];
            do {
                t = (n = e.charCodeAt(l++) << 16 | e.charCodeAt(l++) << 8 | e.charCodeAt(l++)) >> 18 & 63,
                i = n >> 12 & 63,
                r = n >> 6 & 63,
                s = 63 & n,
                c[d++] = a[t] + a[i] + a[r] + a[s]
            } while (l < e.length);return h = c.join(""),
            ((o = e.length % 3) ? h.slice(0, o - 3) : h) + "===".slice(o || 3)
        }
        ),
        "undefined" == typeof atob && (window.atob = function(e) {
            var t, i, r, s, n, o, a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", l = 0, d = 0, h = [];
            if (!e)
                return e;
            e += "";
            do {
                t = (o = a.indexOf(e.charAt(l++)) << 18 | a.indexOf(e.charAt(l++)) << 12 | (s = a.indexOf(e.charAt(l++))) << 6 | (n = a.indexOf(e.charAt(l++)))) >> 16 & 255,
                i = o >> 8 & 255,
                r = 255 & o,
                h[d++] = 64 === s ? String.fromCharCode(t) : 64 === n ? String.fromCharCode(t, i) : String.fromCharCode(t, i, r)
            } while (l < e.length);return h.join("")
        }
        );
        var e = "function" == typeof Object.keys ? function(e) {
            return Object.keys(e).length
        }
        : function(e) {
            var t, i = 0;
            for (t in e)
                e.hasOwnProperty(t) && i++;
            return i
        }
          , t = function(e) {
            this.topics = {},
            this.context = e,
            this.publish = function(e, t) {
                if (this.topics[e]) {
                    var i, r, s, n, o = this.topics[e], a = [], l = function() {};
                    for (t = Array.prototype.slice.call(arguments, 1),
                    r = 0,
                    s = o.length; r < s; r++)
                        i = (n = o[r])[0],
                        n[1] && (n[0] = l,
                        a.push(r)),
                        i.apply(this.context, t);
                    for (r = 0,
                    s = a.length; r < s; r++)
                        o.splice(a[r], 1)
                }
            }
            ,
            this.subscribe = function(e, t, i) {
                return this.topics[e] ? this.topics[e].push([t, i]) : this.topics[e] = [[t, i]],
                {
                    topic: e,
                    callback: t
                }
            }
            ,
            this.unsubscribe = function(e) {
                if (this.topics[e.topic]) {
                    var t, i, r = this.topics[e.topic];
                    for (t = 0,
                    i = r.length; t < i; t++)
                        r[t][0] === e.callback && r.splice(t, 1)
                }
            }
        };
        function i(r, s, o, a) {
            r = void 0 === r ? "p" : r.toString().toLowerCase(),
            void 0 === s && (s = "mm"),
            void 0 === o && (o = "a4"),
            void 0 === a && "undefined" == typeof zpipe && (a = !1);
            var l, d, h, c, u, p, f, m, g, v = o.toString().toLowerCase(), w = [], x = 0, b = a, y = {
                a3: [841.89, 1190.55],
                a4: [595.28, 841.89],
                a5: [420.94, 595.28],
                letter: [612, 792],
                legal: [612, 1008]
            }, _ = "0 g", q = 0, j = [], S = 2, C = !1, T = [], I = {}, k = {}, D = 16, P = {
                title: "",
                subject: "",
                author: "",
                keywords: "",
                creator: ""
            }, B = 0, M = 0, H = {}, O = new t(H), z = function(e) {
                return e.toFixed(2)
            }, A = function(e) {
                return e.toFixed(3)
            }, L = function(e) {
                var t = e.toFixed(0);
                return e < 10 ? "0" + t : t
            }, E = function(e) {
                var t = e.toFixed(0);
                return t.length < 10 ? new Array(11 - t.length).join("0") + t : t
            }, N = function(e) {
                C ? j[q].push(e) : (w.push(e),
                x += e.length + 1)
            }, F = function() {
                return T[++S] = x,
                N(S + " 0 obj"),
                S
            }, V = function(e) {
                N("stream"),
                N(e),
                N("endstream")
            }, R = function(e) {
                e.objectNumber = F(),
                N("<</BaseFont/" + e.PostScriptName + "/Type/Font"),
                "string" == typeof e.encoding && N("/Encoding/" + e.encoding),
                N("/Subtype/Type1>>"),
                N("endobj")
            }, W = function() {
                var e;
                for (e in N("/ProcSet [/PDF /Text /ImageB /ImageC /ImageI]"),
                N("/Font <<"),
                I)
                    I.hasOwnProperty(e) && N("/" + e + " " + I[e].objectNumber + " 0 R");
                N(">>"),
                N("/XObject <<"),
                O.publish("putXobjectDict"),
                N(">>")
            }, G = function() {
                !function() {
                    var e;
                    for (e in I)
                        I.hasOwnProperty(e) && R(I[e])
                }(),
                O.publish("putResources"),
                T[2] = x,
                N("2 0 obj"),
                N("<<"),
                W(),
                N(">>"),
                N("endobj"),
                O.publish("postPutResources")
            }, X = function(e, t, i) {
                void 0 === k[t] && (k[t] = {}),
                k[t][i] = e
            }, J = function(t, i, r, s) {
                var n = "F" + (e(I) + 1).toString(10)
                  , o = I[n] = {
                    id: n,
                    PostScriptName: t,
                    fontName: i,
                    fontStyle: r,
                    encoding: s,
                    metadata: {}
                };
                return X(n, i, r),
                O.publish("addFont", o),
                n
            }, Q = function(e, t) {
                return function(e, t) {
                    var i, r, s, n, o, a, d, h, c, u;
                    if (t === s && (t = {}),
                    n = t.sourceEncoding ? n : "Unicode",
                    a = t.outputEncoding,
                    (t.autoencode || a) && I[l].metadata && I[l].metadata[n] && I[l].metadata[n].encoding && (o = I[l].metadata[n].encoding,
                    !a && I[l].encoding && (a = I[l].encoding),
                    !a && o.codePages && (a = o.codePages[0]),
                    "string" == typeof a && (a = o[a]),
                    a)) {
                        for (h = !1,
                        d = [],
                        i = 0,
                        r = e.length; i < r; i++)
                            (c = a[e.charCodeAt(i)]) ? d.push(String.fromCharCode(c)) : d.push(e[i]),
                            d[i].charCodeAt(0) >> 8 && (h = !0);
                        e = d.join("")
                    }
                    for (i = e.length; h === s && 0 !== i; )
                        e.charCodeAt(i - 1) >> 8 && (h = !0),
                        i--;
                    if (h) {
                        for (d = t.noBOM ? [] : [254, 255],
                        i = 0,
                        r = e.length; i < r; i++) {
                            if ((u = (c = e.charCodeAt(i)) >> 8) >> 8)
                                throw new Error("Character at position " + i.toString(10) + " of string '" + e + "' exceeds 16bits. Cannot be encoded into UCS-2 BE");
                            d.push(u),
                            d.push(c - (u << 8))
                        }
                        return String.fromCharCode.apply(s, d)
                    }
                    return e
                }(e, t).replace(/\\/g, "\\\\").replace(/\(/g, "\\(").replace(/\)/g, "\\)")
            }, U = function() {
                C = !0,
                j[++q] = [],
                N(z(.200025 * c) + " w"),
                N("0 G"),
                0 !== B && N(B.toString(10) + " J"),
                0 !== M && N(M.toString(10) + " j"),
                O.publish("addPage", {
                    pageNumber: q
                })
            }, $ = function(e, t) {
                var i, r;
                e === r && (e = I[l].fontName),
                t === r && (t = I[l].fontStyle);
                try {
                    i = k[e][t]
                } catch (e) {
                    i = r
                }
                if (!i)
                    throw new Error("Unable to look up font label for font '" + e + "', '" + t + "'. Refer to getFontList() for available fonts.");
                return i
            }, Y = function() {
                C = !1,
                w = [],
                T = [],
                N("%PDF-1.3"),
                function() {
                    var e, t, i, r, s, n;
                    for (f = h * c,
                    m = d * c,
                    e = 1; e <= q; e++) {
                        if (F(),
                        N("<</Type /Page"),
                        N("/Parent 1 0 R"),
                        N("/Resources 2 0 R"),
                        N("/Contents " + (S + 1) + " 0 R>>"),
                        N("endobj"),
                        t = j[e].join("\n"),
                        F(),
                        b) {
                            for (i = [],
                            r = 0; r < t.length; ++r)
                                i[r] = t.charCodeAt(r);
                            for (r in n = adler32cs.from(t),
                            (s = new Deflater(6)).append(new Uint8Array(i)),
                            t = s.flush(),
                            i = [new Uint8Array([120, 156]), new Uint8Array(t), new Uint8Array([255 & n, n >> 8 & 255, n >> 16 & 255, n >> 24 & 255])],
                            t = "",
                            i)
                                i.hasOwnProperty(r) && (t += String.fromCharCode.apply(null, i[r]));
                            N("<</Length " + t.length + " /Filter [/FlateDecode]>>")
                        } else
                            N("<</Length " + t.length + ">>");
                        V(t),
                        N("endobj")
                    }
                    for (T[1] = x,
                    N("1 0 obj"),
                    N("<</Type /Pages"),
                    g = "/Kids [",
                    r = 0; r < q; r++)
                        g += 3 + 2 * r + " 0 R ";
                    N(g + "]"),
                    N("/Count " + q),
                    N("/MediaBox [0 0 " + z(f) + " " + z(m) + "]"),
                    N(">>"),
                    N("endobj")
                }(),
                G(),
                F(),
                N("<<"),
                function() {
                    N("/Producer (pdfDataExport 0.9.0rc2)"),
                    P.title && N("/Title (" + Q(P.title) + ")"),
                    P.subject && N("/Subject (" + Q(P.subject) + ")"),
                    P.author && N("/Author (" + Q(P.author) + ")"),
                    P.keywords && N("/Keywords (" + Q(P.keywords) + ")"),
                    P.creator && N("/Creator (" + Q(P.creator) + ")");
                    var e = new Date;
                    N("/CreationDate (D:" + [e.getFullYear(), L(e.getMonth() + 1), L(e.getDate()), L(e.getHours()), L(e.getMinutes()), L(e.getSeconds())].join("") + ")")
                }(),
                N(">>"),
                N("endobj"),
                F(),
                N("<<"),
                N("/Type /Catalog"),
                N("/Pages 1 0 R"),
                N("/OpenAction [3 0 R /FitH null]"),
                N("/PageLayout /OneColumn"),
                O.publish("putCatalog"),
                N(">>"),
                N("endobj");
                var e, t = x;
                for (N("xref"),
                N("0 " + (S + 1)),
                N("0000000000 65535 f "),
                e = 1; e <= S; e++)
                    N(E(T[e]) + " 00000 n ");
                return N("trailer"),
                N("<<"),
                N("/Size " + (S + 1)),
                N("/Root " + S + " 0 R"),
                N("/Info " + (S - 1) + " 0 R"),
                N(">>"),
                N("startxref"),
                N(t),
                N("%%EOF"),
                C = !0,
                w.join("\n")
            }, K = function(e) {
                var t = "S";
                return "F" === e ? t = "f" : "FD" !== e && "DF" !== e || (t = "B"),
                t
            }, Z = function(e, t) {
                var i, r, s, o, a;
                switch (e) {
                case void 0:
                    return Y();
                case "save":
                    if (navigator.getUserMedia) {
                        if (void 0 === window.URL)
                            return H.output("dataurlnewwindow");
                        if (void 0 === window.URL.createObjectURL)
                            return H.output("dataurlnewwindow")
                    }
                    for (r = (i = Y()).length,
                    s = new Uint8Array(new ArrayBuffer(r)),
                    o = 0; o < r; o++)
                        s[o] = i.charCodeAt(o);
                    a = new Blob([s],{
                        type: "application/pdf"
                    }),
                    n(a, t);
                    break;
                case "datauristring":
                case "dataurlstring":
                    return "data:application/pdf;base64," + btoa(Y());
                case "datauri":
                case "dataurl":
                    document.location.href = "data:application/pdf;base64," + btoa(Y());
                    break;
                case "dataurlnewwindow":
                    window.open("data:application/pdf;base64," + btoa(Y()));
                    break;
                default:
                    throw new Error('Output type "' + e + '" is not supported.')
                }
            };
            if ("pt" === s)
                c = 1;
            else if ("mm" === s)
                c = 72 / 25.4;
            else if ("cm" === s)
                c = 72 / 2.54;
            else {
                if ("in" !== s)
                    throw "Invalid unit: " + s;
                c = 72
            }
            if (y.hasOwnProperty(v))
                d = y[v][1] / c,
                h = y[v][0] / c;
            else
                try {
                    d = o[1],
                    h = o[0]
                } catch (e) {
                    throw "Invalid format: " + o
                }
            if ("p" === r || "portrait" === r)
                r = "p",
                h > d && (u = h,
                h = d,
                d = u);
            else {
                if ("l" !== r && "landscape" !== r)
                    throw "Invalid orientation: " + r;
                r = "l",
                d > h && (u = h,
                h = d,
                d = u)
            }
            H.internal = {
                pdfEscape: Q,
                getStyle: K,
                getFont: function() {
                    return I[$.apply(H, arguments)]
                },
                getFontSize: function() {
                    return D
                },
                btoa: btoa,
                write: function(e, t, i, r) {
                    N(1 === arguments.length ? e : Array.prototype.join.call(arguments, " "))
                },
                getCoordinateString: function(e) {
                    return z(e * c)
                },
                getVerticalCoordinateString: function(e) {
                    return z((d - e) * c)
                },
                collections: {},
                newObject: F,
                putStream: V,
                events: O,
                scaleFactor: c,
                pageSize: {
                    width: h,
                    height: d
                },
                output: function(e, t) {
                    return Z(e, t)
                }
            },
            H.addPage = function() {
                return U(),
                this
            }
            ;
            var ee = ["", "0", "00", "000", "0000"]
              , te = function(e, t) {
                for (var i, r = ["FEFF"], s = 0, n = e.length; s < n; ++s)
                    i = e.charCodeAt(s).toString(16).toUpperCase(),
                    r.push(ee[4 - i.length], i);
                return r.join("")
            };
            for (p in H.text16 = function(e, t, i, r) {
                var s, n, o, a, h;
                if ("number" == typeof e && (s = e,
                n = t,
                e = i,
                t = s,
                i = n),
                "string" == typeof e && e.match(/[\n\r]/) && (e = e.split(/\r\n|\r|\n/g)),
                void 0 === r ? r = {
                    noBOM: !0,
                    autoencode: !0
                } : (void 0 === r.noBOM && (r.noBOM = !0),
                void 0 === r.autoencode && (r.autoencode = !0)),
                r.autoencode = !1,
                "string" == typeof e)
                    a = te(e);
                else {
                    if (!(e instanceof Array))
                        throw new Error('Type of text must be string or Array. "' + e + '" is not recognized.');
                    for (h = (o = e.concat()).length - 1; -1 !== h; h--)
                        o[h] = te(o[h]);
                    a = o.join("> Tj\nT* <")
                }
                return N("BT\n/" + l + " " + D + " Tf\n" + D + " TL\n" + _ + "\n" + z(t * c) + " " + z((d - i) * c) + " Td\n<" + a + "> Tj\nET"),
                this
            }
            ,
            H.text = function(e, t, i, r) {
                var s, n, o, a, h;
                if ("number" == typeof e && (s = e,
                n = t,
                e = i,
                t = s,
                i = n),
                "string" == typeof e && e.match(/[\n\r]/) && (e = e.split(/\r\n|\r|\n/g)),
                void 0 === r ? r = {
                    noBOM: !0,
                    autoencode: !0
                } : (void 0 === r.noBOM && (r.noBOM = !0),
                void 0 === r.autoencode && (r.autoencode = !0)),
                "string" == typeof e)
                    a = Q(e, r);
                else {
                    if (!(e instanceof Array))
                        throw new Error('Type of text must be string or Array. "' + e + '" is not recognized.');
                    for (h = (o = e.concat()).length - 1; -1 !== h; h--)
                        o[h] = Q(o[h], r);
                    a = o.join(") Tj\nT* (")
                }
                return N("BT\n/" + l + " " + D + " Tf\n" + D + " TL\n" + _ + "\n" + z(t * c) + " " + z((d - i) * c) + " Td\n(" + a + ") Tj\nET"),
                this
            }
            ,
            H.line = function(e, t, i, r) {
                return N(z(e * c) + " " + z((d - t) * c) + " m " + z(i * c) + " " + z((d - r) * c) + " l S"),
                this
            }
            ,
            H.lines = function(e, t, i, r, s) {
                var n, o, a, l, h, u, p, f, m, g, v, w, x;
                for ("number" == typeof e && (n = e,
                o = t,
                e = i,
                t = n,
                i = o),
                s = K(s),
                r = void 0 === r ? [1, 1] : r,
                N(A(t * c) + " " + A((d - i) * c) + " m "),
                a = r[0],
                l = r[1],
                u = e.length,
                w = t,
                x = i,
                h = 0; h < u; h++)
                    2 === (p = e[h]).length ? (w = p[0] * a + w,
                    x = p[1] * l + x,
                    N(A(w * c) + " " + A((d - x) * c) + " l")) : (f = p[0] * a + w,
                    m = p[1] * l + x,
                    g = p[2] * a + w,
                    v = p[3] * l + x,
                    w = p[4] * a + w,
                    x = p[5] * l + x,
                    N(A(f * c) + " " + A((d - m) * c) + " " + A(g * c) + " " + A((d - v) * c) + " " + A(w * c) + " " + A((d - x) * c) + " c"));
                return N(s),
                this
            }
            ,
            H.rect = function(e, t, i, r, s) {
                var n = K(s);
                return N([z(e * c), z((d - t) * c), z(i * c), z(-r * c), "re", n].join(" ")),
                this
            }
            ,
            H.triangle = function(e, t, i, r, s, n, o) {
                return this.lines([[i - e, r - t], [s - i, n - r], [e - s, t - n]], e, t, [1, 1], o),
                this
            }
            ,
            H.roundedRect = function(e, t, i, r, s, n, o) {
                var a = 4 / 3 * (Math.SQRT2 - 1);
                return this.lines([[i - 2 * s, 0], [s * a, 0, s, n - n * a, s, n], [0, r - 2 * n], [0, n * a, -s * a, n, -s, n], [2 * s - i, 0], [-s * a, 0, -s, -n * a, -s, -n], [0, 2 * n - r], [0, -n * a, s * a, -n, s, -n]], e + s, t, [1, 1], o),
                this
            }
            ,
            H.ellipse = function(e, t, i, r, s) {
                var n = K(s)
                  , o = 4 / 3 * (Math.SQRT2 - 1) * i
                  , a = 4 / 3 * (Math.SQRT2 - 1) * r;
                return N([z((e + i) * c), z((d - t) * c), "m", z((e + i) * c), z((d - (t - a)) * c), z((e + o) * c), z((d - (t - r)) * c), z(e * c), z((d - (t - r)) * c), "c"].join(" ")),
                N([z((e - o) * c), z((d - (t - r)) * c), z((e - i) * c), z((d - (t - a)) * c), z((e - i) * c), z((d - t) * c), "c"].join(" ")),
                N([z((e - i) * c), z((d - (t + a)) * c), z((e - o) * c), z((d - (t + r)) * c), z(e * c), z((d - (t + r)) * c), "c"].join(" ")),
                N([z((e + o) * c), z((d - (t + r)) * c), z((e + i) * c), z((d - (t + a)) * c), z((e + i) * c), z((d - t) * c), "c", n].join(" ")),
                this
            }
            ,
            H.circle = function(e, t, i, r) {
                return this.ellipse(e, t, i, i, r)
            }
            ,
            H.setProperties = function(e) {
                var t;
                for (t in P)
                    P.hasOwnProperty(t) && e[t] && (P[t] = e[t]);
                return this
            }
            ,
            H.setFontSize = function(e) {
                return D = e,
                this
            }
            ,
            H.setFont = function(e, t) {
                return l = $(e, t),
                this
            }
            ,
            H.setFontStyle = H.setFontType = function(e) {
                return l = $(void 0, e),
                this
            }
            ,
            H.getFontList = function() {
                var e, t, i, r = {};
                for (e in k)
                    if (k.hasOwnProperty(e))
                        for (t in r[e] = i = [],
                        k[e])
                            k[e].hasOwnProperty(t) && i.push(t);
                return r
            }
            ,
            H.setLineWidth = function(e) {
                return N((e * c).toFixed(2) + " w"),
                this
            }
            ,
            H.setDrawColor = function(e, t, i, r) {
                var s;
                return s = void 0 === t || void 0 === r && e === t === i ? "string" == typeof e ? e + " G" : z(e / 255) + " G" : void 0 === r ? "string" == typeof e ? [e, t, i, "RG"].join(" ") : [z(e / 255), z(t / 255), z(i / 255), "RG"].join(" ") : "string" == typeof e ? [e, t, i, r, "K"].join(" ") : [z(e), z(t), z(i), z(r), "K"].join(" "),
                N(s),
                this
            }
            ,
            H.setFillColor = function(e, t, i, r) {
                var s;
                return s = void 0 === t || void 0 === r && e === t === i ? "string" == typeof e ? e + " g" : z(e / 255) + " g" : void 0 === r ? "string" == typeof e ? [e, t, i, "rg"].join(" ") : [z(e / 255), z(t / 255), z(i / 255), "rg"].join(" ") : "string" == typeof e ? [e, t, i, r, "k"].join(" ") : [z(e), z(t), z(i), z(r), "k"].join(" "),
                N(s),
                this
            }
            ,
            H.setTextColor = function(e, t, i) {
                return _ = 0 === e && 0 === t && 0 === i || void 0 === t ? A(e / 255) + " g" : [A(e / 255), A(t / 255), A(i / 255), "rg"].join(" "),
                this
            }
            ,
            H.CapJoinStyles = {
                0: 0,
                butt: 0,
                but: 0,
                bevel: 0,
                1: 1,
                round: 1,
                rounded: 1,
                circle: 1,
                2: 2,
                projecting: 2,
                project: 2,
                square: 2,
                milter: 2
            },
            H.setLineCap = function(e) {
                var t = this.CapJoinStyles[e];
                if (void 0 === t)
                    throw new Error("Line cap style of '" + e + "' is not recognized. See or extend .CapJoinStyles property for valid styles");
                return B = t,
                N(t.toString(10) + " J"),
                this
            }
            ,
            H.setLineJoin = function(e) {
                var t = this.CapJoinStyles[e];
                if (void 0 === t)
                    throw new Error("Line join style of '" + e + "' is not recognized. See or extend .CapJoinStyles property for valid styles");
                return M = t,
                N(t.toString(10) + " j"),
                this
            }
            ,
            H.output = Z,
            H.save = function(e) {
                H.output("save", e)
            }
            ,
            i.API)
                i.API.hasOwnProperty(p) && ("events" === p && i.API.events.length ? function(e, t) {
                    var i, r, s;
                    for (s = t.length - 1; -1 !== s; s--)
                        i = t[s][0],
                        r = t[s][1],
                        e.subscribe.apply(e, [i].concat("function" == typeof r ? [r] : r))
                }(O, i.API.events) : H[p] = i.API[p]);
            return function() {
                var e, t, i, r, s = "helvetica", n = "times", o = "courier", a = "normal", l = "bold", d = "italic", h = "bolditalic", c = [["Helvetica", s, a], ["Helvetica-Bold", s, l], ["Helvetica-Oblique", s, d], ["Helvetica-BoldOblique", s, h], ["Courier", o, a], ["Courier-Bold", o, l], ["Courier-Oblique", o, d], ["Courier-BoldOblique", o, h], ["Times-Roman", n, a], ["Times-Bold", n, l], ["Times-Italic", n, d], ["Times-BoldItalic", n, h]];
                for (e = 0,
                t = c.length; e < t; e++)
                    i = J(c[e][0], c[e][1], c[e][2], "StandardEncoding"),
                    r = c[e][0].split("-"),
                    X(i, r[0], r[1] || "");
                O.publish("addFonts", {
                    fonts: I,
                    dictionary: k
                })
            }(),
            l = "F1",
            U(),
            O.publish("initialized"),
            H
        }
        return i.API = {
            events: []
        },
        i
    }();
    !function(e) {
        var t, i, r, s = 0, n = 0, o = {
            x: void 0,
            y: void 0,
            w: void 0,
            h: void 0,
            ln: void 0
        }, a = 1, l = !1, d = function(e, t, i, r, s) {
            o = {
                x: e,
                y: t,
                w: i,
                h: r,
                ln: s
            }
        }, h = function() {
            return o
        }, c = function() {
            return s
        }, u = function(e) {
            n = e
        }, p = function(e) {
            return n
        };
        e.getTextDimensions = function(e) {
            t = this.internal.getFont().fontName,
            i = this.internal.getFontSize(),
            r = this.internal.getFont().fontStyle;
            var s, n, o = 19.049976 / 25.4;
            return (n = document.createElement("font")).id = "pdfDataExportCell",
            n.style.fontStyle = r,
            n.style.fontName = t,
            n.style.fontSize = i + "pt",
            n.innerHTML = e,
            document.body.appendChild(n),
            s = {
                w: (n.offsetWidth + 1) * o,
                h: (n.offsetHeight + 1) * o
            },
            document.body.removeChild(n),
            s
        }
        ,
        e.cellAddPage = function() {
            this.addPage(),
            d(void 0, void 0, void 0, void 0, void 0),
            l = !0,
            a += 1,
            u(1)
        }
        ,
        e.cellInitialize = function() {
            s = 0,
            o = {
                x: void 0,
                y: void 0,
                w: void 0,
                h: void 0,
                ln: void 0
            },
            a = 1,
            l = !1,
            u(0)
        }
        ,
        e.cell = function(e, t, i, r, n, o) {
            this.lnMod = void 0 === this.lnMod ? 0 : this.lnMod,
            !0 !== this.printingHeaderRow && 0 !== this.lnMod && (o += this.lnMod),
            (o * r + t + 2 * r) / a >= this.internal.pageSize.height && 1 === a && !l ? (this.cellAddPage(),
            this.printHeaders && this.tableHeaderRow && (this.printHeaderRow(o),
            this.lnMod += 1,
            o += 1),
            0 === c() && function(e) {
                s = e
            }(Math.round((this.internal.pageSize.height - 2 * r) / r))) : l && h().ln !== o && p() === c() && (this.cellAddPage(),
            this.printHeaders && this.tableHeaderRow && (this.printHeaderRow(o),
            this.lnMod += 1,
            o += 1));
            var f = h()
              , m = (this.getTextDimensions(n),
            1);
            return void 0 !== f.x && f.ln === o && (e = f.x + f.w),
            void 0 !== f.y && f.y === t && (t = f.y),
            void 0 !== f.h && f.h === r && (r = f.h),
            void 0 !== f.ln && f.ln === o && (o = f.ln,
            m = 0),
            l ? t = r * (p() + m) : t += r * Math.abs(c() * a - o - c()),
            this.rect(e, t, i, r),
            /[а-яА-ЯЁё]/.test(n) ? this.text16(n, e + 3, t + r - 3) : this.text(n, e + 3, t + r - 3),
            u(p() + m),
            d(e, t, i, r, o),
            this
        }
        ,
        e.getKeys = "function" == typeof Object.keys ? function(e) {
            return e ? Object.keys(e) : []
        }
        : function(e) {
            var t, i = [];
            for (t in e)
                e.hasOwnProperty(t) && i.push(t);
            return i
        }
        ,
        e.arrayMax = function(e, t) {
            var i, r, s, n = e[0];
            for (i = 0,
            r = e.length; i < r; i += 1)
                s = e[i],
                t ? -1 === t(n, s) && (n = s) : s > n && (n = s);
            return n
        }
        ,
        e.table = function(t, i, r) {
            var s, n, o, a, l, d, h, c, u, p = [], f = [], m = {}, g = {}, v = [], w = [];
            if (this.lnMod = 0,
            r && (r.autoSize || !1,
            this.printHeaders = r.printHeaders || !0,
            r.autoStretch || !0),
            !t)
                throw "No data for PDF table";
            if (null == i)
                p = this.getKeys(t[0]);
            else if (i[0] && "string" != typeof i[0])
                for (n = 0,
                o = i.length; n < o; n += 1)
                    s = i[n],
                    p.push(s.name),
                    f.push(s.prompt);
            else
                p = i;
            if (r.autoSize)
                for (u = function(e) {
                    return e[s]
                }
                ,
                n = 0,
                o = p.length; n < o; n += 1) {
                    for (m[s = p[n]] = t.map(u),
                    v.push(this.getTextDimensions(f[n] || s).w),
                    d = 0,
                    o = (l = m[s]).length; d < o; d += 1)
                        a = l[d],
                        v.push(this.getTextDimensions(a).w);
                    g[s] = e.arrayMax(v)
                }
            if (r.printHeaders) {
                for (n = 0,
                o = p.length; n < o; n += 1)
                    s = p[n],
                    w.push([10, 10, g[s], 25, String(f.length ? f[n] : s)]);
                this.setTableHeaderRow(w),
                this.printHeaderRow(1)
            }
            for (n = 0,
            o = t.length; n < o; n += 1)
                for (h = t[n],
                d = 0,
                c = p.length; d < c; d += 1)
                    s = p[d],
                    this.cell(10, 10, g[s], 25, String(h[s]), n + 2);
            return this
        }
        ,
        e.setTableHeaderRow = function(e) {
            this.tableHeaderRow = e
        }
        ,
        e.printHeaderRow = function(e) {
            if (!this.tableHeaderRow)
                throw "Property tableHeaderRow does not exist.";
            var t, i, r, s;
            for (this.printingHeaderRow = !0,
            r = 0,
            s = this.tableHeaderRow.length; r < s; r += 1)
                t = this.tableHeaderRow[r],
                i = [].concat(t),
                this.cell.apply(this, i.concat(e));
            this.printingHeaderRow = !1
        }
    }(s.API),
    function(e) {
        var t = e.getCharWidthsArray = function(e, t) {
            t || (t = {});
            var i, r, s, n = t.widths ? t.widths : this.internal.getFont().metadata.Unicode.widths, o = n.fof ? n.fof : 1, a = t.kerning ? t.kerning : this.internal.getFont().metadata.Unicode.kerning, l = a.fof ? a.fof : 1, d = 0, h = n[0] || o, c = [];
            for (i = 0,
            r = e.length; i < r; i++)
                s = e.charCodeAt(i),
                c.push((n[s] || h) / o + (a[s] && a[s][d] || 0) / l),
                d = s;
            return c
        }
          , i = function(e) {
            for (var t = e.length, i = 0; t; )
                i += e[--t];
            return i
        }
          , r = (e.getStringUnitWidth = function(e, r) {
            return i(t.call(this, e, r))
        }
        ,
        function(e, t, i, r) {
            for (var s = [], n = 0, o = e.length, a = 0; n !== o && a + t[n] < i; )
                a += t[n],
                n++;
            s.push(e.slice(0, n));
            var l = n;
            for (a = 0; n !== o; )
                a + t[n] > r && (s.push(e.slice(l, n)),
                a = 0,
                l = n),
                a += t[n],
                n++;
            return l !== n && s.push(e.slice(l, n)),
            s
        }
        )
          , s = function(e, s, n) {
            n || (n = {});
            var o, a, l, d, h, c = t(" ", n)[0], u = e.split(" "), p = [], f = [p], m = n.textIndent || 0, g = 0, v = 0;
            for (l = 0,
            d = u.length; l < d; l++)
                if (o = u[l],
                a = t(o, n),
                m + g + (v = i(a)) > s) {
                    if (v > s) {
                        for (h = r(o, a, s - (m + g), s),
                        p.push(h.shift()),
                        p = [h.pop()]; h.length; )
                            f.push([h.shift()]);
                        v = i(a.slice(o.length - p[0].length))
                    } else
                        p = [o];
                    f.push(p),
                    m = v,
                    g = c
                } else
                    p.push(o),
                    m += g + v,
                    g = c;
            var w = [];
            for (l = 0,
            d = f.length; l < d; l++)
                w.push(f[l].join(" "));
            return w
        };
        e.splitTextToSize = function(e, t, i) {
            i || (i = {});
            var r, n = i.fontSize || this.internal.getFontSize(), o = function(e) {
                var t = {
                    0: 1
                }
                  , i = {};
                if (e.widths && e.kerning)
                    return {
                        widths: e.widths,
                        kerning: e.kerning
                    };
                var r = this.internal.getFont(e.fontName, e.fontStyle)
                  , s = "Unicode";
                return r.metadata[s] ? {
                    widths: r.metadata[s].widths || t,
                    kerning: r.metadata[s].kerning || i
                } : {
                    widths: t,
                    kerning: i
                }
            }
            .call(this, i);
            r = e.match(/[\n\r]/) ? e.split(/\r\n|\r|\n/g) : [e];
            var a = 1 * this.internal.scaleFactor * t / n;
            o.textIndent = i.textIndent ? 1 * i.textIndent * this.internal.scaleFactor / n : 0;
            var l, d, h = [];
            for (l = 0,
            d = r.length; l < d; l++)
                h = h.concat(s(r[l], a, o));
            return h
        }
    }(s.API),
    function(e) {
        var t = "addImage_"
          , i = function(e) {
            var t = this.internal.newObject()
              , i = this.internal.write
              , r = this.internal.putStream;
            if (e.n = t,
            i("<</Type /XObject"),
            i("/Subtype /Image"),
            i("/Width " + e.w),
            i("/Height " + e.h),
            "Indexed" === e.cs ? i("/ColorSpace [/Indexed /DeviceRGB " + (e.pal.length / 3 - 1) + " " + (t + 1) + " 0 R]") : (i("/ColorSpace /" + e.cs),
            "DeviceCMYK" === e.cs && i("/Decode [1 0 1 0 1 0 1 0]")),
            i("/BitsPerComponent " + e.bpc),
            "f"in e && i("/Filter /" + e.f),
            "dp"in e && i("/DecodeParms <<" + e.dp + ">>"),
            "trns"in e && e.trns.constructor == Array)
                for (var s = "", n = 0; n < e.trns.length; n++)
                    i("/Mask [" + (s += e[s][n] + " " + e.trns[n] + " ") + "]");
            "smask"in e && i("/SMask " + (t + 1) + " 0 R"),
            i("/Length " + e.data.length + ">>"),
            r(e.data),
            i("endobj")
        }
          , r = function() {
            var e = this.internal.collections[t + "images"];
            for (var r in e)
                i.call(this, e[r])
        }
          , s = function() {
            var e, i = this.internal.collections[t + "images"], r = this.internal.write;
            for (var s in i)
                r("/I" + (e = i[s]).i, e.n, "0", "R")
        };
        e.addImage = function(e, i, n, o, a, l) {
            if ("object" == typeof e && 1 === e.nodeType) {
                var d = document.createElement("canvas");
                d.width = e.clientWidth,
                d.height = e.clientHeight;
                var h = d.getContext("2d");
                if (!h)
                    throw "addImage requires canvas to be supported by browser.";
                h.drawImage(e, 0, 0, d.width, d.height),
                e = d.toDataURL("image/jpeg"),
                i = "JPEG"
            }
            if ("JPEG" !== i.toUpperCase())
                throw new Error("addImage currently only supports format 'JPEG', not '" + i + "'");
            var c, u = this.internal.collections[t + "images"], p = this.internal.getCoordinateString, f = this.internal.getVerticalCoordinateString;
            "data:image/jpeg;base64," === e.substring(0, 23) && (e = atob(e.replace("data:image/jpeg;base64,", ""))),
            u ? c = Object.keys ? Object.keys(u).length : function(e) {
                var t = 0;
                for (var i in e)
                    e.hasOwnProperty(i) && t++;
                return t
            }(u) : (c = 0,
            this.internal.collections[t + "images"] = u = {},
            this.internal.events.subscribe("putResources", r),
            this.internal.events.subscribe("putXobjectDict", s));
            var m = function(e) {
                var t;
                if (255 === !e.charCodeAt(0) || 216 === !e.charCodeAt(1) || 255 === !e.charCodeAt(2) || 224 === !e.charCodeAt(3) || !e.charCodeAt(6) === "J".charCodeAt(0) || !e.charCodeAt(7) === "F".charCodeAt(0) || !e.charCodeAt(8) === "I".charCodeAt(0) || !e.charCodeAt(9) === "F".charCodeAt(0) || 0 === !e.charCodeAt(10))
                    throw new Error("getJpegSize requires a binary jpeg file");
                for (var i = 256 * e.charCodeAt(4) + e.charCodeAt(5), r = 4, s = e.length; r < s; ) {
                    if (r += i,
                    255 !== e.charCodeAt(r))
                        throw new Error("getJpegSize could not find the size of the image");
                    if (192 === e.charCodeAt(r + 1))
                        return t = 256 * e.charCodeAt(r + 5) + e.charCodeAt(r + 6),
                        [256 * e.charCodeAt(r + 7) + e.charCodeAt(r + 8), t];
                    r += 2,
                    i = 256 * e.charCodeAt(r) + e.charCodeAt(r + 1)
                }
            }(e)
              , g = {
                w: m[0],
                h: m[1],
                cs: "DeviceRGB",
                bpc: 8,
                f: "DCTDecode",
                i: c,
                data: e
            };
            return u[c] = g,
            a || l || (a = -96,
            l = -96),
            a < 0 && (a = -1 * g.w * 72 / a / this.internal.scaleFactor),
            l < 0 && (l = -1 * g.h * 72 / l / this.internal.scaleFactor),
            0 === a && (a = l * g.w / g.h),
            0 === l && (l = a * g.h / g.w),
            this.internal.write("q", p(a), "0 0", p(l), p(n), f(o + l), "cm /I" + g.i, "Do Q"),
            this
        }
    }(s.API),
    function(e) {
        var t = function(e) {
            for (var t = "klmnopqrstuvwxyz", i = {}, r = 0; r < t.length; r++)
                i[t[r]] = "0123456789abcdef"[r];
            var s, n, o, a, l, d = {}, h = 1, c = d, u = [], p = "", f = "", m = e.length - 1;
            for (r = 1; r != m; )
                l = e[r],
                r += 1,
                "'" == l ? n ? (a = n.join(""),
                n = s) : n = [] : n ? n.push(l) : "{" == l ? (u.push([c, a]),
                c = {},
                a = s) : "}" == l ? ((o = u.pop())[0][o[1]] = c,
                a = s,
                c = o[0]) : "-" == l ? h = -1 : a === s ? i.hasOwnProperty(l) ? (p += i[l],
                a = parseInt(p, 16) * h,
                h = 1,
                p = "") : p += l : i.hasOwnProperty(l) ? (f += i[l],
                c[a] = parseInt(f, 16) * h,
                h = 1,
                a = s,
                f = "") : f += l;
            return d
        }
          , i = {
            codePages: ["WinAnsiEncoding"],
            WinAnsiEncoding: t("{19m8n201n9q201o9r201s9l201t9m201u8m201w9n201x9o201y8o202k8q202l8r202m9p202q8p20aw8k203k8t203t8v203u9v2cq8s212m9t15m8w15n9w2dw9s16k8u16l9u17s9z17x8y17y9y}")
        }
          , r = {
            Unicode: {
                Courier: i,
                "Courier-Bold": i,
                "Courier-BoldOblique": i,
                "Courier-Oblique": i,
                Helvetica: i,
                "Helvetica-Bold": i,
                "Helvetica-BoldOblique": i,
                "Helvetica-Oblique": i,
                "Times-Roman": i,
                "Times-Bold": i,
                "Times-BoldItalic": i,
                "Times-Italic": i
            }
        }
          , s = {
            Unicode: {
                "Courier-Oblique": t("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"),
                "Times-BoldItalic": t("{'widths'{k3o2q4ycx2r201n3m201o6o201s2l201t2l201u2l201w3m201x3m201y3m2k1t2l2r202m2n2n3m2o3m2p5n202q6o2r1w2s2l2t2l2u3m2v3t2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w3t3x3t3y3t3z3m4k5n4l4m4m4m4n4m4o4s4p4m4q4m4r4s4s4y4t2r4u3m4v4m4w3x4x5t4y4s4z4s5k3x5l4s5m4m5n3r5o3x5p4s5q4m5r5t5s4m5t3x5u3x5v2l5w1w5x2l5y3t5z3m6k2l6l3m6m3m6n2w6o3m6p2w6q2l6r3m6s3r6t1w6u1w6v3m6w1w6x4y6y3r6z3m7k3m7l3m7m2r7n2r7o1w7p3r7q2w7r4m7s3m7t2w7u2r7v2n7w1q7x2n7y3t202l3mcl4mal2ram3man3mao3map3mar3mas2lat4uau1uav3maw3way4uaz2lbk2sbl3t'fof'6obo2lbp3tbq3mbr1tbs2lbu1ybv3mbz3mck4m202k3mcm4mcn4mco4mcp4mcq5ycr4mcs4mct4mcu4mcv4mcw2r2m3rcy2rcz2rdl4sdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek3mel3mem3men3meo3mep3meq4ser2wes2wet2weu2wev2wew1wex1wey1wez1wfl3rfm3mfn3mfo3mfp3mfq3mfr3tfs3mft3rfu3rfv3rfw3rfz2w203k6o212m6o2dw2l2cq2l3t3m3u2l17s3x19m3m}'kerning'{cl{4qu5kt5qt5rs17ss5ts}201s{201ss}201t{cks4lscmscnscoscpscls2wu2yu201ts}201x{2wu2yu}2k{201ts}2w{4qx5kx5ou5qx5rs17su5tu}2x{17su5tu5ou}2y{4qx5kx5ou5qx5rs17ss5ts}'fof'-6ofn{17sw5tw5ou5qw5rs}7t{cksclscmscnscoscps4ls}3u{17su5tu5os5qs}3v{17su5tu5os5qs}7p{17su5tu}ck{4qu5kt5qt5rs17ss5ts}4l{4qu5kt5qt5rs17ss5ts}cm{4qu5kt5qt5rs17ss5ts}cn{4qu5kt5qt5rs17ss5ts}co{4qu5kt5qt5rs17ss5ts}cp{4qu5kt5qt5rs17ss5ts}6l{4qu5ou5qw5rt17su5tu}5q{ckuclucmucnucoucpu4lu}5r{ckuclucmucnucoucpu4lu}7q{cksclscmscnscoscps4ls}6p{4qu5ou5qw5rt17sw5tw}ek{4qu5ou5qw5rt17su5tu}el{4qu5ou5qw5rt17su5tu}em{4qu5ou5qw5rt17su5tu}en{4qu5ou5qw5rt17su5tu}eo{4qu5ou5qw5rt17su5tu}ep{4qu5ou5qw5rt17su5tu}es{17ss5ts5qs4qu}et{4qu5ou5qw5rt17sw5tw}eu{4qu5ou5qw5rt17ss5ts}ev{17ss5ts5qs4qu}6z{17sw5tw5ou5qw5rs}fm{17sw5tw5ou5qw5rs}7n{201ts}fo{17sw5tw5ou5qw5rs}fp{17sw5tw5ou5qw5rs}fq{17sw5tw5ou5qw5rs}7r{cksclscmscnscoscps4ls}fs{17sw5tw5ou5qw5rs}ft{17su5tu}fu{17su5tu}fv{17su5tu}fw{17su5tu}fz{cksclscmscnscoscps4ls}}}"),
                "Helvetica-Bold": t("{'widths'{k3s2q4scx1w201n3r201o6o201s1w201t1w201u1w201w3m201x3m201y3m2k1w2l2l202m2n2n3r2o3r2p5t202q6o2r1s2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v2l3w3u3x3u3y3u3z3x4k6l4l4s4m4s4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3r4v4s4w3x4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v2l5w1w5x2l5y3u5z3r6k2l6l3r6m3x6n3r6o3x6p3r6q2l6r3x6s3x6t1w6u1w6v3r6w1w6x5t6y3x6z3x7k3x7l3x7m2r7n3r7o2l7p3x7q3r7r4y7s3r7t3r7u3m7v2r7w1w7x2r7y3u202l3rcl4sal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3xbq3rbr1wbs2lbu2obv3rbz3xck4s202k3rcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw1w2m2zcy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3res3ret3reu3rev3rew1wex1wey1wez1wfl3xfm3xfn3xfo3xfp3xfq3xfr3ufs3xft3xfu3xfv3xfw3xfz3r203k6o212m6o2dw2l2cq2l3t3r3u2l17s4m19m3r}'kerning'{cl{4qs5ku5ot5qs17sv5tv}201t{2ww4wy2yw}201w{2ks}201x{2ww4wy2yw}2k{201ts201xs}2w{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}2x{5ow5qs}2y{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}'fof'-6o7p{17su5tu5ot}ck{4qs5ku5ot5qs17sv5tv}4l{4qs5ku5ot5qs17sv5tv}cm{4qs5ku5ot5qs17sv5tv}cn{4qs5ku5ot5qs17sv5tv}co{4qs5ku5ot5qs17sv5tv}cp{4qs5ku5ot5qs17sv5tv}6l{17st5tt5os}17s{2kwclvcmvcnvcovcpv4lv4wwckv}5o{2kucltcmtcntcotcpt4lt4wtckt}5q{2ksclscmscnscoscps4ls4wvcks}5r{2ks4ws}5t{2kwclvcmvcnvcovcpv4lv4wwckv}eo{17st5tt5os}fu{17su5tu5ot}6p{17ss5ts}ek{17st5tt5os}el{17st5tt5os}em{17st5tt5os}en{17st5tt5os}6o{201ts}ep{17st5tt5os}es{17ss5ts}et{17ss5ts}eu{17ss5ts}ev{17ss5ts}6z{17su5tu5os5qt}fm{17su5tu5os5qt}fn{17su5tu5os5qt}fo{17su5tu5os5qt}fp{17su5tu5os5qt}fq{17su5tu5os5qt}fs{17su5tu5os5qt}ft{17su5tu5ot}7m{5os}fv{17su5tu5ot}fw{17su5tu5ot}}}"),
                Courier: t("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"),
                "Courier-BoldOblique": t("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"),
                "Times-Bold": t("{'widths'{k3q2q5ncx2r201n3m201o6o201s2l201t2l201u2l201w3m201x3m201y3m2k1t2l2l202m2n2n3m2o3m2p6o202q6o2r1w2s2l2t2l2u3m2v3t2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w3t3x3t3y3t3z3m4k5x4l4s4m4m4n4s4o4s4p4m4q3x4r4y4s4y4t2r4u3m4v4y4w4m4x5y4y4s4z4y5k3x5l4y5m4s5n3r5o4m5p4s5q4s5r6o5s4s5t4s5u4m5v2l5w1w5x2l5y3u5z3m6k2l6l3m6m3r6n2w6o3r6p2w6q2l6r3m6s3r6t1w6u2l6v3r6w1w6x5n6y3r6z3m7k3r7l3r7m2w7n2r7o2l7p3r7q3m7r4s7s3m7t3m7u2w7v2r7w1q7x2r7y3o202l3mcl4sal2lam3man3mao3map3mar3mas2lat4uau1yav3maw3tay4uaz2lbk2sbl3t'fof'6obo2lbp3rbr1tbs2lbu2lbv3mbz3mck4s202k3mcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw2r2m3rcy2rcz2rdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3rek3mel3mem3men3meo3mep3meq4ser2wes2wet2weu2wev2wew1wex1wey1wez1wfl3rfm3mfn3mfo3mfp3mfq3mfr3tfs3mft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3m3u2l17s4s19m3m}'kerning'{cl{4qt5ks5ot5qy5rw17sv5tv}201t{cks4lscmscnscoscpscls4wv}2k{201ts}2w{4qu5ku7mu5os5qx5ru17su5tu}2x{17su5tu5ou5qs}2y{4qv5kv7mu5ot5qz5ru17su5tu}'fof'-6o7t{cksclscmscnscoscps4ls}3u{17su5tu5os5qu}3v{17su5tu5os5qu}fu{17su5tu5ou5qu}7p{17su5tu5ou5qu}ck{4qt5ks5ot5qy5rw17sv5tv}4l{4qt5ks5ot5qy5rw17sv5tv}cm{4qt5ks5ot5qy5rw17sv5tv}cn{4qt5ks5ot5qy5rw17sv5tv}co{4qt5ks5ot5qy5rw17sv5tv}cp{4qt5ks5ot5qy5rw17sv5tv}6l{17st5tt5ou5qu}17s{ckuclucmucnucoucpu4lu4wu}5o{ckuclucmucnucoucpu4lu4wu}5q{ckzclzcmzcnzcozcpz4lz4wu}5r{ckxclxcmxcnxcoxcpx4lx4wu}5t{ckuclucmucnucoucpu4lu4wu}7q{ckuclucmucnucoucpu4lu}6p{17sw5tw5ou5qu}ek{17st5tt5qu}el{17st5tt5ou5qu}em{17st5tt5qu}en{17st5tt5qu}eo{17st5tt5qu}ep{17st5tt5ou5qu}es{17ss5ts5qu}et{17sw5tw5ou5qu}eu{17sw5tw5ou5qu}ev{17ss5ts5qu}6z{17sw5tw5ou5qu5rs}fm{17sw5tw5ou5qu5rs}fn{17sw5tw5ou5qu5rs}fo{17sw5tw5ou5qu5rs}fp{17sw5tw5ou5qu5rs}fq{17sw5tw5ou5qu5rs}7r{cktcltcmtcntcotcpt4lt5os}fs{17sw5tw5ou5qu5rs}ft{17su5tu5ou5qu}7m{5os}fv{17su5tu5ou5qu}fw{17su5tu5ou5qu}fz{cksclscmscnscoscps4ls}}}"),
                Helvetica: t("{'widths'{k3p2q4mcx1w201n3r201o6o201s1q201t1q201u1q201w2l201x2l201y2l2k1w2l1w202m2n2n3r2o3r2p5t202q6o2r1n2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v1w3w3u3x3u3y3u3z3r4k6p4l4m4m4m4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3m4v4m4w3r4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v1w5w1w5x1w5y2z5z3r6k2l6l3r6m3r6n3m6o3r6p3r6q1w6r3r6s3r6t1q6u1q6v3m6w1q6x5n6y3r6z3r7k3r7l3r7m2l7n3m7o1w7p3r7q3m7r4s7s3m7t3m7u3m7v2l7w1u7x2l7y3u202l3rcl4mal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3rbr1wbs2lbu2obv3rbz3xck4m202k3rcm4mcn4mco4mcp4mcq6ocr4scs4mct4mcu4mcv4mcw1w2m2ncy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3mes3ret3reu3rev3rew1wex1wey1wez1wfl3rfm3rfn3rfo3rfp3rfq3rfr3ufs3xft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3r3u1w17s4m19m3r}'kerning'{5q{4wv}cl{4qs5kw5ow5qs17sv5tv}201t{2wu4w1k2yu}201x{2wu4wy2yu}17s{2ktclucmucnu4otcpu4lu4wycoucku}2w{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}2x{17sy5ty5oy5qs}2y{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}'fof'-6o7p{17sv5tv5ow}ck{4qs5kw5ow5qs17sv5tv}4l{4qs5kw5ow5qs17sv5tv}cm{4qs5kw5ow5qs17sv5tv}cn{4qs5kw5ow5qs17sv5tv}co{4qs5kw5ow5qs17sv5tv}cp{4qs5kw5ow5qs17sv5tv}6l{17sy5ty5ow}do{17st5tt}4z{17st5tt}7s{fst}dm{17st5tt}dn{17st5tt}5o{ckwclwcmwcnwcowcpw4lw4wv}dp{17st5tt}dq{17st5tt}7t{5ow}ds{17st5tt}5t{2ktclucmucnu4otcpu4lu4wycoucku}fu{17sv5tv5ow}6p{17sy5ty5ow5qs}ek{17sy5ty5ow}el{17sy5ty5ow}em{17sy5ty5ow}en{5ty}eo{17sy5ty5ow}ep{17sy5ty5ow}es{17sy5ty5qs}et{17sy5ty5ow5qs}eu{17sy5ty5ow5qs}ev{17sy5ty5ow5qs}6z{17sy5ty5ow5qs}fm{17sy5ty5ow5qs}fn{17sy5ty5ow5qs}fo{17sy5ty5ow5qs}fp{17sy5ty5qs}fq{17sy5ty5ow5qs}7r{5ow}fs{17sy5ty5ow5qs}ft{17sv5tv5ow}7m{5ow}fv{17sv5tv5ow}fw{17sv5tv5ow}}}"),
                "Helvetica-BoldOblique": t("{'widths'{k3s2q4scx1w201n3r201o6o201s1w201t1w201u1w201w3m201x3m201y3m2k1w2l2l202m2n2n3r2o3r2p5t202q6o2r1s2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v2l3w3u3x3u3y3u3z3x4k6l4l4s4m4s4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3r4v4s4w3x4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v2l5w1w5x2l5y3u5z3r6k2l6l3r6m3x6n3r6o3x6p3r6q2l6r3x6s3x6t1w6u1w6v3r6w1w6x5t6y3x6z3x7k3x7l3x7m2r7n3r7o2l7p3x7q3r7r4y7s3r7t3r7u3m7v2r7w1w7x2r7y3u202l3rcl4sal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3xbq3rbr1wbs2lbu2obv3rbz3xck4s202k3rcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw1w2m2zcy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3res3ret3reu3rev3rew1wex1wey1wez1wfl3xfm3xfn3xfo3xfp3xfq3xfr3ufs3xft3xfu3xfv3xfw3xfz3r203k6o212m6o2dw2l2cq2l3t3r3u2l17s4m19m3r}'kerning'{cl{4qs5ku5ot5qs17sv5tv}201t{2ww4wy2yw}201w{2ks}201x{2ww4wy2yw}2k{201ts201xs}2w{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}2x{5ow5qs}2y{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}'fof'-6o7p{17su5tu5ot}ck{4qs5ku5ot5qs17sv5tv}4l{4qs5ku5ot5qs17sv5tv}cm{4qs5ku5ot5qs17sv5tv}cn{4qs5ku5ot5qs17sv5tv}co{4qs5ku5ot5qs17sv5tv}cp{4qs5ku5ot5qs17sv5tv}6l{17st5tt5os}17s{2kwclvcmvcnvcovcpv4lv4wwckv}5o{2kucltcmtcntcotcpt4lt4wtckt}5q{2ksclscmscnscoscps4ls4wvcks}5r{2ks4ws}5t{2kwclvcmvcnvcovcpv4lv4wwckv}eo{17st5tt5os}fu{17su5tu5ot}6p{17ss5ts}ek{17st5tt5os}el{17st5tt5os}em{17st5tt5os}en{17st5tt5os}6o{201ts}ep{17st5tt5os}es{17ss5ts}et{17ss5ts}eu{17ss5ts}ev{17ss5ts}6z{17su5tu5os5qt}fm{17su5tu5os5qt}fn{17su5tu5os5qt}fo{17su5tu5os5qt}fp{17su5tu5os5qt}fq{17su5tu5os5qt}fs{17su5tu5os5qt}ft{17su5tu5ot}7m{5os}fv{17su5tu5ot}fw{17su5tu5ot}}}"),
                "Courier-Bold": t("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"),
                "Times-Italic": t("{'widths'{k3n2q4ycx2l201n3m201o5t201s2l201t2l201u2l201w3r201x3r201y3r2k1t2l2l202m2n2n3m2o3m2p5n202q5t2r1p2s2l2t2l2u3m2v4n2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w4n3x4n3y4n3z3m4k5w4l3x4m3x4n4m4o4s4p3x4q3x4r4s4s4s4t2l4u2w4v4m4w3r4x5n4y4m4z4s5k3x5l4s5m3x5n3m5o3r5p4s5q3x5r5n5s3x5t3r5u3r5v2r5w1w5x2r5y2u5z3m6k2l6l3m6m3m6n2w6o3m6p2w6q1w6r3m6s3m6t1w6u1w6v2w6w1w6x4s6y3m6z3m7k3m7l3m7m2r7n2r7o1w7p3m7q2w7r4m7s2w7t2w7u2r7v2s7w1v7x2s7y3q202l3mcl3xal2ram3man3mao3map3mar3mas2lat4wau1vav3maw4nay4waz2lbk2sbl4n'fof'6obo2lbp3mbq3obr1tbs2lbu1zbv3mbz3mck3x202k3mcm3xcn3xco3xcp3xcq5tcr4mcs3xct3xcu3xcv3xcw2l2m2ucy2lcz2ldl4mdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek3mel3mem3men3meo3mep3meq4mer2wes2wet2weu2wev2wew1wex1wey1wez1wfl3mfm3mfn3mfo3mfp3mfq3mfr4nfs3mft3mfu3mfv3mfw3mfz2w203k6o212m6m2dw2l2cq2l3t3m3u2l17s3r19m3m}'kerning'{cl{5kt4qw}201s{201sw}201t{201tw2wy2yy6q-t}201x{2wy2yy}2k{201tw}2w{7qs4qy7rs5ky7mw5os5qx5ru17su5tu}2x{17ss5ts5os}2y{7qs4qy7rs5ky7mw5os5qx5ru17su5tu}'fof'-6o6t{17ss5ts5qs}7t{5os}3v{5qs}7p{17su5tu5qs}ck{5kt4qw}4l{5kt4qw}cm{5kt4qw}cn{5kt4qw}co{5kt4qw}cp{5kt4qw}6l{4qs5ks5ou5qw5ru17su5tu}17s{2ks}5q{ckvclvcmvcnvcovcpv4lv}5r{ckuclucmucnucoucpu4lu}5t{2ks}6p{4qs5ks5ou5qw5ru17su5tu}ek{4qs5ks5ou5qw5ru17su5tu}el{4qs5ks5ou5qw5ru17su5tu}em{4qs5ks5ou5qw5ru17su5tu}en{4qs5ks5ou5qw5ru17su5tu}eo{4qs5ks5ou5qw5ru17su5tu}ep{4qs5ks5ou5qw5ru17su5tu}es{5ks5qs4qs}et{4qs5ks5ou5qw5ru17su5tu}eu{4qs5ks5qw5ru17su5tu}ev{5ks5qs4qs}ex{17ss5ts5qs}6z{4qv5ks5ou5qw5ru17su5tu}fm{4qv5ks5ou5qw5ru17su5tu}fn{4qv5ks5ou5qw5ru17su5tu}fo{4qv5ks5ou5qw5ru17su5tu}fp{4qv5ks5ou5qw5ru17su5tu}fq{4qv5ks5ou5qw5ru17su5tu}7r{5os}fs{4qv5ks5ou5qw5ru17su5tu}ft{17su5tu5qs}fu{17su5tu5qs}fv{17su5tu5qs}fw{17su5tu5qs}}}"),
                "Times-Roman": t("{'widths'{k3n2q4ycx2l201n3m201o6o201s2l201t2l201u2l201w2w201x2w201y2w2k1t2l2l202m2n2n3m2o3m2p5n202q6o2r1m2s2l2t2l2u3m2v3s2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v1w3w3s3x3s3y3s3z2w4k5w4l4s4m4m4n4m4o4s4p3x4q3r4r4s4s4s4t2l4u2r4v4s4w3x4x5t4y4s4z4s5k3r5l4s5m4m5n3r5o3x5p4s5q4s5r5y5s4s5t4s5u3x5v2l5w1w5x2l5y2z5z3m6k2l6l2w6m3m6n2w6o3m6p2w6q2l6r3m6s3m6t1w6u1w6v3m6w1w6x4y6y3m6z3m7k3m7l3m7m2l7n2r7o1w7p3m7q3m7r4s7s3m7t3m7u2w7v3k7w1o7x3k7y3q202l3mcl4sal2lam3man3mao3map3mar3mas2lat4wau1vav3maw3say4waz2lbk2sbl3s'fof'6obo2lbp3mbq2xbr1tbs2lbu1zbv3mbz2wck4s202k3mcm4scn4sco4scp4scq5tcr4mcs3xct3xcu3xcv3xcw2l2m2tcy2lcz2ldl4sdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek2wel2wem2wen2weo2wep2weq4mer2wes2wet2weu2wev2wew1wex1wey1wez1wfl3mfm3mfn3mfo3mfp3mfq3mfr3sfs3mft3mfu3mfv3mfw3mfz3m203k6o212m6m2dw2l2cq2l3t3m3u1w17s4s19m3m}'kerning'{cl{4qs5ku17sw5ou5qy5rw201ss5tw201ws}201s{201ss}201t{ckw4lwcmwcnwcowcpwclw4wu201ts}2k{201ts}2w{4qs5kw5os5qx5ru17sx5tx}2x{17sw5tw5ou5qu}2y{4qs5kw5os5qx5ru17sx5tx}'fof'-6o7t{ckuclucmucnucoucpu4lu5os5rs}3u{17su5tu5qs}3v{17su5tu5qs}7p{17sw5tw5qs}ck{4qs5ku17sw5ou5qy5rw201ss5tw201ws}4l{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cm{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cn{4qs5ku17sw5ou5qy5rw201ss5tw201ws}co{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cp{4qs5ku17sw5ou5qy5rw201ss5tw201ws}6l{17su5tu5os5qw5rs}17s{2ktclvcmvcnvcovcpv4lv4wuckv}5o{ckwclwcmwcnwcowcpw4lw4wu}5q{ckyclycmycnycoycpy4ly4wu5ms}5r{cktcltcmtcntcotcpt4lt4ws}5t{2ktclvcmvcnvcovcpv4lv4wuckv}7q{cksclscmscnscoscps4ls}6p{17su5tu5qw5rs}ek{5qs5rs}el{17su5tu5os5qw5rs}em{17su5tu5os5qs5rs}en{17su5qs5rs}eo{5qs5rs}ep{17su5tu5os5qw5rs}es{5qs}et{17su5tu5qw5rs}eu{17su5tu5qs5rs}ev{5qs}6z{17sv5tv5os5qx5rs}fm{5os5qt5rs}fn{17sv5tv5os5qx5rs}fo{17sv5tv5os5qx5rs}fp{5os5qt5rs}fq{5os5qt5rs}7r{ckuclucmucnucoucpu4lu5os}fs{17sv5tv5os5qx5rs}ft{17ss5ts5qs}fu{17sw5tw5qs}fv{17sw5tw5qs}fw{17ss5ts5qs}fz{ckuclucmucnucoucpu4lu5os5rs}}}"),
                "Helvetica-Oblique": t("{'widths'{k3p2q4mcx1w201n3r201o6o201s1q201t1q201u1q201w2l201x2l201y2l2k1w2l1w202m2n2n3r2o3r2p5t202q6o2r1n2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v1w3w3u3x3u3y3u3z3r4k6p4l4m4m4m4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3m4v4m4w3r4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v1w5w1w5x1w5y2z5z3r6k2l6l3r6m3r6n3m6o3r6p3r6q1w6r3r6s3r6t1q6u1q6v3m6w1q6x5n6y3r6z3r7k3r7l3r7m2l7n3m7o1w7p3r7q3m7r4s7s3m7t3m7u3m7v2l7w1u7x2l7y3u202l3rcl4mal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3rbr1wbs2lbu2obv3rbz3xck4m202k3rcm4mcn4mco4mcp4mcq6ocr4scs4mct4mcu4mcv4mcw1w2m2ncy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3mes3ret3reu3rev3rew1wex1wey1wez1wfl3rfm3rfn3rfo3rfp3rfq3rfr3ufs3xft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3r3u1w17s4m19m3r}'kerning'{5q{4wv}cl{4qs5kw5ow5qs17sv5tv}201t{2wu4w1k2yu}201x{2wu4wy2yu}17s{2ktclucmucnu4otcpu4lu4wycoucku}2w{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}2x{17sy5ty5oy5qs}2y{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}'fof'-6o7p{17sv5tv5ow}ck{4qs5kw5ow5qs17sv5tv}4l{4qs5kw5ow5qs17sv5tv}cm{4qs5kw5ow5qs17sv5tv}cn{4qs5kw5ow5qs17sv5tv}co{4qs5kw5ow5qs17sv5tv}cp{4qs5kw5ow5qs17sv5tv}6l{17sy5ty5ow}do{17st5tt}4z{17st5tt}7s{fst}dm{17st5tt}dn{17st5tt}5o{ckwclwcmwcnwcowcpw4lw4wv}dp{17st5tt}dq{17st5tt}7t{5ow}ds{17st5tt}5t{2ktclucmucnu4otcpu4lu4wycoucku}fu{17sv5tv5ow}6p{17sy5ty5ow5qs}ek{17sy5ty5ow}el{17sy5ty5ow}em{17sy5ty5ow}en{5ty}eo{17sy5ty5ow}ep{17sy5ty5ow}es{17sy5ty5qs}et{17sy5ty5ow5qs}eu{17sy5ty5ow5qs}ev{17sy5ty5ow5qs}6z{17sy5ty5ow5qs}fm{17sy5ty5ow5qs}fn{17sy5ty5ow5qs}fo{17sy5ty5ow5qs}fp{17sy5ty5qs}fq{17sy5ty5ow5qs}7r{5ow}fs{17sy5ty5ow5qs}ft{17sv5tv5ow}7m{5ow}fv{17sv5tv5ow}fw{17sv5tv5ow}}}")
            }
        };
        e.events.push(["addFonts", function(e) {
            var t, i, n, o, a, l = "Unicode";
            for (i in e.fonts)
                e.fonts.hasOwnProperty(i) && (t = e.fonts[i],
                (n = s[l][t.PostScriptName]) && ((o = t.metadata[l] ? t.metadata[l] : t.metadata[l] = {}).widths = n.widths,
                o.kerning = n.kerning),
                (a = r[l][t.PostScriptName]) && ((o = t.metadata[l] ? t.metadata[l] : t.metadata[l] = {}).encoding = a,
                a.codePages && a.codePages.length && (t.encoding = a.codePages[0])))
        }
        ])
    }(s.API);
    var n = window.jqxSaveAs = n || navigator.msSaveBlob && navigator.msSaveBlob.bind(navigator) || function(e) {
        var t = e.document
          , i = e.URL || e.webkitURL || e
          , r = $("<a></a>")[0]
          , s = "download"in r
          , n = e.webkitRequestFileSystem
          , o = e.requestFileSystem || n || e.mozRequestFileSystem
          , a = function(t) {
            (e.setImmediate || e.setTimeout)(function() {
                throw t
            }, 0)
        }
          , l = "application/octet-stream"
          , d = 0
          , h = []
          , c = function(e, t, i) {
            for (var r = (t = [].concat(t)).length; r--; ) {
                var s = e["on" + t[r]];
                if ("function" == typeof s)
                    try {
                        s.call(e, i || e)
                    } catch (e) {
                        a(e)
                    }
            }
        }
          , u = function(i, a) {
            var u, p, f, m = this, g = i.type, v = !1, w = function() {
                var t = (e.URL || e.webkitURL || e).createObjectURL(i);
                return h.push(t),
                t
            }, x = function() {
                c(m, "writestart progress write writeend".split(" "))
            }, b = function() {
                !v && u || (u = w()),
                p && (p.location.href = u),
                m.readyState = m.DONE,
                x()
            }, y = function(e) {
                return function() {
                    if (m.readyState !== m.DONE)
                        return e.apply(this, arguments)
                }
            }, _ = {
                create: !0,
                exclusive: !1
            };
            if (m.readyState = m.INIT,
            a || (a = "download"),
            s && (u = w(),
            r.href = u,
            r.download = a,
            function(i) {
                var r = t.createEvent("MouseEvents");
                return r.initMouseEvent("click", !0, !1, e, 0, 0, 0, 0, 0, !1, !1, !1, !1, 0, null),
                i.dispatchEvent(r)
            }(r)))
                return m.readyState = m.DONE,
                void x();
            e.chrome && g && g !== l && (f = i.slice || i.webkitSlice,
            i = f.call(i, 0, i.size, l),
            v = !0),
            n && "download" !== a && (a += ".download"),
            p = g === l || n ? e : e.open(),
            o ? (d += i.size,
            o(e.TEMPORARY, d, y(function(e) {
                e.root.getDirectory("saved", _, y(function(e) {
                    var t = function() {
                        e.getFile(a, _, y(function(e) {
                            e.createWriter(y(function(t) {
                                t.onwriteend = function(t) {
                                    p.location.href = e.toURL(),
                                    h.push(e),
                                    m.readyState = m.DONE,
                                    c(m, "writeend", t)
                                }
                                ,
                                t.onerror = function() {
                                    var e = t.error;
                                    e.code !== e.ABORT_ERR && b()
                                }
                                ,
                                "writestart progress write abort".split(" ").forEach(function(e) {
                                    t["on" + e] = m["on" + e]
                                }),
                                t.write(i),
                                m.abort = function() {
                                    t.abort(),
                                    m.readyState = m.DONE
                                }
                                ,
                                m.readyState = m.WRITING
                            }), b)
                        }), b)
                    };
                    e.getFile(a, {
                        create: !1
                    }, y(function(e) {
                        e.remove(),
                        t()
                    }), y(function(e) {
                        e.code === e.NOT_FOUND_ERR ? t() : b()
                    }))
                }), b)
            }), b)) : b()
        }
          , p = u.prototype;
        return p.abort = function() {
            var e = this;
            e.readyState = e.DONE,
            c(e, "abort")
        }
        ,
        p.readyState = p.INIT = 0,
        p.WRITING = 1,
        p.DONE = 2,
        p.error = p.onwritestart = p.onprogress = p.onwrite = p.onabort = p.onerror = p.onwriteend = null,
        e.addEventListener && e.addEventListener("unload", function() {
            for (var e = h.length; e--; ) {
                var t = h[e];
                "string" == typeof t ? i.revokeObjectURL(t) : t.remove()
            }
            h.length = 0
        }, !1),
        function(e, t) {
            return new u(e,t)
        }
    }(self);
    !function(e) {
        e.output = function(e, t) {
            return this.internal.output(e, t)
        }
    }(s.API)
}
, function(e, t) {
    var i;
    (i = jqxBaseFramework).jqx.jqxWidget("jqxButtonGroup", "", {}),
    i.extend(i.jqx._jqxButtonGroup.prototype, {
        defineInstance: function() {
            var e = {
                mode: "default",
                roundedCorners: !0,
                disabled: !1,
                enableHover: !1,
                orientation: "horizontal",
                width: null,
                height: null,
                _eventsMap: {
                    mousedown: i.jqx.mobile.getTouchEventName("touchstart"),
                    mouseup: i.jqx.mobile.getTouchEventName("touchend")
                },
                _events: ["selected", "unselected", "buttonclick"],
                _buttonId: {},
                _selected: null,
                _pressed: null,
                rtl: !1,
                template: "",
                _baseId: "group_button",
                aria: {
                    "aria-disabled": {
                        name: "disabled",
                        type: "boolean"
                    }
                }
            };
            return this === i.jqx._jqxButtonGroup.prototype ? e : (i.extend(!0, this, e),
            e)
        },
        createInstance: function(e) {
            var t = this;
            t._isTouchDevice = i.jqx.mobile.isTouchDevice(),
            i.jqx.aria(t),
            t._baseId = t._baseId + t.element.id,
            t.addHandler(t.host, "selectstart", function(e) {
                t.disabled || e.preventDefault()
            })
        },
        refresh: function() {
            var e = this;
            e.width && (e.width.toString() && e.width.toString().indexOf("%") >= 0 ? e.element.style.width = e.width : e.host.width(e.width)),
            e.height && e.host.height(e.height),
            e._refreshButtons()
        },
        render: function() {
            this.refresh()
        },
        resize: function() {
            this.refresh()
        },
        _getEvent: function(e) {
            var t = this;
            if (t._isTouchDevice) {
                var i = t._eventsMap[e] || e;
                return i += "." + t.element.id
            }
            return e += "." + t.element.id
        },
        _refreshButtons: function() {
            var e = this;
            e.lastElement && e.lastElement.remove(),
            e.lastElement = i("<div style='clear: both;'></div>");
            var t, r = e.host.children(), s = r.length;
            switch (e.mode) {
            case "radio":
                e.host.attr("role", "radiogroup");
                break;
            case "checkbox":
            case "default":
                e.host.attr("role", "group")
            }
            for (var n = new Number(100 / s).toFixed(2), o = 0; o < s; o += 1)
                t = i(r[o]),
                e.width && ("horizontal" === e.orientation ? (t.css("width", n + "%"),
                t.css("box-sizing", "border-box"),
                t.css("-moz-box-sizing", "border-box"),
                t.css("white-space", "nowrap"),
                t.css("text-overflow", "ellipsis"),
                t.css("overflow", "hidden")) : (t.css("box-sizing", "border-box"),
                t.css("-moz-box-sizing", "border-box"),
                t.css("width", "100%"))),
                e._refreshButton(t, o, s);
            e.lastElement.appendTo(e.host)
        },
        _refreshButton: function(e, t, i) {
            (function(e) {
                var r = this;
                e = r._render(e),
                r._removeStyles(e),
                r._addStyles(e, t, i),
                r._performLayout(e),
                r._removeButtonListeners(e),
                r._addButtonListeners(e),
                r._handleButtonId(e, t),
                "radio" === r.mode ? e.attr("role", "radio") : e.attr("role", "button"),
                e.attr("disabled", r.disabled),
                r.disabled ? e.addClass(r.toThemeProperty("jqx-fill-state-disabled")) : e.removeClass(r.toThemeProperty("jqx-fill-state-disabled"))
            }
            ).apply(this, [e])
        },
        destroy: function(e) {
            for (var t, r = this, s = r.host.children(), n = s.length, o = 0; o < n; o += 1)
                t = i(s[o]),
                r._removeStyles(t),
                r._removeButtonListeners(t);
            !1 !== e && r.host.remove()
        },
        _render: function(e) {
            return "button" === e[0].tagName.toLowerCase() ? this._renderFromButton(e) : this._renderButton(e)
        },
        _renderButton: function(e) {
            return e.wrapInner("<div/>"),
            e
        },
        _removeStyles: function(e) {
            var t = this
              , i = t.toThemeProperty;
            t.host.removeClass("jqx-widget"),
            t.host.removeClass("jqx-rc-all"),
            e.removeClass(i.call(this, "jqx-fill-state-normal")),
            e.removeClass(i.call(this, "jqx-group-button-normal")),
            e.removeClass(i.call(this, "jqx-rc-tl")),
            e.removeClass(i.call(this, "jqx-rc-bl")),
            e.removeClass(i.call(this, "jqx-rc-tr")),
            e.removeClass(i.call(this, "jqx-rc-br")),
            e.css("margin-left", 0)
        },
        _addStyles: function(e, t, i) {
            var r = this
              , s = this.toThemeProperty;
            r.host.addClass(s.call(this, "jqx-widget")),
            r.host.addClass(s.call(this, "jqx-rc-all")),
            r.host.addClass(s.call(this, "jqx-buttongroup")),
            e.addClass(s.call(this, "jqx-button")),
            e.addClass(s.call(this, "jqx-group-button-normal")),
            e.addClass(s.call(this, "jqx-fill-state-normal")),
            r.template && e.addClass(s.call(this, "jqx-" + r.template)),
            r.roundedCorners && (0 === t ? r._addRoundedCorners(e, !0) : t === i - 1 && r._addRoundedCorners(e, !1)),
            "horizontal" === r.orientation ? e.css("margin-left", -parseInt(e.css("border-left-width"), 10)) : e.css("margin-top", -parseInt(e.css("border-left-width"), 10))
        },
        _addRoundedCorners: function(e, t) {
            var i = this.toThemeProperty;
            "horizontal" === this.orientation ? t ? (e.addClass(i.call(this, "jqx-rc-tl")),
            e.addClass(i.call(this, "jqx-rc-bl"))) : (e.addClass(i.call(this, "jqx-rc-tr")),
            e.addClass(i.call(this, "jqx-rc-br"))) : t ? (e.addClass(i.call(this, "jqx-rc-tl")),
            e.addClass(i.call(this, "jqx-rc-tr"))) : (e.addClass(i.call(this, "jqx-rc-bl")),
            e.addClass(i.call(this, "jqx-rc-br")))
        },
        _centerContent: function(e, t) {
            return e.css({
                "margin-top": (t.height() - e.height()) / 2,
                "margin-left": (t.width() - e.width()) / 2
            }),
            e
        },
        _renderFromButton: function(e) {
            var t, r = e.val();
            "" === r && (r = e.html());
            var s = e[0].id;
            return e.wrap("<div/>"),
            (t = e.parent()).attr("style", e.attr("style")),
            e.remove(),
            i.jqx.utilities.html(t, r),
            t[0].id = s,
            t
        },
        _performLayout: function(e) {
            "horizontal" === this.orientation ? this.rtl ? e.css("float", "right") : e.css("float", "left") : e.css("float", "none"),
            this._centerContent(i(e.children()), e)
        },
        _mouseEnterHandler: function(e) {
            var t = e.data.self
              , r = i(e.currentTarget);
            if (!t._isDisabled(r) && t.enableHover) {
                var s = t.toThemeProperty;
                r.addClass(s.call(t, "jqx-group-button-hover")),
                r.addClass(s.call(t, "jqx-fill-state-hover"))
            }
        },
        _mouseLeaveHandler: function(e) {
            var t = e.data.self
              , r = i(e.currentTarget);
            if (!t._isDisabled(r) && t.enableHover) {
                var s = t.toThemeProperty;
                r.removeClass(s.call(t, "jqx-group-button-hover")),
                r.removeClass(s.call(t, "jqx-fill-state-hover"))
            }
        },
        _mouseDownHandler: function(e) {
            var t = e.data.self
              , r = i(e.currentTarget);
            if (!t._isDisabled(r)) {
                t._pressed = r;
                var s = t.toThemeProperty;
                r.addClass(s.call(t, "jqx-group-button-pressed")),
                r.addClass(s.call(t, "jqx-fill-state-pressed"))
            }
        },
        _mouseUpHandler: function(e) {
            var t = e.data.self
              , r = i(e.currentTarget);
            t._isDisabled(r) || (t._handleSelection(r),
            t._pressed = null,
            r = t._buttonId[r[0].id],
            t._raiseEvent(2, {
                index: r.num,
                button: r.btn
            }))
        },
        _isDisabled: function(e) {
            return !(!e || !e[0]) && this._buttonId[e[0].id].disabled
        },
        _documentUpHandler: function(e) {
            var t = e.data.self
              , i = t._pressed;
            i && !t._buttonId[i[0].id].selected && (i.removeClass(t.toThemeProperty("jqx-fill-state-pressed")),
            t._pressed = null)
        },
        _addButtonListeners: function(e) {
            var t = this
              , r = t.addHandler
              , s = t._getEvent;
            r(e, s.call(t, "mouseenter"), t._mouseEnterHandler, {
                self: t
            }),
            r(e, s.call(t, "mouseleave"), t._mouseLeaveHandler, {
                self: t
            }),
            r(e, s.call(t, "mousedown"), t._mouseDownHandler, {
                self: t
            }),
            r(e, s.call(t, "mouseup"), t._mouseUpHandler, {
                self: t
            }),
            r(i(document), s.call(t, "mouseup"), t._documentUpHandler, {
                self: t
            })
        },
        _removeButtonListeners: function(e) {
            var t = this
              , r = t.removeHandler
              , s = t._getEvent;
            r(e, s.call(t, "mouseenter"), t._mouseEnterHandler),
            r(e, s.call(t, "mouseleave"), t._mouseLeaveHandler),
            r(e, s.call(t, "mousedown"), t._mouseDownHandler),
            r(e, s.call(t, "mouseup"), t._mouseUpHandler),
            r(i(document), s.call(t, "mouseup"), t._documentUpHandler)
        },
        _handleSelection: function(e) {
            var t = this;
            "radio" === t.mode ? t._handleRadio(e) : "checkbox" === t.mode ? t._handleCheckbox(e) : t._handleDefault(e)
        },
        _handleRadio: function(e) {
            var t = this
              , i = t._getSelectedButton();
            for (var r in i && i.btn[0].id !== e[0].id && t._unselectButton(i.btn, !0),
            t._buttonId)
                t._buttonId[r].selected = !0,
                t._unselectButton(t._buttonId[r].btn, !1);
            t._selectButton(e, !0)
        },
        _handleCheckbox: function(e) {
            var t = this
              , i = t._buttonId[e[0].id];
            i.selected ? t._unselectButton(i.btn, !0) : t._selectButton(e, !0)
        },
        _handleDefault: function(e) {
            var t = this;
            for (var i in t._selectButton(e, !1),
            t._buttonId)
                t._buttonId[i].selected = !0,
                t._unselectButton(t._buttonId[i].btn, !1)
        },
        _getSelectedButton: function() {
            var e = this;
            for (var t in e._buttonId)
                if (e._buttonId[t].selected)
                    return e._buttonId[t];
            return null
        },
        _getSelectedButtons: function() {
            var e = this
              , t = [];
            for (var i in e._buttonId)
                e._buttonId[i].selected && t.push(e._buttonId[i].num);
            return t
        },
        _getButtonByIndex: function(e) {
            var t = this;
            for (var i in t._buttonId)
                if (t._buttonId[i].num === e)
                    return t._buttonId[i];
            return null
        },
        _selectButton: function(e, t) {
            var r = this
              , s = r._buttonId[e[0].id];
            if (!s.selected) {
                var n = r.toThemeProperty;
                s.btn.addClass(n.call(this, "jqx-group-button-pressed")),
                s.btn.addClass(n.call(this, "jqx-fill-state-pressed")),
                s.selected = !0,
                t && r._raiseEvent(0, {
                    index: s.num,
                    button: s.btn
                }),
                i.jqx.aria(s.btn, "aria-checked", !0)
            }
        },
        _unselectButton: function(e, t) {
            var r = this
              , s = r._buttonId[e[0].id];
            if (s.selected) {
                var n = r.toThemeProperty;
                s.btn.removeClass(n.call(this, "jqx-group-button-pressed")),
                s.btn.removeClass(n.call(this, "jqx-fill-state-pressed")),
                s.selected = !1,
                t && r._raiseEvent(1, {
                    index: s.num,
                    button: s.btn
                }),
                i.jqx.aria(s.btn, "aria-checked", !1)
            }
        },
        setSelection: function(e) {
            var t = this;
            if (-1 !== e)
                if ("checkbox" === t.mode)
                    if ("number" == typeof e)
                        t._setSelection(e);
                    else
                        for (var i = 0; i < e.length; i += 1)
                            t._setSelection(e[i]);
                else
                    "number" == typeof e && "radio" === t.mode && t._setSelection(e);
            else
                t.clearSelection()
        },
        _setSelection: function(e) {
            var t = this._getButtonByIndex(e);
            t && this._handleSelection(t.btn)
        },
        getSelection: function() {
            var e = this;
            if ("radio" === e.mode) {
                if (e._getSelectedButton())
                    return e._getSelectedButton().num
            } else if ("checkbox" === e.mode)
                return e._getSelectedButtons()
        },
        disable: function() {
            var e, t = this;
            for (var r in t.disabled = !0,
            t._buttonId)
                e = t._buttonId[r],
                t.disableAt(e.num);
            i.jqx.aria(t, "aria-disabled", !0)
        },
        enable: function() {
            var e, t = this;
            for (var r in t.disabled = !1,
            t._buttonId)
                e = t._buttonId[r],
                t.enableAt(e.num);
            i.jqx.aria(t, "aria-disabled", !1)
        },
        disableAt: function(e) {
            var t = this._getButtonByIndex(e);
            t.disabled || (t.disabled = !0,
            t.btn.addClass(this.toThemeProperty("jqx-fill-state-disabled")))
        },
        enableAt: function(e) {
            var t = this._getButtonByIndex(e);
            t.disabled && (t.disabled = !1,
            t.btn.removeClass(this.toThemeProperty("jqx-fill-state-disabled")))
        },
        _handleButtonId: function(e, t) {
            var i = e[0].id
              , r = {
                btn: e,
                num: t,
                selected: !1
            };
            return i || (i = this._baseId + e.index()),
            e[0].id = i,
            this._buttonId[i] = r,
            i
        },
        _raiseEvent: function(e, t) {
            var r = i.Event(this._events[e]);
            return r.args = t,
            this.host.trigger(r)
        },
        _unselectAll: function() {
            for (var e in this._buttonId)
                this._unselectButton(this._buttonId[e].btn, !1)
        },
        clearSelection: function() {
            this._unselectAll()
        },
        propertyChangedHandler: function(e, t, r, s) {
            if ("theme" === t && null !== s && i.jqx.utilities.setTheme(r, s, e.host),
            "template" === t && e.refresh(),
            "mode" === t)
                return e._unselectAll(),
                void e.refresh();
            "disabled" === t ? s ? e.disable() : e.enable() : e.refresh()
        }
    })
}
, function(e, t) {
    var i;
    (i = jqxBaseFramework).jqx.jqxWidget("jqxMenu", "", {}),
    i.extend(i.jqx._jqxMenu.prototype, {
        defineInstance: function() {
            var e = {
                items: new Array,
                mode: "horizontal",
                width: null,
                height: null,
                minimizeWidth: "auto",
                easing: "easeInOutSine",
                animationShowDuration: 200,
                animationHideDuration: 200,
                autoCloseInterval: 0,
                animationHideDelay: 100,
                animationShowDelay: 10,
                menuElements: new Array,
                autoSizeMainItems: !1,
                autoCloseOnClick: !0,
                autoCloseOnMouseLeave: !0,
                enableRoundedCorners: !0,
                disabled: !1,
                autoOpenPopup: !0,
                enableHover: !0,
                autoOpen: !0,
                autoGenerate: !0,
                clickToOpen: !1,
                showTopLevelArrows: !1,
                touchMode: "auto",
                source: null,
                popupZIndex: 1e3,
                rtl: !1,
                keyboardNavigation: !1,
                lockFocus: !1,
                title: "",
                events: ["shown", "closed", "itemclick", "initialized", "open", "close"]
            };
            return this === i.jqx._jqxMenu.prototype ? e : (i.extend(!0, this, e),
            e)
        },
        createInstance: function(e) {
            var t = this;
            if (this.host.attr("role", "menubar"),
            i.jqx.utilities.resize(this.host, function() {
                t.refresh()
            }, !1, "popup" != this.mode),
            "auto" != this.minimizeWidth && null != this.minimizeWidth && this.width && -1 == this.width.toString().indexOf("%") && i(window).resize(function() {
                t.refresh()
            }),
            this.host.css("outline", "none"),
            this.source && null != this.source) {
                var r = this.loadItems(this.source);
                this.element.innerHTML = r
            }
            if (this._tmpHTML = this.element.innerHTML,
            this.element.innerHTML.indexOf("UL")) {
                var s = this.host.find("ul:first");
                s.length > 0 && this._createMenu(s[0])
            }
            this.host.data("autoclose", {}),
            this._render(),
            this._setSize(),
            i.jqx.browser.msie && i.jqx.browser.version < 8 && this.host.attr("hideFocus", !0)
        },
        focus: function() {
            try {
                if ("popup" === this.mode && this.keyboardNavigation && this.host.closest("div.jqx-menu-wrapper").focus(),
                this.keyboardNavigation) {
                    this.host.focus();
                    var e = this
                      , t = function() {
                        if (i.jqx.isHidden(i(e.items[0].element))) {
                            var t = e._nextVisibleItem(e.items[0], 0);
                            t && (i(t.element).addClass(e.toThemeProperty("jqx-fill-state-focus")),
                            e.activeItem = t)
                        } else
                            i(e.items[0].element).addClass(e.toThemeProperty("jqx-fill-state-focus")),
                            e.activeItem = e.items[0]
                    };
                    this.activeItem ? i.jqx.isHidden(i(this.activeItem.element)) ? (i(this.activeItem.element).removeClass(this.toThemeProperty("jqx-fill-state-focus")),
                    t()) : i(this.activeItem.element).addClass(this.toThemeProperty("jqx-fill-state-focus")) : t()
                }
            } catch (e) {}
        },
        loadItems: function(e, t) {
            if (null != e) {
                if (0 == e.length)
                    return "";
                var r = this;
                this.items = new Array;
                var s = '<ul class="jqx-menu-ul">';
                return t && (s = '<ul class="jqx-menu-ul" style="width:' + t + ';">'),
                i.map(e, function(e) {
                    if (null == e)
                        return null;
                    s += r._parseItem(e)
                }),
                s += "</ul>"
            }
        },
        _parseItem: function(e) {
            var t = "";
            if (null == e)
                return null;
            var i = e.label;
            !e.label && e.html && (i = e.html),
            i || (i = "Item"),
            "string" == typeof e && (i = e),
            null != e.selected && e.selected;
            var r = !1;
            return null != e.disabled && e.disabled && (r = !0),
            t += "<li",
            r && (t += ' item-disabled="true" '),
            e.label && !e.html && (t += ' item-label="' + i + '" '),
            null != e.value && (t += ' item-value="' + e.value + '" '),
            null != e.id && (t += ' id="' + e.id + '" '),
            t += ">" + i,
            e.items && (e.subMenuWidth ? t += this.loadItems(e.items, e.subMenuWidth) : t += this.loadItems(e.items)),
            t += "</li>"
        },
        _setSize: function() {
            if (null != this.width && -1 != this.width.toString().indexOf("%") ? this.host.width(this.width) : null != this.width && -1 != this.width.toString().indexOf("px") ? this.host.width(this.width) : null == this.width || isNaN(this.width) || this.host.width(this.width),
            null != this.height && -1 != this.height.toString().indexOf("%") ? this.host.height(this.height) : null != this.height && -1 != this.height.toString().indexOf("px") ? this.host.height(this.height) : null == this.height || isNaN(this.height) || this.host.height(this.height),
            null === this.height && this.host.height("auto"),
            null != this.minimizeWidth && "popup" != this.mode) {
                var e = i(window).width();
                if (!i.jqx.response) {
                    var t = !1;
                    navigator.userAgent.match(/Windows|Linux|MacOS/) && (navigator.userAgent.indexOf("Windows Phone") >= 0 || navigator.userAgent.indexOf("WPDesktop") >= 0 || navigator.userAgent.indexOf("IEMobile") >= 0 || navigator.userAgent.indexOf("ZuneWP7") >= 0 || (t = !0));
                    var r = this.minimizeWidth;
                    if (t && "auto" == this.minimizeWidth)
                        return
                }
                if ("auto" == this.minimizeWidth && i.jqx.response) {
                    var s = new i.jqx.response;
                    "Phone" != s.device.type && "Tablet" != s.device.type || this.minimized || this.minimize()
                } else
                    e < r && !this.minimized ? this.minimize() : this.minimized && e >= r && this.restore()
            }
        },
        minimize: function() {
            if (!this.minimized) {
                var e = this;
                if (this.host.addClass(this.toThemeProperty("jqx-menu-minimized")),
                this.minimized = !0,
                this._tmpMode = this.mode,
                this.mode = "simple",
                (s = this.host.closest("div.jqx-menu-wrapper")).remove(),
                i("#menuWrapper" + this.element.id).remove(),
                i.each(this.items, function() {
                    i(this.element),
                    i(this.subMenuElement).closest("div.jqx-menu-popup").remove()
                }),
                this.source) {
                    var t = this.loadItems(this.source);
                    this.element.innerHTML = t,
                    this._tmpHTML = this.element.innerHTML
                }
                if (this.element.innerHTML = this._tmpHTML,
                this.element.innerHTML.indexOf("UL")) {
                    var r = this.host.find("ul:first");
                    r.length > 0 && this._createMenu(r[0])
                }
                this._render();
                var s, n = this.host.find("ul:first");
                n.wrap('<div class="jqx-menu-wrapper" style="z-index:' + this.popupZIndex + '; padding: 0px; display: none; margin: 0px; height: auto; width: auto; position: absolute; top: 0; left: 0; display: block; visibility: visible;"></div>'),
                (s = n.closest("div.jqx-menu-wrapper"))[0].id = "menuWrapper" + this.element.id,
                s.detach(),
                s.appendTo(i(document.body)),
                s.addClass(this.toThemeProperty("jqx-widget")),
                s.addClass(this.toThemeProperty("jqx-menu")),
                s.addClass(this.toThemeProperty("jqx-menu-minimized")),
                s.addClass(this.toThemeProperty("jqx-widget-header")),
                n.children().hide(),
                s.hide(),
                s.find("ul").addClass(this.toThemeProperty("jqx-menu-ul-minimized")),
                this.minimizedItem = i("<div></div>"),
                this.minimizedItem.addClass(this.toThemeProperty("jqx-item")),
                this.minimizedItem.addClass(this.toThemeProperty("jqx-menu-item-top")),
                this.addHandler(s, "keydown", function(t) {
                    return e.handleKeyDown(t)
                }),
                this.minimizedItem.addClass(this.toThemeProperty("jqx-menu-minimized-button")),
                this.minimizedItem.prependTo(this.host),
                this.titleElement = i("<div>" + this.title + "</div>"),
                this.titleElement.addClass(this.toThemeProperty("jqx-item")),
                this.titleElement.addClass(this.toThemeProperty("jqx-menu-title")),
                this.titleElement.prependTo(this.host),
                i("<div style='clear:both;'></div>").insertAfter(this.minimizedItem),
                e.minimizedHidden = !0;
                var o = function(t) {
                    if (e.minimizedHidden) {
                        s.find("ul:first").children().show(),
                        e.minimizedHidden = !1,
                        s.show(),
                        s.css("opacity", 0),
                        s.css("left", -s.outerWidth());
                        var i = !1
                          , r = s.width();
                        "right" == e.minimizedItem.css("float") && (s.css("left", e.host.coord().left + e.host.width() + r),
                        i = !0),
                        s.css("top", e.host.coord().top + e.host.height()),
                        s.animate({
                            left: i ? e.host.coord().left + e.host.width() - r : e.host.coord().left,
                            opacity: .95
                        }, e.animationShowDuration, function() {})
                    } else
                        !function(t) {
                            e.minimizedHidden = !0,
                            e.minimizedItem.show();
                            var i = !1;
                            "right" == e.minimizedItem.css("float") && (i = !0),
                            s.animate({
                                left: i ? e.host.coord().left + e.host.width() + s.width() : -s.outerWidth(),
                                opacity: 0
                            }, e.animationHideDuration, function() {
                                s.find("ul:first").children().hide(),
                                s.hide()
                            })
                        }();
                    e._raiseEvent("2", {
                        type: "mouse",
                        item: e.minimizedItem[0],
                        event: t
                    }),
                    e._setSize()
                };
                this.addHandler(i(window), "orientationchange.jqxmenu" + this.element.id, function(t) {
                    setTimeout(function() {
                        if (!e.minimizedHidden) {
                            var t = s.width()
                              , i = !1;
                            t = s.width(),
                            "right" == e.minimizedItem.css("float") && (i = !0),
                            s.css("top", e.host.coord().top + e.host.height()),
                            s.css({
                                left: i ? e.host.coord().left + e.host.width() - t : e.host.coord().left
                            })
                        }
                    }, 25)
                }),
                this.addHandler(this.minimizedItem, "click", function(e) {
                    o(e)
                })
            }
        },
        restore: function() {
            if (this.minimized) {
                if (this.host.find("ul").removeClass(this.toThemeProperty("jqx-menu-ul-minimized")),
                this.host.removeClass(this.toThemeProperty("jqx-menu-minimized")),
                this.minimized = !1,
                this.mode = this._tmpMode,
                this.minimizedItem && this.minimizedItem.remove(),
                i("#menuWrapper" + this.element.id).remove(),
                this.source) {
                    var e = this.loadItems(this.source);
                    this.element.innerHTML = e,
                    this._tmpHTML = e
                }
                if (this.element.innerHTML = this._tmpHTML,
                this.element.innerHTML.indexOf("UL")) {
                    var t = this.host.find("ul:first");
                    t.length > 0 && this._createMenu(t[0])
                }
                this._setSize(),
                this._render()
            }
        },
        isTouchDevice: function() {
            if (null != this._isTouchDevice)
                return this._isTouchDevice;
            var e = i.jqx.mobile.isTouchDevice();
            return 1 == this.touchMode ? e = !0 : 0 == this.touchMode && (e = !1),
            e && (this.host.addClass(this.toThemeProperty("jqx-touch")),
            i(".jqx-menu-item").addClass(this.toThemeProperty("jqx-touch"))),
            this._isTouchDevice = e,
            e
        },
        refresh: function(e) {
            e || this._setSize()
        },
        resize: function(e, t) {
            this.width = e,
            this.height = t,
            this.refresh()
        },
        _closeAll: function(e) {
            var t = null != e ? e.data : this
              , r = t.items;
            i.each(r, function() {
                var e = this;
                1 == e.hasItems && e.isOpen && t._closeItem(t, e)
            }),
            "popup" == t.mode && null != e && (t._isRightClick(e) || t.close())
        },
        closeItem: function(e) {
            if (null == e)
                return !1;
            var t = e
              , r = document.getElementById(t)
              , s = this;
            return i.each(s.items, function() {
                var e = this;
                1 == e.isOpen && e.element == r && (s._closeItem(s, e),
                e.parentId)
            }),
            !0
        },
        openItem: function(e) {
            if (null == e)
                return !1;
            var t = e
              , r = document.getElementById(t)
              , s = this;
            return i.each(s.items, function() {
                var e = this;
                0 == e.isOpen && e.element == r && (s._openItem(s, e),
                e.parentId && s.openItem(e.parentId))
            }),
            !0
        },
        _getClosedSubMenuOffset: function(e) {
            var t = i(e.subMenuElement)
              , r = -t.outerHeight()
              , s = -t.outerWidth()
              , n = 0 == e.level && "horizontal" == this.mode;
            switch (n ? s = 0 : r = 0,
            e.openVerticalDirection) {
            case "up":
            case "center":
                r = t.outerHeight()
            }
            switch (e.openHorizontalDirection) {
            case this._getDir("left"):
            case "center":
                s = n ? 0 : t.outerWidth()
            }
            return {
                left: s,
                top: r
            }
        },
        _closeItem: function(e, t, r, s) {
            if (null == e || null == t)
                return !1;
            var n = i(t.subMenuElement)
              , o = 0 == t.level && "horizontal" == this.mode
              , a = this._getClosedSubMenuOffset(t)
              , l = a.top
              , d = a.left
              , h = (i(t.element),
            n.closest("div.jqx-menu-popup"));
            if (null != h) {
                var c = e.animationHideDelay;
                1 == s && (c = 0),
                n.data("timer") && null != n.data("timer").show && (clearTimeout(n.data("timer").show),
                n.data("timer").show = null);
                var u = function() {
                    t.isOpen = !1,
                    o ? n.stop().animate({
                        top: l
                    }, e.animationHideDuration, function() {
                        i(t.element).removeClass(e.toThemeProperty("jqx-fill-state-pressed")),
                        i(t.element).removeClass(e.toThemeProperty("jqx-menu-item-top-selected")),
                        i(t.element).removeClass(e.toThemeProperty("jqx-rc-b-expanded")),
                        h.removeClass(e.toThemeProperty("jqx-rc-t-expanded"));
                        var r = i(t.arrow);
                        r.length > 0 && e.showTopLevelArrows && (r.removeClass(),
                        "down" == t.openVerticalDirection ? (r.addClass(e.toThemeProperty("jqx-menu-item-arrow-down")),
                        r.addClass(e.toThemeProperty("jqx-icon-arrow-down"))) : (r.addClass(e.toThemeProperty("jqx-menu-item-arrow-up")),
                        r.addClass(e.toThemeProperty("jqx-icon-arrow-up")))),
                        i.jqx.aria(i(t.element), "aria-expanded", !1),
                        h.css({
                            display: "none"
                        }),
                        0 == e.animationHideDuration && n.css({
                            top: l
                        }),
                        e._raiseEvent("1", t)
                    }) : (i.jqx.browser.msie,
                    n.stop().animate({
                        left: d
                    }, e.animationHideDuration, function() {
                        var r;
                        0 == e.animationHideDuration && n.css({
                            left: d
                        }),
                        t.level > 0 ? (i(t.element).removeClass(e.toThemeProperty("jqx-fill-state-pressed")),
                        i(t.element).removeClass(e.toThemeProperty("jqx-menu-item-selected")),
                        (r = i(t.arrow)).length > 0 && (r.removeClass(),
                        "left" != t.openHorizontalDirection ? (r.addClass(e.toThemeProperty("jqx-menu-item-arrow-" + e._getDir("right"))),
                        r.addClass(e.toThemeProperty("jqx-icon-arrow-" + e._getDir("right")))) : (r.addClass(e.toThemeProperty("jqx-menu-item-arrow-" + e._getDir("left"))),
                        r.addClass(e.toThemeProperty("jqx-icon-arrow-" + e._getDir("left")))))) : (i(t.element).removeClass(e.toThemeProperty("jqx-fill-state-pressed")),
                        i(t.element).removeClass(e.toThemeProperty("jqx-menu-item-top-selected")),
                        (r = i(t.arrow)).length > 0 && (r.removeClass(),
                        "left" != t.openHorizontalDirection ? (r.addClass(e.toThemeProperty("jqx-menu-item-arrow-top-" + e._getDir("right"))),
                        r.addClass(e.toThemeProperty("jqx-icon-arrow-" + e._getDir("right")))) : (r.addClass(e.toThemeProperty("jqx-menu-item-arrow-top-" + e._getDir("left"))),
                        r.addClass(e.toThemeProperty("jqx-icon-arrow-" + e._getDir("left")))))),
                        i.jqx.aria(i(t.element), "aria-expanded", !1),
                        h.css({
                            display: "none"
                        }),
                        e._raiseEvent("1", t)
                    }))
                };
                if (c > 0 ? n.data("timer") && (n.data("timer").hide = setTimeout(function() {
                    u()
                }, c)) : u(),
                null != r && r) {
                    var p = n.children();
                    i.each(p, function() {
                        e.menuElements[this.id] && e.menuElements[this.id].isOpen && (i(e.menuElements[this.id].subMenuElement),
                        e._closeItem(e, e.menuElements[this.id], !0, !0))
                    })
                }
            }
        },
        getSubItems: function(e, t) {
            if (null == e)
                return !1;
            var r = this
              , s = new Array;
            null != t && i.extend(s, t);
            var n = e
              , o = this.menuElements[n]
              , a = i(o.subMenuElement).find(".jqx-menu-item");
            return i.each(a, function() {
                s[this.id] = r.menuElements[this.id];
                var e = r.getSubItems(this.id, s);
                i.extend(s, e)
            }),
            s
        },
        disable: function(e, t) {
            if (null != e) {
                var r = e
                  , s = this;
                if (this.menuElements[r]) {
                    var n = this.menuElements[r];
                    n.disabled = t;
                    var o = i(n.element);
                    n.element.disabled = t,
                    i.each(o.children(), function() {
                        this.disabled = t
                    }),
                    t ? (o.addClass(s.toThemeProperty("jqx-menu-item-disabled")),
                    o.addClass(s.toThemeProperty("jqx-fill-state-disabled"))) : (o.removeClass(s.toThemeProperty("jqx-menu-item-disabled")),
                    o.removeClass(s.toThemeProperty("jqx-fill-state-disabled")))
                }
            }
        },
        getItem: function(e) {
            return this.menuElements[e] ? this.menuElements[e] : null
        },
        disableItem: function(e) {
            this.disable(e, !0)
        },
        hideItem: function(e) {
            if (this.menuElements[e]) {
                var t = this.menuElements[e];
                i(t.element).hide()
            }
        },
        showItem: function(e) {
            if (this.menuElements[e]) {
                var t = this.menuElements[e];
                i(t.element).show()
            }
        },
        enableItem: function(e) {
            this.disable(e, !1)
        },
        _setItemProperty: function(e, t, i) {
            if (null != e) {
                var r = e;
                if (this.menuElements[r]) {
                    var s = this.menuElements[r];
                    s[t] && (s[t] = i)
                }
            }
        },
        setItemOpenDirection: function(e, t, r) {
            if (null != e) {
                var s = e
                  , n = this
                  , o = i.jqx.browser.msie && i.jqx.browser.version < 8;
                if (this.menuElements[s]) {
                    var a = this.menuElements[s];
                    if (null != t && (a.openHorizontalDirection = t,
                    a.hasItems && a.level > 0 && null != (d = i(a.element)))) {
                        var l = i(a.arrow);
                        null == a.arrow && (l = i('<span id="arrow' + d[0].id + '"></span>'),
                        o ? l.appendTo(d) : l.prependTo(d),
                        a.arrow = l[0]),
                        l.removeClass(),
                        "left" == a.openHorizontalDirection ? (l.addClass(n.toThemeProperty("jqx-menu-item-arrow-" + n._getDir("left"))),
                        l.addClass(n.toThemeProperty("jqx-icon-arrow-" + n._getDir("left")))) : (l.addClass(n.toThemeProperty("jqx-menu-item-arrow-" + n._getDir("right"))),
                        l.addClass(n.toThemeProperty("jqx-icon-arrow-" + n._getDir("right")))),
                        l.css("visibility", "inherit"),
                        o ? (l.css("display", "inline-block"),
                        l.css("float", "none")) : (l.css("display", "block"),
                        l.css("float", "right"))
                    }
                    if (null != r) {
                        a.openVerticalDirection = r,
                        l = i(a.arrow);
                        var d = i(a.element);
                        if (!n.showTopLevelArrows)
                            return;
                        null != d && (null == a.arrow && (l = i('<span id="arrow' + d[0].id + '"></span>'),
                        o ? l.appendTo(d) : l.prependTo(d),
                        a.arrow = l[0]),
                        l.removeClass(),
                        "down" == a.openVerticalDirection ? (l.addClass(n.toThemeProperty("jqx-menu-item-arrow-down")),
                        l.addClass(n.toThemeProperty("jqx-icon-arrow-down"))) : (l.addClass(n.toThemeProperty("jqx-menu-item-arrow-up")),
                        l.addClass(n.toThemeProperty("jqx-icon-arrow-up"))),
                        l.css("visibility", "inherit"),
                        o ? (l.css("display", "inline-block"),
                        l.css("float", "none")) : (l.css("display", "block"),
                        l.css("float", "right")))
                    }
                }
            }
        },
        _getSiblings: function(e) {
            for (var t = new Array, i = 0, r = 0; r < this.items.length; r++)
                this.items[r] != e && this.items[r].parentId == e.parentId && this.items[r].hasItems && (t[i++] = this.items[r]);
            return t
        },
        _openItem: function(e, t, r) {
            if (null == e || null == t)
                return !1;
            if (t.isOpen)
                return !1;
            if (t.disabled)
                return !1;
            if (e.disabled)
                return !1;
            var s = e.popupZIndex;
            null != r && (s = r);
            var n = e.animationHideDuration;
            e.animationHideDuration = 0,
            e._closeItem(e, t, !0, !0),
            e.animationHideDuration = n,
            i(t.element).focus();
            var o = [5, 5]
              , a = i(t.subMenuElement);
            null != a && a.stop(),
            a.data("timer") && null != a.data("timer").hide && clearTimeout(a.data("timer").hide);
            var l = a.closest("div.jqx-menu-popup")
              , d = i(t.element)
              , h = 0 == t.level ? this._getOffset(t.element) : d.position();
            if (t.level > 0 && this.hasTransform) {
                var c = parseInt(d.coord().top) - parseInt(this._getOffset(t.element).top);
                h.top += c
            }
            0 == t.level && "popup" == this.mode && (h = d.coord());
            var u = 0 == t.level && "horizontal" == this.mode
              , p = u ? h.left : null != this.menuElements[t.parentId] && null != this.menuElements[t.parentId].subMenuElement ? parseInt(i(i(this.menuElements[t.parentId].subMenuElement).closest("div.jqx-menu-popup")).outerWidth()) - o[0] : parseInt(a.outerWidth());
            if (l.css({
                visibility: "visible",
                display: "block",
                left: p,
                top: u ? h.top + d.outerHeight() : h.top,
                zIndex: s
            }),
            a.css("display", "block"),
            "horizontal" != this.mode && 0 == t.level) {
                var f = this._getOffset(this.element);
                l.css("left", -1 + f.left + this.host.outerWidth()),
                a.css("left", -a.outerWidth())
            } else {
                var m = this._getClosedSubMenuOffset(t);
                a.css("left", m.left),
                a.css("top", m.top)
            }
            l.css({
                height: parseInt(a.outerHeight()) + parseInt(o[1]) + "px"
            });
            var g = 0
              , v = 0;
            switch (t.openVerticalDirection) {
            case "up":
                if (u) {
                    a.css("top", a.outerHeight()),
                    g = o[1];
                    var w = parseInt(a.parent().css("padding-bottom"));
                    isNaN(w) && (w = 0),
                    w > 0 && l.addClass(this.toThemeProperty("jqx-menu-popup-clear")),
                    a.css("top", a.outerHeight() - w),
                    l.css({
                        display: "block",
                        top: h.top - l.outerHeight(),
                        zIndex: s
                    })
                } else
                    g = o[1],
                    a.css("top", a.outerHeight()),
                    l.css({
                        display: "block",
                        top: h.top - l.outerHeight() + o[1] + d.outerHeight(),
                        zIndex: s
                    });
                break;
            case "center":
                u ? (a.css("top", 0),
                l.css({
                    display: "block",
                    top: h.top - l.outerHeight() / 2 + o[1],
                    zIndex: s
                })) : (a.css("top", 0),
                l.css({
                    display: "block",
                    top: h.top + d.outerHeight() / 2 - l.outerHeight() / 2 + o[1],
                    zIndex: s
                }))
            }
            switch (t.openHorizontalDirection) {
            case this._getDir("left"):
                u ? l.css({
                    left: h.left - (l.outerWidth() - d.outerWidth() - o[0])
                }) : (v = 0,
                a.css("left", l.outerWidth()),
                l.css({
                    left: h.left - l.outerWidth() + 2 * t.level
                }));
                break;
            case "center":
                u ? l.css({
                    left: h.left - (l.outerWidth() / 2 - d.outerWidth() / 2 - o[0] / 2)
                }) : (l.css({
                    left: h.left - (l.outerWidth() / 2 - d.outerWidth() / 2 - o[0] / 2)
                }),
                a.css("left", l.outerWidth()))
            }
            if (u) {
                if (parseInt(a.css("top")) == g)
                    return void (t.isOpen = !0)
            } else if (parseInt(a.css("left")) == v)
                return void t.isOpen;
            i.each(e._getSiblings(t), function() {
                e._closeItem(e, this, !0, !0)
            });
            var x = i.data(e.element, "animationHideDelay");
            e.animationHideDelay = x,
            this.autoCloseInterval > 0 && (null != this.host.data("autoclose") && null != this.host.data("autoclose").close && clearTimeout(this.host.data("autoclose").close),
            null != this.host.data("autoclose") && (this.host.data("autoclose").close = setTimeout(function() {
                e._closeAll()
            }, this.autoCloseInterval))),
            a.data("timer") && (a.data("timer").show = setTimeout(function() {
                if (null != l)
                    if (u)
                        a.stop(),
                        a.css("left", v),
                        i.jqx.browser.msie,
                        d.addClass(e.toThemeProperty("jqx-fill-state-pressed")),
                        d.addClass(e.toThemeProperty("jqx-menu-item-top-selected")),
                        "down" == t.openVerticalDirection ? (i(t.element).addClass(e.toThemeProperty("jqx-rc-b-expanded")),
                        l.addClass(e.toThemeProperty("jqx-rc-t-expanded"))) : (i(t.element).addClass(e.toThemeProperty("jqx-rc-t-expanded")),
                        l.addClass(e.toThemeProperty("jqx-rc-b-expanded"))),
                        (r = i(t.arrow)).length > 0 && e.showTopLevelArrows && (r.removeClass(),
                        "down" == t.openVerticalDirection ? (r.addClass(e.toThemeProperty("jqx-menu-item-arrow-down-selected")),
                        r.addClass(e.toThemeProperty("jqx-icon-arrow-down"))) : (r.addClass(e.toThemeProperty("jqx-menu-item-arrow-up-selected")),
                        r.addClass(e.toThemeProperty("jqx-icon-arrow-up")))),
                        0 == e.animationShowDuration ? (a.css({
                            top: g
                        }),
                        t.isOpen = !0,
                        e._raiseEvent("0", t),
                        i.jqx.aria(i(t.element), "aria-expanded", !0)) : a.animate({
                            top: g
                        }, e.animationShowDuration, e.easing, function() {
                            t.isOpen = !0,
                            i.jqx.aria(i(t.element), "aria-expanded", !0),
                            e._raiseEvent("0", t)
                        });
                    else {
                        var r;
                        a.stop(),
                        a.css("top", g),
                        i.jqx.browser.msie,
                        t.level > 0 ? (d.addClass(e.toThemeProperty("jqx-fill-state-pressed")),
                        d.addClass(e.toThemeProperty("jqx-menu-item-selected")),
                        (r = i(t.arrow)).length > 0 && (r.removeClass(),
                        "left" != t.openHorizontalDirection ? (r.addClass(e.toThemeProperty("jqx-menu-item-arrow-" + e._getDir("right") + "-selected")),
                        r.addClass(e.toThemeProperty("jqx-icon-arrow-" + e._getDir("right")))) : (r.addClass(e.toThemeProperty("jqx-menu-item-arrow-" + e._getDir("left") + "-selected")),
                        r.addClass(e.toThemeProperty("jqx-icon-arrow-" + e._getDir("left")))))) : (d.addClass(e.toThemeProperty("jqx-fill-state-pressed")),
                        d.addClass(e.toThemeProperty("jqx-menu-item-top-selected")),
                        (r = i(t.arrow)).length > 0 && (r.removeClass(),
                        "left" != t.openHorizontalDirection ? (r.addClass(e.toThemeProperty("jqx-menu-item-arrow-" + e._getDir("right") + "-selected")),
                        r.addClass(e.toThemeProperty("jqx-icon-arrow-" + e._getDir("right")))) : (r.addClass(e.toThemeProperty("jqx-menu-item-arrow-" + e._getDir("left") + "-selected")),
                        r.addClass(e.toThemeProperty("jqx-icon-arrow-" + e._getDir("left")))))),
                        i.jqx.browser.msie,
                        0 == e.animationShowDuration ? (a.css({
                            left: v
                        }),
                        e._raiseEvent("0", t),
                        t.isOpen = !0,
                        i.jqx.aria(i(t.element), "aria-expanded", !0)) : a.animate({
                            left: v
                        }, e.animationShowDuration, e.easing, function() {
                            e._raiseEvent("0", t),
                            t.isOpen = !0,
                            i.jqx.aria(i(t.element), "aria-expanded", !0)
                        })
                    }
            }, this.animationShowDelay))
        },
        _getDir: function(e) {
            switch (e) {
            case "left":
                return this.rtl ? "right" : "left";
            case "right":
                return this.rtl ? "left" : "right"
            }
            return "left"
        },
        _applyOrientation: function(e, t) {
            var r = this
              , s = 0;
            if (r.host.removeClass(r.toThemeProperty("jqx-menu-horizontal")),
            r.host.removeClass(r.toThemeProperty("jqx-menu-vertical")),
            r.host.removeClass(r.toThemeProperty("jqx-menu")),
            r.host.removeClass(r.toThemeProperty("jqx-widget")),
            r.host.addClass(r.toThemeProperty("jqx-widget")),
            r.host.addClass(r.toThemeProperty("jqx-menu")),
            null != e && null != t && "popup" == t) {
                if (r.host.parent().length > 0 && r.host.parent().parent().length > 0 && r.host.parent().parent()[0] == document.body) {
                    var n = i.data(document.body, "jqxMenuOldHost" + r.element.id);
                    null != n && ((o = r.host.closest("div.jqx-menu-wrapper")).remove(),
                    o.appendTo(n),
                    r.host.css("display", "block"),
                    r.host.css("visibility", "visible"),
                    o.css("display", "block"),
                    o.css("visibility", "visible"))
                }
            } else
                null == e && null == t && i.data(document.body, "jqxMenuOldHost" + r.element.id, r.host.parent()[0]);
            switch (r.autoOpenPopup ? "popup" == r.mode ? (r.addHandler(i(document), "contextmenu." + r.element.id, function(e) {
                return !1
            }),
            r.addHandler(i(document), "mousedown.menu" + r.element.id, function(e) {
                r._openContextMenu(e)
            })) : (r.removeHandler(i(document), "contextmenu." + r.element.id),
            r.removeHandler(i(document), "mousedown.menu" + r.element.id)) : (r.removeHandler(i(document), "contextmenu." + r.element.id),
            r.removeHandler(i(document), "mousedown.menu" + r.element.id),
            r.addHandler(i(document), "contextmenu." + r.element.id, function(e) {
                if (e.target && e.target.className.indexOf && e.target.className.indexOf("jqx-menu") >= 0)
                    return !1
            })),
            r.rtl && r.host.addClass(r.toThemeProperty("jqx-rtl")),
            r.mode) {
            case "horizontal":
                r.host.addClass(r.toThemeProperty("jqx-widget-header")),
                r.host.addClass(r.toThemeProperty("jqx-menu-horizontal")),
                i.each(r.items, function() {
                    var e = this;
                    if ($element = i(e.element),
                    (t = i(e.arrow)).removeClass(),
                    e.hasItems && e.level > 0 && ((t = i('<span style="border: none; background-color: transparent;" id="arrow' + $element[0].id + '"></span>')).prependTo($element),
                    t.css("float", r._getDir("right")),
                    t.addClass(r.toThemeProperty("jqx-menu-item-arrow-" + r._getDir("right"))),
                    t.addClass(r.toThemeProperty("jqx-icon-arrow-" + r._getDir("right"))),
                    e.arrow = t[0]),
                    0 == e.level) {
                        if (i(e.element).css("float", r._getDir("left")),
                        !e.ignoretheme && e.hasItems && r.showTopLevelArrows) {
                            var t = i('<span style="border: none; background-color: transparent;" id="arrow' + $element[0].id + '"></span>')
                              , n = i.jqx.browser.msie && i.jqx.browser.version < 8;
                            null == e.arrow ? n ? t.appendTo($element) : t.prependTo($element) : t = i(e.arrow),
                            "down" == e.openVerticalDirection ? (t.addClass(r.toThemeProperty("jqx-menu-item-arrow-down")),
                            t.addClass(r.toThemeProperty("jqx-icon-arrow-down"))) : (t.addClass(r.toThemeProperty("jqx-menu-item-arrow-up")),
                            t.addClass(r.toThemeProperty("jqx-icon-arrow-up"))),
                            t.css("visibility", "inherit"),
                            n ? t.css("display", "inline-block") : (t.css("display", "block"),
                            t.css("float", "right")),
                            e.arrow = t[0]
                        } else
                            e.ignoretheme || !e.hasItems || r.showTopLevelArrows || null != e.arrow && ((t = i(e.arrow)).remove(),
                            e.arrow = null);
                        s = Math.max(s, $element.height())
                    }
                });
                break;
            case "vertical":
            case "popup":
            case "simple":
                if (r.host.addClass(r.toThemeProperty("jqx-menu-vertical")),
                i.each(r.items, function() {
                    var e = this;
                    if ($element = i(e.element),
                    e.hasItems && !e.ignoretheme) {
                        if (e.arrow && i(e.arrow).remove(),
                        "simple" == r.mode)
                            return !0;
                        var t = i('<span style="border: none; background-color: transparent;" id="arrow' + $element[0].id + '"></span>');
                        t.prependTo($element),
                        t.css("float", "right"),
                        0 == e.level ? (t.addClass(r.toThemeProperty("jqx-menu-item-arrow-top-" + r._getDir("right"))),
                        t.addClass(r.toThemeProperty("jqx-icon-arrow-" + r._getDir("right")))) : (t.addClass(r.toThemeProperty("jqx-menu-item-arrow-" + r._getDir("right"))),
                        t.addClass(r.toThemeProperty("jqx-icon-arrow-" + r._getDir("right")))),
                        e.arrow = t[0]
                    }
                    $element.css("float", "none")
                }),
                "popup" == r.mode) {
                    r.host.addClass(r.toThemeProperty("jqx-widget-content")),
                    r.host.wrap('<div tabindex=0 class="jqx-menu-wrapper" style="z-index:' + r.popupZIndex + '; border: none; background-color: transparent; padding: 0px; margin: 0px; position: absolute; top: 0; left: 0; display: block; visibility: visible;"></div>');
                    var o = r.host.closest("div.jqx-menu-wrapper");
                    r.host.addClass(r.toThemeProperty("jqx-popup")),
                    o[0].id = "menuWrapper" + r.element.id,
                    o.appendTo(i(document.body)),
                    r.addHandler(o, "keydown", function(e) {
                        return r.handleKeyDown(e)
                    })
                } else
                    r.host.addClass(r.toThemeProperty("jqx-widget-header"));
                if ("popup" == r.mode) {
                    var a = r.host.height();
                    r.host.css("position", "absolute"),
                    r.host.css("top", "0"),
                    r.host.css("left", "0"),
                    "simple" != r.mode && (r.host.height(a),
                    r.host.css("display", "none"))
                }
            }
            var l = r.isTouchDevice();
            r.autoCloseOnClick && (r.removeHandler(i(document), "mousedown.menu" + r.element.id, r._closeAfterClick),
            r.addHandler(i(document), "mousedown.menu" + r.element.id, r._closeAfterClick, r),
            l && (r.removeHandler(i(document), i.jqx.mobile.getTouchEventName("touchstart") + ".menu" + r.element.id, r._closeAfterClick, r),
            r.addHandler(i(document), i.jqx.mobile.getTouchEventName("touchstart") + ".menu" + r.element.id, r._closeAfterClick, r)))
        },
        _getBodyOffset: function() {
            var e = 0
              , t = 0;
            return "0px" != i("body").css("border-top-width") && (e = parseInt(i("body").css("border-top-width")),
            isNaN(e) && (e = 0)),
            "0px" != i("body").css("border-left-width") && (t = parseInt(i("body").css("border-left-width")),
            isNaN(t) && (t = 0)),
            {
                left: t,
                top: e
            }
        },
        _getOffset: function(e) {
            var t = i.jqx.mobile.isSafariMobileBrowser()
              , r = i(e).coord(!0)
              , s = r.top
              , n = r.left;
            "0px" != i("body").css("border-top-width") && (s = parseInt(s) + this._getBodyOffset().top),
            "0px" != i("body").css("border-left-width") && (n = parseInt(n) + this._getBodyOffset().left);
            var o = i.jqx.mobile.isWindowsPhone()
              , a = i.jqx.mobile.isTouchDevice();
            return this.hasTransform || null != t && t || o || a ? {
                left: i.jqx.mobile.getLeftPos(e),
                top: i.jqx.mobile.getTopPos(e)
            } : {
                left: n,
                top: s
            }
        },
        _isRightClick: function(e) {
            var t;
            return e || (e = window.event),
            e.which ? t = 3 == e.which : e.button && (t = 2 == e.button),
            t
        },
        _openContextMenu: function(e) {
            this._isRightClick(e) && this.open(parseInt(e.clientX) + 5, parseInt(e.clientY) + 5)
        },
        close: function() {
            var e = this;
            i.data(this.element, "contextMenuOpened" + this.element.id) && (this.host,
            i.each(e.items, function() {
                this.hasItems && e._closeItem(e, this)
            }),
            i.each(e.items, function() {
                1 == this.isOpen && ($submenu = i(this.subMenuElement),
                $submenu.closest("div.jqx-menu-popup").hide(this.animationHideDuration))
            }),
            this.host.hide(this.animationHideDuration),
            i.data(e.element, "contextMenuOpened" + this.element.id, !1),
            e._raiseEvent("1", e),
            e._raiseEvent("5"))
        },
        open: function(e, t) {
            if ("popup" == this.mode) {
                var r = 0;
                "block" == this.host.css("display") && (this.close(),
                r = this.animationHideDuration);
                var s = this;
                null != e && null != e || (e = 0),
                null != t && null != t || (t = 0),
                setTimeout(function() {
                    s.host.show(s.animationShowDuration),
                    s.host.css("visibility", "visible"),
                    i.data(s.element, "contextMenuOpened" + s.element.id, !0),
                    s._raiseEvent("0", s),
                    s._raiseEvent("4", {
                        left: e,
                        top: t
                    }),
                    s.host.css("z-index", s.popupZIndex),
                    null != e && null != t && s.host.css({
                        left: e,
                        top: t
                    }),
                    s.focus()
                }, r)
            }
        },
        _renderHover: function(e, t, i) {
            var r = this;
            t.ignoretheme || (this.addHandler(e, "mouseenter", function() {
                r.hoveredItem = t,
                t.disabled || t.separator || !r.enableHover || r.disabled || (t.level > 0 ? (e.addClass(r.toThemeProperty("jqx-fill-state-hover")),
                e.addClass(r.toThemeProperty("jqx-menu-item-hover"))) : (e.addClass(r.toThemeProperty("jqx-fill-state-hover")),
                e.addClass(r.toThemeProperty("jqx-menu-item-top-hover"))))
            }),
            this.addHandler(e, "mouseleave", function() {
                t.disabled || t.separator || !r.enableHover || r.disabled || (t.level > 0 ? (e.removeClass(r.toThemeProperty("jqx-fill-state-hover")),
                e.removeClass(r.toThemeProperty("jqx-menu-item-hover"))) : (e.removeClass(r.toThemeProperty("jqx-fill-state-hover")),
                e.removeClass(r.toThemeProperty("jqx-menu-item-top-hover"))))
            }))
        },
        _closeAfterClick: function(e) {
            var t = null != e ? e.data : this
              , r = !1;
            t.autoCloseOnClick && (i.each(i(e.target).parents(), function() {
                if (this.className.indexOf && -1 != this.className.indexOf("jqx-menu"))
                    return r = !0,
                    !1
            }),
            r || (e.data = t,
            t._closeAll(e)))
        },
        _autoSizeHorizontalMenuItems: function() {
            var e = this;
            if (e.autoSizeMainItems && "horizontal" == this.mode) {
                var t = this.maxHeight;
                parseInt(t) > parseInt(this.host.height()) && (t = parseInt(this.host.height())),
                t = parseInt(this.host.height()),
                i.each(this.items, function() {
                    if ($element = i(this.element),
                    0 == this.level && t > 0) {
                        var r = $element.children().length > 0 ? parseInt($element.children().height()) : $element.height()
                          , s = e.host.find("ul:first")
                          , n = parseInt(s.css("padding-top"))
                          , o = parseInt(s.css("margin-top"))
                          , a = t - 2 * (o + n)
                          , l = parseInt(a) / 2 - r / 2
                          , d = parseInt(l)
                          , h = parseInt(l);
                        $element.css("padding-top", d),
                        $element.css("padding-bottom", h),
                        parseInt($element.outerHeight()) > a && ($element.css("padding-top", d - 1),
                        d -= 1)
                    }
                })
            }
            i.each(this.items, function() {
                var e = this;
                if ($element = i(e.element),
                e.hasItems && e.level > 0 && e.arrow) {
                    var t = i(e.arrow)
                      , r = i(e.element).height();
                    r > 15 && t.css("margin-top", (r - 15) / 2)
                }
            })
        },
        _nextVisibleItem: function(e, t) {
            if (null == e || null == e)
                return null;
            for (var i = e; null != i; )
                if (i = i.nextItem,
                this._isVisible(i) && !i.disabled && "separator" !== i.type) {
                    if (this.minimized)
                        return i;
                    if (null != t && i && i.level != t)
                        continue;
                    return i
                }
            return null
        },
        _prevVisibleItem: function(e, t) {
            if (null == e || null == e)
                return null;
            for (var i = e; null != i; )
                if (i = i.prevItem,
                this._isVisible(i) && !i.disabled && "separator" !== i.type) {
                    if (this.minimized)
                        return i;
                    if (null != t && i && i.level != t)
                        continue;
                    return i
                }
            return null
        },
        _parentItem: function(e) {
            if (null == e || null == e)
                return null;
            var t = e.parentElement;
            if (!t)
                return null;
            var r = null;
            return i.each(this.items, function() {
                if (this.element == t)
                    return r = this,
                    !1
            }),
            r
        },
        _isElementVisible: function(e) {
            return null != e && "none" != i(e).css("display") && "hidden" != i(e).css("visibility")
        },
        _isVisible: function(e) {
            if (null == e || null == e)
                return !1;
            if (!this._isElementVisible(e.element))
                return !1;
            var t = this._parentItem(e);
            if (null == t)
                return !0;
            if (this.minimized)
                return !0;
            if (null != t) {
                if (!this._isElementVisible(t.element))
                    return !1;
                if (!t.isOpen && !this.minimized)
                    return !1;
                for (; null != t; ) {
                    if (null != (t = this._parentItem(t)) && !this._isElementVisible(t.element))
                        return !1;
                    if (null != t && !t.isOpen)
                        return !1
                }
            }
            return !0
        },
        _render: function(e, t) {
            this.disabled && (this.host.addClass(this.toThemeProperty("jqx-fill-state-disabled")),
            this.host.addClass(this.toThemeProperty("jqx-menu-disabled"))),
            null == this.host.attr("tabindex") && this.host.attr("tabindex", 0);
            var r = this.popupZIndex
              , s = [5, 5]
              , n = this;
            i.data(n.element, "animationHideDelay", n.animationHideDelay);
            var o = this.isTouchDevice()
              , a = o && (i.jqx.mobile.isWindowsPhone() || navigator.userAgent.indexOf("Touch") >= 0);
            -1 != navigator.platform.toLowerCase().indexOf("win") && (navigator.userAgent.indexOf("Windows Phone") >= 0 || navigator.userAgent.indexOf("WPDesktop") >= 0 || navigator.userAgent.indexOf("IEMobile") >= 0 || navigator.userAgent.indexOf("ZuneWP7") >= 0 ? this.touchDevice = !0 : navigator.userAgent.indexOf("Touch") >= 0 && ("MSPointerDown"in window || i.jqx.mobile.isWindowsPhone() || navigator.userAgent.indexOf("ARM") >= 0) && (a = !0,
            n.clickToOpen = !0,
            n.autoCloseOnClick = !1,
            n.enableHover = !1)),
            i.data(document.body, "menuel", this),
            this.hasTransform = i.jqx.utilities.hasTransform(this.host),
            this._applyOrientation(e, t),
            this.removeHandler(this.host, "blur"),
            this.removeHandler(this.host, "focus"),
            this.addHandler(this.host, "blur", function(e) {
                if (n.keyboardNavigation && n.activeItem) {
                    if ("popup" === n.mode && document.activeElement && document.activeElement.className.indexOf("jqx-menu-wrapper") >= 0)
                        return;
                    i(n.activeItem.element).removeClass(n.toThemeProperty("jqx-fill-state-focus")),
                    n.activeItem = null
                }
            }),
            this.addHandler(this.host, "focus", function(e) {
                if (n.keyboardNavigation && !n.activeItem)
                    if (n.hoveredItem)
                        i(n.hoveredItem.element).addClass(n.toThemeProperty("jqx-fill-state-focus")),
                        n.activeItem = n.hoveredItem;
                    else {
                        var t = function() {
                            if (i.jqx.isHidden(i(n.items[0].element))) {
                                var e = n._nextVisibleItem(n.items[0], 0);
                                e && (i(e.element).addClass(n.toThemeProperty("jqx-fill-state-focus")),
                                n.activeItem = e)
                            } else
                                i(n.items[0].element).addClass(n.toThemeProperty("jqx-fill-state-focus")),
                                n.activeItem = n.items[0]
                        };
                        n.activeItem ? i.jqx.isHidden(i(n.activeItem.element)) ? (i(n.activeItem.element).removeClass(n.toThemeProperty("jqx-fill-state-focus")),
                        t()) : i(n.activeItem.element).addClass(n.toThemeProperty("jqx-fill-state-focus")) : t()
                    }
            }),
            this.removeHandler(this.host, "keydown.menu" + this.element.id),
            n.handleKeyDown = function(e) {
                if (!n.keyboardNavigation)
                    return !0;
                if ("input" === e.target.nodeName.toLowerCase())
                    return !0;
                var t = null
                  , r = null;
                if (i.each(n.items, function() {
                    return !!this.disabled || (this.element.className.indexOf("pressed") >= 0 && (r = this),
                    this.element.className.indexOf("focus") >= 0 ? (t = this,
                    !1) : void 0)
                }),
                !t && r)
                    return t = r,
                    !1;
                if (!t)
                    return i(n.items[0].element).addClass(n.toThemeProperty("jqx-fill-state-focus")),
                    n.activeItem = n.items[0],
                    t = n.activeItem,
                    !1;
                if (27 == e.keyCode && (e.data = n,
                n._closeAll(e),
                t))
                    for (var s = t; null != s; )
                        s.parentItem ? s = s.parentItem : (i(n.activeItem.element).removeClass(n.toThemeProperty("jqx-fill-state-focus")),
                        n.activeItem = s,
                        i(n.activeItem.element).addClass(n.toThemeProperty("jqx-fill-state-focus")),
                        s = s.parentItem);
                if (13 == e.keyCode && t) {
                    n._raiseEvent("2", {
                        item: t.element,
                        event: e,
                        type: "keyboard"
                    });
                    var o = null != t.anchor ? i(t.anchor) : null;
                    if (null != o && o.length > 0) {
                        var a = o.attr("href")
                          , l = o.attr("target");
                        null != a && (null != l ? window.open(a, l) : window.location = a)
                    }
                    e.preventDefault(),
                    e.stopPropagation(),
                    i(t.element).focus()
                }
                var d = function(e) {
                    if (null == e)
                        return new Array;
                    for (var t = new Array, i = 0, r = 0; r < n.items.length; r++)
                        n.items[r].parentId == e.parentId && (t[i++] = n.items[r]);
                    return t
                }
                  , h = "";
                switch (e.keyCode) {
                case 40:
                    h = "down";
                    break;
                case 38:
                    h = "up";
                    break;
                case 39:
                    h = "right";
                    break;
                case 37:
                    h = "left"
                }
                if (t && "left" === t.openHorizontalDirection && "left" === h && (h = "right"),
                t && "left" === t.openHorizontalDirection && "right" === h && (h = "left"),
                t && "top" === t.openVerticalDirection && "top" === h && (h = "bottom"),
                t && "top" === t.openVerticalDirection && "bottom" === h && (h = "top"),
                n.rtl && ("right" === h ? h = "left" : "left" === h && (h = "right")),
                "right" === h && !n.minimized) {
                    if (e.altKey && (0 != t.level && t.hasItems || "horizontal" != n.mode))
                        n._openItem(n, t);
                    else {
                        var c = n._nextVisibleItem(t, 0)
                          , u = n._nextVisibleItem(t)
                          , p = d(u);
                        c || (c = u),
                        c && (c.parentId === t.parentId && 0 == c.level && "horizontal" == n.mode || u.id == p[0].id && 0 != u.level) && (u.id == p[0].id && (0 != t.level || 0 == t.level && "horizontal" != n.mode) && (c = u),
                        i(c.element).addClass(n.toThemeProperty("jqx-fill-state-focus")),
                        i(t.element).removeClass(n.toThemeProperty("jqx-fill-state-focus")),
                        n.activeItem = c)
                    }
                    e.preventDefault(),
                    e.stopPropagation()
                }
                if ("left" === h && !n.minimized) {
                    if (e.altKey && (0 != t.level && "horizontal" !== n.mode || t.level > 1 && "horizontal" === n.mode || 1 == t.level && t.hasItems && "horizontal" === n.mode))
                        t.hasItems ? n._closeItem(n, t) : t.parentItem && (n._closeItem(n, t.parentItem),
                        i(t.parentItem.element).addClass(n.toThemeProperty("jqx-fill-state-focus")),
                        i(t.element).removeClass(n.toThemeProperty("jqx-fill-state-focus")),
                        n.activeItem = t.parentItem);
                    else {
                        var c = n._prevVisibleItem(t, 0)
                          , f = t.parentItem;
                        c && c.parentId === t.parentId && 0 == c.level && "horizontal" == n.mode ? (i(c.element).addClass(n.toThemeProperty("jqx-fill-state-focus")),
                        i(t.element).removeClass(n.toThemeProperty("jqx-fill-state-focus")),
                        n.activeItem = c) : f && 0 == f.level && "horizontal" == n.mode || !f || f.level != t.level - 1 || (i(f.element).addClass(n.toThemeProperty("jqx-fill-state-focus")),
                        i(t.element).removeClass(n.toThemeProperty("jqx-fill-state-focus")),
                        n.activeItem = f)
                    }
                    e.preventDefault(),
                    e.stopPropagation()
                }
                if ("down" === h ? (e.altKey ? (0 == t.level && t.hasItems && n._openItem(n, t),
                n.minimized && n.minimizedHidden && n.minimizedItem.trigger("click")) : (p = d(c = n._nextVisibleItem(t, t.level)),
                n.minimized && c ? (i(c.element).addClass(n.toThemeProperty("jqx-fill-state-focus")),
                i(t.element).removeClass(n.toThemeProperty("jqx-fill-state-focus")),
                n.activeItem = c) : (c && (c.parentId === t.parentId || c.id == p[0].id && "horizontal" == n.mode) && (0 == c.level && "horizontal" == n.mode || (i(c.element).addClass(n.toThemeProperty("jqx-fill-state-focus")),
                i(t.element).removeClass(n.toThemeProperty("jqx-fill-state-focus")),
                n.activeItem = c)),
                "horizontal" === n.mode && 0 === t.level && t.isOpen && t.hasItems && (c = n._nextVisibleItem(t),
                i(c.element).addClass(n.toThemeProperty("jqx-fill-state-focus")),
                i(t.element).removeClass(n.toThemeProperty("jqx-fill-state-focus")),
                n.activeItem = c))),
                e.preventDefault(),
                e.stopPropagation()) : "up" === h && (e.altKey ? (t.parentItem && 0 == t.parentItem.level ? (n._closeItem(n, t.parentItem),
                i(t.parentItem.element).addClass(n.toThemeProperty("jqx-fill-state-focus")),
                i(t.element).removeClass(n.toThemeProperty("jqx-fill-state-focus")),
                n.activeItem = t.parentItem) : null === t.parentItem && 0 === t.level && "horizontal" === n.mode && n._closeItem(n, t),
                n.minimized && (n.minimizedHidden || n.minimizedItem.trigger("click"))) : (c = n._prevVisibleItem(t, t.level),
                p = d(t),
                n.minimized && c ? (i(c.element).addClass(n.toThemeProperty("jqx-fill-state-focus")),
                i(t.element).removeClass(n.toThemeProperty("jqx-fill-state-focus")),
                n.activeItem = c) : c && (c.parentId === t.parentId || c.id == t.parentId && 0 == c.level && "horizontal" == n.mode) ? 0 == c.level && "horizontal" === n.mode && 0 === t.level || (i(c.element).addClass(n.toThemeProperty("jqx-fill-state-focus")),
                i(t.element).removeClass(n.toThemeProperty("jqx-fill-state-focus")),
                n.activeItem = c) : t && t.id == p[0].id && t.parentItem && 0 === t.parentItem.level && "horizontal" === n.mode && (c = t.parentItem,
                i(c.element).addClass(n.toThemeProperty("jqx-fill-state-focus")),
                i(t.element).removeClass(n.toThemeProperty("jqx-fill-state-focus")),
                n.activeItem = c)),
                e.preventDefault(),
                e.stopPropagation()),
                9 == e.keyCode)
                    if (c = e.shiftKey ? n._prevVisibleItem(t) : n._nextVisibleItem(t))
                        i(c.element).addClass(n.toThemeProperty("jqx-fill-state-focus")),
                        i(t.element).removeClass(n.toThemeProperty("jqx-fill-state-focus")),
                        n.activeItem = c,
                        e.preventDefault(),
                        e.stopPropagation();
                    else if (n.lockFocus) {
                        p = new Array;
                        for (var m = 0, g = 0; g < n.items.length; g++)
                            n.items[g] != t && n.items[g].parentId == t.parentId && (p[m++] = n.items[g]);
                        p.length > 0 && (e.shiftKey ? (i(p[p.length - 1].element).addClass(n.toThemeProperty("jqx-fill-state-focus")),
                        n.activeItem = p[p.length - 1]) : (i(p[0].element).addClass(n.toThemeProperty("jqx-fill-state-focus")),
                        n.activeItem = p[0]),
                        i(t.element).removeClass(n.toThemeProperty("jqx-fill-state-focus"))),
                        e.preventDefault(),
                        e.stopPropagation()
                    } else
                        t && (i(t.element).removeClass(n.toThemeProperty("jqx-fill-state-focus")),
                        n.activeItem = null)
            }
            ,
            this.addHandler(this.host, "keydown.menu" + this.element.id, function(e) {
                n.handleKeyDown(e)
            }),
            n.enableRoundedCorners && this.host.addClass(n.toThemeProperty("jqx-rc-all")),
            i.each(this.items, function() {
                var e = this
                  , t = i(e.element);
                if (t.attr("role", "menuitem"),
                n.enableRoundedCorners && t.addClass(n.toThemeProperty("jqx-rc-all")),
                n.removeHandler(t, "click"),
                n.addHandler(t, "click", function(t) {
                    if (!e.disabled && !n.disabled && (n.keyboardNavigation && (n.activeItem && i(n.activeItem.element).removeClass(n.toThemeProperty("jqx-fill-state-focus")),
                    n.activeItem = e,
                    i(e.element).addClass(n.toThemeProperty("jqx-fill-state-focus")),
                    n.minimized && t.stopPropagation()),
                    n._raiseEvent("2", {
                        type: "mouse",
                        item: e.element,
                        event: t
                    }),
                    n.autoOpen ? !n.autoCloseOnClick || o || n.clickToOpen || e.closeOnClick && (t.data = n,
                    n._closeAll(t)) : e.level > 0 && (!n.autoCloseOnClick || o || n.clickToOpen || (t.data = n,
                    n._closeAll(t))),
                    o && n.autoCloseOnClick && (t.data = n,
                    e.hasItems || n._closeAll(t)),
                    "A" != t.target.tagName && "a" != t.target.tagName)) {
                        var r = null != e.anchor ? i(e.anchor) : null;
                        if (null != r && r.length > 0) {
                            var s = r.attr("href")
                              , a = r.attr("target");
                            null != s && (null != a ? window.open(s, a) : window.location = s)
                        }
                    }
                }),
                n.removeHandler(t, "mouseenter"),
                n.removeHandler(t, "mouseleave"),
                a || "simple" == n.mode || n._renderHover(t, e, o),
                null != e.subMenuElement) {
                    var l = i(e.subMenuElement);
                    if ("simple" == n.mode)
                        return l.show(),
                        !0;
                    l.wrap('<div class="jqx-menu-popup ' + n.toThemeProperty("jqx-menu-popup") + '" style="border: none; background-color: transparent; z-index:' + r + '; padding: 0px; margin: 0px; position: absolute; top: 0; left: 0; display: block; visibility: hidden;"><div style="background-color: transparent; border: none; position:absolute; overflow:hidden; left: 0; top: 0; right: 0; width: 100%; height: 100%;"></div></div>'),
                    l.css({
                        overflow: "hidden",
                        position: "absolute",
                        left: 0,
                        display: "inherit",
                        top: -l.outerHeight()
                    }),
                    l.data("timer", {}),
                    e.level > 0 ? l.css("left", -l.outerWidth()) : "horizontal" == n.mode && l.css("left", 0),
                    r++;
                    var d = i(e.subMenuElement).closest("div.jqx-menu-popup").css({
                        width: parseInt(i(e.subMenuElement).outerWidth()) + parseInt(s[0]) + "px",
                        height: parseInt(i(e.subMenuElement).outerHeight()) + parseInt(s[1]) + "px"
                    })
                      , h = t.closest("div.jqx-menu-popup");
                    if (h.length > 0) {
                        var c = l.css("margin-left")
                          , u = l.css("margin-right")
                          , p = l.css("padding-left")
                          , f = l.css("padding-right");
                        d.appendTo(h),
                        l.css("margin-left", c),
                        l.css("margin-right", u),
                        l.css("padding-left", p),
                        l.css("padding-right", f)
                    } else
                        c = l.css("margin-left"),
                        u = l.css("margin-right"),
                        p = l.css("padding-left"),
                        f = l.css("padding-right"),
                        d.appendTo(i(document.body)),
                        l.css("margin-left", c),
                        l.css("margin-right", u),
                        l.css("padding-left", p),
                        l.css("padding-right", f);
                    n.clickToOpen ? (n.removeHandler(t, "mousedown"),
                    n.addHandler(t, "mousedown", function(t) {
                        clearTimeout(l.data("timer").hide),
                        null != l && l.stop(),
                        0 != e.level || e.isOpen || (t.data = n,
                        n._closeAll(t)),
                        e.isOpen ? n._closeItem(n, e, !0) : n._openItem(n, e)
                    })) : ((o || a) && (n.removeHandler(t, i.jqx.mobile.getTouchEventName("touchstart")),
                    n.addHandler(t, i.jqx.mobile.getTouchEventName("touchstart"), function(t) {
                        return clearTimeout(l.data("timer").hide),
                        null != l && l.stop(),
                        0 != e.level || e.isOpen || "popup" == n.mode || (t.data = n,
                        n._closeAll(t)),
                        e.isOpen ? n._closeItem(n, e, !0) : n._openItem(n, e),
                        !1
                    })),
                    a || (n.addHandler(t, "mouseenter", function() {
                        if ((n.autoOpen || e.level > 0 && !n.autoOpen) && clearTimeout(l.data("timer").hide),
                        !e.parentId || 0 == e.parentId || !n.menuElements[e.parentId] || n.menuElements[e.parentId].isOpen)
                            return (n.autoOpen || e.level > 0 && !n.autoOpen) && n._openItem(n, e),
                            !1
                    }),
                    n.addHandler(t, "mousedown", function() {
                        n.autoOpen || 0 != e.level || (clearTimeout(l.data("timer").hide),
                        null != l && l.stop(),
                        e.isOpen ? n._closeItem(n, e, !0) : n._openItem(n, e))
                    }),
                    n.addHandler(t, "mouseleave", function(t) {
                        if (n.autoCloseOnMouseLeave) {
                            clearTimeout(l.data("timer").hide);
                            var r = i(e.subMenuElement)
                              , s = {
                                left: parseInt(t.pageX),
                                top: parseInt(t.pageY)
                            }
                              , o = {
                                left: parseInt(r.coord().left),
                                top: parseInt(r.coord().top),
                                width: parseInt(r.outerWidth()),
                                height: parseInt(r.outerHeight())
                            }
                              , a = !0;
                            o.left - 5 <= s.left && s.left <= o.left + o.width + 5 && o.top <= s.top && s.top <= o.top + o.height && (a = !1),
                            a && n._closeItem(n, e, !0)
                        }
                    }),
                    n.removeHandler(d, "mouseenter"),
                    n.addHandler(d, "mouseenter", function() {
                        clearTimeout(l.data("timer").hide)
                    }),
                    n.removeHandler(d, "mouseleave"),
                    n.addHandler(d, "mouseleave", function(t) {
                        n.autoCloseOnMouseLeave && (clearTimeout(l.data("timer").hide),
                        clearTimeout(l.data("timer").show),
                        null != l && l.stop(),
                        n._closeItem(n, e, !0))
                    })))
                }
            }),
            "simple" == this.mode && this._renderSimpleMode(),
            this._autoSizeHorizontalMenuItems(),
            this._raiseEvent("3", this)
        },
        _renderSimpleMode: function() {
            this.host.show()
        },
        createID: function() {
            var e = Math.random() + "";
            for (e = "99" + (e = e.replace(".", "")),
            e /= 1; this.items[e]; )
                e = (e = Math.random() + "").replace(".", ""),
                e /= 1;
            return "menuItem" + e
        },
        _createMenu: function(e, t) {
            if (null != e) {
                null == t && (t = !0),
                null == t && (t = !0),
                i(e).addClass("jqx-menu-ul");
                var r = i(e).find("li")
                  , s = 0;
                this.itemMapping = new Array;
                for (var n = 0; n < r.length; n++) {
                    var o = r[n]
                      , a = i(o);
                    if (-1 != o.className.indexOf("jqx-menu") || 0 != this.autoGenerate) {
                        var l = o.id;
                        l || (l = this.createID()),
                        t && (o.id = l,
                        this.items[s] = new i.jqx._jqxMenu.jqxMenuItem,
                        this.menuElements[l] = this.items[s]),
                        s += 1;
                        var d = 0
                          , h = this;
                        a.children().each(function() {
                            return t || (this.className = "",
                            h.autoGenerate && (i(h.items[s - 1].subMenuElement)[0].className = "",
                            h.minimized || i(h.items[s - 1].subMenuElement).addClass(h.toThemeProperty("jqx-widget-content")),
                            i(h.items[s - 1].subMenuElement).addClass(h.toThemeProperty("jqx-menu-dropdown")),
                            i(h.items[s - 1].subMenuElement).addClass(h.toThemeProperty("jqx-popup")))),
                            -1 != this.className.indexOf("jqx-menu-dropdown") ? (t && (h.items[s - 1].subMenuElement = this),
                            !1) : !h.autoGenerate || "ul" != this.tagName && "UL" != this.tagName ? void 0 : (t && (h.items[s - 1].subMenuElement = this),
                            this.className = "",
                            h.minimized || i(this).addClass(h.toThemeProperty("jqx-widget-content")),
                            i(this).addClass(h.toThemeProperty("jqx-menu-dropdown")),
                            i(this).addClass(h.toThemeProperty("jqx-popup")),
                            i(this).attr("role", "menu"),
                            h.rtl ? i(this).addClass(h.toThemeProperty("jqx-rc-l")) : i(this).addClass(h.toThemeProperty("jqx-rc-r")),
                            i(this).addClass(h.toThemeProperty("jqx-rc-b")),
                            !1)
                        }),
                        a.parents().each(function() {
                            return -1 != this.className.indexOf("jqx-menu-item") ? (d = this.id,
                            !1) : !h.autoGenerate || "li" != this.tagName && "LI" != this.tagName ? void 0 : (d = this.id,
                            !1)
                        });
                        var c = !1
                          , u = o.getAttribute("type")
                          , p = o.getAttribute("ignoretheme") || o.getAttribute("data-ignoretheme");
                        p ? "true" != p && 1 != p || (p = !0) : p = !1,
                        u ? "separator" == u && (c = !0) : u = o.type,
                        c || (u = d ? "sub" : "top");
                        var f = this.items[s - 1];
                        if (t) {
                            f.id = l,
                            f.parentId = d,
                            f.type = u,
                            f.separator = c,
                            f.element = r[n];
                            var m = a.children("a");
                            f.disabled = "true" == o.getAttribute("item-disabled"),
                            f.level = a.parents("li").length,
                            f.anchor = m.length > 0 ? m : null,
                            f.anchor && i(f.anchor).attr("tabindex", -1)
                        }
                        f.ignoretheme = p;
                        var g = this.menuElements[d];
                        null != g && (g.ignoretheme && (f.ignoretheme = g.ignoretheme,
                        p = g.ignoretheme),
                        f.parentItem = g,
                        f.parentElement = g.element),
                        this.autoGenerate && ("separator" == u ? (a.removeClass(),
                        a.addClass(this.toThemeProperty("jqx-menu-item-separator")),
                        a.attr("role", "separator")) : p || (a[0].className.indexOf("jqx-grid-menu-item-touch") >= 0 ? a[0].className = this.toThemeProperty("jqx-grid-menu-item-touch") : a[0].className = "",
                        this.rtl && a.addClass(this.toThemeProperty("jqx-rtl")),
                        f.level > 0 && !h.minimized ? (a.addClass(this.toThemeProperty("jqx-item")),
                        a.addClass(this.toThemeProperty("jqx-menu-item"))) : (a.addClass(this.toThemeProperty("jqx-item")),
                        a.addClass(this.toThemeProperty("jqx-menu-item-top"))))),
                        f.disabled && (a.addClass(h.toThemeProperty("jqx-menu-item-disabled")),
                        a.addClass(h.toThemeProperty("jqx-fill-state-disabled"))),
                        this.itemMapping[n] = {
                            element: r[n],
                            item: f
                        },
                        this.itemMapping["id" + r[n].id] = this.itemMapping[n],
                        t && !p && (f.hasItems = a.find("li").length > 0,
                        f.hasItems && f.element && (i.jqx.aria(i(f.element), "aria-haspopup", !0),
                        f.subMenuElement.id || (f.subMenuElement.id = i.jqx.utilities.createId()),
                        i.jqx.aria(i(f.element), "aria-owns", f.subMenuElement.id)))
                    }
                }
                for (var v = 0; v < r.length; v++) {
                    var w = r[v];
                    if (this.itemMapping["id" + w.id]) {
                        if (!(f = this.itemMapping["id" + w.id].item))
                            continue;
                        f.prevItem = null,
                        f.nextItem = null,
                        v > 0 && this.itemMapping["id" + r[v - 1].id] && (f.prevItem = this.itemMapping["id" + r[v - 1].id].item),
                        v < r.length - 1 && this.itemMapping["id" + r[v + 1].id] && (f.nextItem = this.itemMapping["id" + r[v + 1].id].item)
                    }
                }
            }
        },
        destroy: function() {
            var e = this;
            i.jqx.utilities.resize(e.host, null, !0);
            var t = e.host.closest("div.jqx-menu-wrapper");
            e.removeHandler(t, "keydown"),
            t.remove(),
            e.removeHandler(i("#menuWrapper" + e.element.id), "keydown"),
            i("#menuWrapper" + e.element.id).remove(),
            e.removeHandler(e.host, "keydown"),
            e.removeHandler(e.host, "focus"),
            e.removeHandler(e.host, "blur"),
            e.removeHandler(i(document), "mousedown.menu" + e.element.id, e._closeAfterClick),
            e.removeHandler(i(document), "mouseup.menu" + e.element.id, e._closeAfterClick),
            e.removeHandler(i(document), "contextmenu." + e.element.id),
            e.removeHandler(e.host, "contextmenu." + e.element.id),
            i.data(document.body, "jqxMenuOldHost" + e.element.id, null),
            e.isTouchDevice() && e.removeHandler(i(document), i.jqx.mobile.getTouchEventName("touchstart") + ".menu" + e.element.id, e._closeAfterClick, this),
            i(window).off && i(window).off("resize.menu" + e.element.id),
            i.each(e.items, function() {
                var t = i(this.element);
                e.removeHandler(t, "click"),
                e.removeHandler(t, "selectstart"),
                e.removeHandler(t, "mouseenter"),
                e.removeHandler(t, "mouseleave"),
                e.removeHandler(t, "mousedown"),
                e.removeHandler(t, "mouseleave"),
                i(this.subMenuElement).closest("div.jqx-menu-popup").remove(),
                delete this.subMenuElement,
                delete this.element
            }),
            i.data(document.body, "menuel", null),
            delete e.menuElements,
            e.items = new Array,
            delete e.items;
            var r = i.data(e.element, "jqxMenu");
            r && delete r.instance,
            e.host.removeClass(),
            e.host.remove(),
            delete e.host,
            delete e.element
        },
        _raiseEvent: function(e, t) {
            null == t && (t = {
                owner: null
            });
            var r = this.events[e];
            args = t,
            args.owner = this;
            var s = new i.Event(r);
            return "2" == e && (args = t.item,
            args.owner = this,
            args.clickType = t.type,
            i.extend(s, t.event),
            s.type = "itemclick"),
            s.owner = this,
            s.args = args,
            this.host.trigger(s)
        },
        propertiesChangedHandler: function(e, t, r) {
            if (r.width && r.height && 2 == Object.keys(r).length && (e._setSize(),
            "popup" === e.mode)) {
                this.host.closest("div.jqx-menu-wrapper")[t](r);
                var s = this.host[0].id;
                i("#" + s)[t](r)
            }
        },
        propertyChangedHandler: function(e, t, r, s) {
            if (null != this.isInitialized && 0 != this.isInitialized && !(e.batchUpdate && e.batchUpdate.width && e.batchUpdate.height && 2 == Object.keys(e.batchUpdate).length) && ("disabled" == t && (e.disabled ? (e.host.addClass(e.toThemeProperty("jqx-fill-state-disabled")),
            e.host.addClass(e.toThemeProperty("jqx-menu-disabled"))) : (e.host.removeClass(e.toThemeProperty("jqx-fill-state-disabled")),
            e.host.removeClass(e.toThemeProperty("jqx-menu-disabled")))),
            s != r))
                if ("touchMode" == t && (this._isTouchDevice = null,
                e._render(s, r)),
                "width" !== t && "height" !== t) {
                    if ("source" == t && null != e.source) {
                        var n = e.loadItems(e.source);
                        e.element.innerHTML = n;
                        var o = e.host.find("ul:first");
                        o.length > 0 && (e.refresh(),
                        e._createMenu(o[0]),
                        e._render())
                    }
                    "autoCloseOnClick" == t ? 0 == s ? e.removeHandler(i(document), "mousedown.menu" + this.element.id, e._closeAll) : e.addHandler(i(document), "mousedown.menu" + this.element.id, e, e._closeAll) : "mode" == t || "width" == t || "height" == t || "showTopLevelArrows" == t ? (e.refresh(),
                    "mode" == t ? e._render(s, r) : e._applyOrientation()) : "theme" == t && i.jqx.utilities.setTheme(r, s, e.host)
                } else if (e._setSize(),
                "popup" === e.mode) {
                    this.host.closest("div.jqx-menu-wrapper")[t](s);
                    var a = this.host[0].id;
                    i("#" + a)[t](s)
                }
        }
    }),
    jqxBaseFramework.jqx._jqxMenu.jqxMenuItem = function(e, t, i) {
        return {
            id: e,
            parentId: t,
            parentItem: null,
            anchor: null,
            type: i,
            disabled: !1,
            level: 0,
            isOpen: !1,
            hasItems: !1,
            element: null,
            subMenuElement: null,
            arrow: null,
            openHorizontalDirection: "right",
            openVerticalDirection: "down",
            closeOnClick: !0
        }
    }
}
, function(e, t) {
    var i;
    (i = jqxBaseFramework).jqx.jqxWidget("jqxComboBox", "", {}),
    i.extend(i.jqx._jqxComboBox.prototype, {
        defineInstance: function() {
            var e = {
                disabled: !1,
                width: 200,
                height: 25,
                items: new Array,
                selectedIndex: -1,
                selectedItems: new Array,
                _selectedItems: new Array,
                source: null,
                autoItemsHeight: !1,
                scrollBarSize: i.jqx.utilities.scrollBarSize,
                arrowSize: 17,
                enableHover: !0,
                enableSelection: !0,
                visualItems: new Array,
                groups: new Array,
                equalItemsWidth: !0,
                itemHeight: -1,
                visibleItems: new Array,
                hint: !0,
                emptyGroupText: "Group",
                emptyString: "",
                ready: null,
                openDelay: 250,
                closeDelay: 300,
                animationType: "default",
                dropDownWidth: "auto",
                dropDownHeight: "200px",
                autoDropDownHeight: !1,
                enableBrowserBoundsDetection: !1,
                dropDownHorizontalAlignment: "left",
                dropDownVerticalAlignment: "bottom",
                dropDownContainer: "default",
                searchMode: "startswithignorecase",
                autoComplete: !1,
                remoteAutoComplete: !1,
                remoteAutoCompleteDelay: 500,
                selectionMode: "default",
                minLength: 2,
                displayMember: "",
                valueMember: "",
                groupMember: "",
                searchMember: "",
                keyboardSelection: !0,
                renderer: null,
                autoOpen: !1,
                template: "",
                checkboxes: !1,
                promptText: "",
                placeHolder: "",
                rtl: !1,
                listBox: null,
                validateSelection: null,
                showCloseButtons: !0,
                renderSelectedItem: null,
                search: null,
                popupZIndex: 2e3,
                searchString: null,
                multiSelect: !1,
                showArrow: !0,
                _disabledItems: new Array,
                touchMode: "auto",
                autoBind: !0,
                aria: {
                    "aria-disabled": {
                        name: "disabled",
                        type: "boolean"
                    }
                },
                events: ["open", "close", "select", "unselect", "change", "checkChange", "bindingComplete", "itemAdd", "itemRemove", "itemUpdate"]
            };
            return this === i.jqx._jqxComboBox.prototype ? e : (i.extend(!0, this, e),
            e)
        },
        createInstance: function(e) {
            if (this.host.attr("role", "combobox"),
            i.jqx.aria(this, "aria-autocomplete", "both"),
            null == i.jqx._jqxListBox || null == i.jqx._jqxListBox)
                throw new Error("jqxComboBox: Missing reference to jqxlistbox.js.");
            i.jqx.aria(this),
            "" != this.promptText && (this.placeHolder = this.promptText),
            this.render()
        },
        render: function() {
            var e = (d = this).element.nodeName.toLowerCase();
            if ("select" == e || "ul" == e || "ol" == e) {
                d.field = d.element,
                d.field.className && (d._className = d.field.className);
                var t = {
                    title: d.field.title
                };
                d.field.id.length ? t.id = d.field.id.replace(/[^\w]/g, "_") + "_jqxComboBox" : t.id = i.jqx.utilities.createId() + "_jqxComboBox";
                var r = i("<div></div>", t);
                d.width || (d.width = i(d.field).width()),
                d.height || (d.height = i(d.field).outerHeight()),
                d.element.style.cssText = d.field.style.cssText,
                i(d.field).hide().after(r);
                var s = d.host.data();
                if (d.host = r,
                d.host.data(s),
                d.element = r[0],
                d.element.id = d.field.id,
                d.field.id = t.id,
                d._className && (d.host.addClass(d._className),
                i(d.field).removeClass(d._className)),
                d.field.tabIndex) {
                    var n = d.field.tabIndex;
                    d.field.tabIndex = -1,
                    d.element.tabIndex = n
                }
                if ("" != d.field.innerHTML) {
                    var o = i.jqx.parseSourceTag(d.field);
                    d.source = o.items,
                    -1 == d.selectedIndex && (d.selectedIndex = o.index)
                }
            } else
                (d.host.find("li").length > 0 || d.host.find("option").length > 0) && (o = i.jqx.parseSourceTag(d.element),
                d.source = o.items);
            d.removeHandlers(),
            d.isanimating = !1,
            d.id = i.jqx.utilities.createId(),
            d.element.innerHTML = "";
            var a = i("<div style='background-color: transparent; -webkit-appearance: none; outline: none; width:100%; height: 100%; padding: 0px; margin: 0px; border: 0px; position: relative;'><div id='dropdownlistWrapper' style='padding: 0; margin: 0; border: none; background-color: transparent; float: left; width:100%; height: 100%; position: relative;'><div id='dropdownlistContent' style='padding: 0; margin: 0; border-top: none; border-bottom: none; float: left; position: absolute;'/><div id='dropdownlistArrow' role='button' style='padding: 0; margin: 0; border-left-width: 1px; border-bottom-width: 0px; border-top-width: 0px; border-right-width: 0px; float: right; position: absolute;'/></div></div>");
            if (d.comboStructure = a,
            null == i.jqx._jqxListBox || null == i.jqx._jqxListBox)
                throw "jqxComboBox: Missing reference to jqxlistbox.js.";
            d.touch = i.jqx.mobile.isTouchDevice(),
            !0 === d.touchMode && (d.touch = !0),
            d.host.append(a),
            d.dropdownlistWrapper = d.host.find("#dropdownlistWrapper"),
            d.dropdownlistArrow = d.host.find("#dropdownlistArrow"),
            d.dropdownlistContent = d.host.find("#dropdownlistContent"),
            d.dropdownlistContent.addClass(d.toThemeProperty("jqx-combobox-content")),
            d.dropdownlistContent.addClass(d.toThemeProperty("jqx-widget-content")),
            d.dropdownlistWrapper[0].id = "dropdownlistWrapper" + d.element.id,
            d.dropdownlistArrow[0].id = "dropdownlistArrow" + d.element.id,
            d.dropdownlistContent[0].id = "dropdownlistContent" + d.element.id,
            d.template && d.dropdownlistArrow.addClass(d.toThemeProperty("jqx-" + d.template)),
            d.dropdownlistContent.append(i('<input autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" style="box-sizing: border-box; margin: 0; padding: 0; padding-left: 3px; padding-right: 3px; border: 0;" type="textarea"/>')),
            d.input = d.dropdownlistContent.find("input"),
            d.input.addClass(d.toThemeProperty("jqx-combobox-input")),
            d.input.addClass(d.toThemeProperty("jqx-widget-content")),
            d.host.attr("tabindex") && (d.input.attr("tabindex", d.host.attr("tabindex")),
            d.host.removeAttr("tabindex"));
            var l = i("<label></label");
            this.hint && (l[0].innerHTML = this.placeHolder),
            l.addClass(d.toThemeProperty("jqx-input-label")),
            d.dropdownlistWrapper.append(l),
            d.label = l;
            var d, h = i("<span></span>");
            d.dropdownlistWrapper.append(h),
            h.addClass(d.toThemeProperty("jqx-input-bar")),
            d.bar = h,
            (d = this).template && (d.bar.addClass(d.toThemeProperty("jqx-" + d.template)),
            d.label.addClass(d.toThemeProperty("jqx-" + d.template))),
            d._addInput(),
            d.rtl && (d.input.css({
                direction: "rtl"
            }),
            d.dropdownlistContent.addClass(d.toThemeProperty("jqx-combobox-content-rtl")));
            try {
                var c = "listBox" + d.id
                  , u = i(i.find("#" + c));
                u.length > 0 && u.remove(),
                i.jqx.aria(this, "aria-owns", c),
                i.jqx.aria(this, "aria-haspopup", !0),
                i.jqx.aria(this, "aria-multiline", !1),
                d.listBoxContainer && d.listBoxContainer.jqxListBox("destroy"),
                d.container && d.container.remove();
                var p = i("<div style='overflow: hidden; border: none; background-color: transparent; position: absolute;' id='listBox" + d.id + "'><div id='innerListBox" + d.id + "'></div></div>");
                p.hide(),
                "element" == d.dropDownContainer ? p.appendTo(d.host) : p.appendTo(document.body),
                d.container = p,
                d.listBoxContainer = i(i.find("#innerListBox" + d.id));
                var f = d.width;
                "auto" != d.dropDownWidth && (f = d.dropDownWidth),
                null == d.dropDownHeight && (d.dropDownHeight = 200),
                d.container.width(parseInt(f) + 25),
                d.container.height(parseInt(d.dropDownHeight) + 25),
                d._ready = !1,
                d.addHandler(d.listBoxContainer, "bindingComplete", function(e) {
                    d.listBox || (d.listBox = i.data(d.listBoxContainer[0], "jqxListBox").instance),
                    d._ready || (d.ready && d.ready(),
                    d._ready = !0),
                    d._raiseEvent("6")
                }),
                d.addHandler(d.listBoxContainer, "itemAdd", function(e) {
                    d._raiseEvent("7", e.args)
                }),
                d.addHandler(d.listBoxContainer, "itemRemove", function(e) {
                    d._raiseEvent("8", e.args)
                }),
                d.addHandler(d.listBoxContainer, "itemUpdate", function(e) {
                    d._raiseEvent("9", e.args)
                }),
                d.listBoxContainer.jqxListBox({
                    autoItemsHeight: d.autoItemsHeight,
                    _checkForHiddenParent: !1,
                    allowDrop: !1,
                    allowDrag: !1,
                    checkboxes: d.checkboxes,
                    emptyString: d.emptyString,
                    autoBind: !d.remoteAutoComplete && d.autoBind,
                    renderer: d.renderer,
                    rtl: d.rtl,
                    itemHeight: d.itemHeight,
                    selectedIndex: d.selectedIndex,
                    incrementalSearch: !1,
                    width: f,
                    scrollBarSize: d.scrollBarSize,
                    autoHeight: d.autoDropDownHeight,
                    height: d.dropDownHeight,
                    groupMember: d.groupMember,
                    searchMember: d.searchMember,
                    displayMember: d.displayMember,
                    valueMember: d.valueMember,
                    source: d.source,
                    theme: d.theme,
                    rendered: function() {
                        if (d.listBox = i.data(d.listBoxContainer[0], "jqxListBox").instance,
                        d.remoteAutoComplete)
                            if (d.autoDropDownHeight ? (d.container.height(d.listBox.virtualSize.height + 25),
                            d.listBoxContainer.height(d.listBox.virtualSize.height),
                            d.listBox._arrange()) : (d.listBox._arrange(),
                            d.listBox.ensureVisible(0),
                            d.listBox._renderItems(),
                            d.container.height(d.listBoxContainer.height() + 25)),
                            null != d.searchString && d.searchString.length >= d.minLength) {
                                var e = d.listBoxContainer.jqxListBox("items");
                                e && e.length > 0 ? d.isOpened() || d.open() : d.close()
                            } else
                                d.close();
                        else
                            d.renderSelection("mouse"),
                            d.multiSelect && d.doMultiSelect(!1);
                        d.rendered && d.rendered()
                    }
                }),
                "element" == d.dropDownContainer ? d.listBoxContainer.css({
                    position: "absolute",
                    top: 0,
                    left: 0
                }) : d.listBoxContainer.css({
                    position: "absolute",
                    zIndex: d.popupZIndex,
                    top: 0,
                    left: 0
                }),
                d.listBoxContainer.css("border-top-width", "1px"),
                d.listBoxContainer.addClass(d.toThemeProperty("jqx-popup")),
                i.jqx.browser.msie && d.listBoxContainer.addClass(d.toThemeProperty("jqx-noshadow")),
                d.template && d.listBoxContainer.addClass(d.toThemeProperty("jqx-" + d.template + "-item")),
                d.listBox = i.data(d.listBoxContainer[0], "jqxListBox").instance,
                d.listBox.enableSelection = d.enableSelection,
                d.listBox.enableHover = d.enableHover,
                d.listBox.equalItemsWidth = d.equalItemsWidth,
                d.listBox._arrange(),
                d.addHandler(d.listBoxContainer, "unselect", function(e) {
                    d.multiSelect || d._raiseEvent("3", {
                        index: e.args.index,
                        type: e.args.type,
                        item: e.args.item
                    })
                }),
                d.addHandler(d.listBoxContainer, "change", function(e) {
                    d.multiSelect || (d.selectedIndex = d.listBox.selectedIndex,
                    d._raiseEvent("4", {
                        index: e.args.index,
                        type: e.args.type,
                        item: e.args.item
                    }))
                }),
                "none" == d.animationType ? d.container.css("display", "none") : d.container.hide()
            } catch (e) {
                throw e
            }
            if ((d = this).input.attr("disabled", d.disabled),
            i.jqx.browser.msie && i.jqx.browser.version < 8 || (d.isMaterialized() && d.hint ? d.label[0].innerHTML = d.placeHolder : d.input.attr("placeholder", d.placeHolder)),
            d.propertyChangeMap.disabled = function(e, t, r, s) {
                s ? (e.host.addClass(d.toThemeProperty("jqx-combobox-state-disabled")),
                e.host.addClass(d.toThemeProperty("jqx-fill-state-disabled")),
                e.dropdownlistContent.addClass(d.toThemeProperty("jqx-combobox-content-disabled"))) : (e.host.removeClass(d.toThemeProperty("jqx-combobox-state-disabled")),
                e.host.removeClass(d.toThemeProperty("jqx-fill-state-disabled")),
                e.dropdownlistContent.removeClass(d.toThemeProperty("jqx-combobox-content-disabled"))),
                e.input.attr("disabled", e.disabled),
                i.jqx.aria(e, "aria-disabled", e.disabled),
                e.input.attr("disabled", e.disabled)
            }
            ,
            d.disabled && (d.host.addClass(d.toThemeProperty("jqx-combobox-state-disabled")),
            d.host.addClass(d.toThemeProperty("jqx-fill-state-disabled")),
            d.dropdownlistContent.addClass(d.toThemeProperty("jqx-combobox-content-disabled"))),
            d.host.addClass(d.toThemeProperty("jqx-combobox-state-normal")),
            d.host.addClass(d.toThemeProperty("jqx-combobox")),
            d.host.addClass(d.toThemeProperty("jqx-rc-all")),
            d.host.addClass(d.toThemeProperty("jqx-widget")),
            d.host.addClass(d.toThemeProperty("jqx-widget-content")),
            d.dropdownlistArrowIcon = i("<div></div>"),
            "top" == d.dropDownVerticalAlignment ? d.dropdownlistArrowIcon.addClass(d.toThemeProperty("jqx-icon-arrow-up")) : d.dropdownlistArrowIcon.addClass(d.toThemeProperty("jqx-icon-arrow-down")),
            d.dropdownlistArrowIcon.addClass(d.toThemeProperty("jqx-icon")),
            d.dropdownlistArrow.append(d.dropdownlistArrowIcon),
            d.dropdownlistArrow.addClass(d.toThemeProperty("jqx-combobox-arrow-normal")),
            d.dropdownlistArrow.addClass(d.toThemeProperty("jqx-fill-state-normal")),
            d.rtl ? d.dropdownlistArrow.addClass(d.toThemeProperty("jqx-rc-l")) : d.dropdownlistArrow.addClass(d.toThemeProperty("jqx-rc-r")),
            d._setSize(),
            d._updateHandlers(),
            d.addHandler(d.input, "keyup.textchange", function(e) {
                d._writeTimer && clearTimeout(d._writeTimer),
                d._writeTimer = setTimeout(function() {
                    d._search(e),
                    d.cinput && d.input && (d.displayMember ? d._updateInputSelection() : d.cinput[0].value = d.input[0].value)
                }, 50)
            }),
            i.jqx.browser.msie && i.jqx.browser.version < 8 && d.host.parents(".jqx-window").length > 0) {
                var m = d.host.parents(".jqx-window").css("z-index");
                p.css("z-index", m + 10),
                d.listBoxContainer.css("z-index", m + 10)
            }
            d.checkboxes ? (d.input.attr("readonly", !0),
            i.jqx.aria(this, "aria-readonly", !0)) : i.jqx.aria(this, "aria-readonly", !1),
            d.remoteAutoComplete || (d.searchString = ""),
            this.bar.css("top", this.host.height())
        },
        _addInput: function() {
            var e = this.host.attr("name");
            this.cinput = i("<input type='hidden'/>"),
            this.host.append(this.cinput),
            e && this.cinput.attr("name", e)
        },
        _updateInputSelection: function() {
            if (this.cinput) {
                var e = new Array;
                if (-1 == this.selectedIndex)
                    this.cinput.val("");
                else {
                    var t = this.getSelectedItem();
                    null != t ? (this.cinput.val(t.value),
                    e.push(t.value)) : this.cinput.val(this.dropdownlistContent.text())
                }
                if (this.checkboxes || this.multiSelect) {
                    if (this.multiSelect)
                        r = this.getSelectedItems();
                    else
                        var r = this.getCheckedItems();
                    var s = "";
                    if (null != r)
                        for (var n = 0; n < r.length; n++)
                            n == r.length - 1 ? s += r[n].value : s += r[n].value + ",",
                            e.push(r[n].value);
                    this.cinput.val(s)
                }
                this.field && this.cinput && ("select" == this.field.nodeName.toLowerCase() ? i.each(this.field, function(t, r) {
                    i(this).removeAttr("selected"),
                    this.selected = e.indexOf(this.value) >= 0,
                    this.selected && i(this).attr("selected", !0)
                }) : i.each(this.items, function(t, r) {
                    i(this.originalItem.originalItem).removeAttr("data-selected"),
                    this.selected = e.indexOf(this.value) >= 0,
                    this.selected && i(this.originalItem.originalItem).attr("data-selected", !0)
                }))
            }
        },
        _search: function(e) {
            var t = this;
            if (9 != e.keyCode && "none" != t.searchMode && null != t.searchMode && "undefined" != t.searchMode && 16 != e.keyCode && 17 != e.keyCode && 20 != e.keyCode && !t.checkboxes) {
                if (t.multiSelect) {
                    var r = i("<span style='visibility: hidden; white-space: nowrap;'>" + document.createTextNode(t.input.val()) + "</span>");
                    r.addClass(t.toThemeProperty("jqx-widget")),
                    i(document.body).append(r);
                    var s = r.width() + 15;
                    r.remove(),
                    s > t.host.width() && (s = t.host.width()),
                    s < 25 && (s = 25),
                    t.input.css("width", s + "px"),
                    0 == t.selectedItems.length ? (t.input.css("width", "100%"),
                    t.isMaterialized() || t.input.attr("placeholder", t.placeHolder)) : t.isMaterialized() || t.input.attr("placeholder", "");
                    var n = parseInt(this._findPos(t.host[0])[1]) + parseInt(t.host.outerHeight()) - 1 + "px";
                    t.container.css("top", n);
                    var o = parseInt(t.host.height());
                    t.dropdownlistArrow.height(o)
                }
                if (!t.isanimating) {
                    if (e.altKey && 38 == e.keyCode)
                        return t.hideListBox("altKey"),
                        !1;
                    if (e.altKey && 40 == e.keyCode)
                        return t.isOpened() || t.showListBox("altKey"),
                        !1
                }
                if (37 == e.keyCode || 39 == e.keyCode)
                    return !1;
                if (!e.altKey && 18 != e.keyCode && !(e.keyCode >= 33 && e.keyCode <= 40 || (e.ctrlKey || t.ctrlKey) && 88 != e.keyCode && 86 != e.keyCode)) {
                    var a = t.input.val();
                    if (0 == a.length && !t.autoComplete)
                        return t.listBox.searchString = t.input.val(),
                        t.listBox.clearSelection(),
                        t.hideListBox("search"),
                        void (t.searchString = t.input.val());
                    if (t.remoteAutoComplete) {
                        t = this;
                        var l = function() {
                            t.listBox.vScrollInstance.value = 0
                        };
                        a.length >= t.minLength ? e.ctrlKey || e.altKey || (t.searchString != a && (null == t.listBoxContainer.jqxListBox("source") && t.listBoxContainer.jqxListBox({
                            source: t.source
                        }),
                        t._searchTimer && clearTimeout(t._searchTimer),
                        13 != e.keyCode && 27 != e.keyCode && (t._searchTimer = setTimeout(function() {
                            if (l(),
                            t.autoDropDownHeight && (t.listBox.autoHeight = !0),
                            t.searchString = t.input.val(),
                            null == t.search)
                                throw "'search' function is not defined";
                            t.search(t.input.val())
                        }, t.remoteAutoCompleteDelay))),
                        t.searchString = a) : (t._searchTimer && clearTimeout(t._searchTimer),
                        l(),
                        t.searchString = "",
                        t.search(""),
                        t.listBoxContainer.jqxListBox({
                            source: null
                        }))
                    } else if (a !== (t = this).searchString) {
                        if ("27" != e.keyCode && "13" != e.keyCode) {
                            var d = t.input[0].value
                              , h = t._updateItemsVisibility(a)
                              , c = h.matchItems;
                            t.autoComplete && t.autoItemsHeight && (t.input[0].value = d);
                            var u = h.index;
                            t.autoComplete || t.remoteAutoComplete || (!t.multiSelect || t.multiSelect && u >= 0) && (t.listBox.selectIndex(u),
                            t.listBox.isIndexInView(u) ? t.listBox._renderItems() : t.listBox.ensureVisible(u)),
                            t.autoComplete && 0 === c.length && t.hideListBox("search")
                        }
                        if ("13" == e.keyCode) {
                            if ("block" == t.container.css("display") && !t.isanimating)
                                return t.hideListBox("keyboard"),
                                void (t._oldvalue = t.listBox.selectedValue)
                        } else if ("27" == e.keyCode) {
                            if ("block" == t.container.css("display") && !t.isanimating) {
                                var p;
                                return t.multiSelect ? (t.input.val(""),
                                t.listBox.selectedValue = null) : (p = t.listBox.getVisibleItem(t._oldvalue)) ? (t = this,
                                setTimeout(function() {
                                    t.autoComplete && t._updateItemsVisibility(""),
                                    t.listBox.selectIndex(p.index),
                                    t.renderSelection("api")
                                }, t.closeDelay)) : t.clearSelection(),
                                t.hideListBox("keyboard"),
                                t.renderSelection("api"),
                                e.preventDefault(),
                                !1
                            }
                        } else
                            t.isOpened() || t.opening || e.ctrlKey || t.listBox.visibleItems && t.listBox.visibleItems.length > 0 && t.input.val() != t.searchString && null != t.searchString && -1 != u && t.showListBox("search"),
                            t.searchString = t.input.val(),
                            "" == t.searchString && (t.listBox.itemsByValue[""] || (u = -1,
                            t.multiSelect || t.clearSelection())),
                            null != (p = t.listBox.getVisibleItem(u)) && t._updateInputSelection()
                    }
                }
            }
        },
        val: function(e) {
            return this.input ? function(t) {
                for (var i in t)
                    if (t.hasOwnProperty(i))
                        return !1;
                return "number" != typeof e && "date" != typeof e && "boolean" != typeof e && "string" != typeof e
            }(e) || 0 == arguments.length ? (t = this.getSelectedItem()) ? t.value : this.input.val() : (null != (t = this.getItemByValue(e)) ? this.selectItem(t) : this.input.val(e),
            this.input.val()) : "";
            var t
        },
        focus: function() {
            var e = this
              , t = function() {
                e.input.focus();
                var t = e.input.val();
                e._setSelection(0, t.length)
            };
            t(),
            setTimeout(function() {
                t()
            }, 10)
        },
        _setSelection: function(e, t) {
            try {
                if ("selectionStart"in this.input[0])
                    this.input[0].focus(),
                    this.input[0].setSelectionRange(e, t);
                else {
                    var i = this.input[0].createTextRange();
                    i.collapse(!0),
                    i.moveEnd("character", t),
                    i.moveStart("character", e),
                    i.select()
                }
            } catch (e) {}
        },
        setContent: function(e) {
            this.input.val(e)
        },
        _updateItemsVisibility: function(e) {
            var t = this.getItems();
            if (null == t)
                return {
                    index: -1,
                    matchItem: new Array
                };
            var r = this
              , s = -1
              , n = new Array
              , o = 0;
            i.each(t, function(t) {
                var a = "";
                if (!this.isGroup) {
                    a = (a = this.searchLabel ? this.searchLabel : this.label ? this.label : this.value ? this.value : this.title ? this.title : "jqxItem").toString();
                    var l = !1;
                    switch (r.searchMode) {
                    case "containsignorecase":
                        l = i.jqx.string.containsIgnoreCase(a, e);
                        break;
                    case "contains":
                        l = i.jqx.string.contains(a, e);
                        break;
                    case "equals":
                        l = i.jqx.string.equals(a, e);
                        break;
                    case "equalsignorecase":
                        l = i.jqx.string.equalsIgnoreCase(a, e);
                        break;
                    case "startswith":
                        l = i.jqx.string.startsWith(a, e);
                        break;
                    case "startswithignorecase":
                        l = i.jqx.string.startsWithIgnoreCase(a, e);
                        break;
                    case "endswith":
                        l = i.jqx.string.endsWith(a, e);
                        break;
                    case "endswithignorecase":
                        l = i.jqx.string.endsWithIgnoreCase(a, e)
                    }
                    if (r.autoComplete && !l && (this.visible = !1),
                    l && r.autoComplete && (n[o++] = this,
                    this.visible = !0,
                    s = this.visibleIndex),
                    "" == e && r.autoComplete && (this.visible = !0,
                    l = !1),
                    r.multiSelect && (this.disabled = !1,
                    (r.selectedItems.indexOf(this.value) >= 0 || r._disabledItems.indexOf(this.value) >= 0) && (this.disabled = !0,
                    l = !1)),
                    r.multiSelect) {
                        if (l && !r.autoComplete)
                            return -1 === s && (s = this.visibleIndex),
                            !0
                    } else if (l && !r.autoComplete)
                        return s = this.visibleIndex,
                        !1
                }
            }),
            this.listBox.searchString = e,
            r = this;
            var a = function() {
                if (r.multiSelect) {
                    for (var e = 0, t = !1, i = null, s = 0; s < r.listBox.items.length; s++)
                        r.listBox.selectedIndexes[s] = -1,
                        r.listBox.items[s].disabled || 0 == t && (e = (i = r.listBox.items[s]).visibleIndex,
                        t = !0);
                    r.listBox.selectedIndex = -1,
                    r.listBox.selectedIndex = e,
                    r.listBox.selectedIndexes[e] = e,
                    r.listBox.visibleItems.length > 0 ? r.listBox.selectedValue = i ? i.value : null : r.listBox.selectedValue = null,
                    r.listBox.ensureVisible(0)
                }
            };
            if (!this.autoComplete)
                return a(),
                {
                    index: s,
                    matchItems: n
                };
            this.listBox.renderedVisibleItems = new Array;
            var l = this.listBox.vScrollInstance.value;
            this.listBox.vScrollInstance.value = 0,
            this.listBox.visibleItems = new Array,
            this.listBox._renderItems();
            var d = this.listBox.selectedValue
              , h = this.listBox.getItemByValue(d);
            if (this.multiSelect)
                a();
            else if (h)
                if (h.visible) {
                    this.listBox.selectedIndex = h.visibleIndex;
                    for (var c = 0; c < this.listBox.items.length; c++)
                        this.listBox.selectedIndexes[c] = -1;
                    this.listBox.selectedIndexes[h.visibleIndex] = h.visibleIndex
                } else {
                    for (c = 0; c < this.listBox.items.length; c++)
                        this.listBox.selectedIndexes[c] = -1;
                    this.listBox.selectedIndex = -1
                }
            this.listBox._renderItems();
            var u = this.listBox._calculateVirtualSize().height;
            if (u < l && (l = 0,
            this.listBox.vScrollInstance.refresh()),
            this.autoDropDownHeight)
                this._disableSelection = !0,
                this.listBox.autoHeight != this.autoDropDownHeight && this.listBoxContainer.jqxListBox({
                    autoHeight: this.autoDropDownHeight
                }),
                this.container.height(u + 25),
                this.listBox.invalidate(),
                this._disableSelection = !1;
            else if (u < parseInt(this.dropDownHeight)) {
                var p = "hidden" == this.listBox.hScrollBar[0].style.visibility ? 0 : 20;
                this.listBox.height = p + u,
                this.container.height(u + 25 + p),
                this.listBox.invalidate()
            } else
                this.listBox.height = parseInt(this.dropDownHeight),
                this.container.height(parseInt(this.dropDownHeight) + 25),
                this.listBox.invalidate();
            return this.listBox.vScrollInstance.setPosition(l),
            {
                index: s,
                matchItems: n
            }
        },
        findItems: function(e) {
            var t = this.getItems()
              , r = this
              , s = 0
              , n = new Array;
            return i.each(t, function(t) {
                var o = "";
                if (!this.isGroup) {
                    o = this.label ? this.label : this.value ? this.value : this.title ? this.title : "jqxItem";
                    var a = !1;
                    switch (r.searchMode) {
                    case "containsignorecase":
                        a = i.jqx.string.containsIgnoreCase(o, e);
                        break;
                    case "contains":
                        a = i.jqx.string.contains(o, e);
                        break;
                    case "equals":
                        a = i.jqx.string.equals(o, e);
                        break;
                    case "equalsignorecase":
                        a = i.jqx.string.equalsIgnoreCase(o, e);
                        break;
                    case "startswith":
                        a = i.jqx.string.startsWith(o, e);
                        break;
                    case "startswithignorecase":
                        a = i.jqx.string.startsWithIgnoreCase(o, e);
                        break;
                    case "endswith":
                        a = i.jqx.string.endsWith(o, e);
                        break;
                    case "endswithignorecase":
                        a = i.jqx.string.endsWithIgnoreCase(o, e)
                    }
                    a && (n[s++] = this)
                }
            }),
            n
        },
        _resetautocomplete: function() {
            i.each(this.listBox.items, function(e) {
                this.visible = !0
            }),
            this.listBox.vScrollInstance.value = 0,
            this.listBox._addItems(),
            this.listBox.autoHeight = !1,
            this.listBox.height = this.dropDownHeight,
            this.container.height(parseInt(this.dropDownHeight) + 25),
            this.listBoxContainer.height(parseInt(this.dropDownHeight)),
            this.listBox._arrange(),
            this.listBox._addItems(),
            this.listBox._renderItems()
        },
        getItems: function() {
            return this.listBox.items
        },
        getVisibleItems: function() {
            return this.listBox.getVisibleItems()
        },
        _setSize: function() {
            var e = window.getComputedStyle(this.element)
              , t = 2 * parseInt(e.borderLeftWidth);
            ("border-box" === e.boxSizing || isNaN(t)) && (t = 0),
            null != this.width && -1 != this.width.toString().indexOf("px") ? this.element.style.width = parseInt(this.width) - t + "px" : null == this.width || isNaN(this.width) || (this.element.style.width = parseInt(this.width) - t + "px"),
            null != this.height && -1 != this.height.toString().indexOf("px") ? this.element.style.height = parseInt(this.height) - t + "px" : null == this.height || isNaN(this.height) || (this.element.style.height = parseInt(this.height) - t + "px");
            var r = !1;
            if (null != this.width && -1 != this.width.toString().indexOf("%") && (r = !0,
            this.element.style.width = this.width,
            t > 0 && this.host.css("box-sizing", "border-box")),
            null != this.height && -1 != this.height.toString().indexOf("%") && (r = !0,
            this.element.style.height = this.height),
            r) {
                var s = this
                  , n = this.host.width();
                "auto" != this.dropDownWidth && (n = this.dropDownWidth),
                this.listBoxContainer.jqxListBox({
                    width: n
                }),
                this.container.width(parseInt(n) + 25),
                this._arrange()
            }
            (s = this).oldWidth = s.host.width(),
            s.oldHeight = s.host.height(),
            i.jqx.utilities.resize(this.host, function() {
                var e = s.host.width()
                  , t = s.host.height();
                e == s.oldWidth && t == s.oldHeight || (s.multiSelect && s.host.height(s.height),
                s._arrange(),
                s.multiSelect && s.host.height("auto"),
                s.hideListBox("api")),
                s.oldWidth = e,
                s.oldHeight = t
            })
        },
        isOpened: function() {
            var e = i.data(document.body, "openedCombojqxListBox" + this.element.id);
            return "block" == this.container.css("display") && null != e && e == this.listBoxContainer
        },
        _updateHandlers: function() {
            var e = this;
            this.removeHandlers(),
            this.multiSelect && (this.addHandler(this.dropdownlistContent, "click", function(t) {
                if (t.target.href)
                    return !1;
                e.input.focus(),
                setTimeout(function() {
                    e.input.focus()
                }, 10)
            }),
            this.addHandler(this.dropdownlistContent, "focus", function(t) {
                if (t.target.href)
                    return !1;
                e.input.focus(),
                setTimeout(function() {
                    e.input.focus()
                }, 10)
            })),
            this.touch || (this.host.parents() && this.addHandler(this.host.parents(), "scroll.combobox" + this.element.id, function(t) {
                e.isOpened() && e.close()
            }),
            this.addHandler(this.host, "mouseenter", function() {
                !e.disabled && e.enableHover && (e.host.addClass(e.toThemeProperty("jqx-combobox-state-hover")),
                "top" == e.dropDownVerticalAlignment ? e.dropdownlistArrowIcon.addClass(e.toThemeProperty("jqx-icon-arrow-up")) : e.dropdownlistArrowIcon.addClass(e.toThemeProperty("jqx-icon-arrow-down-hover")),
                e.dropdownlistArrow.addClass(e.toThemeProperty("jqx-combobox-arrow-hover")),
                e.dropdownlistArrow.addClass(e.toThemeProperty("jqx-fill-state-hover")))
            }),
            this.addHandler(this.host, "mouseleave", function() {
                !e.disabled && e.enableHover && (e.host.removeClass(e.toThemeProperty("jqx-combobox-state-hover")),
                e.dropdownlistArrowIcon.removeClass(e.toThemeProperty("jqx-icon-arrow-down-hover")),
                e.dropdownlistArrowIcon.removeClass(e.toThemeProperty("jqx-icon-arrow-up-hover")),
                e.dropdownlistArrow.removeClass(e.toThemeProperty("jqx-combobox-arrow-hover")),
                e.dropdownlistArrow.removeClass(e.toThemeProperty("jqx-fill-state-hover")))
            })),
            e.autoOpen && (this.addHandler(this.host, "mouseenter", function() {
                !e.isOpened() && e.autoOpen && (e.open(),
                e.host.focus())
            }),
            this.addHandler(i(document), "mousemove." + e.id, function(t) {
                if (e.isOpened() && e.autoOpen) {
                    var i = e.host.coord()
                      , r = i.top
                      , s = i.left
                      , n = e.container.coord()
                      , o = n.left
                      , a = n.top;
                    canClose = !0,
                    t.pageY >= r && t.pageY <= r + e.host.height() + 2 && t.pageX >= s && t.pageX < s + e.host.width() && (canClose = !1),
                    t.pageY >= a && t.pageY <= a + e.container.height() - 20 && t.pageX >= o && t.pageX < o + e.container.width() && (canClose = !1),
                    canClose && e.close()
                }
            }));
            var t = "mousedown";
            this.touch && (t = i.jqx.mobile.getTouchEventName("touchstart")),
            this.addHandler(this.dropdownlistArrow, t, function(t) {
                !function(t) {
                    if (!e.disabled) {
                        var r = "block" == e.container.css("display");
                        if (!e.isanimating) {
                            if (r)
                                return e.hideListBox("api"),
                                i.jqx.mobile.isTouchDevice() || (e.input.focus(),
                                setTimeout(function() {
                                    e.input.focus()
                                }, 10)),
                                !0;
                            if (e.autoDropDownHeight && (e.container.height(e.listBoxContainer.height() + 25),
                            e.listBoxContainer.jqxListBox("autoHeight") || (e.listBoxContainer.jqxListBox({
                                autoHeight: e.autoDropDownHeight
                            }),
                            e.listBox._arrange(),
                            e.listBox.ensureVisible(0),
                            e.listBox._renderItems(),
                            e.container.height(e.listBoxContainer.height() + 25))),
                            e.showListBox("api"),
                            i.jqx.mobile.isTouchDevice())
                                return !0;
                            setTimeout(function() {
                                e.input.focus()
                            }, 10)
                        }
                    }
                }()
            }),
            this.addHandler(this.dropdownlistArrowIcon, t, function(e) {}),
            this.addHandler(this.host, "focus", function() {
                e.focus()
            }),
            this.addHandler(this.input, "focus", function(t) {
                e.focused = !0,
                e.host.addClass(e.toThemeProperty("jqx-combobox-state-focus")),
                e.host.addClass(e.toThemeProperty("jqx-fill-state-focus")),
                e.bar.addClass("focused"),
                e.label.addClass("focused"),
                e.dropdownlistContent.addClass(e.toThemeProperty("jqx-combobox-content-focus")),
                t.stopPropagation && t.stopPropagation()
            }),
            this.addHandler(this.input, "blur", function() {
                e.focused = !1,
                e.bar.removeClass("focused"),
                e.label.removeClass("focused"),
                e.isOpened() || e.opening || ("dropDownList" == e.selectionMode && e._selectOldValue(),
                e.host.removeClass(e.toThemeProperty("jqx-combobox-state-focus")),
                e.host.removeClass(e.toThemeProperty("jqx-fill-state-focus")),
                e.dropdownlistContent.removeClass(e.toThemeProperty("jqx-combobox-content-focus"))),
                e._searchTimer && clearTimeout(e._searchTimer)
            }),
            this.addHandler(i(document), "mousedown." + this.id, e.closeOpenedListBox, {
                that: this,
                listbox: this.listBox,
                id: this.id
            }),
            this.touch && this.addHandler(i(document), i.jqx.mobile.getTouchEventName("touchstart") + "." + this.id, e.closeOpenedListBox, {
                that: this,
                listbox: this.listBox,
                id: this.id
            }),
            this.addHandler(this.host, "keydown", function(t) {
                var i, r = "block" == e.container.css("display");
                if (e.ctrlKey = t.ctrlKey,
                "none" == e.host.css("display"))
                    return !0;
                if (("13" == t.keyCode || "9" == t.keyCode) && r && !e.isanimating) {
                    if (-1 != e.listBox.selectedIndex) {
                        e.renderSelection("mouse");
                        var s = e.listBox.selectedIndex;
                        (i = e.listBox.getVisibleItem(s)) && (e.listBox.selectedValue = i.value),
                        e._setSelection(e.input.val().length, e.input.val().length),
                        e.hideListBox("keyboard")
                    }
                    return "13" == t.keyCode && (e._oldvalue = e.listBox.selectedValue),
                    e.keyboardSelection || e._raiseEvent("2", {
                        index: e.selectedIndex,
                        type: "keyboard",
                        item: e.getItem(e.selectedIndex)
                    }),
                    "9" == t.keyCode
                }
                if (115 == t.keyCode)
                    return e.isanimating || (e.isOpened() ? e.isOpened() && e.hideListBox("keyboard") : e.showListBox("keyboard")),
                    !1;
                if (t.altKey && "block" == e.host.css("display") && (e.isanimating || (38 == t.keyCode ? e.isOpened() && e.hideListBox("altKey") : 40 == t.keyCode && (e.isOpened() || e.showListBox("altKey")))),
                ("27" == t.keyCode || "9" == t.keyCode) && e.isOpened() && !e.isanimating)
                    return "27" == t.keyCode && (e.multiSelect ? (e.listBox.selectedValue = null,
                    e.input.val("")) : (i = e.listBox.getItemByValue(e._oldvalue)) ? setTimeout(function() {
                        e.autoComplete && e._updateItemsVisibility(""),
                        e.listBox.selectIndex(i.index),
                        e.renderSelection("api")
                    }, e.closeDelay) : e.clearSelection()),
                    e.hideListBox("keyboard"),
                    "9" == t.keyCode || (e.renderSelection("api"),
                    t.preventDefault(),
                    !1);
                var n = t.keyCode;
                if (r && !e.disabled && 8 != n)
                    return e.listBox._handleKeyDown(t);
                if (!(e.disabled || r || 33 != (n = t.keyCode) && 34 != n && 35 != n && 36 != n && 38 != n && 40 != n))
                    return e.listBox._handleKeyDown(t);
                if (8 === n && e.multiSelect && 0 === e.input.val().length) {
                    var o = e.selectedItems[e.selectedItems.length - 1];
                    return e.selectedItems.pop(),
                    e._selectedItems.pop(),
                    o && (e._raiseEvent("3", {
                        index: o.index,
                        type: "keyboard",
                        item: o
                    }),
                    e._raiseEvent("4", {
                        index: o.index,
                        type: "keyboard",
                        item: o
                    })),
                    e.listBox.selectedValue = null,
                    e.doMultiSelect(),
                    !1
                }
                e.isMaterialized() && e.hint && setTimeout(function() {
                    0 === e.input[0].value.length ? (e.element.removeAttribute("hint"),
                    e.label[0].innerHTML = e.placeHolder) : e.hint && e.element.setAttribute("hint", !0)
                })
            }),
            this.addHandler(this.listBoxContainer, "checkChange", function(t) {
                e.renderSelection("mouse"),
                e._updateInputSelection(),
                e._raiseEvent(5, {
                    label: t.args.label,
                    value: t.args.value,
                    checked: t.args.checked,
                    item: t.args.item
                })
            }),
            this.addHandler(this.listBoxContainer, "select", function(t) {
                if (!e.disabled && ("keyboard" != t.args.type || e.keyboardSelection) && (e.renderSelection(t.args.type),
                e.multiSelect || e._raiseEvent("2", {
                    index: t.args.index,
                    type: t.args.type,
                    item: t.args.item
                }),
                "mouse" == t.args.type && (e._oldvalue = e.listBox.selectedValue,
                !e.checkboxes))) {
                    if (e.hideListBox("mouse"),
                    e.touch)
                        return !1;
                    e.input.focus()
                }
            }),
            null != this.listBox && null != this.listBox.content && this.addHandler(this.listBox.content, "click", function(t) {
                if (!e.disabled) {
                    if (e.listBox.itemswrapper && t.target === e.listBox.itemswrapper[0])
                        return !0;
                    if (t.target && t.target.className && t.target.className.indexOf("jqx-fill-state-disabled") >= 0)
                        return !0;
                    e.renderSelection("mouse"),
                    e._oldvalue = e.listBox.selectedValue,
                    e.touch || e.ishiding || e.checkboxes || (e.hideListBox("mouse"),
                    e.input.focus()),
                    !0 === e.touch && (e.checkboxes || e.hideListBox("mouse"))
                }
            })
        },
        _selectOldValue: function() {
            var e = this;
            if (-1 == e.listBox.selectedIndex)
                if (e.multiSelect)
                    e.listBox.selectedValue = null,
                    e.input.val("");
                else {
                    var t = e.listBox.getItemByValue(e._oldvalue);
                    t ? setTimeout(function() {
                        e.autoComplete && e._updateItemsVisibility(""),
                        e.listBox.selectIndex(t.index),
                        e.renderSelection("api")
                    }, e.closeDelay) : (e.clearSelection(),
                    e.listBox.selectIndex(0),
                    e.renderSelection("api"))
                }
            else
                e.renderSelection("api")
        },
        removeHandlers: function() {
            if (null != this.dropdownlistWrapper && this.removeHandler(this.dropdownlistWrapper, "mousedown"),
            this.dropdownlistContent && (this.removeHandler(this.dropdownlistContent, "click"),
            this.removeHandler(this.dropdownlistContent, "focus")),
            this.removeHandler(this.host, "keydown"),
            this.removeHandler(this.host, "focus"),
            null != this.input && (this.removeHandler(this.input, "focus"),
            this.removeHandler(this.input, "blur")),
            this.removeHandler(this.host, "mouseenter"),
            this.removeHandler(this.host, "mouseleave"),
            this.removeHandler(i(document), "mousemove." + this.id),
            this.listBoxContainer && (this.removeHandler(this.listBoxContainer, "checkChange"),
            this.removeHandler(this.listBoxContainer, "select")),
            this.host.parents() && this.removeHandler(this.host.parents(), "scroll.combobox" + this.element.id),
            this.dropdownlistArrowIcon && this.dropdownlistArrow) {
                var e = "mousedown";
                this.touch && (e = i.jqx.mobile.getTouchEventName("touchstart")),
                this.removeHandler(this.dropdownlistArrowIcon, e),
                this.removeHandler(this.dropdownlistArrow, e)
            }
        },
        getItem: function(e) {
            return this.listBox.getItem(e)
        },
        getItemByValue: function(e) {
            return this.listBox.getItemByValue(e)
        },
        getVisibleItem: function(e) {
            return this.listBox.getVisibleItem(e)
        },
        renderSelection: function(e) {
            if (null != e && "none" != e && !0 !== this._disableSelection && null != this.listBox && !this.multiSelect) {
                var t = this.listBox.visibleItems[this.listBox.selectedIndex];
                if (this.autoComplete && !this.checkboxes && void 0 !== this.listBox.selectedValue && (t = this.getItemByValue(this.listBox.selectedValue)),
                this.checkboxes) {
                    var r = this.getCheckedItems();
                    t = null != r && r.length > 0 ? r[0] : null
                }
                if (this.hint && (this.label[0].innerHTML = this.placeHolder),
                null != t ? this.hint && this.element.setAttribute("hint", !0) : this.element.removeAttribute("hint"),
                this.bar.css("top", this.host.height()),
                null == t) {
                    var s = i.jqx.browser.msie && i.jqx.browser.version < 8;
                    return this.input.val(""),
                    this.input.attr("value", ""),
                    s || (this.isMaterialized() ? (this.label[0].innerHTML = this.placeHolder,
                    this.input.removeAttr("placeholder")) : this.input.attr("placeholder", this.placeHolder)),
                    void this._updateInputSelection()
                }
                this.selectedIndex = this.listBox.selectedIndex;
                var n = i("<span></span>");
                if (null != t.label && null != t.label && t.label.toString().length > 0 ? i.jqx.utilities.html(n, t.label) : null != t.value && null != t.value && t.value.toString().length > 0 ? i.jqx.utilities.html(n, t.value) : null != t.title && null != t.title && t.title.toString().length > 0 ? i.jqx.utilities.html(n, t.title) : i.jqx.utilities.html(n, this.emptyString),
                n.outerHeight(),
                this.checkboxes) {
                    for (var o = this.getCheckedItems(), a = "", l = 0; l < o.length; l++)
                        l == o.length - 1 ? a += o[l].label : a += o[l].label + ", ";
                    this.input.val(a)
                } else
                    this.input.val(n.text());
                if (n.remove(),
                this._updateInputSelection(),
                this.renderSelectedItem) {
                    var d = this.renderSelectedItem(this.listBox.selectedIndex, t);
                    null != d && (this.input[0].value = d)
                }
                this.input.attr("value", this.input.val()),
                this.listBox && this.listBox._activeElement && i.jqx.aria(this, "aria-activedescendant", this.listBox._activeElement.id)
            }
        },
        dataBind: function() {
            this.listBoxContainer.jqxListBox({
                source: this.source
            }),
            this.renderSelection("mouse"),
            null == this.source && this.clearSelection()
        },
        clear: function() {
            this.listBoxContainer.jqxListBox({
                source: null
            }),
            this.clearSelection()
        },
        clearSelection: function(e) {
            this.selectedIndex = -1,
            this.listBox.clearSelection(),
            this.input.val(""),
            this.multiSelect && (this.listBox.selectedValue = "",
            this.selectedItems = new Array,
            this._selectedItems = new Array,
            this.doMultiSelect(!1))
        },
        unselectIndex: function(e, t) {
            if (!isNaN(e) && (this.autoComplete && this._updateItemsVisibility(""),
            this.listBox.unselectIndex(e, t),
            this.renderSelection("mouse"),
            this.multiSelect)) {
                if (e >= 0) {
                    var i = this.getItem(e)
                      , r = this.selectedItems.indexOf(i.value);
                    r >= 0 && (i.value === this.listBox.selectedValue && (this.listBox.selectedValue = null),
                    this.selectedItems.splice(r, 1),
                    this._selectedItems.splice(r, 1))
                }
                this.doMultiSelect(!1)
            }
        },
        selectIndex: function(e, t, i, r) {
            this.autoComplete && this._updateItemsVisibility(""),
            this.listBox.selectIndex(e, t, i, r),
            this.renderSelection("mouse"),
            this.selectedIndex = e,
            this.multiSelect && this.doMultiSelect()
        },
        selectItem: function(e) {
            this.autoComplete && this._updateItemsVisibility(""),
            null != this.listBox && (this.listBox.selectedIndex = -1,
            this.listBox.selectItem(e),
            this.selectedIndex = this.listBox.selectedIndex,
            this.renderSelection("mouse"),
            this.multiSelect && this.doMultiSelect(!1))
        },
        unselectItem: function(e) {
            if (this.autoComplete && this._updateItemsVisibility(""),
            null != this.listBox && (this.listBox.unselectItem(e),
            this.renderSelection("mouse"),
            this.multiSelect)) {
                var t = this.getItemByValue(e);
                if (t) {
                    var i = this.selectedItems.indexOf(t.value);
                    i >= 0 && (t.value === this.listBox.selectedValue && (this.listBox.selectedValue = null),
                    this.selectedItems.splice(i, 1),
                    this._selectedItems.splice(i, 1))
                }
                this.doMultiSelect(!1)
            }
        },
        checkItem: function(e) {
            this.autoComplete && this._updateItemsVisibility(""),
            null != this.listBox && this.listBox.checkItem(e)
        },
        uncheckItem: function(e) {
            this.autoComplete && this._updateItemsVisibility(""),
            null != this.listBox && this.listBox.uncheckItem(e)
        },
        indeterminateItem: function(e) {
            this.autoComplete && this._updateItemsVisibility(""),
            null != this.listBox && this.listBox.indeterminateItem(e)
        },
        getSelectedValue: function() {
            return this.listBox.selectedValue
        },
        getSelectedIndex: function() {
            return this.multiSelect ? this.remoteAutoComplete && this.multiSelect && this._selectedItems.length > 0 ? this.getSelectedItems()[0].index : this._selectedItems && this._selectedItems.length > 0 ? this.getSelectedItems()[0].index : void 0 : this.listBox.selectedIndex
        },
        getSelectedItem: function() {
            return this.multiSelect ? this.remoteAutoComplete && this.multiSelect && this._selectedItems.length > 0 ? this.getSelectedItems()[0] : this._selectedItems && this._selectedItems.length > 0 ? this.getSelectedItems()[0] : null : this.getVisibleItem(this.listBox.selectedIndex)
        },
        getSelectedItems: function() {
            if (this.remoteAutoComplete && this.multiSelect)
                return this._selectedItems;
            var e = new Array
              , t = this;
            return i.each(this.selectedItems, function() {
                var i;
                (i = t.getItemByValue(this)) ? e.push(i) : (i = t._selectedItems[this]) && e.push(i)
            }),
            e
        },
        getCheckedItems: function() {
            return this.listBox.getCheckedItems()
        },
        checkIndex: function(e) {
            this.listBox.checkIndex(e)
        },
        uncheckIndex: function(e) {
            this.listBox.uncheckIndex(e)
        },
        indeterminateIndex: function(e) {
            this.listBox.indeterminateIndex(e)
        },
        checkAll: function() {
            this.listBox.checkAll(),
            this.renderSelection("mouse")
        },
        uncheckAll: function() {
            this.listBox.uncheckAll(),
            this.renderSelection("mouse")
        },
        insertAt: function(e, t) {
            return null != e && this.listBox.insertAt(e, t)
        },
        addItem: function(e) {
            return this.listBox.addItem(e)
        },
        removeAt: function(e) {
            var t = this.listBox.removeAt(e);
            return this.renderSelection("mouse"),
            t
        },
        removeItem: function(e) {
            var t = this.listBox.removeItem(e);
            return this.renderSelection("mouse"),
            t
        },
        updateItem: function(e, t) {
            var i = this.listBox.updateItem(e, t);
            return this.renderSelection("mouse"),
            i
        },
        updateAt: function(e, t) {
            var i = this.listBox.updateAt(e, t);
            return this.renderSelection("mouse"),
            i
        },
        ensureVisible: function(e) {
            return this.listBox.ensureVisible(e)
        },
        disableAt: function(e) {
            var t = this.getVisibleItem(e);
            return t && this._disabledItems.push(t.value),
            this.listBox.disableAt(e)
        },
        enableAt: function(e) {
            var t = this.getVisibleItem(e);
            return t && this._disabledItems.splice(this._disabledItems.indexOf(t.value), 1),
            this.listBox.enableAt(e)
        },
        disableItem: function(e) {
            return (e = this.getVisibleItem(e)) && this._disabledItems.push(e.value),
            this.listBox.disableItem(e)
        },
        enableItem: function(e) {
            return (e = this.getVisibleItem(e)) && this._disabledItems.splice(this._disabledItems.indexOf(e.value), 1),
            this.listBox.enableItem(e)
        },
        _findPos: function(e) {
            for (; e && ("hidden" == e.type || 1 != e.nodeType || i.expr.filters.hidden(e)); )
                e = e.nextSibling;
            if (e) {
                var t = i(e).coord(!0);
                return [t.left, t.top]
            }
        },
        testOffset: function(e, t, r) {
            var s = e.outerWidth()
              , n = e.outerHeight()
              , o = i(window).width() + i(window).scrollLeft()
              , a = i(window).height() + i(window).scrollTop();
            if (t.left + s > o && s > this.host.width()) {
                var l = this.host.coord().left
                  , d = s - this.host.width();
                t.left = l - d + 2
            }
            return t.left < 0 && (t.left = parseInt(this.host.coord().left) + "px"),
            t.top -= Math.min(t.top, t.top + n > a && a > n ? Math.abs(n + r + 23) : 0),
            t
        },
        open: function() {
            this.isOpened() || this.opening || this.showListBox("api")
        },
        close: function() {
            this.isOpened() && this.hideListBox("api")
        },
        _getBodyOffset: function() {
            var e = 0
              , t = 0;
            return "0px" != i("body").css("border-top-width") && (e = parseInt(i("body").css("border-top-width")),
            isNaN(e) && (e = 0)),
            "0px" != i("body").css("border-left-width") && (t = parseInt(i("body").css("border-left-width")),
            isNaN(t) && (t = 0)),
            {
                left: t,
                top: e
            }
        },
        showListBox: function(e) {
            if (!this.listBox.items || 0 != this.listBox.items.length) {
                if ("search" != e || this.autoComplete || this.remoteAutoComplete || this.autoDropDownHeight && this.container.height(this.listBoxContainer.height() + 25),
                this.element.setAttribute("opened", !0),
                (this.autoComplete || this.multiSelect && !this.remoteAutoComplete) && "search" != e && (this._updateItemsVisibility(""),
                this.multiSelect))
                    for (var t = this.getVisibleItems(), r = 0; r < t.length; r++)
                        if (!t[r].disabled) {
                            this.ensureVisible(r);
                            break
                        }
                if (this.remoteAutoComplete && this.listBox.clearSelection(),
                "search" != e && (this._oldvalue = this.listBox.selectedValue),
                i.jqx.aria(this, "aria-expanded", !0),
                "auto" == this.dropDownWidth && null != this.width && this.width.indexOf && -1 != this.width.indexOf("%") && this.listBox.host.width() != this.host.width()) {
                    var s = this.element.offsetWidth;
                    this.listBoxContainer.jqxListBox({
                        width: s
                    }),
                    this.listBoxContainer[0].style.width = s + "px",
                    this.container.width(parseInt(s) + 25)
                }
                "auto" == this.dropDownWidth && "0px" === this.host.css("border-left-width") && (s = this.element.offsetWidth,
                this.listBoxContainer.jqxListBox({
                    width: s + 1
                }),
                this.container.width(parseInt(s) + 25));
                var n, o = this, a = this.listBoxContainer, l = this.listBox, d = (i(window).scrollTop(),
                i(window).scrollLeft(),
                parseInt(this._findPos(this.host[0])[1]) + parseInt(this.host.outerHeight()) - 1 + "px"), h = parseInt(Math.round(this.host.coord(!0).left));
                n = h + "px",
                "element" === this.dropDownContainer && (d = parseInt(this.host.outerHeight()) - 1 + "px",
                n = 0);
                var c = i.jqx.mobile.isSafariMobileBrowser() || i.jqx.mobile.isWindowsPhone();
                this.ishiding = !1,
                (i.jqx.utilities.hasTransform(this.host) || null != c && c) && (n = i.jqx.mobile.getLeftPos(this.element),
                d = i.jqx.mobile.getTopPos(this.element) + parseInt(this.host.outerHeight()),
                "0px" != i("body").css("border-top-width") && (d = parseInt(d) - this._getBodyOffset().top + "px"),
                "0px" != i("body").css("border-left-width") && (n = parseInt(n) - this._getBodyOffset().left + "px")),
                this.host.addClass(this.toThemeProperty("jqx-combobox-state-selected")),
                "top" == this.dropDownVerticalAlignment ? this.dropdownlistArrowIcon.addClass(this.toThemeProperty("jqx-icon-arrow-up-selected")) : this.dropdownlistArrowIcon.addClass(this.toThemeProperty("jqx-icon-arrow-down-selected")),
                this.dropdownlistArrow.addClass(this.toThemeProperty("jqx-combobox-arrow-selected")),
                this.dropdownlistArrow.addClass(this.toThemeProperty("jqx-fill-state-pressed")),
                this.host.addClass(this.toThemeProperty("jqx-combobox-state-focus")),
                this.host.addClass(this.toThemeProperty("jqx-fill-state-focus")),
                this.dropdownlistContent.addClass(this.toThemeProperty("jqx-combobox-content-focus")),
                this.container.css("left", n),
                this.container.css("top", d),
                l._arrange();
                var u = !1;
                if ("right" == this.dropDownHorizontalAlignment || this.rtl) {
                    var p = this.container.outerWidth()
                      , f = Math.abs(p - this.host.width());
                    p > this.host.width() ? this.container.css("left", 25 + parseInt(Math.round(h)) - f + "px") : this.container.css("left", 25 + parseInt(Math.round(h)) + f + "px")
                }
                if ("top" == this.dropDownVerticalAlignment) {
                    var m = a.height();
                    u = !0,
                    a.css("top", 23),
                    a.addClass(this.toThemeProperty("jqx-popup-up"));
                    var g = parseInt(this.host.outerHeight())
                      , v = parseInt(d) - Math.abs(m + g + 23);
                    this.container.css("top", v)
                }
                if (this.enableBrowserBoundsDetection) {
                    var w = this.testOffset(a, {
                        left: parseInt(this.container.css("left")),
                        top: parseInt(d)
                    }, parseInt(this.host.outerHeight()));
                    parseInt(this.container.css("top")) != w.top ? (u = !0,
                    a.css("top", 23),
                    a.addClass(this.toThemeProperty("jqx-popup-up"))) : a.css("top", 0),
                    this.container.css("top", w.top),
                    this.container.css("top", w.top),
                    parseInt(this.container.css("left")) != w.left && this.container.css("left", w.left)
                }
                if ("none" == this.animationType)
                    this.container.css("display", "block"),
                    i.data(document.body, "openedCombojqxListBoxParent", o),
                    i.data(document.body, "openedCombojqxListBox" + o.element.id, a),
                    a.css("margin-top", 0),
                    a.css("opacity", 1);
                else {
                    this.container.css("display", "block");
                    var x = a.outerHeight();
                    a.stop(),
                    "fade" == this.animationType ? (a.css("margin-top", 0),
                    a.css("opacity", 0),
                    a.animate({
                        opacity: 1
                    }, this.openDelay, function() {
                        o.isanimating = !1,
                        o.opening = !1,
                        i.data(document.body, "openedCombojqxListBoxParent", o),
                        i.data(document.body, "openedCombojqxListBox" + o.element.id, a)
                    })) : (a.css("opacity", 1),
                    u ? a.css("margin-top", x) : a.css("margin-top", -x),
                    this.isanimating = !0,
                    this.opening = !0,
                    a.animate({
                        "margin-top": 0
                    }, this.openDelay, function() {
                        o.isanimating = !1,
                        o.opening = !1,
                        i.data(document.body, "openedCombojqxListBoxParent", o),
                        i.data(document.body, "openedCombojqxListBox" + o.element.id, a)
                    }))
                }
                l._renderItems(),
                u ? (this.host.addClass(this.toThemeProperty("jqx-rc-t-expanded")),
                a.addClass(this.toThemeProperty("jqx-rc-b-expanded")),
                this.dropdownlistArrow.addClass(this.toThemeProperty("jqx-rc-t-expanded"))) : (this.host.addClass(this.toThemeProperty("jqx-rc-b-expanded")),
                a.addClass(this.toThemeProperty("jqx-rc-t-expanded")),
                this.dropdownlistArrow.addClass(this.toThemeProperty("jqx-rc-b-expanded"))),
                a.addClass(this.toThemeProperty("jqx-fill-state-focus")),
                this._raiseEvent("0", l)
            }
        },
        doMultiSelect: function(e) {
            this.checkboxes && (this.multiSelect = !1);
            var t = this;
            if (!this.multiSelect) {
                var r = t.dropdownlistContent.find(".jqx-button")
                  , s = "mousedown";
                if (this.touch && (s = i.jqx.mobile.getTouchEventName("touchstart")),
                this.removeHandler(r, s),
                this.removeHandler(r.find(".jqx-icon-close"), s),
                r.remove(),
                !(a = this.listBox.items))
                    return;
                for (var n = 0; n < a.length; n++)
                    a[n].disabled = !1;
                return this.listBox._renderItems(),
                this.selectedItems = new Array,
                void (this._selectedItems = new Array)
            }
            if (!this.validateSelection || this.validateSelection(this.listBox.selectedValue)) {
                if (this.selectedItems,
                this.listBox.selectedValue) {
                    if (-1 === this.selectedItems.indexOf(this.listBox.selectedValue)) {
                        var o = this.getItemByValue(this.listBox.selectedValue);
                        o && o.visible && (this.selectedItems.push(this.listBox.selectedValue),
                        this._selectedItems.push(o),
                        this._raiseEvent("2", {
                            index: o.index,
                            item: o
                        }),
                        this._raiseEvent("4", {
                            index: o.index,
                            item: o
                        }))
                    }
                    this.listBox.selectedIndex = 0
                }
                if (a = this.listBox.items) {
                    for (n = 0; n < a.length; n++)
                        a[n].disabled = !1,
                        (this.selectedItems.indexOf(a[n].value) >= 0 || this._disabledItems.indexOf(this.value) >= 0) && (a[n].disabled = !0);
                    this.listBox._renderItems(),
                    this.searchString = "",
                    this.input.val("");
                    var a = "";
                    s = "mousedown",
                    r = t.dropdownlistContent.find(".jqx-button"),
                    this.touch && (s = i.jqx.mobile.getTouchEventName("touchstart")),
                    this.removeHandler(r, s),
                    this.removeHandler(r.find(".jqx-icon-close"), s),
                    r.remove(),
                    t.input.detach(),
                    this.selectedItems.length > 0 ? (t.input.css("width", "25px"),
                    this.isMaterialized() && t.hint ? t.label[0].innerHTML = this.placeHolder : t.input.attr("placeholder", "")) : (t.input.css("width", "100%"),
                    t.isMaterialized() && t.hint ? t.label[0].innerHTML = this.placeHolder : t.input.attr("placeholder", this.placeHolder)),
                    t.isMaterialized() && t.hint && setTimeout(function() {
                        0 === t.selectedItems.length ? (t.element.removeAttribute("hint"),
                        t.label[0].innerHTML = t.placeHolder) : t.hint && t.element.setAttribute("hint", !0)
                    }),
                    i.each(this.selectedItems, function(e) {
                        var r = t.getItemByValue(this);
                        r && !t.remoteAutoComplete || (r = t._selectedItems[e]);
                        var s = i('<div style="overflow: hidden; float: left;"></div>');
                        if (s.addClass(t.toThemeProperty("jqx-button")),
                        s.addClass(t.toThemeProperty("jqx-combobox-multi-item")),
                        s.addClass(t.toThemeProperty("jqx-fill-state-normal")),
                        s.addClass(t.toThemeProperty("jqx-rc-all")),
                        r) {
                            var n = r.label;
                            if (t.renderSelectedItem) {
                                var o = t.renderSelectedItem(e, r);
                                o && (n = o)
                            }
                            "" == s[0].innerHTML && (s[0].innerHTML = '<a data-value="' + r.value + '" style="float: left;" href="#">' + n + "</a>"),
                            t.rtl && (s[0].innerHTML = '<a data-value="' + r.value + '" style="float: right;" href="#">' + n + "</a>");
                            var a = t.rtl ? "left" : "right";
                            if (t.showCloseButtons) {
                                var l = '<div style="position: relative; overflow: hidden; float: ' + a + '; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 100%; top: 50%; margin-left: -18px; margin-top: -7px; float: none; width: 16px; height: 16px;" class="' + t.toThemeProperty("jqx-icon-close") + '"></div></div>';
                                i.jqx.browser.msie && i.jqx.browser.version < 8 && (l = '<div style="position: relative; overflow: hidden; float: left; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 100%; top: 50%; margin-left: -18px; margin-top: -7px; float: none; width: 16px; height: 16px;" class="' + t.toThemeProperty("jqx-icon-close") + '"></div></div>'),
                                t.rtl && (l = '<div style="position: relative; overflow: hidden; float: ' + a + '; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 0px; top: 50%; margin-top: -7px; float: none; width: 16px; height: 16px;" class="' + t.toThemeProperty("jqx-icon-close") + '"></div></div>',
                                i.jqx.browser.msie && i.jqx.browser.version < 8 && (l = '<div style="position: relative; overflow: hidden; float: left; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 0px; top: 50%; margin-top: -7px; float: none; width: 16px; height: 16px;" class="' + t.toThemeProperty("jqx-icon-close") + '"></div></div>')),
                                s[0].innerHTML += l
                            }
                        } else
                            "" == s[0].innerHTML && (s[0].innerHTML = '<a href="#"></a>');
                        t.dropdownlistContent.append(s)
                    }),
                    t.dropdownlistContent.append(t.input),
                    t.input.val(""),
                    !1 !== e && (t.input.focus(),
                    setTimeout(function() {
                        t.input.focus()
                    }, 10)),
                    r = t.dropdownlistContent.find(".jqx-button"),
                    !0 === this.touchMode && (s = "mousedown"),
                    this.addHandler(r, s, function(e) {
                        if (e.target.className.indexOf("jqx-icon-close") >= 0)
                            return !0;
                        if (t.disabled)
                            return !0;
                        var r = i(e.target).attr("data-value");
                        return t.getItemByValue(r) && (t.listBox.selectedValue = null,
                        t.listBox.clearSelection()),
                        t.listBox.scrollTo(0, 0),
                        t.open(),
                        e.preventDefault && e.preventDefault(),
                        e.stopPropagation && e.stopPropagation(),
                        !1
                    }),
                    this.addHandler(r.find(".jqx-icon-close"), s, function(e) {
                        if (!t.disabled) {
                            var r = i(e.target).parent().parent().find("a").attr("data-value")
                              , s = t.getItemByValue(r);
                            if (s || t.remoteAutoComplete && !s && t.selectedItems.indexOf(r) >= 0) {
                                t.listBox.selectedValue = null;
                                var n = t.selectedItems.indexOf(r)
                                  , o = s && s.index >= 0 ? s.index : n;
                                if (n >= 0)
                                    t.selectedItems.splice(n, 1),
                                    (l = t._selectedItems[n]) || (l = s),
                                    t._selectedItems.splice(n, 1),
                                    t._raiseEvent("3", {
                                        index: o,
                                        type: "mouse",
                                        item: l
                                    }),
                                    t._raiseEvent("4", {
                                        index: o,
                                        type: "mouse",
                                        item: l
                                    }),
                                    t.doMultiSelect();
                                else
                                    for (var a = 0; a < t.selectedItems.length; a++) {
                                        var l;
                                        if ((l = t.selectedItems[a]) == r) {
                                            t.selectedItems.splice(a, 1),
                                            t._selectedItems.splice(a, 1),
                                            t._raiseEvent("3", {
                                                index: o,
                                                type: "mouse",
                                                item: s
                                            }),
                                            t._raiseEvent("4", {
                                                index: o,
                                                type: "mouse",
                                                item: s
                                            }),
                                            t.doMultiSelect();
                                            break
                                        }
                                    }
                            }
                        }
                    }),
                    this.isMaterialized() && this.host.height(this.dropdownlistContent.height()),
                    this.bar.css("top", this.host.height()),
                    t.dropdownlistArrow.height(this.host.height()),
                    t._updateInputSelection()
                }
            }
        },
        hideListBox: function(e) {
            var t = this.listBoxContainer
              , r = this.listBox
              , s = this.container;
            if ("none" != this.container[0].style.display) {
                this.element.setAttribute("opened", !1),
                i.jqx.aria(this, "aria-expanded", !1),
                "keyboard" != e && "mouse" != e || (this.listBox.searchString = ""),
                ("keyboard" == e || "mouse" == e && this.multiSelect) && this.doMultiSelect();
                var n = this;
                if (i.data(document.body, "openedCombojqxListBox" + this.element.id, null),
                "none" == this.animationType)
                    this.opening = !1,
                    this.container.css("display", "none");
                else if (!this.ishiding) {
                    var o = t.outerHeight();
                    t.css("margin-top", 0),
                    t.stop(),
                    this.opening = !1,
                    this.isanimating = !0;
                    var a = -o;
                    parseInt(this.container.coord().top) < parseInt(this.host.coord().top) && (a = o),
                    "fade" == this.animationType ? (t.css({
                        opacity: 1
                    }),
                    t.animate({
                        opacity: 0
                    }, this.closeDelay, function() {
                        n.isanimating = !1,
                        s.css("display", "none"),
                        n.ishiding = !1
                    })) : t.animate({
                        "margin-top": a
                    }, this.closeDelay, function() {
                        n.isanimating = !1,
                        s.css("display", "none"),
                        n.ishiding = !1
                    })
                }
                this.ishiding = !0,
                this.host.removeClass(this.toThemeProperty("jqx-combobox-state-selected")),
                this.dropdownlistArrowIcon.removeClass(this.toThemeProperty("jqx-icon-arrow-down-selected")),
                this.dropdownlistArrowIcon.removeClass(this.toThemeProperty("jqx-icon-arrow-up-selected")),
                this.dropdownlistArrow.removeClass(this.toThemeProperty("jqx-combobox-arrow-selected")),
                this.dropdownlistArrow.removeClass(this.toThemeProperty("jqx-fill-state-pressed")),
                this.focused || (this.host.removeClass(this.toThemeProperty("jqx-combobox-state-focus")),
                this.host.removeClass(this.toThemeProperty("jqx-fill-state-focus")),
                this.dropdownlistContent.removeClass(this.toThemeProperty("jqx-combobox-content-focus"))),
                this.host.removeClass(this.toThemeProperty("jqx-rc-b-expanded")),
                t.removeClass(this.toThemeProperty("jqx-rc-t-expanded")),
                this.host.removeClass(this.toThemeProperty("jqx-rc-t-expanded")),
                t.removeClass(this.toThemeProperty("jqx-rc-b-expanded")),
                t.removeClass(this.toThemeProperty("jqx-fill-state-focus")),
                this.dropdownlistArrow.removeClass(this.toThemeProperty("jqx-rc-t-expanded")),
                this.dropdownlistArrow.removeClass(this.toThemeProperty("jqx-rc-b-expanded")),
                this._raiseEvent("1", r)
            }
        },
        closeOpenedListBox: function(e) {
            var t = e.data.that
              , r = i(e.target)
              , s = e.data.listbox;
            if (null == s)
                return !0;
            if (!i(e.target).ischildof(t.host)) {
                var n = !1;
                return i.each(r.parents(), function() {
                    if ("undefined" != this.className && this.className.indexOf) {
                        if (-1 != this.className.indexOf("jqx-listbox"))
                            return n = !0,
                            !1;
                        if (-1 != this.className.indexOf("jqx-combobox"))
                            return t.element.id == this.id && (n = !0),
                            !1
                    }
                }),
                null == s || n || t.isOpened() && (t.hideListBox("api"),
                t.input.blur()),
                !0
            }
        },
        loadFromSelect: function(e) {
            this.listBox.loadFromSelect(e),
            this.clearSelection()
        },
        refresh: function(e) {
            this._setSize(),
            this._arrange(),
            this.listBox && this.renderSelection()
        },
        resize: function() {
            this._setSize(),
            this._arrange()
        },
        _arrange: function() {
            var e = parseInt(this.host.width())
              , t = parseInt(this.host.height())
              , r = (this.arrowSize,
            this.arrowSize)
              , s = 1;
            this.showArrow ? "none" === this.dropdownlistArrow[0].style.display && this.dropdownlistArrow.show() : (r = 0,
            this.dropdownlistArrow.hide(),
            s = 0,
            this.host.css("cursor", "arrow"));
            var n = e - r - 1 * s;
            n > 0 && (this.dropdownlistContent[0].style.width = n + "px"),
            this.rtl && (this.dropdownlistContent[0].style.width = -1 + n + "px"),
            this.dropdownlistContent[0].style.height = t + "px",
            this.dropdownlistContent[0].style.left = "0px",
            this.dropdownlistContent[0].style.top = "0px",
            this.dropdownlistArrow[0].style.width = r + "px",
            this.dropdownlistArrow[0].style.height = t + "px",
            this.dropdownlistArrow[0].style.left = 1 + n + "px",
            this.input[0].style.width = "100%",
            this.multiSelect || this.input.height(t);
            var o = this.input.height();
            0 == o && (o = parseInt(this.input.css("font-size")) + 3),
            -1 == this.input[0].className.indexOf("jqx-rc-all") && this.input.addClass(this.toThemeProperty("jqx-rc-all"));
            var a = parseInt(t) / 2 - parseInt(o) / 2;
            if (this.rtl && (this.dropdownlistArrow.css("left", "0px"),
            this.dropdownlistContent.css("left", this.dropdownlistArrow.width()),
            i.jqx.browser.msie && i.jqx.browser.version <= 8 && this.dropdownlistContent.css("left", 1 + this.dropdownlistArrow.width())),
            this.multiSelect) {
                this.input.css("float", "left"),
                this.input.width(25),
                this.dropdownlistWrapper.parent().css("height", "auto"),
                this.dropdownlistContent.css("height", "auto"),
                this.dropdownlistWrapper.css("height", "auto"),
                this.dropdownlistContent.css("position", "relative"),
                this.dropdownlistContent.css("cursor", "text"),
                this.host.css("height", "auto"),
                this.host.css("min-height", this.height),
                this.dropdownlistContent.css("min-height", this.height),
                t = parseInt(this.host.height()),
                this.dropdownlistArrow.height(t);
                var l = parseInt(this.host.css("min-height"));
                (a = parseInt(l) / 2 - parseInt(o) / 2) > 0 && this.input.css("margin-top", a),
                this.isMaterialized() && this.host.height(this.dropdownlistContent.height()),
                this.bar.css("top", this.host.height()),
                this.dropdownlistArrow.height(this.host.height())
            }
        },
        destroy: function() {
            this.source && this.source.unbindBindingUpdate && (this.source.unbindBindingUpdate(this.element.id),
            this.source.unbindBindingUpdate(this.listBoxContainer[0].id),
            this.source.unbindDownloadComplete(this.element.id),
            this.source.unbindDownloadComplete(this.listBoxContainer[0].id)),
            i.jqx.utilities.resize(this.host, null, !0),
            this.removeHandler(this.listBoxContainer, "select"),
            this.removeHandler(this.listBoxContainer, "unselect"),
            this.removeHandler(this.listBoxContainer, "change"),
            this.removeHandler(this.listBoxContainer, "bindingComplete"),
            this.removeHandler(this.dropdownlistWrapper, "selectstart"),
            this.removeHandler(this.dropdownlistWrapper, "mousedown"),
            this.removeHandler(this.host, "keydown"),
            this.removeHandler(this.listBoxContainer, "select"),
            this.removeHandler(this.listBox.content, "click"),
            this.removeHandlers(),
            this.removeHandler(this.input, "keyup.textchange"),
            this.listBoxContainer.jqxListBox("destroy"),
            this.listBoxContainer.remove(),
            this.host.removeClass(),
            this.removeHandler(i(document), "mousedown." + this.id, this.closeOpenedListBox),
            this.touch && this.removeHandler(i(document), i.jqx.mobile.getTouchEventName("touchstart") + "." + this.id),
            this.cinput.remove(),
            delete this.cinput,
            this.dropdownlistArrow.remove(),
            delete this.dropdownlistArrow,
            this.dropdownlistArrowIcon.remove(),
            delete this.dropdownlistArrowIcon,
            delete this.dropdownlistWrapper,
            delete this.listBoxContainer,
            delete this.input,
            delete this.dropdownlistContent,
            delete this.comboStructure,
            this.container.remove(),
            delete this.listBox,
            delete this.container;
            var e = i.data(this.element, "jqxComboBox");
            e && delete e.instance,
            this.host.removeData(),
            this.host.remove(),
            delete this.host,
            delete this.set,
            delete this.get,
            delete this.call,
            delete this.element
        },
        _raiseEvent: function(e, t) {
            null == t && (t = {
                owner: null
            });
            var r = this.events[e];
            args = t,
            args.owner = this;
            var s = new i.Event(r);
            return s.owner = this,
            2 != e && 3 != e && 4 != e && 5 != e && 6 != e && 7 != e && 8 != e && 9 != e || (s.args = t),
            this.host.trigger(s)
        },
        propertiesChangedHandler: function(e, t, i) {
            if (i.width && i.height && 2 == Object.keys(i).length) {
                if (e._setSize(),
                "width" == t && "auto" == e.dropDownWidth) {
                    var r = e.host.width();
                    e.listBoxContainer.jqxListBox({
                        width: r
                    }),
                    e.container.width(parseInt(r) + 25)
                }
                e._arrange(),
                e.close()
            }
        },
        propertyChangedHandler: function(e, t, r, s) {
            if (null != e.isInitialized && 0 != e.isInitialized && !(e.batchUpdate && e.batchUpdate.width && e.batchUpdate.height && 2 == Object.keys(e.batchUpdate).length)) {
                if ("template" == t) {
                    e.listBoxContainer.removeClass(e.toThemeProperty("jqx-" + r + "-item")),
                    e.listBoxContainer.addClass(e.toThemeProperty("jqx-" + e.template + "-item")),
                    e.dropDownListArrow.removeClass(e.toThemeProperty("jqx-" + r)),
                    e.dropDownListArrow.addClass(e.toThemeProperty("jqx-" + e.template));
                    var n = this;
                    n.bar.removeClass(n.toThemeProperty("jqx-" + r)),
                    n.label.removeClass(n.toThemeProperty("jqx-" + r)),
                    n.bar.addClass(n.toThemeProperty("jqx-" + n.template)),
                    n.label.addClass(n.toThemeProperty("jqx-" + n.template))
                }
                if ("dropDownVerticalAlignment" == t && (e.close(),
                e.dropdownlistArrowIcon.removeClass(e.toThemeProperty("jqx-icon-arrow-up")),
                e.dropdownlistArrowIcon.removeClass(e.toThemeProperty("jqx-icon-arrow-down")),
                "top" == e.dropDownVerticalAlignment ? e.dropdownlistArrowIcon.addClass(e.toThemeProperty("jqx-icon-arrow-up")) : e.dropdownlistArrowIcon.addClass(e.toThemeProperty("jqx-icon-arrow-down")),
                e.listBoxContainer.css("top", 0),
                e.listBoxContainer.removeClass(this.toThemeProperty("jqx-popup-up"))),
                "autoItemsHeight" == t && e.listBoxContainer.jqxListBox({
                    autoItemsHeight: s
                }),
                "itemHeight" == t && e.listBoxContainer.jqxListBox({
                    itemHeight: s
                }),
                "renderSelectedItem" == t && e.renderSelection("mouse"),
                "renderer" == t && e.listBoxContainer.jqxListBox({
                    renderer: s
                }),
                "enableSelection" == t && e.listBoxContainer.jqxListBox({
                    enableSelection: s
                }),
                "enableHover" == t && e.listBoxContainer.jqxListBox({
                    enableHover: s
                }),
                "touchMode" === t && (e.listBoxContainer.jqxListBox({
                    touchMode: s
                }),
                e.touch = i.jqx.mobile.isTouchDevice(),
                !0 === e.touchMode && (e.touch = !0),
                e._updateHandlers()),
                "multiSelect" == t)
                    if (s)
                        e.doMultiSelect(!1);
                    else {
                        for (var o = e.listBox.items, a = -1, l = 0; l < o.length; l++)
                            o[l].disabled = !1,
                            (e.selectedItems.indexOf(o[l].value) >= 0 || e._disabledItems.indexOf(e.value) >= 0) && (o[l].disabled = !0,
                            a = o[l].index);
                        if (e.doMultiSelect(!1),
                        e.listBox._renderItems(),
                        !o)
                            return;
                        e.listBox.selectedIndex = a,
                        e.renderSelection("mouse"),
                        e.dropdownlistWrapper.parent().css("height", "100%"),
                        e.dropdownlistContent.css("height", "100"),
                        e.dropdownlistWrapper.css("height", "100"),
                        e.dropdownlistContent.css("position", "relative"),
                        e.host.css("min-height", null),
                        e._setSize(),
                        e._arrange()
                    }
                if ("showArrow" == t && (e._arrange(),
                e.multiSelect && e.doMultiSelect(!1)),
                "placeHolder" == t && (e.isMaterialized() ? e.label.innerHTML = e.placeHolder : e.input.attr("placeholder", e.placeHolder)),
                "popupZIndex" == t && e.listBoxContainer.css({
                    zIndex: e.popupZIndex
                }),
                "promptText" == t && (e.placeHolder = s),
                "autoOpen" == t && e._updateHandlers(),
                "renderer" == t && (e.listBox.renderer = e.renderer),
                "itemHeight" == t && (e.listBox.itemHeight = s),
                "source" == t && (e.input.val(""),
                e.listBoxContainer.jqxListBox({
                    source: e.source
                }),
                e.renderSelection("mouse"),
                null == e.source && e.clearSelection(),
                e.multiSelect && (e.selectedItems = new Array,
                e._selectedItems = new Array,
                e.doMultiSelect(!1))),
                "rtl" == t && (s ? (e.dropdownlistArrow.css("float", "left"),
                e.dropdownlistContent.css("float", "right")) : (e.dropdownlistArrow.css("float", "right"),
                e.dropdownlistContent.css("float", "left")),
                e.listBoxContainer.jqxListBox({
                    rtl: e.rtl
                })),
                "displayMember" != t && "valueMember" != t || (e.listBoxContainer.jqxListBox({
                    displayMember: e.displayMember,
                    valueMember: e.valueMember
                }),
                e.renderSelection("mouse")),
                "autoDropDownHeight" == t && (e.listBoxContainer.jqxListBox({
                    autoHeight: e.autoDropDownHeight
                }),
                e.autoDropDownHeight ? e.container.height(e.listBoxContainer.height() + 25) : (e.listBoxContainer.jqxListBox({
                    height: e.dropDownHeight
                }),
                e.container.height(parseInt(e.dropDownHeight) + 25)),
                e.listBox._arrange(),
                e.listBox._updatescrollbars()),
                "dropDownHeight" == t && (e.autoDropDownHeight || (e.listBoxContainer.jqxListBox({
                    height: e.dropDownHeight
                }),
                e.container.height(parseInt(e.dropDownHeight) + 25))),
                "dropDownWidth" == t || "scrollBarSize" == t) {
                    var d = e.width;
                    "auto" != e.dropDownWidth && (d = e.dropDownWidth),
                    e.listBoxContainer.jqxListBox({
                        width: d,
                        scrollBarSize: e.scrollBarSize
                    }),
                    e.container.width(parseInt(d) + 25)
                }
                "autoComplete" == t && e._resetautocomplete(),
                "checkboxes" == t && (e.listBoxContainer.jqxListBox({
                    checkboxes: e.checkboxes
                }),
                e.checkboxes ? (e.input.attr("readonly", !0),
                i.jqx.aria(e, "aria-readonly", !0)) : i.jqx.aria(e, "aria-readonly", !1)),
                "theme" == t && null != s && (e.listBoxContainer.jqxListBox({
                    theme: s
                }),
                e.listBoxContainer.addClass(e.toThemeProperty("jqx-popup")),
                i.jqx.browser.msie && e.listBoxContainer.addClass(e.toThemeProperty("jqx-noshadow")),
                i.jqx.utilities.setTheme(r, s, e.host)),
                "rtl" == t && (e.render(),
                e.refresh()),
                ("width" == t || "height" == t) && (e._setSize(),
                "width" == t && "auto" == e.dropDownWidth && (d = e.host.width(),
                e.listBoxContainer.jqxListBox({
                    width: d
                }),
                e.container.width(parseInt(d) + 25)),
                e._arrange(),
                e.close()),
                "selectedIndex" == t && (e.listBox.selectIndex(s),
                e.renderSelection("mouse"))
            }
        }
    })
}
, function(e, t, i) {
    /*!
 * Globalize
 *
 * http://github.com/jquery/globalize
 *
 * Copyright Software Freedom Conservancy, Inc.
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 */
    var r, s, n, o, a, l, d, h, c, u, p, f, m, g, v, w, x, b, y, _, q, j, S, C, T, I, k, D, P, B, M, H;
    document.Globalize || (r = function(e) {
        return new r.prototype.init(e)
    }
    ,
    e.exports = r,
    r.cultures = {},
    r.prototype = {
        constructor: r,
        init: function(e) {
            return this.cultures = r.cultures,
            this.cultureSelector = e,
            this
        }
    },
    r.prototype.init.prototype = r.prototype,
    r.cultures.default = {
        name: "en",
        englishName: "English",
        nativeName: "English",
        isRTL: !1,
        language: "en",
        numberFormat: {
            pattern: ["-n"],
            decimals: 2,
            ",": ",",
            ".": ".",
            groupSizes: [3],
            "+": "+",
            "-": "-",
            NaN: "NaN",
            negativeInfinity: "-Infinity",
            positiveInfinity: "Infinity",
            percent: {
                pattern: ["-n %", "n %"],
                decimals: 2,
                groupSizes: [3],
                ",": ",",
                ".": ".",
                symbol: "%"
            },
            currency: {
                pattern: ["($n)", "$n"],
                decimals: 2,
                groupSizes: [3],
                ",": ",",
                ".": ".",
                symbol: "$"
            }
        },
        calendars: {
            standard: {
                name: "Gregorian_USEnglish",
                "/": "/",
                ":": ":",
                firstDay: 0,
                days: {
                    names: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                    namesAbbr: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                    namesShort: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"]
                },
                months: {
                    names: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", ""],
                    namesAbbr: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", ""]
                },
                AM: ["AM", "am", "AM"],
                PM: ["PM", "pm", "PM"],
                eras: [{
                    name: "A.D.",
                    start: null,
                    offset: 0
                }],
                twoDigitYearMax: 2029,
                patterns: {
                    d: "M/d/yyyy",
                    D: "dddd, MMMM dd, yyyy",
                    t: "h:mm tt",
                    T: "h:mm:ss tt",
                    f: "dddd, MMMM dd, yyyy h:mm tt",
                    F: "dddd, MMMM dd, yyyy h:mm:ss tt",
                    M: "MMMM dd",
                    Y: "yyyy MMMM",
                    S: "yyyy'-'MM'-'dd'T'HH':'mm':'ss"
                }
            }
        },
        messages: {}
    },
    r.cultures.default.calendar = r.cultures.default.calendars.standard,
    r.cultures.en = r.cultures.default,
    r.cultureSelector = "en",
    s = /^0x[a-f0-9]+$/i,
    n = /^[+\-]?infinity$/i,
    o = /^[+\-]?\d*\.?\d*(e[+\-]?\d+)?$/,
    a = /^\s+|\s+$/g,
    l = function(e, t) {
        if (e.indexOf)
            return e.indexOf(t);
        for (var i = 0, r = e.length; i < r; i++)
            if (e[i] === t)
                return i;
        return -1
    }
    ,
    d = function(e, t) {
        return e.substr(e.length - t.length) === t
    }
    ,
    h = function() {
        var e, t, i, r, s, n, o = arguments[0] || {}, a = 1, l = arguments.length, d = !1;
        for ("boolean" == typeof o && (d = o,
        o = arguments[1] || {},
        a = 2),
        "object" == typeof o || u(o) || (o = {}); a < l; a++)
            if (null != (e = arguments[a]))
                for (t in e)
                    i = o[t],
                    o !== (r = e[t]) && (d && r && (p(r) || (s = c(r))) ? (s ? (s = !1,
                    n = i && c(i) ? i : []) : n = i && p(i) ? i : {},
                    o[t] = h(d, n, r)) : void 0 !== r && (o[t] = r));
        return o
    }
    ,
    c = Array.isArray || function(e) {
        return "[object Array]" === Object.prototype.toString.call(e)
    }
    ,
    u = function(e) {
        return "[object Function]" === Object.prototype.toString.call(e)
    }
    ,
    p = function(e) {
        return "[object Object]" === Object.prototype.toString.call(e)
    }
    ,
    f = function(e, t) {
        return 0 === e.indexOf(t)
    }
    ,
    m = function(e) {
        return (e + "").replace(a, "")
    }
    ,
    g = function(e) {
        return isNaN(e) ? NaN : Math[e < 0 ? "ceil" : "floor"](e)
    }
    ,
    v = function(e, t, i) {
        var r;
        for (r = e.length; r < t; r += 1)
            e = i ? "0" + e : e + "0";
        return e
    }
    ,
    w = function(e, t) {
        for (var i = 0, r = !1, s = 0, n = e.length; s < n; s++) {
            var o = e.charAt(s);
            switch (o) {
            case "'":
                r ? t.push("'") : i++,
                r = !1;
                break;
            case "\\":
                r && t.push("\\"),
                r = !r;
                break;
            default:
                t.push(o),
                r = !1
            }
        }
        return i
    }
    ,
    x = function(e, t) {
        t = t || "F";
        var i, r = e.patterns, s = t.length;
        if (1 === s) {
            if (!(i = r[t]))
                throw "Invalid date format string '" + t + "'.";
            t = i
        } else
            2 === s && "%" === t.charAt(0) && (t = t.charAt(1));
        return t
    }
    ,
    b = function(e, t, i) {
        var r, s = i.calendar, n = s.convert;
        if (!t || !t.length || "i" === t) {
            if (i && i.name.length)
                if (n)
                    r = b(e, s.patterns.F, i);
                else {
                    var o = new Date(e.getTime())
                      , a = q(e, s.eras);
                    o.setFullYear(j(e, s, a)),
                    r = o.toLocaleString()
                }
            else
                r = e.toString();
            return r
        }
        var l = s.eras
          , d = "s" === t;
        t = x(s, t),
        r = [];
        var h, c, u, p, f = ["0", "00", "000"], m = /([^d]|^)(d|dd)([^d]|$)/g, g = 0, v = _();
        function y(e, t) {
            if (e < 0)
                return "-" + y(-e, t);
            var i, r = e + "";
            return t > 1 && r.length < t ? (i = f[t - 2] + r).substr(i.length - t, t) : i = r
        }
        function S(e, t) {
            if (p)
                return p[t];
            switch (t) {
            case 0:
                return e.getFullYear();
            case 1:
                return e.getMonth();
            case 2:
                return e.getDate();
            default:
                throw "Invalid part value " + t
            }
        }
        for (!d && n && (p = n.fromGregorian(e)); ; ) {
            var C = v.lastIndex
              , T = v.exec(t)
              , I = t.slice(C, T ? T.index : t.length);
            if (g += w(I, r),
            !T)
                break;
            if (g % 2)
                r.push(T[0]);
            else {
                var k = T[0]
                  , D = k.length;
                switch (k) {
                case "ddd":
                case "dddd":
                    var P = 3 === D ? s.days.namesAbbr : s.days.names;
                    r.push(P[e.getDay()]);
                    break;
                case "d":
                case "dd":
                    c = !0,
                    r.push(y(S(e, 2), D));
                    break;
                case "MMM":
                case "MMMM":
                    var B = S(e, 1);
                    r.push(s.monthsGenitive && (c || u ? c : (c = m.test(t),
                    u = !0,
                    c)) ? s.monthsGenitive[3 === D ? "namesAbbr" : "names"][B] : s.months[3 === D ? "namesAbbr" : "names"][B]);
                    break;
                case "M":
                case "MM":
                    r.push(y(S(e, 1) + 1, D));
                    break;
                case "y":
                case "yy":
                case "yyyy":
                    B = p ? p[0] : j(e, s, q(e, l), d),
                    D < 4 && (B %= 100),
                    r.push(y(B, D));
                    break;
                case "h":
                case "hh":
                    0 == (h = e.getHours() % 12) && (h = 12),
                    r.push(y(h, D));
                    break;
                case "H":
                case "HH":
                    r.push(y(e.getHours(), D));
                    break;
                case "m":
                case "mm":
                    r.push(y(e.getMinutes(), D));
                    break;
                case "s":
                case "ss":
                    r.push(y(e.getSeconds(), D));
                    break;
                case "t":
                case "tt":
                    B = e.getHours() < 12 ? s.AM ? s.AM[0] : " " : s.PM ? s.PM[0] : " ",
                    r.push(1 === D ? B.charAt(0) : B);
                    break;
                case "f":
                case "ff":
                case "fff":
                    r.push(y(e.getMilliseconds(), 3).substr(0, D));
                    break;
                case "z":
                case "zz":
                    h = e.getTimezoneOffset() / 60,
                    r.push((h <= 0 ? "+" : "-") + y(Math.floor(Math.abs(h)), D));
                    break;
                case "zzz":
                    h = e.getTimezoneOffset() / 60,
                    r.push((h <= 0 ? "+" : "-") + y(Math.floor(Math.abs(h)), 2) + ":" + y(Math.abs(e.getTimezoneOffset() % 60), 2));
                    break;
                case "g":
                case "gg":
                    s.eras && r.push(s.eras[q(e, l)].name);
                    break;
                case "/":
                    r.push(s["/"]);
                    break;
                default:
                    throw "Invalid date format pattern '" + k + "'."
                }
            }
        }
        return r.join("")
    }
    ,
    T = function(e, t, i) {
        var r = i.groupSizes
          , s = r[0]
          , n = 1
          , o = Math.pow(10, t)
          , a = Math.round(e * o) / o;
        isFinite(a) || (a = e);
        var l = (e = a) + ""
          , d = ""
          , h = l.split(/e/i)
          , c = h.length > 1 ? parseInt(h[1], 10) : 0;
        h = (l = h[0]).split("."),
        l = h[0],
        d = h.length > 1 ? h[1] : "",
        c > 0 ? (l += (d = v(d, c, !1)).slice(0, c),
        d = d.substr(c)) : c < 0 && (d = (l = v(l, 1 + (c = -c), !0)).slice(-c, l.length) + d,
        l = l.slice(0, -c)),
        d = t > 0 ? i["."] + (d.length > t ? d.slice(0, t) : v(d, t)) : "";
        for (var u = l.length - 1, p = i[","], f = ""; u >= 0; ) {
            if (0 === s || s > u)
                return l.slice(0, u + 1) + (f.length ? p + f + d : d);
            f = l.slice(u - s + 1, u + 1) + (f.length ? p + f : ""),
            u -= s,
            n < r.length && (s = r[n],
            n++)
        }
        return l.slice(0, u + 1) + p + f + d
    }
    ,
    y = function(e, t, i) {
        if (!isFinite(e))
            return e === 1 / 0 ? i.numberFormat.positiveInfinity : e === -1 / 0 ? i.numberFormat.negativeInfinity : i.numberFormat.NaN;
        if (!t || "i" === t)
            return i.name.length ? e.toLocaleString() : e.toString();
        t = t || "D";
        var r, s = i.numberFormat, n = Math.abs(e), o = -1;
        t.length > 1 && (o = parseInt(t.slice(1), 10));
        var a, l = t.charAt(0).toUpperCase();
        switch (l) {
        case "D":
            r = "n",
            n = g(n),
            -1 !== o && (n = v("" + n, o, !0)),
            e < 0 && (n = "-" + n);
            break;
        case "N":
            a = s;
        case "C":
            a = a || s.currency;
        case "P":
            a = a || s.percent,
            r = e < 0 ? a.pattern[0] : a.pattern[1] || "n",
            -1 === o && (o = a.decimals),
            n = T(n * ("P" === l ? 100 : 1), o, a);
            break;
        default:
            throw "Bad number format specifier: " + l
        }
        for (var d = /n|\$|-|%/g, h = ""; ; ) {
            var c = d.lastIndex
              , u = d.exec(r);
            if (h += r.slice(c, u ? u.index : r.length),
            !u)
                break;
            switch (u[0]) {
            case "n":
                h += n;
                break;
            case "$":
                h += s.currency.symbol;
                break;
            case "-":
                /[1-9]/.test(n) && (h += s["-"]);
                break;
            case "%":
                h += s.percent.symbol
            }
        }
        return h
    }
    ,
    _ = function() {
        return /\/|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|hh|h|HH|H|mm|m|ss|s|tt|t|fff|ff|f|zzz|zz|z|gg|g/g
    }
    ,
    q = function(e, t) {
        if (!t)
            return 0;
        for (var i, r = e.getTime(), s = 0, n = t.length; s < n; s++)
            if (null === (i = t[s].start) || r >= i)
                return s;
        return 0
    }
    ,
    j = function(e, t, i, r) {
        var s = e.getFullYear();
        return !r && t.eras && (s -= t.eras[i].offset),
        s
    }
    ,
    I = function(e, t) {
        if (t < 100) {
            var i = new Date
              , r = q(i)
              , s = j(i, e, r)
              , n = e.twoDigitYearMax;
            (t += s - s % 100) > (n = "string" == typeof n ? (new Date).getFullYear() % 100 + parseInt(n, 10) : n) && (t -= 100)
        }
        return t
    }
    ,
    k = function(e, t, i) {
        var r, s = e.days, n = e._upperDays;
        return n || (e._upperDays = n = [H(s.names), H(s.namesAbbr), H(s.namesShort)]),
        t = M(t),
        i ? -1 === (r = l(n[1], t)) && (r = l(n[2], t)) : r = l(n[0], t),
        r
    }
    ,
    D = function(e, t, i) {
        var r = e.months
          , s = e.monthsGenitive || e.months
          , n = e._upperMonths
          , o = e._upperMonthsGen;
        n || (e._upperMonths = n = [H(r.names), H(r.namesAbbr)],
        e._upperMonthsGen = o = [H(s.names), H(s.namesAbbr)]),
        t = M(t);
        var a = l(i ? n[1] : n[0], t);
        return a < 0 && (a = l(i ? o[1] : o[0], t)),
        a
    }
    ,
    P = function(e, t) {
        var i = e._parseRegExp;
        if (i) {
            var r = i[t];
            if (r)
                return r
        } else
            e._parseRegExp = i = {};
        for (var s, n = x(e, t).replace(/([\^\$\.\*\+\?\|\[\]\(\)\{\}])/g, "\\\\$1"), o = ["^"], a = [], l = 0, d = 0, h = _(); null !== (s = h.exec(n)); ) {
            var c = n.slice(l, s.index);
            if (l = h.lastIndex,
            (d += w(c, o)) % 2)
                o.push(s[0]);
            else {
                var u, p = s[0], f = p.length;
                switch (p) {
                case "dddd":
                case "ddd":
                case "MMMM":
                case "MMM":
                case "gg":
                case "g":
                    u = "(\\D+)";
                    break;
                case "tt":
                case "t":
                    u = "(\\D*)";
                    break;
                case "yyyy":
                case "fff":
                case "ff":
                case "f":
                    u = "(\\d{" + f + "})";
                    break;
                case "dd":
                case "d":
                case "MM":
                case "M":
                case "yy":
                case "y":
                case "HH":
                case "H":
                case "hh":
                case "h":
                case "mm":
                case "m":
                case "ss":
                case "s":
                    u = "(\\d\\d?)";
                    break;
                case "zzz":
                    u = "([+-]?\\d\\d?:\\d{2})";
                    break;
                case "zz":
                case "z":
                    u = "([+-]?\\d\\d?)";
                    break;
                case "/":
                    u = "(\\/)";
                    break;
                default:
                    throw "Invalid date format pattern '" + p + "'."
                }
                u && o.push(u),
                a.push(s[0])
            }
        }
        w(n.slice(l), o),
        o.push("$");
        var m = {
            regExp: o.join("").replace(/\s+/g, "\\s+"),
            groups: a
        };
        return i[t] = m
    }
    ,
    B = function(e, t, i) {
        return e < t || e > i
    }
    ,
    M = function(e) {
        return e.split(" ").join(" ").toUpperCase()
    }
    ,
    H = function(e) {
        for (var t = [], i = 0, r = e.length; i < r; i++)
            t[i] = M(e[i]);
        return t
    }
    ,
    S = function(e, t, i) {
        e = m(e);
        var r = i.calendar
          , s = P(r, t)
          , n = new RegExp(s.regExp).exec(e);
        if (null === n)
            return null;
        for (var o, a = s.groups, l = null, d = null, h = null, c = null, u = null, p = 0, g = 0, v = 0, w = 0, x = null, b = !1, y = 0, _ = a.length; y < _; y++) {
            var q = n[y + 1];
            if (q) {
                var j = a[y]
                  , S = j.length
                  , C = parseInt(q, 10);
                switch (j) {
                case "dd":
                case "d":
                    if (B(c = C, 1, 31))
                        return null;
                    break;
                case "MMM":
                case "MMMM":
                    if (h = D(r, q, 3 === S),
                    B(h, 0, 11))
                        return null;
                    break;
                case "M":
                case "MM":
                    if (B(h = C - 1, 0, 11))
                        return null;
                    break;
                case "y":
                case "yy":
                case "yyyy":
                    if (d = S < 4 ? I(r, C) : C,
                    B(d, 0, 9999))
                        return null;
                    break;
                case "h":
                case "hh":
                    if (12 === (p = C) && (p = 0),
                    B(p, 0, 11))
                        return null;
                    break;
                case "H":
                case "HH":
                    if (B(p = C, 0, 23))
                        return null;
                    break;
                case "m":
                case "mm":
                    if (B(g = C, 0, 59))
                        return null;
                    break;
                case "s":
                case "ss":
                    if (B(v = C, 0, 59))
                        return null;
                    break;
                case "tt":
                case "t":
                    if (!(b = r.PM && (q === r.PM[0] || q === r.PM[1] || q === r.PM[2])) && (!r.AM || q !== r.AM[0] && q !== r.AM[1] && q !== r.AM[2]))
                        return null;
                    break;
                case "f":
                case "ff":
                case "fff":
                    if (w = C * Math.pow(10, 3 - S),
                    B(w, 0, 999))
                        return null;
                    break;
                case "ddd":
                case "dddd":
                    if (u = k(r, q, 3 === S),
                    B(u, 0, 6))
                        return null;
                    break;
                case "zzz":
                    var T = q.split(/:/);
                    if (2 !== T.length)
                        return null;
                    if (o = parseInt(T[0], 10),
                    B(o, -12, 13))
                        return null;
                    var M = parseInt(T[1], 10);
                    if (B(M, 0, 59))
                        return null;
                    x = 60 * o + (f(q, "-") ? -M : M);
                    break;
                case "z":
                case "zz":
                    if (B(o = C, -12, 13))
                        return null;
                    x = 60 * o;
                    break;
                case "g":
                case "gg":
                    var H = q;
                    if (!H || !r.eras)
                        return null;
                    H = m(H.toLowerCase());
                    for (var O = 0, z = r.eras.length; O < z; O++)
                        if (H === r.eras[O].name.toLowerCase()) {
                            l = O;
                            break
                        }
                    if (null === l)
                        return null
                }
            }
        }
        var A, L = new Date, E = r.convert;
        if (A = E ? E.fromGregorian(L)[0] : L.getFullYear(),
        null === d ? d = A : r.eras && (d += r.eras[l || 0].offset),
        null === h && (h = 0),
        null === c && (c = 1),
        E) {
            if (null === (L = E.toGregorian(d, h, c)))
                return null
        } else {
            if (L.setFullYear(d, h, c),
            L.getDate() !== c)
                return null;
            if (null !== u && L.getDay() !== u)
                return null
        }
        if (b && p < 12 && (p += 12),
        L.setHours(p, g, v, w),
        null !== x) {
            var N = L.getMinutes() - (x + L.getTimezoneOffset());
            L.setHours(L.getHours() + parseInt(N / 60, 10), N % 60)
        }
        return L
    }
    ,
    C = function(e, t, i) {
        var r, s = t["-"], n = t["+"];
        switch (i) {
        case "n -":
            s = " " + s,
            n = " " + n;
        case "n-":
            d(e, s) ? r = ["-", e.substr(0, e.length - s.length)] : d(e, n) && (r = ["+", e.substr(0, e.length - n.length)]);
            break;
        case "- n":
            s += " ",
            n += " ";
        case "-n":
            f(e, s) ? r = ["-", e.substr(s.length)] : f(e, n) && (r = ["+", e.substr(n.length)]);
            break;
        case "(n)":
            f(e, "(") && d(e, ")") && (r = ["-", e.substr(1, e.length - 2)])
        }
        return r || ["", e]
    }
    ,
    r.prototype.findClosestCulture = function(e) {
        return r.findClosestCulture.call(this, e)
    }
    ,
    r.prototype.format = function(e, t, i) {
        return r.format.call(this, e, t, i)
    }
    ,
    r.prototype.localize = function(e, t) {
        return r.localize.call(this, e, t)
    }
    ,
    r.prototype.parseInt = function(e, t, i) {
        return r.parseInt.call(this, e, t, i)
    }
    ,
    r.prototype.parseFloat = function(e, t, i) {
        return r.parseFloat.call(this, e, t, i)
    }
    ,
    r.prototype.culture = function(e) {
        return r.culture.call(this, e)
    }
    ,
    r.addCultureInfo = function(e, t, i) {
        var r = {}
          , s = !1;
        "string" != typeof e ? (i = e,
        e = this.culture().name,
        r = this.cultures[e]) : "string" != typeof t ? (i = t,
        s = null == this.cultures[e],
        r = this.cultures[e] || this.cultures.default) : (s = !0,
        r = this.cultures[t]),
        this.cultures[e] = h(!0, {}, r, i),
        s && (this.cultures[e].calendar = this.cultures[e].calendars.standard)
    }
    ,
    r.findClosestCulture = function(e) {
        var t;
        if (!e)
            return this.findClosestCulture(this.cultureSelector) || this.cultures.default;
        if ("string" == typeof e && (e = e.split(",")),
        c(e)) {
            var i, r, s = this.cultures, n = e, o = n.length, a = [];
            for (r = 0; r < o; r++) {
                var l, d = (e = m(n[r])).split(";");
                i = m(d[0]),
                1 === d.length ? l = 1 : 0 === (e = m(d[1])).indexOf("q=") ? (e = e.substr(2),
                l = parseFloat(e),
                l = isNaN(l) ? 0 : l) : l = 1,
                a.push({
                    lang: i,
                    pri: l
                })
            }
            for (a.sort(function(e, t) {
                return e.pri < t.pri ? 1 : e.pri > t.pri ? -1 : 0
            }),
            r = 0; r < o; r++)
                if (t = s[i = a[r].lang])
                    return t;
            for (r = 0; r < o; r++)
                for (i = a[r].lang; ; ) {
                    var h = i.lastIndexOf("-");
                    if (-1 === h)
                        break;
                    if (t = s[i = i.substr(0, h)])
                        return t
                }
            for (r = 0; r < o; r++)
                for (var u in i = a[r].lang,
                s) {
                    var p = s[u];
                    if (p.language == i)
                        return p
                }
        } else if ("object" == typeof e)
            return e;
        return t || null
    }
    ,
    r.format = function(e, t, i) {
        var r = this.findClosestCulture(i);
        return e instanceof Date ? e = b(e, t, r) : "number" == typeof e && (e = y(e, t, r)),
        e
    }
    ,
    r.localize = function(e, t) {
        return this.findClosestCulture(t).messages[e] || this.cultures.default.messages[e]
    }
    ,
    r.parseDate = function(e, t, i) {
        var r, s, n;
        if (i = this.findClosestCulture(i),
        t) {
            if ("string" == typeof t && (t = [t]),
            t.length)
                for (var o = 0, a = t.length; o < a; o++) {
                    var l = t[o];
                    if (l && (r = S(e, l, i)))
                        break
                }
        } else
            for (s in n = i.calendar.patterns)
                if (r = S(e, n[s], i))
                    break;
        return r || null
    }
    ,
    r.parseInt = function(e, t, i) {
        return g(r.parseFloat(e, t, i))
    }
    ,
    r.parseFloat = function(e, t, i) {
        "number" != typeof t && (i = t,
        t = 10);
        var r = this.findClosestCulture(i)
          , a = NaN
          , l = r.numberFormat;
        if (e.indexOf(r.numberFormat.currency.symbol) > -1 && (e = (e = e.replace(r.numberFormat.currency.symbol, "")).replace(r.numberFormat.currency["."], r.numberFormat["."])),
        e.indexOf(r.numberFormat.percent.symbol) > -1 && (e = e.replace(r.numberFormat.percent.symbol, "")),
        e = e.replace(/ /g, ""),
        n.test(e))
            a = parseFloat(e);
        else if (!t && s.test(e))
            a = parseInt(e, 16);
        else {
            var d = C(e, l, l.pattern[0])
              , h = d[0]
              , c = d[1];
            "" === h && "(n)" !== l.pattern[0] && (h = (d = C(e, l, "(n)"))[0],
            c = d[1]),
            "" === h && "-n" !== l.pattern[0] && (h = (d = C(e, l, "-n"))[0],
            c = d[1]),
            h = h || "+";
            var u, p, f = c.indexOf("e");
            f < 0 && (f = c.indexOf("E")),
            f < 0 ? (p = c,
            u = null) : (p = c.substr(0, f),
            u = c.substr(f + 1));
            var m, g, v = l["."], w = p.indexOf(v);
            w < 0 ? (m = p,
            g = null) : (m = p.substr(0, w),
            g = p.substr(w + v.length));
            var x = l[","];
            m = m.split(x).join("");
            var b = x.replace(/\u00A0/g, " ");
            x !== b && (m = m.split(b).join(""));
            var y = h + m;
            if (null !== g && (y += "." + g),
            null !== u) {
                var _ = C(u, l, "-n");
                y += "e" + (_[0] || "+") + _[1]
            }
            o.test(y) && (a = parseFloat(y))
        }
        return a
    }
    ,
    r.culture = function(e) {
        return void 0 !== e && (this.cultureSelector = e),
        this.findClosestCulture(e) || this.cultures.default
    }
    ,
    document.Globalize = r)
}
, function(e, t) {
    var i;
    (i = jqxBaseFramework).jqx.jqxWidget("jqxCalendar", "", {}),
    i.extend(i.jqx._jqxCalendar.prototype, {
        defineInstance: function() {
            var e = {
                disabled: !1,
                restrictedDates: new Array,
                multipleMonthRows: 1,
                multipleMonthColumns: 1,
                minDate: i.jqx._jqxDateTimeInput.getDateTime(new Date),
                maxDate: i.jqx._jqxDateTimeInput.getDateTime(new Date),
                min: new Date(1900,0,1),
                max: new Date(2100,0,1),
                navigationDelay: 400,
                stepMonths: 1,
                width: null,
                height: null,
                value: i.jqx._jqxDateTimeInput.getDateTime(new Date),
                firstDayOfWeek: 0,
                showWeekNumbers: !1,
                showDayNames: !0,
                enableWeekend: !1,
                enableOtherMonthDays: !0,
                showOtherMonthDays: !0,
                rowHeaderWidth: 25,
                columnHeaderHeight: 25,
                titleHeight: 30,
                dayNameFormat: "firstTwoLetters",
                monthNameFormat: "default",
                titleFormat: ["MMMM yyyy", "yyyy", "yyyy", "yyyy"],
                enableViews: !0,
                readOnly: !1,
                culture: "default",
                enableFastNavigation: !0,
                enableHover: !0,
                enableAutoNavigation: !0,
                enableTooltips: !1,
                backText: "Back",
                forwardText: "Forward",
                specialDates: new Array,
                keyboardNavigation: !0,
                selectionMode: "default",
                selectableDays: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                todayString: "Today",
                clearString: "Clear",
                showFooter: !1,
                selection: {
                    from: null,
                    to: null
                },
                canRender: !0,
                _checkForHiddenParent: !0,
                height: null,
                rtl: !1,
                view: "month",
                views: ["month", "year", "decade"],
                changing: null,
                change: null,
                localization: {
                    backString: "Back",
                    forwardString: "Forward",
                    todayString: "Today",
                    clearString: "Clear",
                    calendar: {
                        name: "Gregorian_USEnglish",
                        "/": "/",
                        ":": ":",
                        firstDay: 0,
                        days: {
                            names: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                            namesAbbr: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                            namesShort: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"]
                        },
                        months: {
                            names: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", ""],
                            namesAbbr: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", ""]
                        },
                        AM: ["AM", "am", "AM"],
                        PM: ["PM", "pm", "PM"],
                        eras: [{
                            name: "A.D.",
                            start: null,
                            offset: 0
                        }],
                        twoDigitYearMax: 2029,
                        patterns: {
                            d: "M/d/yyyy",
                            D: "dddd, MMMM dd, yyyy",
                            t: "h:mm tt",
                            T: "h:mm:ss tt",
                            f: "dddd, MMMM dd, yyyy h:mm tt",
                            F: "dddd, MMMM dd, yyyy h:mm:ss tt",
                            M: "MMMM dd",
                            Y: "yyyy MMMM",
                            S: "yyyy'-'MM'-'dd'T'HH':'mm':'ss",
                            ISO: "yyyy-MM-dd hh:mm:ss"
                        }
                    }
                },
                events: ["backButtonClick", "nextButtonClick", "valuechanged", "cellMouseDown", "cellMouseUp", "cellSelected", "cellUnselected", "change", "viewChange"]
            };
            return this === i.jqx._jqxCalendar.prototype ? e : (i.extend(!0, this, e),
            this.minDate._setYear(1900),
            this.minDate._setMonth(1),
            this.minDate._setDay(1),
            this.minDate._setHours(0),
            this.minDate._setMinutes(0),
            this.minDate._setSeconds(0),
            this.minDate._setMilliseconds(0),
            this.maxDate._setYear(2100),
            this.maxDate._setMonth(1),
            this.maxDate._setDay(1),
            this.maxDate._setHours(0),
            this.maxDate._setMinutes(0),
            this.maxDate._setSeconds(0),
            this.maxDate._setMilliseconds(0),
            this.value._setHours(0),
            this.value._setMinutes(0),
            this.value._setSeconds(0),
            this.value._setMilliseconds(0),
            e)
        },
        _createFromInput: function(e) {
            var t = this;
            if ("input" == t.element.nodeName.toLowerCase()) {
                t.field = t.element,
                t.field.className && (t._className = t.field.className);
                var r = {
                    title: t.field.title
                };
                if (t.field.value && (r.value = t.field.value),
                t.field.checked && (r.checked = !0),
                t.field.id.length ? r.id = t.field.id.replace(/[^\w]/g, "_") + "_" + e : r.id = i.jqx.utilities.createId() + "_" + e,
                t.field.getAttribute("min")) {
                    var s = new Date(t.field.getAttribute("min"));
                    "Invalid Date" != s && (t.min = s)
                }
                if (t.field.getAttribute("max")) {
                    var n = new Date(t.field.getAttribute("max"));
                    "Invalid Date" != n && (t.max = n)
                }
                var o = i("<div></div>", r);
                o[0].style.cssText = t.field.style.cssText,
                t.width || (t.width = i(t.field).width()),
                t.height || (t.height = i(t.field).outerHeight()),
                i(t.field).hide().after(o);
                var a = t.host.data();
                if (t.host = o,
                t.host.data(a),
                t.element = o[0],
                t.element.id = t.field.id,
                t.field.id = r.id,
                t._className && (t.host.addClass(t._className),
                i(t.field).removeClass(t._className)),
                t.field.tabIndex) {
                    var l = t.field.tabIndex;
                    t.field.tabIndex = -1,
                    t.element.tabIndex = l
                }
            }
        },
        createInstance: function(e) {
            this._createFromInput("jqxCalendar"),
            this.setCalendarSize(),
            "" === this.element.id && (this.element.id = i.jqx.utilities.createId()),
            "date" == i.type(this.value) && (this.value = i.jqx._jqxDateTimeInput.getDateTime(this.value)),
            this.element.innerHTML = "",
            this.host.attr("data-role", "calendar"),
            this.element.id;
            var t = this;
            if (this.propertyChangeMap.width = function(e, i, r, s) {
                t.setCalendarSize()
            }
            ,
            this.propertyChangeMap.height = function(e, i, r, s) {
                t.setCalendarSize()
            }
            ,
            i.global && i.global.preferCulture(this.culture),
            "default" != this.culture) {
                if (i.global)
                    i.global.preferCulture(this.culture),
                    this.localization.calendar = i.global.culture.calendar;
                else if (Globalize) {
                    var r = Globalize.culture(this.culture);
                    this.localization.calendar = r.calendar
                }
                this.firstDayOfWeek = this.localization.calendar.firstDay
            }
            "Back" != this.localization.backString && (this.backText = this.localization.backString),
            "Forward" != this.localization.forwardString && (this.forwardText = this.localization.forwardString),
            "Today" != this.localization.todayString && this.localization.todayString && (this.todayString = this.localization.todayString),
            "Clear" != this.localization.clearString && this.localization.clearString && (this.clearString = this.localization.clearString),
            this.localization.calendar && null != this.localization.calendar.firstDay && "default" != this.culture && (this.firstDayOfWeek = this.localization.calendar.firstDay),
            this.setMaxDate(this.max, !1),
            this.setMinDate(this.min, !1),
            this.host.attr("tabIndex") || this.host.attr("tabIndex", 0),
            this.host.css("outline", "none"),
            this.host.addClass(this.toThemeProperty("jqx-calendar")),
            this.host.addClass(this.toThemeProperty("jqx-widget")),
            this.host.addClass(this.toThemeProperty("jqx-widget-content")),
            this.host.addClass(this.toThemeProperty("jqx-rc-all")),
            this._addInput(),
            -1 == this.views.indexOf("month") && (this.view = "year"),
            -1 == this.views.indexOf("year") && -1 == this.views.indexOf("month") && (this.view = "decade"),
            this.addHandler(this.host, "keydown", function(e) {
                var i = !0;
                return t.keyboardNavigation && null != t._handleKey && ((i = t._handleKey(e)) || (e.stopPropagation && e.stopPropagation(),
                e.preventDefault && e.preventDefault())),
                i
            });
            var s = !1
              , n = this
              , o = !1;
            null != t.width && -1 != t.width.toString().indexOf("%") && (o = !0),
            null != t.height && -1 != t.height.toString().indexOf("%") && (o = !0),
            i.jqx.utilities.resize(this.host, function() {
                var e = n.host.find("#View" + t.element.id);
                s ? n.refreshTitle(e) : (s = !0,
                n.render()),
                o && (t.refreshTimer && clearTimeout(t.refreshTimer),
                t.refreshTimer = setTimeout(function() {
                    t.refreshControl()
                }, 1))
            }, !1, this._checkForHiddenParent),
            this.propertyChangeMap.disabled = function(e, i, r, s) {
                s ? e.host.addClass(t.toThemeProperty("jqx-fill-state-disabled")) : e.host.removeClass(t.toThemeProperty("jqx-fill-state-disabled")),
                t.refreshControl()
            }
        },
        _addInput: function() {
            var e = this.host.attr("name");
            this.input = i("<input type='hidden'/>"),
            this.host.append(this.input),
            e && this.input.attr("name", e),
            this.input.val(this.getDate().toString())
        },
        setCalendarSize: function() {
            null != this.width && -1 != this.width.toString().indexOf("px") ? this.host.width(this.width) : null == this.width || isNaN(this.width) || this.host.width(this.width),
            null != this.width && -1 != this.width.toString().indexOf("%") && this.host.css("width", this.width),
            null != this.height && -1 != this.height.toString().indexOf("px") ? this.host.height(this.height) : null == this.height || isNaN(this.height) || this.host.height(this.height),
            null != this.height && -1 != this.height.toString().indexOf("%") && this.host.css("height", this.height)
        },
        _getYearAndMonthPart: function(e) {
            return e ? new Date(e.getFullYear(),e.getMonth(),1) : new Date(1900,0,1)
        },
        _handleKey: function(e) {
            if (this.readOnly)
                return !0;
            var t = e.keyCode
              , r = this._getSelectedDate();
            if (null == r) {
                if ("month" != this.view || 37 != t && 38 != t && 39 != t && 40 != t)
                    return !0;
                this.selectedDate = new Date(this.value.year,this.value.month - 1,1),
                this._selectDate(this.selectedDate, "key"),
                r = this.selectedDate
            }
            if (e.altKey)
                return !0;
            if (this._animating)
                return !1;
            if ("month" != this.view && 13 == t) {
                var s = this._getSelectedCell();
                this._setDateAndSwitchViews(s, e, "keyboard")
            }
            if ("year" == this.view) {
                var n = r.getMonth()
                  , o = this._getYearAndMonthPart(this.getMinDate())
                  , a = this._getYearAndMonthPart(this.getMaxDate());
                switch (t) {
                case 37:
                    return 0 == n ? (l = new Date(r.getFullYear() - 1,11,1)) >= o ? (this.selectedDate = l,
                    this.navigateBackward()) : this.selectedDate != o && (this.selectedDate = o,
                    this.navigateBackward()) : (l = new Date(r.getFullYear(),n - 1,1)) >= o && this._selectDate(l, "key"),
                    !1;
                case 38:
                    return (l = new Date(r.getFullYear(),n - 4,1)) < o && (l = o),
                    n - 4 < 0 ? (this.selectedDate = l,
                    this.navigateBackward()) : this._selectDate(l, "key"),
                    !1;
                case 40:
                    return (l = new Date(r.getFullYear(),n + 4,1)) > a && (l = a),
                    n + 4 > 11 ? (this.selectedDate = l,
                    this.navigateForward()) : this._selectDate(l, "key"),
                    !1;
                case 39:
                    var l;
                    return 11 == n ? (l = new Date(r.getFullYear() + 1,0,1)) <= a ? (this.selectedDate = l,
                    this.navigateForward()) : this.selectedDate != a && (this.selectedDate = a,
                    this.navigateForward()) : (l = new Date(r.getFullYear(),n + 1,1)) <= a && this._selectDate(l, "key"),
                    !1
                }
                return !0
            }
            if ("decade" == this.view) {
                var d = this._renderStartDate.getFullYear()
                  , h = this._renderEndDate.getFullYear()
                  , c = r.getFullYear()
                  , u = this.getMinDate().getFullYear()
                  , p = this.getMaxDate().getFullYear();
                switch (t) {
                case 37:
                    return c - 1 >= u && (c <= d ? (this.selectedDate = new Date(c - 1,r.getMonth(),1),
                    this.navigateBackward()) : this._selectDate(new Date(c - 1,r.getMonth(),1), "key")),
                    !1;
                case 38:
                    var f = c - 4;
                    return c - 4 < u && (f = u),
                    f < d ? (this.selectedDate = new Date(f,r.getMonth(),1),
                    this.navigateBackward()) : this._selectDate(new Date(f,r.getMonth(),1), "key"),
                    !1;
                case 40:
                    return (f = c + 4) > p && (f = p),
                    f > h ? (this.selectedDate = new Date(f,r.getMonth(),1),
                    this.navigateForward()) : this._selectDate(new Date(f,r.getMonth(),1), "key"),
                    !1;
                case 39:
                    return c + 1 <= p && (c == h ? (this.selectedDate = new Date(c + 1,r.getMonth(),1),
                    this.navigateForward()) : this._selectDate(new Date(c + 1,r.getMonth(),1), "key")),
                    !1
                }
                return !0
            }
            var m = new i.jqx._jqxDateTimeInput.getDateTime(r)
              , g = this.getViewStart()
              , v = this.getViewEnd()
              , w = i.data(this.element, "View" + this.element.id);
            if (null == w || null == w)
                return !0;
            if (36 == t)
                return m._setDay(1),
                !this._isDisabled(m.dateTime) && (this._selectDate(m.dateTime, "key"),
                !1);
            if (35 == t) {
                var x = this.value._daysInMonth(this.value.year, this.value.month);
                return m._setDay(x),
                !this._isDisabled(m.dateTime) && (this._selectDate(m.dateTime, "key"),
                !1)
            }
            var b = 1;
            if (e.ctrlKey && (b = 12),
            34 == t) {
                if (this.navigateForward(b)) {
                    if (m._addMonths(b),
                    this._isDisabled(m.dateTime))
                        return !1;
                    this._selectDate(m.dateTime, "key")
                }
                return !1
            }
            if (33 == t) {
                if (this.navigateBackward(b)) {
                    if (m._addMonths(-b),
                    this._isDisabled(m.dateTime))
                        return !1;
                    this._selectDate(m.dateTime, "key")
                }
                return !1
            }
            if (38 == t) {
                if (m._addDays(-7),
                m.dateTime < this.getMinDate())
                    return !1;
                if (m.dateTime < g && !this.navigateBackward())
                    return !1;
                if (this._isDisabled(m.dateTime))
                    return !1;
                this._selectDate(m.dateTime, "key");
                for (var y = 0; y < w.cells.length; y++) {
                    var _ = (s = w.cells[y]).getDate();
                    if (s.isOtherMonth && s.isSelected && _ <= m.dateTime) {
                        this.value.day = _.getDate(),
                        this.navigateBackward(),
                        this._selectDate(m.dateTime, "key");
                        break
                    }
                }
                return !1
            }
            if (40 == t) {
                if (m._addDays(7),
                m.dateTime > this.getMaxDate())
                    return !1;
                if (m.dateTime > v && !this.navigateForward())
                    return !1;
                if (this._isDisabled(m.dateTime))
                    return !1;
                for (this._selectDate(m.dateTime, "key"),
                y = 0; y < w.cells.length; y++)
                    if (_ = (s = w.cells[y]).getDate(),
                    s.isOtherMonth && s.isSelected && _ >= m.dateTime) {
                        this.value.day = _.getDate(),
                        this.navigateForward(),
                        this._selectDate(m.dateTime, "key");
                        break
                    }
                return !1
            }
            if (37 == t) {
                if (m._addDays(-1),
                m.dateTime < this.getMinDate())
                    return !1;
                if (m.dateTime < g && !this.navigateBackward())
                    return !1;
                if (this._isDisabled(m.dateTime))
                    return !1;
                for (this._selectDate(m.dateTime, "key"),
                y = 0; y < w.cells.length; y++)
                    if (_ = (s = w.cells[y]).getDate(),
                    s.isOtherMonth && s.isSelected && _ <= m.dateTime) {
                        if (m.dateTime < this.getMinDate() || m.dateTime > this.getMaxDate())
                            return !1;
                        if (this._isDisabled(m.dateTime))
                            return !1;
                        this.navigateBackward(),
                        this._selectDate(m.dateTime, "key");
                        break
                    }
                return !1
            }
            if (39 == t) {
                if (m._addDays(1),
                m.dateTime > this.getMaxDate())
                    return !1;
                if (m.dateTime > v && !this.navigateForward())
                    return !1;
                if (this._isDisabled(m.dateTime))
                    return !1;
                for (this._selectDate(m.dateTime, "key"),
                y = 0; y < w.cells.length; y++)
                    if (_ = (s = w.cells[y]).getDate(),
                    s.isOtherMonth && s.isSelected && _ >= m.dateTime) {
                        if (m.dateTime < this.getMinDate() || m.dateTime > this.getMaxDate())
                            return !1;
                        this.navigateForward(),
                        this._selectDate(m.dateTime, "key");
                        break
                    }
                return !1
            }
            return !0
        },
        render: function() {
            if (this.canRender) {
                this.host.children().remove();
                var e = this._renderSingleCalendar("View" + this.element.id);
                this.host.append(e)
            }
        },
        addSpecialDate: function(e, t, i) {
            if (1 == this.multipleMonthRows && 1 == this.multipleMonthColumns) {
                var r = this.specialDates.length;
                this.specialDates[r] = {
                    Date: e,
                    Class: t,
                    Tooltip: i
                },
                this.refreshControl()
            }
        },
        refresh: function(e) {
            var t = this;
            this.render(),
            setTimeout(function() {
                t.refreshControl()
            })
        },
        invalidate: function() {
            this.refreshControl()
        },
        refreshControl: function() {
            1 == this.multipleMonthRows && 1 == this.multipleMonthColumns && this.refreshSingleCalendar("View" + this.element.id, null)
        },
        getViewStart: function() {
            var e = this.getVisibleDate();
            return this.getFirstDayOfWeek(e).dateTime
        },
        getViewEnd: function() {
            var e = this.getViewStart()
              , t = new i.jqx._jqxDateTimeInput.getDateTime(e);
            return t._addDays(41),
            t.dateTime
        },
        refreshSingleCalendar: function(e, t) {
            if (this.canRender) {
                var i = this.host.find("#" + e)
                  , r = this.getVisibleDate()
                  , s = this.getFirstDayOfWeek(r);
                this.refreshCalendarCells(i, s, e),
                this.refreshTitle(i),
                this.refreshRowHeader(i, e),
                null != this.selectedDate && this._selectDate(this.selectedDate);
                var n = parseInt(this.month.css("padding-top"))
                  , o = this.host.height() - 2 * n - this.titleHeight - this.columnHeaderHeight;
                this.showDayNames || (o = this.month.height() - this.titleHeight),
                this.showFooter && (o -= 20);
                var a = i.find("#cellsTable" + e)
                  , l = i.find("#calendarRowHeader" + e);
                a.height(o),
                l.height(o)
            }
        },
        refreshRowHeader: function(e, t) {
            if (this.showWeekNumbers) {
                var r = this.getVisibleDate()
                  , s = this.getFirstDayOfWeek(r)
                  , n = (s.dayOfWeek,
                this.getWeekOfYear(s))
                  , o = new i.jqx._jqxDateTimeInput.getDateTime(new Date(s.dateTime));
                o._addDays(5),
                o.dayOfWeek = o.dateTime.getDay(),
                this.getWeekOfYear(o);
                var a = this.rowHeader.find("table");
                a.width(this.rowHeaderWidth);
                for (var l = s, d = new Array, h = 0; h < 6; h++) {
                    n.toString();
                    var c = new i.jqx._jqxCalendar.cell(l.dateTime)
                      , u = h + 1 + this.element.id
                      , p = i(a[0].rows[h].cells[0]);
                    c.element = p,
                    c.row = h,
                    c.column = 0;
                    var f = p.find("#headerCellContent" + u);
                    f.addClass(this.toThemeProperty("jqx-calendar-row-cell")),
                    f[0].innerHTML = n,
                    d[h] = c,
                    l = new i.jqx._jqxDateTimeInput.getDateTime(new Date(l._addWeeks(1))),
                    n = this.getWeekOfYear(l)
                }
                var m = i.data(this.element, e[0].id);
                m.rowCells = d,
                this._refreshOtherMonthRows(m, t)
            }
        },
        _refreshOtherMonthRows: function(e, t) {
            if (!this.showOtherMonthDays) {
                this._displayLastRow(!0, t),
                this._displayFirstRow(!0, t);
                for (var i = !1, r = !1, s = 0; s < e.cells.length; s++) {
                    var n = e.cells[s];
                    n.isVisible && s < 7 ? i = !0 : n.isVisible && s >= e.cells.length - 7 && (r = !0)
                }
                i || this._displayFirstRow(!1, t),
                r || this._displayLastRow(!1, t)
            }
        },
        _displayLastRow: function(e, t) {
            var r = this.host.find("#" + t)
              , s = r.find("#calendarRowHeader" + r[0].id).find("table")
              , n = null;
            this.showWeekNumbers && s[0].cells && (n = i(s[0].rows[5]));
            var o = i(r.find("#cellTable" + r[0].id)[0].rows[5]);
            e ? (this.showWeekNumbers && n && n.css("display", "table-row"),
            o.css("display", "table-row")) : (this.showWeekNumbers && n && n.css("display", "none"),
            o.css("display", "none"))
        },
        _displayFirstRow: function(e, t) {
            var r = this.host.find("#" + t)
              , s = r.find("#calendarRowHeader" + r[0].id).find("table")
              , n = null;
            this.showWeekNumbers && s[0].cells && (n = i(s[0].rows[0]));
            var o = i(r.find("#cellTable" + r[0].id)[0].rows[0]);
            e ? (this.showWeekNumbers && n && n.css("display", "table-row"),
            o.css("display", "table-row")) : (this.showWeekNumbers && n && n.css("display", "none"),
            o.css("display", "none"))
        },
        _renderSingleCalendar: function(e, t) {
            if (this.canRender) {
                var r = this.host.find("#" + e.toString());
                null != r && r.remove();
                var s = i("<div id='" + e.toString() + "'></div>")
                  , n = this.getVisibleDate()
                  , o = this.getFirstDayOfWeek(n)
                  , a = new i.jqx._jqxDateTimeInput.getDateTime(o.dateTime);
                a._addMonths(1);
                var l = i.jqx._jqxCalendar.monthView(o, a, null, null, null, s);
                null == t || null == t ? (this.host.append(s),
                s[0].style.width = "100%",
                s[0].style.height = "100%") : t.append(s),
                i.data(this.element, e, l);
                var d = parseInt(s.css("padding-top"))
                  , h = this.host.height() - 2 * d
                  , c = h - this.titleHeight - this.columnHeaderHeight;
                this.showDayNames || (c = h - this.titleHeight),
                this.showFooter && (c -= 20),
                this.rowHeaderWidth < 0 && (this.rowHeaderWidth = 0),
                this.columnHeaderHeight < 0 && (this.columnHeaderHeight = 0),
                this.titleHeight < 0 && (this.titleHeight = 0);
                var u = this.rowHeaderWidth
                  , p = this.columnHeaderHeight;
                this.showWeekNumbers || (u = 0),
                this.showDayNames || (p = 0);
                var f = "<div style='height:" + this.titleHeight + "px;'><table role='grid' style='margin: 0px; width: 100%; height: 100%; border-spacing: 0px;' cellspacing='0' cellpadding='0'><tr role='row' id='calendarTitle' width='100%'><td role='gridcell' NOWRAP id='leftNavigationArrow'></td><td aria-live='assertive' aria-atomic='true' role='gridcell' align='center' NOWRAP id='calendarTitleHeader'></td><td role='gridcell' NOWRAP id='rightNavigationArrow'></td></tr></table></div>"
                  , m = "<table role='grid' class='" + this.toThemeProperty("jqx-calendar-month") + "' style='margin: 0px; border-spacing: 0px;' cellspacing='0' cellpadding='0'><tr role='row' id='calendarHeader' height='" + p + "'><td role='gridcell' id='selectCell' width='" + u + "'></td><td role='gridcell' colspan='2' style='border: none; padding-left: 2px; padding-right: 2px' id='calendarColumnHeader'></td></tr><tr role='row' id='calendarContent'><td role='gridcell' id='calendarRowHeader' valign='top' height='" + c + "' width='" + u + "'></td><td role='gridcell' valign='top' colspan='2' style='padding-left: 2px; padding-right: 2px' id='cellsTable' height='" + c + "'></td></tr></table>"
                  , g = "<div id='footer' style='margin: 0px; display: none; height:" + v + "px;'><table style='width: 100%; height: 100%; border-spacing: 0px;' cellspacing='0' cellpadding='0'><tr id='calendarFooter'><td align='right' id='todayButton'></td><td align='left' colspan='2' id=doneButton></td></tr></table></div>";
                s[0].innerHTML = f + m + g,
                this.header = s.find("#calendarHeader"),
                this.header[0].id = "calendarHeader" + e,
                this.header.addClass(this.toThemeProperty("calendar-header")),
                this.columnHeader = s.find("#calendarColumnHeader"),
                this.columnHeader[0].id = "calendarColumnHeader" + e,
                this.table = s.find("#cellsTable"),
                this.table[0].id = "cellsTable" + e,
                this.rowHeader = s.find("#calendarRowHeader"),
                this.rowHeader[0].id = "calendarRowHeader" + e,
                this.selectCell = s.find("#selectCell"),
                this.selectCell[0].id = "selectCell" + e,
                this.title = s.find("#calendarTitle"),
                this.title[0].id = "calendarTitle" + e,
                this.leftButton = s.find("#leftNavigationArrow"),
                this.leftButton[0].id = "leftNavigationArrow" + e,
                this.titleHeader = s.find("#calendarTitleHeader"),
                this.titleHeader[0].id = "calendarTitleHeader" + e,
                this.rightButton = s.find("#rightNavigationArrow"),
                this.rightButton[0].id = "rightNavigationArrow" + e,
                this.footer = s.find("#calendarFooter"),
                this._footer = s.find("#footer"),
                this._footer[0].id = "footer" + e,
                this.footer[0].id = "calendarFooter" + e,
                this.todayButton = s.find("#todayButton"),
                this.todayButton[0].id = "todayButton" + e,
                this.doneButton = s.find("#doneButton"),
                this.doneButton[0].id = "doneButton" + e,
                this.title.addClass(this.toThemeProperty("jqx-calendar-title-container"));
                var v = 20;
                if (this.showFooter && this._footer.css("display", "block"),
                s.find("tr").addClass(this.toThemeProperty("jqx-reset")),
                s.addClass(this.toThemeProperty("jqx-widget-content")),
                s.addClass(this.toThemeProperty("jqx-calendar-month-container")),
                this.month = s,
                this.selectCell.addClass(this.toThemeProperty("jqx-reset")),
                this.selectCell.addClass(this.toThemeProperty("jqx-calendar-top-left-header")),
                this.showWeekNumbers ? this._renderRowHeader(s) : (this.table[0].colSpan = 3,
                this.columnHeader[0].colSpan = 3,
                this.rowHeader.css("display", "none"),
                this.selectCell.css("display", "none")),
                this.showFooter) {
                    this.footer.height(20);
                    var w = i("<a href='javascript:;'>" + this.todayString + "</a>");
                    w.appendTo(this.todayButton);
                    var x = i("<a href='javascript:;'>" + this.clearString + "</a>");
                    x.appendTo(this.doneButton),
                    x.addClass(this.toThemeProperty("jqx-calendar-footer")),
                    w.addClass(this.toThemeProperty("jqx-calendar-footer"));
                    var b = this
                      , y = "mousedown";
                    i.jqx.mobile.isTouchDevice() && (y = i.jqx.mobile.getTouchEventName("touchstart")),
                    this.addHandler(w, y, function() {
                        return b.today ? b.today() : b.setDate(new Date, "mouse"),
                        !1
                    }),
                    this.addHandler(x, y, function() {
                        return b.clear ? b.clear() : b.setDate(null, "mouse"),
                        !1
                    })
                }
                "month" != this.view && this.header.hide(),
                this.showDayNames && "month" == this.view && this.renderColumnHeader(s),
                this.oldView = this.view,
                this.renderCalendarCells(s, o, e),
                null != t && null != t || this.renderTitle(s),
                this._refreshOtherMonthRows(l, e),
                s.find("tbody").css({
                    border: "none",
                    background: "transparent"
                }),
                null != this.selectedDate && this._selectDate(this.selectedDate);
                var _ = this;
                return this.addHandler(this.host, "focus", function() {
                    _.focus()
                }),
                s
            }
        },
        _getTitleFormat: function() {
            switch (this.view) {
            case "month":
                return this.titleFormat[0];
            case "year":
                return this.titleFormat[1];
            case "decade":
                return this.titleFormat[2];
            case "centuries":
                return this.titleFormat[3]
            }
        },
        renderTitle: function(e) {
            var t = i("<div role='button' style='float: left;'></div>")
              , r = i("<div role='button' style='float: right;'></div>")
              , s = this.title;
            s.addClass(this.toThemeProperty("jqx-reset")),
            s.addClass(this.toThemeProperty("jqx-widget-header")),
            s.addClass(this.toThemeProperty("jqx-calendar-title-header"));
            var n = s.find("td");
            if (i.jqx.browser.msie && i.jqx.browser.version < 8) {
                if ("transparent" != n.css("background-color")) {
                    var o = s.css("background-color");
                    n.css("background-color", o)
                }
                if ("transparent" != n.css("background-image")) {
                    var a = s.css("background-image")
                      , l = s.css("background-repeat");
                    s.css("background-position"),
                    n.css("background-image", a),
                    n.css("background-repeat", l),
                    n.css("background-position", "left center scroll")
                }
            } else
                n.css("background-color", "transparent");
            this.disabled && s.addClass(this.toThemeProperty("jqx-calendar-title-header-disabled")),
            t.addClass(this.toThemeProperty("jqx-calendar-title-navigation")),
            t.addClass(this.toThemeProperty("jqx-icon-arrow-left")),
            t.appendTo(this.leftButton);
            var d = this.leftButton;
            r.addClass(this.toThemeProperty("jqx-calendar-title-navigation")),
            r.addClass(this.toThemeProperty("jqx-icon-arrow-right")),
            r.appendTo(this.rightButton);
            var h = this.rightButton;
            this.enableTooltips && i(d).jqxTooltip && (i(d).jqxTooltip({
                name: this.element.id,
                position: "mouse",
                theme: this.theme,
                content: this.backText
            }),
            i(h).jqxTooltip({
                name: this.element.id,
                position: "mouse",
                theme: this.theme,
                content: this.forwardText
            }));
            var c = this.titleHeader
              , u = this._format(this.value.dateTime, this._getTitleFormat(), this.culture);
            "decade" == this.view ? u = this._format(this._renderStartDate, this._getTitleFormat(), this.culture) + " - " + this._format(this._renderEndDate, this._getTitleFormat(), this.culture) : "centuries" == this.view && (u = this._format(this._renderCenturyStartDate, this._getTitleFormat(), this.culture) + " - " + this._format(this._renderCenturyEndDate, this._getTitleFormat(), this.culture));
            var p = i("<div style='background: transparent; margin: 0; padding: 0; border: none;'>" + u + "</div>");
            c.append(p),
            p.addClass(this.toThemeProperty("jqx-calendar-title-content"));
            var f = parseInt(t.width())
              , m = e.width() - 2 * f;
            c.find(".jqx-calendar-title-content").width(m),
            i.data(t, "navigateLeft", this),
            i.data(r, "navigateRight", this);
            var g = i.jqx.mobile.isTouchDevice();
            if (!this.disabled) {
                var v = this;
                this.addHandler(c, "mousedown", function(e) {
                    if (v.enableViews) {
                        if (!v._viewAnimating && !v._animating) {
                            var t = v.view;
                            switch (v.oldView = t,
                            v.view) {
                            case "month":
                                v.view = "year";
                                break;
                            case "year":
                                v.view = "decade"
                            }
                            if (-1 == v.views.indexOf("year") && "year" == v.view && (v.view = "decade"),
                            -1 == v.views.indexOf("decade") && "decade" == v.view && (v.view = t),
                            t != v.view) {
                                var i = "View" + v.element.id
                                  , r = v.host.find("#" + i)
                                  , s = v.getVisibleDate()
                                  , n = v.getFirstDayOfWeek(s);
                                v.renderCalendarCells(r, n, i, !0),
                                v.refreshTitle(r),
                                v._raiseEvent("8")
                            }
                        }
                        return !1
                    }
                }),
                this.addHandler(t, "mousedown", function(e) {
                    if (v._animating)
                        return !1;
                    i.data(t, "navigateLeftRepeat", !0);
                    var r = i.data(t, "navigateLeft");
                    return r.enableFastNavigation && !g && r.startRepeat(r, t, !0, v.navigationDelay + 200),
                    r.navigateBackward(v.stepMonths, "arrow"),
                    e.stopPropagation(),
                    e.preventDefault(),
                    r._raiseEvent(0, e)
                }),
                this.addHandler(t, "mouseup", function(e) {
                    i.data(t, "navigateLeftRepeat", !1)
                }),
                this.addHandler(t, "mouseleave", function(e) {
                    i.data(t, "navigateLeftRepeat", !1)
                }),
                this.addHandler(r, "mousedown", function(e) {
                    if (v._animating)
                        return !1;
                    i.data(r, "navigateRightRepeat", !0);
                    var t = i.data(r, "navigateRight");
                    return t.enableFastNavigation && !g && t.startRepeat(t, r, !1, v.navigationDelay + 200),
                    t.navigateForward(v.stepMonths, "arrow"),
                    e.stopPropagation(),
                    e.preventDefault(),
                    t._raiseEvent(1, e)
                }),
                this.addHandler(r, "mouseup", function(e) {
                    i.data(r, "navigateRightRepeat", !1)
                }),
                this.addHandler(r, "mouseleave", function(e) {
                    i.data(r, "navigateRightRepeat", !1)
                })
            }
        },
        refreshTitle: function(e) {
            var t = this._format(this.value.dateTime, this._getTitleFormat(), this.culture);
            "decade" == this.view ? t = this._format(this._renderStartDate, this._getTitleFormat(), this.culture) + " - " + this._format(this._renderEndDate, this._getTitleFormat(), this.culture) : "centuries" == this.view && (t = this._format(this._renderCenturyStartDate, this._getTitleFormat(), this.culture) + " - " + this._format(this._renderCenturyEndDate, this._getTitleFormat(), this.culture));
            var r = this.titleHeader;
            if (this.titleHeader) {
                var s = r.find(".jqx-calendar-title-content")
                  , n = i("<div style='background: transparent; margin: 0; padding: 0; border: none;'>" + t + "</div>");
                r.append(n),
                n.addClass(this.toThemeProperty("jqx-calendar-title-content")),
                null != s && s.remove()
            }
        },
        startRepeat: function(e, t, r, s) {
            var n = window.setTimeout(function() {
                var o = i.data(t, "navigateLeftRepeat");
                r || (o = i.data(t, "navigateRightRepeat")),
                o ? (s < 25 && (s = 25),
                r ? (e.navigateBackward(1, "arrow"),
                e.startRepeat(e, t, !0, s)) : (e.navigateForward(1, "arrow"),
                n = e.startRepeat(e, t, !1, s))) : window.clearTimeout(n)
            }, s)
        },
        navigateForward: function(e, t) {
            null != e && null != e || (e = this.stepMonths);
            var i = this.value.year;
            if ("decade" == this.view) {
                if (i = this._renderStartDate.getFullYear() + 12,
                this._renderEndDate.getFullYear() >= this.getMaxDate().getFullYear())
                    return
            } else
                "year" == this.view ? i = this.value.year + 1 : "centuries" == this.view && (i = this.value.year + 100);
            if ("month" != this.view) {
                var r = this.getMaxDate().getFullYear();
                if ((r < i || i > r) && (i = r),
                this.value.year == i) {
                    if ("decade" !== this.view)
                        return;
                    if (!(this.value.year > this._renderEndDate.getFullYear()))
                        return;
                    this.value.year = i,
                    this.value.month = 1,
                    this.value.day = 1
                }
                this.value.year = i,
                this.value.month = 1,
                this.value.day = 1
            }
            var s = this.value.day;
            if (this.value.month + e <= 12) {
                var n = this.value._daysInMonth(this.value.year, this.value.month + e);
                s > n && (s = n)
            }
            if ("month" == this.view) {
                var o = new Date(this.value.year,this.value.month - 1 + e,s);
                "arrow" == t && 7 == this.selectableDays.length && "range" != this.selectionMode && (this.selectedDate = new Date(this.value.year,this.value.month - 1 + e,1))
            } else
                o = new Date(this.value.year,this.value.month - 1,s);
            return this.navigateTo(o)
        },
        navigateBackward: function(e, t) {
            null != e && null != e || (e = this.stepMonths);
            var i = this.value.year;
            if ("decade" == this.view ? i = this._renderStartDate.getFullYear() - 12 : "year" == this.view ? i = this.value.year - 1 : "centuries" == this.view && (i = this.value.year - 100),
            "month" != this.view) {
                var r = this.getMinDate().getFullYear();
                if (i < r && (i = r),
                "decade" == this.view && this._renderStartDate && this._renderStartDate.getFullYear() == i)
                    return;
                this.value.year = i,
                this.value.month = 1,
                this.value.day = 1
            }
            var s = this.value.day;
            if (this.value.month - e >= 1) {
                var n = this.value._daysInMonth(this.value.year, this.value.month - e);
                s > n && (s = n)
            }
            if ("month" == this.view) {
                var o = new Date(this.value.year,this.value.month - 1 - e,s);
                "arrow" == t && 7 == this.selectableDays.length && "range" != this.selectionMode && (this.selectedDate = new Date(this.value.year,this.value.month - 1 - e,1))
            } else
                o = new Date(this.value.year,this.value.month - 1,s);
            return this.navigateTo(o)
        },
        _isRestrictedRange: function(e, t) {
            if (e > t)
                return !0;
            for (var i = e; i.valueOf() <= t.valueOf(); ) {
                if (this._isRestrictedDate(i))
                    return !0;
                i.setDate(i.getDate() + 1)
            }
            return !1
        },
        _hasUnrestrictedRanges: function(e, t) {
            if (e > t)
                return !1;
            for (var i = e; i.valueOf() <= t.valueOf(); ) {
                if (!this._isRestrictedDate(i))
                    return !0;
                i.setDate(i.getDate() + 1)
            }
            return !1
        },
        _getNextUnrestrictedDay: function(e, t) {
            if (e > t)
                return null;
            for (var i = e; i.valueOf() <= t.valueOf(); ) {
                if (!this._isRestrictedDate(i))
                    return i;
                i.setDate(i.getDate() + 1)
            }
            return null
        },
        _isRestrictedDate: function(e) {
            var t = this;
            if (!i.isArray(t.restrictedDates))
                return !1;
            for (var r = 0; r < t.restrictedDates.length; r++) {
                var s = t.restrictedDates[r];
                if ("object" == typeof s && null != s.from && null != s.to) {
                    var n = s.from
                      , o = s.to;
                    if (e.valueOf() >= n.valueOf() && e.valueOf() <= o.valueOf())
                        return !0
                } else if (s.getMonth() == e.getMonth() && s.getDate() == e.getDate() && s.getFullYear() == e.getFullYear())
                    return !0
            }
            return !1
        },
        _isDisabled: function(e) {
            var t = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"][e.getDay()];
            return -1 == this.selectableDays.indexOf(t) || !!this._isRestrictedDate(e)
        },
        refreshCalendarCells: function(e, t, r) {
            if ("year" != this.view && "decade" != this.view && "centuries" != this.view) {
                for (var s = this.table.find("#cellTable" + r.toString()), n = t, o = new Array, a = 0, l = new i.jqx._jqxDateTimeInput.getDateTime(new Date), d = 0; d < 6; d++)
                    for (var h = 0; h < 7; h++) {
                        var c = d + 1
                          , u = h;
                        this.rtl && (u = 6 - u);
                        var p = u + 1
                          , f = "#cell" + c + p + this.element.id
                          , m = new Date(n.dateTime.getFullYear(),n.dateTime.getMonth(),n.dateTime.getDate())
                          , g = new i.jqx._jqxCalendar.cell(m)
                          , v = i(s[0].rows[d].cells[p - 1]);
                        v[0].id = f.substring(1),
                        g.element = v,
                        g.row = d,
                        g.column = h,
                        g.isVisible = !0,
                        g.isOtherMonth = !1,
                        g.isToday = !1,
                        g.isWeekend = !1,
                        g.isHighlighted = !1,
                        g.isSelected = !1,
                        n.month != this.value.month && (g.isOtherMonth = !0,
                        g.isVisible = this.showOtherMonthDays),
                        this._isRestrictedDate(m) && (g.isRestricted = !0,
                        g.isDisabled = !0),
                        g.isDisabled || (m < this.getMinDate() || m > this.getMaxDate() || this._isDisabled(m)) && (g.isDisabled = !0),
                        n.month == l.month && n.day == l.day && n.year == l.year && (g.isToday = !0),
                        n.isWeekend() && (g.isWeekend = !0),
                        i.data(this.element, "cellContent" + f.substring(1), g),
                        i.data(this.element, f.substring(1), g),
                        o[a] = g,
                        a++,
                        i.jqx.utilities.html(v, n.day),
                        this._applyCellStyle(g, v, v),
                        n = new i.jqx._jqxDateTimeInput.getDateTime(new Date(n._addDays(1)))
                    }
                var w = i.data(this.element, e[0].id);
                null != w && null != w && (w.cells = o),
                this.renderedCells = o,
                this._refreshOtherMonthRows(w, r)
            } else
                this.refreshViews(e, t, r)
        },
        _getDecadeAndCenturiesData: function() {
            var e = new Array
              , t = new Array
              , i = this.getMaxDate().getFullYear() - this.getMinDate().getFullYear();
            i < 12 && (i = 12);
            var r = this.getMinDate()
              , s = this.getMaxDate()
              , n = this.value.dateTime.getFullYear();
            if ("decade" == this.view) {
                n + 12 > s.getFullYear() && (n = s.getFullYear() - 11),
                n < r.getFullYear() && (n = r.getFullYear());
                for (var o = 0; o < i; o++) {
                    var a = new Date(r.getFullYear() + o,0,1);
                    if (r.getFullYear() <= n && n <= a.getFullYear()) {
                        for (var l = new Date(a.getFullYear(),a.getMonth(),1), d = 0; d < 12; d++) {
                            var h = new Date(l.getFullYear() + d,this.value.dateTime.getMonth(),this.value.dateTime.getDate())
                              , c = h.getFullYear();
                            r.getFullYear() <= c && c <= s.getFullYear() ? (e.push(c),
                            t.push(h),
                            0 == d && (this._renderStartDate = h),
                            this._renderEndDate = h) : (e.push(c),
                            t.push(h))
                        }
                        break
                    }
                }
            } else if ("centuries" == this.view)
                for (o = 0; o < i; o += 120)
                    if (a = new Date(r.getFullYear() + o + 120,0,1),
                    r.getFullYear() <= n && n <= a.getFullYear()) {
                        for ((l = new Date(a.getFullYear() - 130,a.getMonth(),1)) < r && (l = r),
                        d = 0; d < 12; d++) {
                            var u = new Date(l.getFullYear() + 10 * d,l.getMonth(),1);
                            l.getFullYear() >= r.getFullYear() && u.getFullYear() <= s.getFullYear() && (e.push("<span style='visibility: hidden;'>-</span>" + u.getFullYear() + "-" + (u.getFullYear() + 9)),
                            t.push(u),
                            0 == d && (this._renderCenturyStartDate = u),
                            this._renderCenturyEndDate = new Date(u.getFullYear() + 9,0,1))
                        }
                        break
                    }
            return {
                years: e,
                dates: t
            }
        },
        refreshViews: function(e, t, r) {
            for (var s = new Array, n = e.find("#cellTable" + r.toString()), o = this._getDecadeAndCenturiesData(), a = o.years, l = o.dates, d = 0, h = this.getMinDate(), c = this.getMaxDate(), u = 0; u < 3; u++)
                for (var p = 0; p < 4; p++) {
                    var f = p;
                    this.rtl && (f = 3 - f),
                    (b = new Date(this.value.dateTime)).setDate(1),
                    b.setMonth(4 * u + f);
                    var m = new i.jqx._jqxCalendar.cell(b)
                      , g = n[0].rows["row" + (1 + u) + this.element.id]
                      , v = i(g.cells[p]);
                    m.isSelected = !1,
                    m.isVisible = !0,
                    m.element = v,
                    m.row = u,
                    m.column = p,
                    m.index = s.length;
                    var w = "";
                    if ("year" == this.view) {
                        var x = this.localization.calendar.months.names[4 * u + f];
                        switch (this.monthNameFormat) {
                        case "default":
                            x = this.localization.calendar.months.namesAbbr[4 * u + f];
                            break;
                        case "shortest":
                            x = this.localization.calendar.months.namesShort[4 * u + f];
                            break;
                        case "firstTwoLetters":
                            x = x.substring(0, 2);
                            break;
                        case "firstLetter":
                            x = x.substring(0, 1)
                        }
                        w = x
                    } else
                        "decade" != this.view && "centuries" != this.view || (null == (w = a[4 * u + f]) && (w = "<span style='cursor: default; visibility: hidden;'>2013</span>"),
                        m.setDate(l[4 * u + f]));
                    var b = m.getDate();
                    "year" == this.view ? b.getMonth() == this.getDate().getMonth() && b.getFullYear() == this.getDate().getFullYear() && (m.isSelected = !0) : b.getFullYear() == this.getDate().getFullYear() && (m.isSelected = !0),
                    "year" == this.view ? (this._getYearAndMonthPart(b) < this._getYearAndMonthPart(h) && (m.isDisabled = !0),
                    this._getYearAndMonthPart(b) > this._getYearAndMonthPart(c) && (m.isDisabled = !0)) : (b.getFullYear() < h.getFullYear() && (m.isDisabled = !0),
                    b.getFullYear() > c.getFullYear() && (m.isDisabled = !0)),
                    i.jqx.utilities.html(v, w),
                    s[d] = m,
                    d++
                }
            var y = i.data(this.element, e[0].id);
            null != y && null != y && (y.cells = s),
            this.renderedCells = s,
            this._applyCellStyles()
        },
        _createViewClone: function() {
            var e = this.host.find(".jqx-calendar-month")
              , t = e.clone();
            return t.css("position", "absolute"),
            t.css("top", e.position().top),
            t.width(this.month.width()),
            t
        },
        _addCellsTable: function(e, t) {
            var i = this
              , r = this.showFooter ? 20 : 0;
            "month" != this.view ? t.height(this.month.height() - this.titleHeight) : t.height(this.month.height() - this.titleHeight - this.columnHeaderHeight - r),
            this._viewAnimating = !0;
            var s = this.host.find(".jqx-calendar-month-container");
            s.css("position", "relative"),
            this.host.find(".jqx-calendar-month");
            var n = this._createViewClone();
            s.append(n),
            "month" != this.view ? (this.header.fadeOut(0),
            this.showWeekNumbers && this.rowHeader.fadeOut(0),
            this.showFooter && this._footer.fadeOut(0)) : (this.header.fadeIn(this.navigationDelay + 200),
            this.showWeekNumbers && this.rowHeader.fadeIn(this.navigationDelay + 200),
            this.showFooter && this._footer.fadeIn(this.navigationDelay + 200)),
            e.children().remove(),
            e.append(t),
            this._animateViews(n, t, function() {
                i.selectedDate || "range" == i.selectionMode || (i.selectedDate = i.renderedCells[0].getDate());
                try {
                    i.renderedCells[0].element.focus(),
                    setTimeout(function() {
                        i.renderedCells[0].element.focus()
                    }, 10)
                } catch (e) {}
                i._viewAnimating = !1
            }),
            t.addClass(this.toThemeProperty("jqx-calendar-view"))
        },
        _animateViews: function(e, t, i) {
            var r = this;
            if (r._viewAnimating = !0,
            r.oldView == r.view)
                return e.remove(),
                t.fadeOut(0),
                t.fadeIn(0),
                void i();
            e.fadeOut(this.navigationDelay + 100, function() {
                e.remove()
            }),
            t.fadeOut(0),
            t.fadeIn(this.navigationDelay + 200, function() {
                i()
            })
        },
        focus: function() {
            if (!this.disabled)
                try {
                    this.renderedCells && this.renderedCells.length > 0 && (this.selectedDate || "range" == this.selectionMode || this.setDate(new Date, "mouse"),
                    this.element.focus())
                } catch (e) {}
        },
        renderViews: function(e, t, r) {
            var s = this
              , n = new Array
              , o = i("<table role='grid' style='border-color: transparent; width: 100%; height: 100%;' cellspacing='2' cellpadding='0' id=cellTable" + r.toString() + "><tr role='row' id='row1" + this.element.id + "'><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td></tr><tr role='row' id='row2" + this.element.id + "'><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td></tr><tr role='row' id='row3" + this.element.id + "'><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td></tr></table>");
            this.host.find(".jqx-calendar-month-container").css("position", "relative");
            var a = e.find("#cellsTable" + e[0].id);
            a[0].style.borderColor = "transparent";
            var l = this._getDecadeAndCenturiesData()
              , d = l.years
              , h = l.dates
              , c = 0
              , u = this.getMinDate()
              , p = this.getMaxDate()
              , f = new Date(this.value.dateTime);
            f.setDate(1);
            for (var m = 0; m < 3; m++)
                for (var g = 0; g < 4; g++) {
                    var v = g;
                    this.rtl && (v = 3 - v);
                    var w = o[0].rows["row" + (1 + m) + this.element.id];
                    (q = new Date(f)).setMonth(4 * m + v);
                    var x = new i.jqx._jqxCalendar.cell(q)
                      , b = i(w.cells[g]);
                    x.isVisible = !0,
                    x.element = b,
                    x.row = m,
                    x.column = g,
                    x.index = n.length,
                    x.isSelected = !1;
                    var y = "";
                    if ("year" == this.view) {
                        q.getMonth() == this.getDate().getMonth() && q.getFullYear() == this.getDate().getFullYear() && (x.isSelected = !0);
                        var _ = this.localization.calendar.months.names[4 * m + v];
                        switch (this.monthNameFormat) {
                        case "default":
                            _ = this.localization.calendar.months.namesAbbr[4 * m + v];
                            break;
                        case "shortest":
                            _ = this.localization.calendar.months.namesShort[4 * m + v];
                            break;
                        case "firstTwoLetters":
                            _ = _.substring(0, 2);
                            break;
                        case "firstLetter":
                            _ = _.substring(0, 1)
                        }
                        y = _
                    } else
                        "decade" != this.view && "centuries" != this.view || (y = d[4 * m + v],
                        x.setDate(h[4 * m + v]),
                        x.getDate().getFullYear() == this.getDate().getFullYear() && (x.isSelected = !0),
                        null == y && (y = "<span style='cursor: default; visibility: hidden;'>2013</span>"));
                    var q = x.getDate();
                    if ("year" == this.view) {
                        var j = new Date(q);
                        j.setDate(1),
                        j.setHours(0, 0, 0, 0),
                        j.setMonth(q.getMonth() + 1),
                        j = new Date(j.valueOf() - 1),
                        (this._getYearAndMonthPart(q) < this._getYearAndMonthPart(u) || this._getYearAndMonthPart(q) > this._getYearAndMonthPart(p) || !this._hasUnrestrictedRanges(q, j)) && (x.isDisabled = !0)
                    } else {
                        var S = new Date(q);
                        S.setMonth(0),
                        S.setDate(1),
                        S.setHours(0, 0, 0, 0),
                        S.setFullYear(q.getFullYear() + 1),
                        S = new Date(S.valueOf() - 1),
                        (q.getFullYear() < u.getFullYear() || q.getFullYear() > p.getFullYear() || !this._hasUnrestrictedRanges(q, S)) && (x.isDisabled = !0)
                    }
                    i.jqx.utilities.html(b, y),
                    n[c] = x,
                    c++
                }
            i.each(n, function() {
                var e = this.element
                  , t = this;
                s.disabled || (s.addHandler(e, "mousedown", function(e) {
                    s._setDateAndSwitchViews(t, e, "mouse")
                }),
                s.addHandler(e, "mouseover", function(e) {
                    var i = s.renderedCells[t.index];
                    "centuries" != s.view && -1 != i.element.html().toLowerCase().indexOf("span") || (i.isHighlighted = !0,
                    s._applyCellStyle(i, i.element, i.element))
                }),
                s.addHandler(e, "mouseout", function(e) {
                    var i = s.renderedCells[t.index];
                    "centuries" != s.view && -1 != i.element.html().toLowerCase().indexOf("span") || (i.isHighlighted = !1,
                    s._applyCellStyle(i, i.element, i.element))
                }))
            });
            var C = i.data(this.element, e[0].id);
            null != C && null != C && (C.cells = n),
            this.renderedCells = n,
            this._addCellsTable(a, o),
            this._applyCellStyles()
        },
        _setDateAndSwitchViews: function(e, t, r) {
            if (!this._viewAnimating && !this._animating) {
                this.getDate();
                var s = this.renderedCells[e.index].getDate()
                  , n = this.value.dateTime.getDate()
                  , o = new Date(s);
                -1 != this.views.indexOf("month") ? o.setDate(n) : (o.setDate(1),
                s.setDate(1)),
                o.getMonth() == s.getMonth() && (s = o);
                var a = this.getMinDate()
                  , l = this.getMaxDate();
                if ("year" == this.view) {
                    if (this._getYearAndMonthPart(s) < this._getYearAndMonthPart(a))
                        return;
                    if (this._getYearAndMonthPart(s) > this._getYearAndMonthPart(l))
                        return
                } else {
                    if (s.getFullYear() < a.getFullYear())
                        return;
                    if (s.getFullYear() > l.getFullYear())
                        return
                }
                switch ("range" != this.selectionMode && this._selectDate(s, r),
                this.oldView = this.view,
                this.view) {
                case "year":
                    this.view = "month";
                    break;
                case "decade":
                    this.view = "year"
                }
                -1 == this.views.indexOf("month") && (this.view = "year"),
                -1 == this.views.indexOf("year") && (this.view = "decade"),
                "year" == this.view ? (this._getYearAndMonthPart(s) < this._getYearAndMonthPart(a) && (s = a),
                this._getYearAndMonthPart(s) > this._getYearAndMonthPart(l) && (s = l)) : (s.getFullYear() < a.getFullYear() && (s = a),
                s.getFullYear() > l.getFullYear() && (s = l)),
                this.changing && this.selectedDate && (this.selectedDate.getFullYear() != s.getFullYear() || this.selectedDate.getMonth() != s.getMonth() || this.selectedDate.getDate() != s.getDate()) && (s = this.selectedDate),
                this.value._setYear(s.getFullYear()),
                this.value._setDay(s.getDate()),
                this.value._setMonth(s.getMonth() + 1),
                this.value._setDay(s.getDate());
                var d = this.getVisibleDate()
                  , h = this.getFirstDayOfWeek(d)
                  , c = "View" + this.element.id;
                if (this.renderCalendarCells(this.month, h, c, !0),
                this.refreshTitle(this.month),
                this.showWeekNumbers && this.refreshRowHeader(this.month, c),
                3 == this.views.length && "month" == this.view)
                    if ("range" != this.selectionMode)
                        this._selectDate(this.selectedDate, "view");
                    else {
                        var u = this;
                        i.each(this.renderedCells, function(e) {
                            var t = this
                              , r = t.getDate()
                              , n = i(t.element);
                            if (0 == n.length)
                                return !1;
                            var o = function(e) {
                                if (null == e)
                                    return new Date;
                                var t = new Date;
                                return t.setHours(0, 0, 0, 0),
                                t.setFullYear(e.getFullYear(), e.getMonth(), e.getDate()),
                                t
                            };
                            t.isOtherMonth || o(r).toString() != o(s).toString() || (u.value._setMonth(s.getMonth() + 1),
                            u.value._setDay(s.getDate()),
                            u.value._setYear(s.getFullYear())),
                            t.isSelected = !1,
                            t.isDisabled = !1,
                            o(r) < o(u.selection.from) && 1 == u._clicks && (t.isDisabled = !0),
                            u.getMaxDate() < r && (t.isDisabled = !0),
                            u.getMinDate() > r && (t.isDisabled = !0),
                            u._isDisabled(r) && (t.isDisabled = !0),
                            t.isDisabled || o(r) >= o(u.selection.from) && o(r) <= o(u.selection.to) && (t.isSelected = !0)
                        }),
                        this._applyCellStyles()
                    }
                "month" != this.view && ("year" == this.oldView || -1 == this.views.indexOf("year") && "decade" == this.view) && ("keyboard" != r && this._raiseEvent("3"),
                this._raiseEvent("5", {
                    selectionType: "mouse"
                })),
                this._raiseEvent("8")
            }
        },
        renderCalendarCells: function(e, t, r, s) {
            if ("year" != this.view && "decade" != this.view && "centuries" != this.view) {
                var n = i("<table role='grid' style='width: 100%; height: 100%; border-color: transparent;' cellspacing='2' cellpadding='1' id=cellTable" + r.toString() + "><tr role='row'><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td></tr><tr role='row'><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td></tr><tr role='row'><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td></tr><tr role='row'><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td></tr><tr role='row'><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td></tr><tr role='row'><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td></tr></table>")
                  , o = this.table;
                if (o[0].style.borderColor = "transparent",
                null == s) {
                    var a = o.find("#cellTable" + r.toString());
                    null != a && a.remove(),
                    o.append(n)
                }
                var l = t
                  , d = this.showDayNames ? 1 : 0
                  , h = this.showWeekNumbers ? 1 : 0
                  , c = new Array
                  , u = 0
                  , p = (e.width() - this.rowHeaderWidth - 2) / 7;
                this.showWeekNumbers || (p = (e.width() - 2) / 7),
                p = parseInt(p);
                for (var f = new i.jqx._jqxDateTimeInput.getDateTime(new Date), m = 0; m < 6; m++) {
                    for (var g = 0; g < 7; g++) {
                        var v = m + 1
                          , w = g;
                        this.rtl && (w = 6 - w);
                        var x = w + 1
                          , b = "#cell" + v + x + this.element.id
                          , y = new Date(l.dateTime.getFullYear(),l.dateTime.getMonth(),l.dateTime.getDate())
                          , _ = new i.jqx._jqxCalendar.cell(y)
                          , q = i(n[0].rows[m].cells[x - 1]);
                        q[0].id = b.substring(1),
                        _.isVisible = !0,
                        _.isDisabled = !1,
                        l.month != this.value.month && (_.isOtherMonth = !0,
                        _.isVisible = this.showOtherMonthDays),
                        this._isRestrictedDate(y) && (_.isRestricted = !0,
                        _.isDisabled = !0),
                        _.isDisabled || (y < this.getMinDate() || y > this.getMaxDate() || this._isDisabled(y)) && (_.isDisabled = !0),
                        l.month == f.month && l.day == f.day && l.year == f.year && (_.isToday = !0),
                        l.isWeekend() && (_.isWeekend = !0),
                        _.element = q,
                        _.row = d,
                        _.column = h,
                        i.jqx.utilities.html(q, l.day),
                        l = new i.jqx._jqxDateTimeInput.getDateTime(new Date(l._addDays(1))),
                        i.data(this.element, "cellContent" + b.substring(1), _),
                        i.data(this.element, "" + b.substring(1), _);
                        var j = this;
                        if (j.isMaterialized() && (i(q).addClass("ripple"),
                        i.jqx.ripple(i(q))),
                        this.addHandler(q, "mousedown", function(e) {
                            if (!j.readOnly && !j.disabled) {
                                var t = i(e.target)
                                  , r = i.data(j.element, t[0].id);
                                if (j._raiseEvent(3, e),
                                null != r && null != r) {
                                    var s = r.getDate();
                                    if (j.getMinDate() <= s && s <= j.getMaxDate() && !r.isDisabled)
                                        if (r.isOtherMonth && j.enableAutoNavigation)
                                            r.row < 2 ? j.navigateBackward() : j.navigateForward(),
                                            j._selectDate(r.getDate(), "mouse", e.shiftKey);
                                        else {
                                            new Date(j.getDate()),
                                            j._selectDate(r.getDate(), "mouse", e.shiftKey),
                                            j.value._setYear(s.getFullYear()),
                                            j.value._setDay(1),
                                            j.value._setMonth(s.getMonth() + 1),
                                            j.value._setDay(s.getDate());
                                            var n = j.host.find(".jqx-calendar-month");
                                            n.stop(),
                                            n.css("margin-left", "0px"),
                                            j.getDate(),
                                            j._raiseEvent("2"),
                                            r.isOtherMonth && j._raiseEvent("5", {
                                                selectionType: "mouse"
                                            })
                                        }
                                }
                                return !1
                            }
                        }),
                        !j.disabled) {
                            var S = function(e, t) {
                                if (!j.readOnly) {
                                    var r = i(e.target)
                                      , s = i.data(j.element, r[0].id);
                                    if (null != s && null != s) {
                                        var n = s.getDate();
                                        j.getMinDate() <= n && n <= j.getMaxDate() && (s.isHighlighted = t,
                                        j._applyCellStyle(s, s.element, r))
                                    }
                                }
                            };
                            this.addHandler(q, "mouseenter", function(e) {
                                return S(e, !0),
                                !1
                            }),
                            this.addHandler(q, "mouseleave", function(e) {
                                return S(e, !1),
                                !1
                            })
                        }
                        h++,
                        c[u] = _,
                        u++
                    }
                    h = 0,
                    d++
                }
                var C = i.data(this.element, e[0].id);
                null != C && null != C && (C.cells = c),
                this.renderedCells = c,
                null != s && this._addCellsTable(o, n),
                this._applyCellStyles(),
                this._refreshOtherMonthRows(C, r)
            } else
                this.renderViews(e, t, r)
        },
        setMaxDate: function(e, t) {
            null != e && "string" == typeof e && "Invalid Date" == (e = new Date(e)) || (this.maxDate = i.jqx._jqxDateTimeInput.getDateTime(e),
            !1 !== t && this.render())
        },
        getMaxDate: function() {
            return null != this.maxDate && null != this.maxDate ? this.maxDate.dateTime : null
        },
        setMinDate: function(e, t) {
            null != e && "string" == typeof e && "Invalid Date" == (e = new Date(e)) || (this.minDate = i.jqx._jqxDateTimeInput.getDateTime(e),
            !1 !== t && this.render())
        },
        getMinDate: function() {
            return null != this.minDate && null != this.minDate ? this.minDate.dateTime : null
        },
        navigateTo: function(e, t) {
            if ("month" == this.view) {
                var r = this.getMinDate()
                  , s = new Date(this.getMaxDate().getFullYear(),this.getMaxDate().getMonth() + 1,this.getMaxDate().getDate());
                if (e < this._getYearAndMonthPart(r) || e > this._getYearAndMonthPart(s))
                    return !1
            } else if (e && (e.getFullYear() < this.getMinDate().getFullYear() || e.getFullYear() > this.getMaxDate().getFullYear()))
                return !1;
            if (null == e)
                return !1;
            if (null == t) {
                var n = this;
                if (this._animating)
                    return;
                this._animating = !0;
                var o = this.host.find(".jqx-calendar-month-container")
                  , a = i("<div></div>");
                a[0].style.width = "100%",
                a[0].style.height = "100%",
                a[0].style.overflow = "hidden",
                a[0].style.position = "relative",
                a[0].style.left = "0px",
                a[0].style.top = "-100%",
                o.append(a),
                this._viewClone && (this._viewClone.stop(),
                this._viewClone.remove()),
                this._newViewClone && (this._newViewClone.stop(),
                this._newViewClone.remove()),
                (p = this.host.find(".jqx-calendar-month")).stop(),
                p.css("margin-left", "0px");
                var l = p.clone();
                this._viewClone = l;
                var d = new Date(this.value.dateTime);
                this.value._setYear(e.getFullYear()),
                this.value._setDay(e.getDate()),
                this.value._setMonth(e.getMonth() + 1);
                var h = parseInt(this.month.css("padding-top"));
                n.refreshControl(),
                a.css("overflow", "hidden"),
                o.css("position", "relative"),
                o.css("overflow", "hidden"),
                l.css("position", "absolute"),
                l.css("top", p.position().top - h),
                a.append(l),
                i.jqx.browser.msie && i.jqx.browser.version < 8 && (this.month.css("position", "relative"),
                this.month.css("overflow", "hidden"),
                this.table.css("position", "relative"),
                this.table.css("overflow", "hidden"));
                var c = -this.month.width();
                e < d && ("month" == this.view && e.getMonth() != d.getMonth() ? c = this.month.width() : e.getFullYear() != d.getFullYear() && (c = this.month.width())),
                l.animate({
                    marginLeft: parseInt(c) + "px"
                }, this.navigationDelay, function() {
                    l.remove()
                });
                var u = p.clone();
                this._newViewClone = u,
                u.css("position", "absolute"),
                u.css("top", p.position().top - h),
                a.append(u),
                u.css("margin-left", -c),
                p.css("visibility", "hidden"),
                u.animate({
                    marginLeft: "0px"
                }, this.navigationDelay, function() {
                    u.remove(),
                    p.css("visibility", "inherit"),
                    a.remove(),
                    n._animating = !1
                })
            } else {
                var p;
                this.value._setYear(e.getFullYear()),
                this.value._setDay(e.getDate()),
                this.value._setMonth(e.getMonth() + 1),
                (p = this.host.find(".jqx-calendar-month")).stop(),
                p.css("margin-left", "0px"),
                this.refreshControl()
            }
            return this._raiseEvent("2"),
            this._raiseEvent("8"),
            !0
        },
        setDate: function(e) {
            return null != e && "string" == typeof e && (e = new Date(e)),
            0 == this.canRender && (this.canRender = !0,
            this.render()),
            this.navigateTo(e, "api"),
            this._selectDate(e),
            "range" == this.selectionMode && this._selectDate(e, "mouse"),
            !0
        },
        val: function(e) {
            return 0 != arguments.length && (null == e && this.setDate(null),
            e instanceof Date && this.setDate(e),
            "string" == typeof e && this.setDate(e)),
            this.getDate()
        },
        getDate: function() {
            return null == this.selectedDate ? new Date : this.selectedDate
        },
        getValue: function() {
            return null == this.value ? new Date : this.value.dateTime
        },
        setRange: function(e, t) {
            0 == this.canRender && (this.canRender = !0,
            this.render()),
            this.navigateTo(e, "api"),
            this._selectDate(e, "mouse"),
            this._selectDate(t, "mouse")
        },
        getRange: function() {
            return this.selection
        },
        _selectDate: function(e, t, r) {
            if ("none" != this.selectionMode) {
                null != t && null != t || (t = "none"),
                null != r && null != r || (r = !1);
                var s = i.data(this.element, "View" + this.element.id);
                if (null != s && null != s) {
                    if (this.changing && e && this.selectedDate) {
                        if (this.selectedDate.getFullYear() != e.getFullYear() || this.selectedDate.getDate() != e.getDate() || this.selectedDate.getMonth() != e.getMonth())
                            var n = this.changing(this.selectedDate, e);
                        n && (e = n)
                    }
                    var o = this;
                    this.input && (null != e ? this.input.val(e.toString()) : this.input.val(""));
                    var a = this.selectedDate;
                    if (this.selectedDate = e,
                    "month" != this.view)
                        return a != e && this._raiseEvent(7, {
                            selectionType: t
                        }),
                        i.each(this.renderedCells, function(r) {
                            var s = this
                              , n = s.getDate()
                              , a = i(s.element);
                            if (a.find("#cellContent" + a[0].id),
                            null == e)
                                s.isSelected = !1,
                                s.isDisabled = !1;
                            else if (s.isSelected = !1,
                            n && (n.getMonth() == e.getMonth() && "year" == o.view && n.getFullYear() == e.getFullYear() || "decade" == o.view && n.getFullYear() == e.getFullYear())) {
                                s.isSelected = !0;
                                try {
                                    "none" != t && s.element.focus()
                                } catch (e) {}
                            }
                            o._applyCellStyle(s, a, a)
                        }),
                        void (this.change && this.change(e));
                    if ("month" == this.view && "range" == this.selectionMode && "key" == t) {
                        var l = this.getVisibleDate()
                          , d = this.getFirstDayOfWeek(l);
                        this.refreshCalendarCells(this.month, d, "View" + this.element.id)
                    }
                    var h = !1;
                    i.each(this.renderedCells, function(s) {
                        var n = this
                          , a = n.getDate()
                          , l = i(n.element)
                          , d = l;
                        if (0 == l.length)
                            return !1;
                        if (null == e)
                            n.isSelected = !1,
                            n.isDisabled = !1,
                            0 == s && (o.selection = {
                                from: null,
                                to: null
                            },
                            o._raiseEvent("2"),
                            o._raiseEvent("5", {
                                selectionType: t
                            }));
                        else if ("range" != o.selectionMode || "key" == t) {
                            if (a.getDate() == e.getDate() && a.getMonth() == e.getMonth() && a.getFullYear() == e.getFullYear() && n.isSelected)
                                return o._applyCellStyle(n, l, d),
                                void o._raiseEvent("5", {
                                    selectionType: t
                                });
                            if (n.isSelected && o._raiseEvent("6", {
                                selectionType: t
                            }),
                            n.isSelected = !1,
                            a.getDate() == e.getDate() && a.getMonth() == e.getMonth() && a.getFullYear() == e.getFullYear()) {
                                n.isSelected = !0,
                                0 == s && (o.selection = {
                                    date: e
                                });
                                try {
                                    "none" != t && (n.element.focus(),
                                    o.host.focus())
                                } catch (e) {}
                                n.isOtherMonth || (o.value._setMonth(e.getMonth() + 1),
                                o.value._setDay(e.getDate()),
                                o.value._setYear(e.getFullYear()),
                                o._raiseEvent("2"),
                                o._raiseEvent("5", {
                                    selectionType: t
                                }))
                            }
                            "range" == o.selectionMode && (o._clicks = 0,
                            o.selection = {
                                from: e,
                                to: e
                            })
                        } else if ("range" == o.selectionMode) {
                            if ("view" == t)
                                return n.isSelected = !1,
                                n.isDisabled = !1,
                                o.getMaxDate() < a && (n.isDisabled = !0),
                                o.getMinDate() > a && (n.isDisabled = !0),
                                o._isRestrictedDate(a) && (n.isDisabled = !0,
                                n.isRestricted = !0),
                                !n.isDisabled && o._isDisabled(a) && (n.isDisabled = !0),
                                o._applyCellStyle(n, l, d),
                                !0;
                            if (0 == s)
                                if ("none" != t)
                                    if (null == o._clicks && (o._clicks = 0),
                                    o._clicks++,
                                    r && o._clicks++,
                                    1 == o._clicks)
                                        o.selection = {
                                            from: e,
                                            to: e
                                        };
                                    else {
                                        var c = o.selection.from
                                          , u = c <= e ? c : e
                                          , p = c <= e ? e : c;
                                        if (u)
                                            var f = new Date(u.getFullYear(),u.getMonth(),u.getDate());
                                        if (p)
                                            var m = new Date(p.getFullYear(),p.getMonth(),p.getDate(),23,59,59);
                                        o.selection = {
                                            from: f,
                                            to: m
                                        },
                                        o._clicks = 0
                                    }
                                else
                                    null != o.selection && null != o.selection.from || (o.selection = {
                                        from: e,
                                        to: e
                                    },
                                    null == o._clicks && (o._clicks = 0),
                                    o._clicks++,
                                    2 == o._clicks && (o._clicks = 0));
                            var g = function(e) {
                                if (null == e)
                                    return new Date;
                                var t = new Date;
                                return t.setHours(0, 0, 0, 0),
                                t.setFullYear(e.getFullYear(), e.getMonth(), e.getDate()),
                                t
                            };
                            n.isOtherMonth || g(a).toString() != g(e).toString() || (o.value._setMonth(e.getMonth() + 1),
                            o.value._setDay(e.getDate()),
                            o.value._setYear(e.getFullYear()),
                            o._raiseEvent("2"),
                            o._raiseEvent("5", {
                                selectionType: t
                            })),
                            n.isSelected = !1,
                            n.isDisabled = h,
                            g(a) < g(o.selection.from) && 1 == o._clicks && (n.isDisabled = !0),
                            o.getMaxDate() < a && (n.isDisabled = !0),
                            o.getMinDate() > a && (n.isDisabled = !0),
                            o._isRestrictedDate(a) && (n.isRestricted = !0,
                            n.isDisabled = !0),
                            !n.isDisabled && o._isDisabled(a) && (n.isDisabled = !0),
                            n.isDisabled ? !o.allowRestrictedDaysInRange && g(a) >= g(o.selection.from) && o.selection.to == o.selection.from && (h = !0) : g(a) >= g(o.selection.from) && g(a) <= g(o.selection.to) && (n.isSelected = !0)
                        }
                        o._applyCellStyle(n, l, d)
                    }),
                    "range" != o.selectionMode || 0 != o._clicks ? "range" != o.selectionMode && a != e && (o._raiseEvent(7, {
                        selectionType: t
                    }),
                    this.change && this.change(e)) : o._raiseEvent(7, {
                        selectionType: t
                    })
                }
            }
        },
        _getSelectedDate: function() {
            var e = i.data(this.element, "View" + this.element.id);
            if (null != e && null != e) {
                if ("month" != this.view)
                    return this.selectedDate;
                for (var t = 0; t < e.cells.length; t++) {
                    var r = e.cells[t]
                      , s = r.getDate();
                    if (r.isSelected)
                        return s
                }
                return this.selectedDate ? this.selectedDate : void 0
            }
        },
        _getSelectedCell: function() {
            var e = i.data(this.element, "View" + this.element.id);
            if (null != e && null != e)
                for (var t = 0; t < e.cells.length; t++) {
                    var r = e.cells[t];
                    if (r.getDate(),
                    r.isSelected)
                        return r
                }
        },
        _applyCellStyle: function(e, t, r) {
            var s = this;
            (null == r || null != r && 0 == r.length) && (r = t);
            var n = "";
            if (n = this.toThemeProperty("jqx-rc-all"),
            n += " " + this.toThemeProperty("jqx-item"),
            (this.disabled || e.isDisabled && !e.isRestricted) && (n += " " + this.toThemeProperty("jqx-calendar-cell-disabled"),
            n += " " + this.toThemeProperty("jqx-fill-state-disabled")),
            !this.disabled && e.isRestricted && (n += " " + this.toThemeProperty("jqx-calendar-cell-restrictedDate")),
            e.isOtherMonth && this.enableOtherMonthDays && e.isVisible && (n += " " + this.toThemeProperty("jqx-calendar-cell-othermonth")),
            e.isWeekend && this.enableWeekend && e.isVisible && e.isVisible && (n += " " + this.toThemeProperty("jqx-calendar-cell-weekend")),
            this.isMaterialized() && (n += " ripple"),
            e.isVisible ? (n += " " + this.toThemeProperty("jqx-calendar-cell"),
            "month" != this.view && r.length > 0 && -1 != r.html().toLowerCase().indexOf("span") && r.css("cursor", "default")) : n += " " + this.toThemeProperty("jqx-calendar-cell-hidden"),
            r.removeAttr("aria-selected"),
            e.isSelected && e.isVisible) {
                n += " " + this.toThemeProperty("jqx-calendar-cell-selected"),
                n += " " + this.toThemeProperty("jqx-fill-state-pressed"),
                r.attr("aria-selected", !0),
                this.host.removeAttr("aria-activedescendant").attr("aria-activedescendant", r[0].id);
                var o = e.getDate();
                this._isDisabled(o) && (n += " " + this.toThemeProperty("jqx-calendar-cell-selected-invalid"))
            }
            if (e.isHighlighted && e.isVisible && this.enableHover && (e.isDisabled || (n += " " + this.toThemeProperty("jqx-calendar-cell-hover"),
            n += " " + this.toThemeProperty("jqx-fill-state-hover"))),
            n += " " + this.toThemeProperty("jqx-calendar-cell-" + this.view),
            e.isToday && e.isVisible && (n += " " + this.toThemeProperty("jqx-calendar-cell-today")),
            r[0].className = n,
            this.specialDates.length > 0) {
                var a = this;
                i.each(this.specialDates, function() {
                    null != this.Class && null != this.Class && "" != this.Class ? r.removeClass(this.Class) : r.removeClass(s.toThemeProperty("jqx-calendar-cell-specialDate"));
                    var t = e.getDate();
                    if (t.getFullYear() == this.Date.getFullYear() && t.getMonth() == this.Date.getMonth() && t.getDate() == this.Date.getDate()) {
                        if (null == e.tooltip && null != this.Tooltip && (e.tooltip = this.Tooltip,
                        i(r).jqxTooltip)) {
                            var n = this.Class;
                            i(r).jqxTooltip({
                                value: {
                                    cell: e,
                                    specialDate: this.Date
                                },
                                name: a.element.id,
                                content: this.Tooltip,
                                position: "mouse",
                                theme: a.theme,
                                opening: function(e) {
                                    return !!r.hasClass(s.toThemeProperty("jqx-calendar-cell-specialDate")) || !!r.hasClass(n)
                                }
                            })
                        }
                        return r.removeClass(s.toThemeProperty("jqx-calendar-cell-othermonth")),
                        r.removeClass(s.toThemeProperty("jqx-calendar-cell-weekend")),
                        null == this.Class || "" == this.Class ? (r.addClass(s.toThemeProperty("jqx-calendar-cell-specialDate")),
                        !1) : (r.addClass(this.Class),
                        !1)
                    }
                })
            }
        },
        _applyCellStyles: function() {
            var e = i.data(this.element, "View" + this.element.id);
            if (null != e && null != e)
                for (var t = 0; t < e.cells.length; t++) {
                    var r = e.cells[t]
                      , s = i(r.element)
                      , n = s.find("#cellContent" + s[0].id);
                    0 == n.length && (n = s),
                    this._applyCellStyle(r, s, n)
                }
        },
        getWeekOfYear: function(e) {
            var t = new Date(e.dateTime);
            dowOffset = this.firstDayOfWeek;
            var i = new Date(t.getFullYear(),0,1)
              , r = i.getDay() - dowOffset;
            r = r >= 0 ? r : r + 7;
            var s, n = Math.floor((t.getTime() - i.getTime() - 6e4 * (t.getTimezoneOffset() - i.getTimezoneOffset())) / 864e5) + 1;
            return r < 4 ? (s = Math.floor((n + r - 1) / 7) + 1) > 52 && (nYear = new Date(t.getFullYear() + 1,0,1),
            nday = nYear.getDay() - dowOffset,
            nday = nday >= 0 ? nday : nday + 7,
            s = nday < 4 ? 1 : 53) : s = Math.floor((n + r - 1) / 7),
            s
        },
        renderColumnHeader: function(e) {
            if (this.showDayNames) {
                var t = i("<table role='grid' style='border-spacing: 0px; border-collapse: collapse; width: 100%; height: 100%;' cellspacing='0' cellpadding='1'><tr role='row'><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td><td role='gridcell'></td></tr></table>");
                t.find("table").addClass(this.toThemeProperty("jqx-reset")),
                t.find("tr").addClass(this.toThemeProperty("jqx-reset")),
                t.find("td").css({
                    background: "transparent",
                    padding: 1,
                    margin: 0,
                    border: "none"
                }),
                t.addClass(this.toThemeProperty("jqx-reset")),
                t.addClass(this.toThemeProperty("jqx-widget-content")),
                t.addClass(this.toThemeProperty("jqx-calendar-column-header")),
                this.columnHeader.append(t);
                var r = this.getVisibleDate()
                  , s = this.getFirstDayOfWeek(r)
                  , n = (s.dayOfWeek,
                this.getWeekOfYear(s),
                this.firstDayOfWeek)
                  , o = this.localization.calendar.days.names
                  , a = new Array
                  , l = s
                  , d = (e.width() - this.rowHeaderWidth - 2) / 7;
                this.showWeekNumbers || (d = (e.width() - 2) / 7);
                for (var h = 0; h < 7; h++) {
                    var c = o[n];
                    switch (this.rtl && (c = o[6 - n]),
                    this.dayNameFormat) {
                    case "default":
                        c = this.localization.calendar.days.namesAbbr[n],
                        this.rtl && (c = this.localization.calendar.days.namesAbbr[6 - n]);
                        break;
                    case "shortest":
                        c = this.localization.calendar.days.namesShort[n],
                        this.rtl && (c = this.localization.calendar.days.namesShort[6 - n]);
                        break;
                    case "firstTwoLetters":
                        c = c.substring(0, 2);
                        break;
                    case "firstLetter":
                        c = c.substring(0, 1)
                    }
                    var u = new i.jqx._jqxCalendar.cell(l.dateTime)
                      , p = h + 1 + this.element.id
                      , f = i(t[0].rows[0].cells[h])
                      , m = h;
                    this.enableTooltips && i(f).jqxTooltip && i(f).jqxTooltip({
                        name: this.element.id,
                        content: o[n],
                        theme: this.theme,
                        position: "mouse"
                    }),
                    n >= 6 ? n = 0 : n++,
                    h = m,
                    u.element = f,
                    u.row = 0,
                    u.column = h + 1;
                    var g = this._textwidth(c)
                      , v = "<div style='padding: 0; margin: 0; border: none; background: transparent;' id='columnCell" + p + "'>" + c + "</div>";
                    if (f.append(v),
                    f.find("#columnCell" + p).addClass(this.toThemeProperty("jqx-calendar-column-cell")),
                    f.width(d),
                    this.disabled && f.find("#columnCell" + p).addClass(this.toThemeProperty("jqx-calendar-column-cell-disabled")),
                    g > 0 && d > 0)
                        for (; g > f.width() && 0 != c.length; )
                            c = c.substring(0, c.length - 1),
                            i.jqx.utilities.html(f.find("#columnCell" + p), c),
                            g = this._textwidth(c);
                    a[h] = u,
                    l = new i.jqx._jqxDateTimeInput.getDateTime(new Date(l._addDays(1)))
                }
                parseInt(this.columnHeader.width()) > parseInt(this.month.width()) && this.columnHeader.width(this.month.width()),
                i.data(this.element, e[0].id).columnCells = a
            }
        },
        _format: function(e, t, r) {
            var s = !1;
            try {
                null != Globalize ? s = !0 : document.Globalize && (Globalize = document.Globalize,
                s = !0)
            } catch (e) {
                document.Globalize && (Globalize = document.Globalize,
                s = !0)
            }
            if (document.Globalize && (Globalize = document.Globalize,
            s = !0),
            i.global)
                return i.global.culture.calendar = this.localization.calendar,
                i.global.format(e, t, this.culture);
            if (s)
                try {
                    return Globalize.cultures[this.culture] ? (Globalize.cultures[this.culture].calendar = this.localization.calendar,
                    Globalize.format(e, t, this.culture)) : Globalize.format(e, t, this.culture)
                } catch (i) {
                    return Globalize.format(e, t)
                }
            else if (i.jqx.dataFormat)
                return i.jqx.dataFormat.formatdate(e, t, this.localization.calendar)
        },
        _textwidth: function(e) {
            var t = i("<span>" + e + "</span>");
            t.addClass(this.toThemeProperty("jqx-calendar-column-cell")),
            i(this.host).append(t);
            var r = t.width();
            return t.remove(),
            r
        },
        _textheight: function(e) {
            var t = i("<span>" + e + "</span>");
            i(this.host).append(t);
            var r = t.height();
            return t.remove(),
            r
        },
        _renderRowHeader: function(e) {
            var t = this.getVisibleDate()
              , r = this.getFirstDayOfWeek(t)
              , s = (r.dayOfWeek,
            this.getWeekOfYear(r))
              , n = new i.jqx._jqxDateTimeInput.getDateTime(new Date(r.dateTime));
            n._addDays(5),
            n.dayOfWeek = n.dateTime.getDay(),
            this.getWeekOfYear(n),
            53 == s && 0 == n.dateTime.getMonth() && (s = 1);
            var o = i("<table style='overflow: hidden; width: 100%; height: 100%;' cellspacing='0' cellpadding='1'><tr><td></td></tr><tr><td/></tr><tr><td/></tr><tr><td/></tr><tr><td/></tr><tr><td/></tr></table>");
            o.find("table").addClass(this.toThemeProperty("jqx-reset")),
            o.find("td").addClass(this.toThemeProperty("jqx-reset")),
            o.find("tr").addClass(this.toThemeProperty("jqx-reset")),
            o.addClass(this.toThemeProperty("jqx-calendar-row-header")),
            o.width(this.rowHeaderWidth),
            this.rowHeader.append(o);
            for (var a = r, l = new Array, d = 0; d < 6; d++) {
                var h = s.toString()
                  , c = new i.jqx._jqxCalendar.cell(a.dateTime)
                  , u = d + 1 + this.element.id
                  , p = i(o[0].rows[d].cells[0]);
                c.element = p,
                c.row = d,
                c.column = 0;
                var f = "<div style='background: transparent; border: none; padding: 0; margin: 0;' id ='headerCellContent" + u + "'>" + h + "</div>";
                p.append(f),
                p.find("#headerCellContent" + u).addClass(this.toThemeProperty("jqx-calendar-row-cell")),
                l[d] = c,
                a = new i.jqx._jqxDateTimeInput.getDateTime(new Date(a._addWeeks(1))),
                s = this.getWeekOfYear(a)
            }
            i.data(this.element, e[0].id).rowCells = l
        },
        getFirstDayOfWeek: function(e) {
            var t = e;
            (this.firstDayOfWeek < 0 || this.firstDayOfWeek > 6) && (this.firstDayOfWeek = 6);
            var r = t.dayOfWeek - this.firstDayOfWeek;
            return r <= 0 && (r += 7),
            i.jqx._jqxDateTimeInput.getDateTime(t._addDays(-r))
        },
        getVisibleDate: function() {
            var e = new i.jqx._jqxDateTimeInput.getDateTime(new Date(this.value.dateTime));
            e < this.minDate && (e = this.minDate),
            e > this.maxDate && (this.visibleDate = this.maxDate),
            e.dateTime.setHours(0);
            var t = e.day
              , r = i.jqx._jqxDateTimeInput.getDateTime(e._addDays(1 - t));
            return e = r
        },
        destroy: function(e) {
            i.jqx.utilities.resize(this.host, null, !0),
            this.host.removeClass(),
            0 != e && this.host.remove()
        },
        _raiseEvent: function(e, t) {
            null == t && (t = {
                owner: null
            });
            var r = this.events[e]
              , s = t || {};
            s.owner = this;
            var n = new i.Event(r);
            if (n.owner = this,
            n.args = s,
            0 == e || 1 == e || 2 == e || 3 == e || 4 == e || 5 == e || 6 == e || 7 == e || 8 == e) {
                n.args.date = n.args.selectedDate = this.getDate(),
                n.args.range = this.getRange();
                var o = this.getViewStart()
                  , a = this.getViewEnd();
                n.args.view = {
                    from: o,
                    to: a
                }
            }
            if (7 == e) {
                var l = s.selectionType;
                l || (l = null),
                "key" == l && (l = "keyboard"),
                "none" == l && (l = null),
                s.type = l
            }
            var d = this.host.trigger(n);
            return 0 != e && 1 != e || (d = !1),
            d
        },
        propertyMap: function(e) {
            return "value" == e ? "range" != this.selectionMode ? this.getDate() : this.getRange() : null
        },
        _setSize: function() {
            var e = this.host.find("#View" + this.element.id);
            if (e.length > 0) {
                this.setCalendarSize(),
                e[0].style.height = "100%",
                e[0].style.width = "100%";
                var t = this.month.height() - this.titleHeight - this.columnHeaderHeight
                  , i = "View" + this.element.id;
                e.find("#cellsTable" + i).height(t),
                e.find("#calendarRowHeader" + i).height(t),
                this.refreshControl()
            }
        },
        resize: function() {
            this._setSize()
        },
        clear: function() {
            "range" == this.selectionMode ? (this._clicks = 1,
            this.setRange(null, null),
            this._raiseEvent(7)) : this.setDate(null, "mouse"),
            this._clicks = 0,
            this.selection = {
                from: null,
                to: null
            }
        },
        today: function() {
            "range" == this.selectionMode ? this.setRange(new Date, new Date) : this.setDate(new Date, "mouse")
        },
        propertiesChangedHandler: function(e, t, i) {
            i.width && i.height && 2 == Object.keys(i).length && e._setSize()
        },
        propertyChangedHandler: function(e, t, r, s) {
            if (null != this.isInitialized && 0 != this.isInitialized && !(e.batchUpdate && e.batchUpdate.width && e.batchUpdate.height && 2 == Object.keys(e.batchUpdate).length) && "enableHover" != t && "keyboardNavigation" != t) {
                if ("localization" == t && this.localization && (this.localization.backString && (this.backText = this.localization.backString),
                this.localization.forwardString && (this.forwardText = this.localization.forwardString),
                this.localization.todayString && (this.todayString = this.localization.todayString),
                this.localization.clearString && (this.clearString = this.localization.clearString),
                this.firstDayOfWeek = this.localization.calendar.firstDay),
                "culture" == t)
                    try {
                        if (i.global)
                            i.global.preferCulture(e.culture),
                            e.localization.calendar = i.global.culture.calendar;
                        else if (Globalize) {
                            var n = Globalize.culture(e.culture);
                            e.localization.calendar = n.calendar
                        }
                        e.localization.calendar && null != e.localization.calendar.firstDay && "default" != e.culture && (e.firstDayOfWeek = e.localization.calendar.firstDay)
                    } catch (e) {}
                if ("views" == t)
                    return -1 == e.views.indexOf("month") && (e.view = "year"),
                    -1 == e.views.indexOf("year") && -1 == e.views.indexOf("month") && (e.view = "decade"),
                    void e.render();
                "showFooter" == t && e.render(),
                "width" != t && "height" != t ? ("theme" == t ? i.jqx.utilities.setTheme(r, s, e.host) : "rowHeaderWidth" == t || "showWeekNumbers" == t ? e.render() : (e.view = "month",
                e.render(),
                e.refreshControl()),
                "firstDayOfWeek" === t && e.refreshControl()) : e._setSize()
            }
        }
    }),
    function(e) {
        e.jqx._jqxCalendar.cell = function(t) {
            return {
                dateTime: new e.jqx._jqxDateTimeInput.getDateTime(t),
                _date: t,
                getDate: function() {
                    return this._date
                },
                setDate: function(t) {
                    this.dateTime = new e.jqx._jqxDateTimeInput.getDateTime(t),
                    this._date = t
                },
                isToday: !1,
                isWeekend: !1,
                isOtherMonth: !1,
                isVisible: !0,
                isSelected: !1,
                isHighlighted: !1,
                element: null,
                row: -1,
                column: -1,
                tooltip: null
            }
        }
        ,
        e.jqx._jqxCalendar.monthView = function(e, t, i, r, s, n) {
            return {
                start: e,
                end: t,
                cells: i,
                rowCells: r,
                columnCells: s,
                element: n
            }
        }
    }(jqxBaseFramework)
}
, function(e, t) {
    var r;
    (r = jqxBaseFramework).jqx.jqxWidget("jqxDateTimeInput", "", {}),
    r.extend(r.jqx._jqxDateTimeInput.prototype, {
        defineInstance: function() {
            var e = {
                value: r.jqx._jqxDateTimeInput.getDateTime(new Date),
                minDate: r.jqx._jqxDateTimeInput.getDateTime(new Date),
                maxDate: r.jqx._jqxDateTimeInput.getDateTime(new Date),
                min: new Date(1900,0,1),
                max: new Date(2100,0,1),
                rowHeaderWidth: 25,
                enableViews: !0,
                views: ["month", "year", "decade"],
                selectableDays: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                change: null,
                changing: null,
                titleFormat: ["MMMM yyyy", "yyyy", "yyyy", "yyyy"],
                template: "default",
                columnHeaderHeight: 20,
                titleHeight: 30,
                firstDayOfWeek: 0,
                showWeekNumbers: !1,
                showTimeButton: !1,
                cookies: !1,
                cookieoptions: null,
                showFooter: !1,
                formatString: "dd/MM/yyyy",
                width: 200,
                height: 25,
                dayNameFormat: "firstTwoLetters",
                textAlign: "left",
                readonly: !1,
                culture: "default",
                activeEditor: null,
                showCalendarButton: !0,
                openDelay: 250,
                closeDelay: 300,
                closeCalendarAfterSelection: !0,
                isEditing: !1,
                enableBrowserBoundsDetection: !1,
                dropDownHorizontalAlignment: "left",
                dropDownVerticalAlignment: "bottom",
                enableAbsoluteSelection: !1,
                disabled: !1,
                buttonSize: 21,
                animationType: "slide",
                dropDownWidth: "200px",
                restrictedDates: new Array,
                dropDownHeight: "205px",
                dropDownContainer: "default",
                selectionMode: "default",
                renderMode: "full",
                rtl: !1,
                timeRange: null,
                _editor: !1,
                todayString: "Today",
                clearString: "Clear",
                popupZIndex: 2e3,
                allowNullDate: !0,
                changeType: null,
                placeHolder: "",
                enableHover: !0,
                hint: !0,
                allowKeyboardDelete: !0,
                localization: {
                    backString: "Back",
                    forwardString: "Forward",
                    todayString: "Today",
                    clearString: "Clear",
                    calendar: {
                        name: "Gregorian_USEnglish",
                        "/": "/",
                        ":": ":",
                        firstDay: 0,
                        days: {
                            names: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                            namesAbbr: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                            namesShort: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"]
                        },
                        months: {
                            names: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", ""],
                            namesAbbr: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", ""]
                        },
                        AM: ["AM", "am", "AM"],
                        PM: ["PM", "pm", "PM"],
                        eras: [{
                            name: "A.D.",
                            start: null,
                            offset: 0
                        }],
                        twoDigitYearMax: 2029,
                        patterns: {
                            d: "M/d/yyyy",
                            D: "dddd, MMMM dd, yyyy",
                            t: "h:mm tt",
                            T: "h:mm:ss tt",
                            f: "dddd, MMMM dd, yyyy h:mm tt",
                            F: "dddd, MMMM dd, yyyy h:mm:ss tt",
                            M: "MMMM dd",
                            Y: "yyyy MMMM",
                            S: "yyyy'-'MM'-'dd'T'HH':'mm':'ss",
                            ISO: "yyyy-MM-dd hh:mm:ss"
                        }
                    }
                },
                events: ["valueChanged", "textchanged", "mousedown", "mouseup", "keydown", "keyup", "keypress", "open", "close", "change"],
                aria: {
                    "aria-valuenow": {
                        name: "getDate",
                        type: "date"
                    },
                    "aria-valuetext": {
                        name: "getText",
                        type: "string"
                    },
                    "aria-valuemin": {
                        name: "min",
                        type: "date"
                    },
                    "aria-valuemax": {
                        name: "max",
                        type: "date"
                    },
                    "aria-disabled": {
                        name: "disabled",
                        type: "boolean"
                    }
                }
            };
            return this === r.jqx._jqxDateTimeInput.prototype ? e : (r.extend(!0, this, e),
            this.value._setHours(0),
            this.value._setMinutes(0),
            this.value._setSeconds(0),
            this.value._setMilliseconds(0),
            this.minDate._setYear(1900),
            this.minDate._setMonth(1),
            this.minDate._setDay(1),
            this.minDate._setHours(1),
            this.minDate._setMinutes(1),
            this.minDate._setSeconds(1),
            this.minDate._setMilliseconds(1),
            this.maxDate._setYear(2100),
            this.maxDate._setMonth(1),
            this.maxDate._setDay(1),
            this.maxDate._setHours(1),
            this.maxDate._setMinutes(1),
            this.maxDate._setSeconds(1),
            this.maxDate._setMilliseconds(1),
            this.defaultMinDate = this.minDate,
            this.defaultMaxDate = this.maxDate,
            e)
        },
        createInstance: function(e) {
            var t = ""
              , i = this;
            if (!i.host.jqxCalendar)
                throw new Error("jqxDateTimeInput: Missing reference to jqxcalendar.js.");
            if ("dd/MM/yyyy" != i.formatString) {
                var s = i.formatString.split(" ");
                if (s && s.length > 1) {
                    for (var n = "", o = 0; o < s.length; o++)
                        "1" == s[o].length ? n += i._getFormatValue(s[o]) : n += s[o],
                        o < s.length - 1 && (n += " ");
                    i.formatString = n
                }
            }
            if ("input" == i.element.nodeName.toLowerCase()) {
                var a = i.element.getAttribute("type");
                if (a && "dd/MM/yyyy" == i.formatString) {
                    if ("date" == a && (i.formatString = "d"),
                    "datetime" == a) {
                        var l = i._getFormatValue("d") + " " + i._getFormatValue("t");
                        i.formatString = l,
                        i.showTimeButton = !0
                    }
                    "time" == a && (i.formatString = "t",
                    i.showTimeButton = !0,
                    i.showCalendarButton = !1)
                }
                if (i.field = i.element,
                i.field.getAttribute("min")) {
                    var d = new Date(i.field.getAttribute("min"));
                    i._isValidDate(d) && (i.min = d)
                }
                if (i.field.getAttribute("max")) {
                    var h = new Date(i.field.getAttribute("max"));
                    i._isValidDate(h) && (i.max = h)
                }
                i.field.className && (i._className = i.field.className);
                var c = {
                    title: i.field.title
                };
                i.field.value && (c.value = i.field.value),
                i.field.id.length ? c.id = i.field.id.replace(/[^\w]/g, "_") + "_jqxDateTimeInput" : c.id = r.jqx.utilities.createId() + "_jqxDateTimeInput";
                var u = r("<div></div>", c);
                u[0].style.cssText = i.field.style.cssText,
                i.width || (i.width = r(i.field).width()),
                i.height || (i.height = r(i.field).outerHeight()),
                r(i.field).hide().after(u);
                var p = i.host.data();
                if (i.host = u,
                i.host.data(p),
                i.element = u[0],
                i.element.id = i.field.id,
                i.field.id = c.id,
                i._className && (i.host.addClass(i._className),
                r(i.field).removeClass(i._className)),
                i.field.tabIndex) {
                    var f = i.field.tabIndex;
                    i.field.tabIndex = -1,
                    i.element.tabIndex = f
                }
            }
            if (i.host.attr("value")) {
                t = !0;
                var m, g = i.host.attr("value");
                "range" != i.selectionMode && (null == (m = new Date(g)) || isNaN(m) || (i.value = r.jqx._jqxDateTimeInput.getDateTime(m)))
            }
            if (null != i.value && i.value instanceof Date ? i.value = r.jqx._jqxDateTimeInput.getDateTime(i.value) : null != i.value && "string" == typeof i.value && (null == (m = new Date(i.value)) || isNaN(m) ? i.value.indexOf(",") >= 0 && (i.value = i.value.replace(/\,/g, "/"),
            null == (m = new Date(i.value)) || isNaN(m) || (i.value = r.jqx._jqxDateTimeInput.getDateTime(m))) : i.value = r.jqx._jqxDateTimeInput.getDateTime(m)),
            this._initTimeRange(),
            this._validateTimeRange(),
            i.host.attr("data-role", "input"),
            i.render(),
            r.jqx.aria(this),
            null != i.getDate() ? r.jqx.aria(this, "aria-label", "Current focused date is " + i.getDate().toLocaleString()) : r.jqx.aria(this, "aria-label", "Current focused date is Null"),
            i.minDate !== i.defaultMinDate && (i.min = i.minDate),
            i.maxDate !== i.defaultMaxDate && (i.max = i.maxDate),
            i.setMaxDate(i.max, !1),
            i.setMinDate(i.min, !1),
            "range" !== i.selectionMode && i.value && i.value.dateTime && i.min && i.max && (i.value.dateTime < i.min || i.value.dateTime > i.max) && (i.value.dateTime < i.min && (i.value.dateTime = i.min),
            i.value.dateTime > i.max && (i.value.dateTime = i.max),
            i._updateText()),
            "range" == i.selectionMode)
                if (t) {
                    var v = (g = i.host.attr("value")).substring(0, g.indexOf("-"))
                      , w = g.substring(g.indexOf("-") + 1)
                      , x = new Date(v)
                      , b = new Date(w);
                    null == x || isNaN(x) || null == b || isNaN(b) || i.setRange(x, b)
                } else
                    null != i.getDate() && i.setRange(i.getDate(), i.getDate())
        },
        _validateTimeRange: function() {
            if (this.timeRange) {
                var e = this.value.dateTime.getHours()
                  , t = this.value.dateTime.getMinutes();
                e <= this.timeRange.minHour && (this.value._setHours(this.timeRange.minHour),
                t < this.timeRange.minMinute ? (this.value._setMinutes(this.timeRange.minMinute),
                this._updateEditorsValue()) : this._updateEditorsValue()),
                e >= this.timeRange.maxHour && (this.value._setHours(this.timeRange.maxHour),
                t > this.timeRange.maxMinute ? (this.value._setMinutes(this.timeRange.maxMinute),
                this._updateEditorsValue()) : this._updateEditorsValue())
            }
        },
        _initTimeRange: function() {
            if (this.timeRange) {
                if (this.timeRange.min) {
                    var e = null;
                    (this.timeRange.min.indexOf("AM") >= 0 || this.timeRange.min.indexOf("PM") >= 0) && (e = this.timeRange.min.indexOf("AM") >= 0 ? "AM" : "PM");
                    var t = this.timeRange.min.split(":")
                      , i = parseInt(t[0])
                      , r = parseInt(t[1]);
                    e && (this.timeRange.minDefaultHour = i,
                    this.timeRange.minMeridian = e),
                    e && "PM" == e && (i += 12),
                    this.timeRange.minHour = i,
                    this.timeRange.minMinute = r
                }
                if (this.timeRange.max) {
                    e = null,
                    (this.timeRange.max.indexOf("AM") >= 0 || this.timeRange.max.indexOf("PM") >= 0) && (e = this.timeRange.max.indexOf("AM") >= 0 ? "AM" : "PM");
                    var s = this.timeRange.max.split(":");
                    i = parseInt(s[0]),
                    r = parseInt(s[1]),
                    e && (this.timeRange.maxDefaultHour = i,
                    this.timeRange.maxMeridian = e),
                    e && "PM" == e && (i += 12),
                    this.timeRange.maxHour = i,
                    this.timeRange.maxMinute = r
                }
            }
        },
        _format: function(e, t, i) {
            var s = !1;
            try {
                null != Globalize && (s = !0),
                document.Globalize && (Globalize = document.Globalize,
                s = !0)
            } catch (e) {
                document.Globalize && (Globalize = document.Globalize,
                s = !0)
            }
            if (document.Globalize && (Globalize = document.Globalize,
            s = !0),
            r.global)
                return r.global.format(e, t, this.culture);
            if (!s) {
                if (r.jqx.dataFormat)
                    return e instanceof Date ? r.jqx.dataFormat.formatdate(e, t, this.localization.calendar) : "number" == typeof e ? r.jqx.dataFormat.formatnumber(e, t, this.localization.calendar) : r.jqx.dataFormat.formatdate(e, t, this.localization.calendar);
                throw new Error("jqxDateTimeInput: Missing reference to globalize.js.")
            }
            try {
                return t = Globalize.format(e, t, this.culture)
            } catch (i) {
                return Globalize.format(e, t)
            }
        },
        render: function() {
            var e = this;
            e._removeHandlers(),
            e.element.innerHTML = "",
            e.host.attr({
                role: "textbox"
            }),
            e.id = r.jqx.utilities.createId(),
            r.jqx.utilities.createId(),
            r.jqx.utilities.createId(),
            e._setSize(),
            null == e.width && (e.width = e.host.width(),
            e.host.width(e.width)),
            e.touch = r.jqx.mobile.isTouchDevice();
            var t = r("<div class='jqx-max-size jqx-position-relative'></div>").appendTo(e.host);
            e.dateTimeInput = r("<input style='border: none; padding-left: 3px; padding-right: 3px;' class='jqx-position-absolute' id='input" + e.element.id + "' autocomplete='off' type='textarea'/>").appendTo(t),
            e.dateTimeInput.addClass(e.toThemeProperty("jqx-reset")),
            e.dateTimeInput.addClass(e.toThemeProperty("jqx-clear")),
            e.dateTimeInput.addClass(e.toThemeProperty("jqx-input-content")),
            e.dateTimeInput.addClass(e.toThemeProperty("jqx-widget-content")),
            e.dateTimeInput.addClass(e.toThemeProperty("jqx-rc-all")),
            e.isMaterialized() || e.dateTimeInput.attr("placeHolder", e.placeHolder),
            "full" != e.renderMode && e.dateTimeInput.remove();
            var i = e.host.attr("name");
            i && e.dateTimeInput.attr("name", i),
            e.host.attr("tabindex") && (e.dateTimeInput.attr("tabindex", e.host.attr("tabindex")),
            e.host.removeAttr("tabindex")),
            e.rtl && (e.dateTimeInput.css("direction", "rtl"),
            e.dateTimeInput.addClass("jqx-rtl")),
            e.calendarButton = r("<div style='height: 100%;' class='jqx-position-absolute'><div></div></div>").appendTo(t),
            e.rtl ? e.calendarButton.addClass(e.toThemeProperty("jqx-action-button-rtl")) : e.calendarButton.addClass(e.toThemeProperty("jqx-action-button")),
            e.calendarButtonIcon = r(e.calendarButton.children()[0]),
            e.calendarButtonIcon.addClass(e.toThemeProperty("jqx-icon")),
            e.calendarButtonIcon.addClass(e.toThemeProperty("jqx-icon-calendar")),
            e.calendarButton.addClass(e.toThemeProperty("jqx-fill-state-normal")),
            e.rtl ? e.calendarButton.addClass(e.toThemeProperty("jqx-rc-l")) : e.showTimeButton || e.calendarButton.addClass(e.toThemeProperty("jqx-rc-r")),
            e.timeButton = r("<div style='height: 100%;' class='jqx-position-absolute'><div></div></div>").appendTo(t),
            e.rtl ? e.timeButton.addClass(e.toThemeProperty("jqx-action-button-rtl")) : e.timeButton.addClass(e.toThemeProperty("jqx-action-button")),
            e.timeButtonIcon = r(e.timeButton.children()[0]),
            e.timeButtonIcon.addClass(e.toThemeProperty("jqx-icon")),
            e.timeButtonIcon.addClass(e.toThemeProperty("jqx-icon-time")),
            e.timeButton.addClass(e.toThemeProperty("jqx-fill-state-normal")),
            e.rtl ? e.timeButton.addClass(e.toThemeProperty("jqx-rc-l")) : e.timeButton.addClass(e.toThemeProperty("jqx-rc-r"));
            var s = this;
            if (e._arrange(),
            null != r.jqx._jqxCalendar && null != r.jqx._jqxCalendar)
                try {
                    var n = "calendar" + e.id
                      , o = r(r.find("#" + n));
                    o.length > 0 && o.remove(),
                    r.jqx.aria(this, "aria-owns", n),
                    r.jqx.aria(this, "aria-haspopup", !0),
                    r.jqx.aria(this, "aria-readonly", "range" == e.selectionMode);
                    var a = r("<div style='overflow: hidden; background: transparent; position: absolute;' id='calendar" + e.id + "'><div id='innerCalendar" + e.id + "'></div><div id='innerTime" + e.id + "'></div></div>");
                    "opera" == r.jqx.utilities.getBrowser().browser && a.hide(),
                    "element" == e.dropDownContainer ? a.appendTo(e.host) : a.appendTo(document.body),
                    e.container = a,
                    e.calendarContainer = r(r.find("#innerCalendar" + e.id)).jqxCalendar({
                        titleFormat: this.titleFormat,
                        restrictedDates: this.restrictedDates,
                        changing: e.changing,
                        change: e.change,
                        enableViews: e.enableViews,
                        selectableDays: e.selectableDays,
                        views: e.views,
                        rowHeaderWidth: e.rowHeaderWidth,
                        titleHeight: e.titleHeight,
                        columnHeaderHeight: e.columnHeaderHeight,
                        _checkForHiddenParent: !1,
                        enableAutoNavigation: !1,
                        canRender: !1,
                        localization: e.localization,
                        todayString: e.todayString,
                        clearString: e.clearString,
                        dayNameFormat: e.dayNameFormat,
                        rtl: e.rtl,
                        culture: e.culture,
                        showFooter: e.showFooter,
                        selectionMode: e.selectionMode,
                        firstDayOfWeek: e.firstDayOfWeek,
                        showWeekNumbers: e.showWeekNumbers,
                        width: e.dropDownWidth,
                        height: e.dropDownHeight,
                        theme: e.theme
                    }),
                    "element" == e.dropDownContainer ? e.calendarContainer.css({
                        position: "absolute",
                        top: 0,
                        left: 0
                    }) : e.calendarContainer.css({
                        position: "absolute",
                        zIndex: e.popupZIndex,
                        top: 0,
                        left: 0
                    }),
                    e.calendarContainer.addClass(e.toThemeProperty("jqx-popup")),
                    r.jqx.browser.msie && e.calendarContainer.addClass(e.toThemeProperty("jqx-noshadow")),
                    e.timeContainer = r(r.find("#innerTime" + e.id)),
                    e.timeContainer.css({
                        position: "absolute",
                        zIndex: e.popupZIndex,
                        top: 0,
                        left: 0
                    }),
                    e.timeContainer.addClass(e.toThemeProperty("jqx-popup")),
                    r.jqx.browser.msie && e.timeContainer.addClass(e.toThemeProperty("jqx-noshadow")),
                    e._calendar = r.data(e.calendarContainer[0], "jqxCalendar").instance,
                    s = this,
                    e._calendar.today = function() {
                        s.today()
                    }
                    ,
                    e._calendar.clear = function() {
                        s.clear()
                    }
                    ,
                    "opera" == r.jqx.utilities.getBrowser().browser && a.show(),
                    a.height(parseInt(e.calendarContainer.height()) + 25),
                    a.width(parseInt(e.calendarContainer.width()) + 25),
                    "range" == e.selectionMode && (e.readonly = !0),
                    "none" == e.animationType ? e.container.css("display", "none") : e.container.hide()
                } catch (e) {}
            if (r.global && r.global.preferCulture(e.culture),
            e.selectedText = "",
            e._addHandlers(),
            e.self = this,
            e.oldValue = e.getDate(),
            e.items = new Array,
            e.editors = new Array,
            e._loadItems(),
            e.editorText = "",
            1 == e.readonly && e.dateTimeInput.css("readonly", e.readonly),
            e.dateTimeInput.css("text-align", e.textAlign),
            e.host.addClass(e.toThemeProperty("jqx-widget")),
            e.host.addClass(e.toThemeProperty("jqx-datetimeinput")),
            e.host.addClass(e.toThemeProperty("jqx-input")),
            e.host.addClass(e.toThemeProperty("jqx-overflow-hidden")),
            e.host.addClass(e.toThemeProperty("jqx-rc-all")),
            e.host.addClass(e.toThemeProperty("jqx-reset")),
            e.host.addClass(e.toThemeProperty("jqx-clear")),
            e.host.addClass(e.toThemeProperty("jqx-widget-content")),
            e.propertyChangeMap.disabled = function(e, t, i, n) {
                n ? (e.host.addClass(s.toThemeProperty("jqx-input-disabled")),
                e.host.addClass(s.toThemeProperty("jqx-fill-state-disabled"))) : (e.host.removeClass(s.toThemeProperty("jqx-fill-state-disabled")),
                e.host.removeClass(s.toThemeProperty("jqx-input-disabled"))),
                r.jqx.aria(e, "aria-disabled", n)
            }
            ,
            e.disabled && (e.host.addClass(e.toThemeProperty("jqx-input-disabled")),
            e.host.addClass(e.toThemeProperty("jqx-fill-state-disabled")),
            e.dateTimeInput.attr("disabled", !0)),
            e.host.parents("form").length > 0 && e.addHandler(e.host.parents("form"), "reset", function() {
                setTimeout(function() {
                    s.setDate(new Date)
                }, 10)
            }),
            e.cookies) {
                var l = r.jqx.cookie.cookie("jqxDateTimeInput" + e.element.id);
                null != l && e.setDate(new Date(l))
            }
            if (r.jqx.browser.msie && r.jqx.browser.version < 8 && e.host.parents(".jqx-window").length > 0) {
                var d = e.host.parents(".jqx-window").css("z-index");
                e.container.css("z-index", d + 10),
                e.calendarContainer.css("z-index", d + 10)
            }
            "default" != e.culture && e._applyCulture(),
            e.value && (e.calendarContainer.jqxCalendar("_isDisabled", e.value.dateTime) ? e.dateTimeInput.addClass(e.toThemeProperty("jqx-input-invalid")) : e.dateTimeInput.removeClass(e.toThemeProperty("jqx-input-invalid"))),
            this._addBarAndLabel(this.dateTimeInput),
            this._updateHint(!0),
            e.template && (e.bar.addClass(e.toThemeProperty("jqx-" + e.template)),
            e.label.addClass(e.toThemeProperty("jqx-" + e.template)),
            e.timeButton.addClass(e.toThemeProperty("jqx-" + e.template)),
            e.calendarButton.addClass(e.toThemeProperty("jqx-" + e.template))),
            this._setSize(),
            this._arrange()
        },
        val: function(e) {
            var t = this;
            if (0 != arguments.length) {
                if (null == e && t.setDate(null),
                "range" == t.selectionMode)
                    return t.setRange(arguments[0], arguments[1]),
                    t.getText();
                if (e instanceof Date && t.setDate(e),
                "string" == typeof e) {
                    if ("date" == e)
                        return t.getDate();
                    t.setDate(e)
                }
                t._calendar.getDate() != t.getDate() && t._calendar.setDate(t.getDate())
            }
            return t.getText()
        },
        _setSize: function() {
            var e = window.getComputedStyle(this.element)
              , t = 2 * parseInt(e.borderLeftWidth)
              , i = e.boxSizing;
            0 === this.element.offsetWidth && (t = 2),
            ("border-box" === i || isNaN(t)) && (t = 0),
            null != this.width && -1 != this.width.toString().indexOf("px") ? this.element.style.width = parseInt(this.width) - t + "px" : null == this.width || isNaN(this.width) || (this.element.style.width = parseInt(this.width) - t + "px"),
            null != this.height && -1 != this.height.toString().indexOf("px") ? this.element.style.height = parseInt(this.height) - t + "px" : null == this.height || isNaN(this.height) || (this.element.style.height = parseInt(this.height) - t + "px");
            var s = !1;
            null != this.width && -1 != this.width.toString().indexOf("%") && (s = !0,
            this.host.width(this.width),
            t > 0 && this.host.css("box-sizing", "border-box")),
            null != this.height && -1 != this.height.toString().indexOf("%") && (s = !0,
            this.host.height(this.height));
            var n = this;
            if (s && this.calendarContainer) {
                this._arrange();
                var o = this.host.width();
                "auto" != this.dropDownWidth && (o = this.dropDownWidth),
                this.calendarContainer.jqxCalendar({
                    width: o
                }),
                this.container.width(parseInt(o) + 25)
            }
            r.jqx.utilities.resize(this.host, function() {
                n.calendarContainer && n._arrange()
            })
        },
        _arrange: function() {
            null == this.height && (this.height = 27,
            this.host.height(27));
            var e = parseInt(this.host.width())
              , t = parseInt(this.host.height())
              , i = window.getComputedStyle(this.element)
              , s = 2 * parseInt(i.borderLeftWidth);
            ("border-box" === i.boxSizing || isNaN(s)) && (s = 0);
            var n = this.buttonSize
              , o = 2;
            this.showCalendarButton || this.showTimeButton || (n = 0,
            buttonHeight = 0,
            this.calendarButton.hide(),
            o = 0),
            this.showCalendarButton ? this.calendarButton.show() : this.calendarButton.hide(),
            this.showTimeButton ? this.timeButton.show() : this.timeButton.hide();
            var a = e - n - 1 * o;
            this.showTimeButton && this.showCalendarButton ? a = e - 2 * n - 1 * o : (this.showTimeButton || this.showCalendarButton) && (a = e - n - 1 * o),
            a > 0 && (this.dateTimeInput[0].style.width = a + "px"),
            this.rtl && (this.dateTimeInput[0].style.width = -1 + a + "px"),
            this.dateTimeInput[0].style.left = "0px",
            this.dateTimeInput[0].style.top = "0px",
            this.calendarButton[0].style.width = n + 1 + "px",
            this.calendarButton[0].style.left = 1 + a + "px",
            this.timeButton[0].style.width = n + 1 + "px",
            this.showCalendarButton ? this.timeButton[0].style.left = 1 + this.calendarButton.width() + a + "px" : this.timeButton[0].style.left = 1 + a + "px",
            "full" != this.renderMode && (this.calendarButton[0].style.width = "100%",
            this.calendarButton[0].style.left = "0px",
            this.calendarButton.css("border", "none"),
            this.timeButton[0].style.width = "100%",
            this.timeButton[0].style.left = "0px",
            this.timeButton.css("border", "none"));
            var l = this.dateTimeInput.height();
            if (0 == l && "full" != this.renderMode ? (l = parseInt(this.dateTimeInput.css("font-size")) + 3,
            this.calendarButton.addClass(this.toThemeProperty("jqx-rc-all")),
            this.timeButton.addClass(this.toThemeProperty("jqx-rc-all"))) : l = 17,
            -1 == this.dateTimeInput[0].className.indexOf("jqx-rc-all") && this.dateTimeInput.addClass(this.toThemeProperty("jqx-rc-all")),
            (h = parseInt(t) / 2 - parseInt(l) / 2) > 0) {
                var d = this.dateTimeInput.css("font-size");
                "" == d && (d = 13);
                var h = t - 2 - parseInt(d) - 2;
                isNaN(h) && (h = 0),
                h < 0 && (h = 0);
                var c = h / 2;
                r.jqx.browser.msie && r.jqx.browser.version < 8 && (c = h / 4),
                this.dateTimeInput[0].style.paddingTop = Math.round(c) + "px",
                this.dateTimeInput[0].style.paddingBottom = Math.round(c) + "px"
            }
            this.rtl && (this.calendarButton[0].style.width = n + "px",
            this.timeButton[0].style.width = n + "px",
            this.calendarButton.css("left", "0px"),
            this.showCalendarButton ? this.timeButton.css("left", n + "px") : this.timeButton.css("left", "0px"),
            this.dateTimeInput.css("left", this.calendarButton.width()),
            this.showTimeButton && this.showCalendarButton && this.dateTimeInput.css("left", this.timeButton.width() + this.calendarButton.width()),
            r.jqx.browser.msie && r.jqx.browser.version <= 8 && (this.dateTimeInput.css("left", 1 + this.calendarButton.width()),
            this.showTimeButton && this.showCalendarButton && this.dateTimeInput.css("left", 1 + this.timeButton.width() + this.calendarButton.width())))
        },
        _removeHandlers: function() {
            this.removeHandler(r(document), "mousedown." + this.id),
            this.dateTimeInput && (this.removeHandler(this.dateTimeInput, "keydown." + this.id),
            this.removeHandler(this.dateTimeInput, "blur"),
            this.removeHandler(this.dateTimeInput, "focus"),
            this.removeHandler(this.host, "focus"),
            this.removeHandler(this.dateTimeInput, "mousedown"),
            this.removeHandler(this.dateTimeInput, "mouseup"),
            this.removeHandler(this.dateTimeInput, "keydown"),
            this.removeHandler(this.dateTimeInput, "keyup"),
            this.removeHandler(this.dateTimeInput, "keypress")),
            null != this.calendarButton && this.removeHandler(this.calendarButton, "mousedown"),
            null != this.timeButton && this.removeHandler(this.timeButton, "mousedown"),
            null != this.calendarContainer && (this.removeHandler(this.calendarContainer, "cellSelected"),
            this.removeHandler(this.calendarContainer, "cellMouseDown")),
            this.removeHandler(r(window), "resize." + this.id)
        },
        isOpened: function() {
            var e = r.data(document.body, "openedJQXCalendar" + this.id);
            return null != e && e == this.calendarContainer
        },
        wheel: function(e, t) {
            if (t.isEditing) {
                t.changeType = "mouse";
                var i = 0;
                if (e || (e = window.event),
                e.originalEvent && e.originalEvent.wheelDelta && (e.wheelDelta = e.originalEvent.wheelDelta),
                e.wheelDelta ? i = e.wheelDelta / 120 : e.detail && (i = -e.detail / 3),
                i) {
                    var r = t._handleDelta(i);
                    return !r && (e.preventDefault && e.preventDefault(),
                    e.returnValue = !1,
                    r)
                }
                e.preventDefault && e.preventDefault(),
                e.returnValue = !1
            }
        },
        _handleDelta: function(e) {
            return e < 0 ? this.spinDown() : this.spinUp(),
            !1
        },
        focus: function() {
            try {
                var e = this;
                e._firstFocusDate = e.getDate(),
                this._setSelectionStart(0),
                this._selectGroup(-1),
                this.dateTimeInput.focus(),
                setTimeout(function() {
                    e._setSelectionStart(0),
                    e._selectGroup(-1),
                    e.dateTimeInput.focus()
                }, 25)
            } catch (e) {}
        },
        _addHandlers: function() {
            this.element.id,
            this.element;
            var e = this;
            this.host.parents() && this.addHandler(this.host.parents(), "scroll.datetimeinput" + this.element.id, function(t) {
                e.isOpened() && e.close()
            }),
            this.addHandler(this.host, "mouseenter", function() {
                !e.disabled && e.enableHover && (hovered = !0,
                e.calendarButtonIcon.addClass(e.toThemeProperty("jqx-icon-calendar-hover")),
                e.calendarButton.addClass(e.toThemeProperty("jqx-fill-state-hover")),
                e.showTimeButton && (e.timeButtonIcon.addClass(e.toThemeProperty("jqx-icon-time-hover")),
                e.timeButton.addClass(e.toThemeProperty("jqx-fill-state-hover"))))
            }),
            this.addHandler(this.host, "mouseleave", function() {
                !e.disabled && e.enableHover && (e.calendarButtonIcon.removeClass(e.toThemeProperty("jqx-icon-calendar-hover")),
                e.calendarButton.removeClass(e.toThemeProperty("jqx-fill-state-hover")),
                e.showTimeButton && (e.timeButtonIcon.removeClass(e.toThemeProperty("jqx-icon-time-hover")),
                e.timeButton.removeClass(e.toThemeProperty("jqx-fill-state-hover"))))
            }),
            this.addHandler(this.host, "mousewheel", function(t) {
                e.wheel(t, e)
            }),
            this.addHandler(r(document), "mousedown." + this.id, this._closeOpenedCalendar, {
                me: this
            }),
            r.jqx.mobile.isTouchDevice() && this.addHandler(r(document), r.jqx.mobile.getTouchEventName("touchstart") + "." + this.id, this._closeOpenedCalendar, {
                me: this
            }),
            this.addHandler(this.dateTimeInput, "keydown." + this.id, function(t) {
                var i = r.data(document.body, "openedJQXCalendar" + e.id);
                if (null != i && i == e.calendarContainer)
                    return e.handleCalendarKey(t, e)
            }),
            null != this.calendarContainer && (this.addHandler(this.calendarContainer, "keydown", function(t) {
                if (13 == t.keyCode)
                    return !(e.isOpened() && !e._calendar._viewAnimating && "month" == e._calendar.view && (e.hideCalendar("selected", "keyboard"),
                    e.dateTimeInput.focus(),
                    1));
                if (9 == t.keyCode) {
                    if (e.isOpened())
                        return e.hideCalendar("selected", "keyboard"),
                        !0
                } else if (27 == t.keyCode)
                    return !e.isOpened() || (e.hideCalendar(null, "keyboard"),
                    e.dateTimeInput.focus(),
                    !1);
                if (e.timePopup = !1,
                84 == t.keyCode && (e.timePopup = !0),
                115 == t.keyCode) {
                    if (e.isOpened())
                        return e.hideCalendar("keyboard", "keyboard"),
                        e.dateTimeInput.focus(),
                        !1;
                    if (!e.isOpened())
                        return e.showCalendar("keyboard", "keyboard"),
                        e.dateTimeInput.focus(),
                        !1
                }
                if (t.altKey)
                    if (38 == t.keyCode) {
                        if (e.isOpened())
                            return e.hideCalendar("keyboard", "keyboard"),
                            e.dateTimeInput.focus(),
                            !1
                    } else if (40 == t.keyCode && !e.isOpened())
                        return e.showCalendar("keyboard", "keyboard"),
                        e.dateTimeInput.focus(),
                        !1
            }),
            this.addHandler(this.calendarContainer, "cellSelected", function(t) {
                e.closeCalendarAfterSelection && (r.data(document.body, "openedJQXCalendarValue"),
                "mouse" == t.args.selectionType && ("range" != e.selectionMode ? e.hideCalendar("selected", "mouse") : 0 == e._calendar._clicks && e.hideCalendar("selected", "mouse")))
            }),
            this.addHandler(this.calendarContainer, "cellMouseDown", function(t) {
                e.closeCalendarAfterSelection && e._calendar.value && r.data(document.body, "openedJQXCalendarValue", new r.jqx._jqxDateTimeInput.getDateTime(e._calendar.value.dateTime))
            })),
            this.addHandler(this.dateTimeInput, "blur", function(t) {
                e.bar.removeClass("focused"),
                e.label.removeClass("focused"),
                null != e.value && (e.isEditing = !1,
                e.value.dateTime.getDay(),
                e._oldDT,
                e._validateValue(!0),
                t.stopPropagation && t.stopPropagation(),
                e._updateText(),
                e._raiseEvent(9, t)),
                e.isOpened() || e.host.removeClass(e.toThemeProperty("jqx-fill-state-focus"))
            }),
            this.addHandler(this.host, "focus", function(t) {
                e.focus()
            }),
            this.addHandler(this.dateTimeInput, "focus", function(t) {
                if (e._firstFocusDate = e.getDate(),
                null != e.value ? ("range" != e.selectionMode ? e._oldDT = new Date(e.value.dateTime) : e._oldDT = e.getRange(),
                setTimeout(function() {
                    var t = e._selection();
                    e.isEditing = !0,
                    e._validateValue(),
                    e._updateText(),
                    e._setSelectionStart(0),
                    e._selectGroup(-1, t),
                    e.host.addClass(e.toThemeProperty("jqx-fill-state-focus"))
                })) : (e._setSelectionStart(0),
                e._selectGroup(-1),
                e.host.addClass(e.toThemeProperty("jqx-fill-state-focus"))),
                t.stopPropagation && t.stopPropagation(),
                e.bar.addClass("focused"),
                e.label.addClass("focused"),
                t.preventDefault)
                    return t.preventDefault(),
                    !1
            });
            var t = "mousedown";
            this.touch && (t = r.jqx.mobile.getTouchEventName("touchstart")),
            this.addHandler(this.calendarButton, t, function(t) {
                var i = "block" == e.container.css("display");
                if (e.timePopup = !1,
                e.calendarPopup = !0,
                !e.disabled && !e.isanimating) {
                    if (i)
                        return e.hideCalendar(),
                        !1;
                    e.showCalendar("mouse"),
                    t.preventDefault()
                }
            }),
            this.addHandler(this.timeButton, t, function(t) {
                var i = "block" == e.container.css("display");
                if (e.timePopup = !0,
                e.calendarPopup = !1,
                !e.disabled && !e.isanimating) {
                    if (i)
                        return e.hideCalendar("mouse", "mouse"),
                        !1;
                    e.showCalendar("mouse"),
                    t.preventDefault()
                }
            }),
            this.addHandler(this.dateTimeInput, "mousedown", function(t) {
                return e._raiseEvent(2, t)
            }),
            this.addHandler(this.dateTimeInput, "mouseup", function(t) {
                return e._raiseEvent(3, t)
            }),
            this.addHandler(this.dateTimeInput, "keydown", function(t) {
                return e._raiseEvent(4, t)
            }),
            this.addHandler(this.dateTimeInput, "keyup", function(t) {
                return e._raiseEvent(5, t)
            }),
            this.addHandler(this.dateTimeInput, "keypress", function(t) {
                return e._raiseEvent(6, t)
            })
        },
        createID: function() {
            var e = Math.random() + "";
            return e = "99" + (e = e.replace(".", "")),
            "dateTimeInput" + (e /= 1)
        },
        setMaxDate: function(e, t) {
            null != e && (null == e || "string" != typeof e || (e = new Date(e),
            this._isValidDate(e))) && (this.maxDate = r.jqx._jqxDateTimeInput.getDateTime(e),
            null != this._calendar && this._calendar.setMaxDate(e),
            0 != t && (null != this.getDate() && this.getDate() > e && this.setDate(e),
            r.jqx.aria(this, "aria-valuemax", e),
            this._refreshValue(),
            this._updateText()))
        },
        getMaxDate: function() {
            return null != this.maxDate && null != this.maxDate ? this.maxDate.dateTime : null
        },
        setMinDate: function(e, t) {
            null != e && (null == e || "string" != typeof e || (e = new Date(e),
            this._isValidDate(e))) && (this.minDate = r.jqx._jqxDateTimeInput.getDateTime(e),
            null != this._calendar && this._calendar.setMinDate(e),
            0 != t && (null != this.getDate() && this.getDate() < e && this.setDate(e),
            r.jqx.aria(this, "aria-valuemin", e),
            this._refreshValue(),
            this._updateText()))
        },
        getMinDate: function() {
            return null != this.minDate && null != this.minDate ? this.minDate.dateTime : null
        },
        _applyCulture: function() {
            var e = !1;
            try {
                null != Globalize && (e = !0)
            } catch (e) {}
            try {
                if (r.global)
                    r.global.preferCulture(this.culture),
                    this.localization.calendar = r.global.culture.calendar;
                else if (e) {
                    var t = Globalize.culture(this.culture);
                    this.localization.calendar = t.calendar
                }
                this._loadItems(),
                null != this._calendar && (this._calendar.culture = this.culture,
                this._calendar.localization = this.localization,
                this._calendar.render())
            } catch (e) {}
        },
        propertyMap: function(e) {
            return "value" == e ? "range" != this.selectionMode ? this.getDate() : this.getRange() : null
        },
        propertiesChangedHandler: function(e, t, i) {
            i && i.width && i.height && 2 == Object.keys(i).length && (e.refresh(),
            e.close())
        },
        propertyChangedHandler: function(e, t, i, s) {
            if (null != e.isInitialized && 0 != e.isInitialized && !(e.batchUpdate && e.batchUpdate.width && e.batchUpdate.height && 2 == Object.keys(e.batchUpdate).length)) {
                if ("dropDownVerticalAlignment" == t && e.close(),
                "template" == t && (e.bar.removeClass(e.toThemeProperty("jqx-" + i)),
                e.label.removeClass(e.toThemeProperty("jqx-" + i)),
                e.timeButton.removeClass(e.toThemeProperty("jqx-" + i)),
                e.calendarButton.removeClass(e.toThemeProperty("jqx-" + i)),
                e.bar.addClass(e.toThemeProperty("jqx-" + e.template)),
                e.label.addClass(e.toThemeProperty("jqx-" + e.template)),
                e.timeButton.addClass(e.toThemeProperty("jqx-" + e.template)),
                e.calendarButton.addClass(e.toThemeProperty("jqx-" + e.template))),
                "restrictedDates" == t && e.calendarContainer.css({
                    restrictedDates: s
                }),
                "popupZIndex" == t && e.calendarContainer.css({
                    zIndex: s
                }),
                "showCalendarButton" == t && e._arrange(),
                "showTimeButton" == t && (e._arrange(),
                e.timePopupElement && (e.timePopupElement.remove(),
                e.timePopupElement = null)),
                "selectionMode" == t && (e._calendar.selectionMode = s,
                e.refreshValue()),
                "min" == t && ("string" == typeof s ? e.setMinDate(new Date(s)) : e.setMinDate(s)),
                "max" == t && ("string" == typeof s ? e.setMaxDate(new Date(s)) : e.setMaxDate(s)),
                "value" == t)
                    if (null != s && s instanceof Date) {
                        if (isNaN(s.getFullYear()) || isNaN(s.getMonth()) || isNaN(s.getDate()))
                            return void (this.value = i);
                        s = r.jqx._jqxDateTimeInput.getDateTime(s)
                    } else if (null != s && "string" == typeof s) {
                        var n = new Date(s);
                        null == n || isNaN(n) || (this.value = r.jqx._jqxDateTimeInput.getDateTime(n))
                    }
                if ("views" == t && e.calendarContainer.jqxCalendar({
                    views: s
                }),
                "enableViews" == t && e.calendarContainer.jqxCalendar({
                    enableViews: s
                }),
                "selectableDays" == t && e.calendarContainer.jqxCalendar({
                    selectableDays: s
                }),
                "showFooter" == t && e.calendarContainer.jqxCalendar({
                    showFooter: s
                }),
                "rtl" == t && (e.calendarContainer.jqxCalendar({
                    rtl: s
                }),
                s ? (e.dateTimeInput.css("direction", "rtl"),
                e.dateTimeInput.addClass("jqx-rtl")) : (e.dateTimeInput.css("direction", "ltr"),
                e.dateTimeInput.removeClass("jqx-rtl"))),
                "todayString" != t && "clearString" != t || e.calendarContainer.jqxCalendar({
                    clearString: e.clearString,
                    todayString: e.todayString
                }),
                "dayNameFormat" == t && e.calendarContainer.jqxCalendar({
                    dayNameFormat: s
                }),
                "firstDayOfWeek" == t && e.calendarContainer.jqxCalendar({
                    firstDayOfWeek: s
                }),
                "showWeekNumbers" == t && e.calendarContainer.jqxCalendar({
                    showWeekNumbers: s
                }),
                "culture" == t || "localization" == t ? e._applyCulture() : "formatString" == t && (e.items = new Array,
                e._loadItems()),
                "theme" == t && (r.jqx.utilities.setTheme(i, s, e.host),
                e.calendarContainer.jqxCalendar({
                    theme: s
                })),
                "width" == t || "height" == t)
                    return e.close(),
                    void e.refresh();
                e._setOption(t, s, i),
                "dropDownWidth" != t && "dropDownHeight" != t || (e.calendarContainer.jqxCalendar({
                    width: e.dropDownWidth,
                    height: e.dropDownHeight
                }),
                e._calendar.render(),
                e.container.height(e.calendarContainer.height()),
                e.container.width(e.calendarContainer.width()))
            }
        },
        clear: function() {
            this.allowNullDate ? ("range" != this.selectionMode ? this.setDate(null) : (this._calendar._clicks = 1,
            this.setRange(null, null)),
            this._calendar._clicks = 0) : "range" != this.selectionMode ? this.setDate(me.getMinDate()) : (this._calendar._clicks = 1,
            this.setRange(me.getMinDate(), me.getMinDate()),
            this._calendar._clicks = 0),
            this.hideCalendar()
        },
        today: function() {
            var e = new Date;
            if (e.setHours(0, 0, 0, 0),
            "range" != this.selectionMode)
                this.setDate(e);
            else {
                this._calendar._clicks = 0;
                var t = new Date;
                t.setHours(23, 59, 59, 0),
                this.setRange(e, t),
                this._calendar._clicks = 0
            }
            this.hideCalendar()
        },
        _isValidDate: function(e) {
            return null == e || "object" == typeof e && (!(null === e || !e.getFullYear) || !("Invalid Date" == e || e.valueOf() < 0 || isNaN(e.valueOf())))
        },
        setDate: function(e) {
            var t = this.getDate();
            if (null != e && "string" == typeof e) {
                var i = e;
                if (e.toString().indexOf(",") >= 0 && (e = e.replace(/\,/g, "/"),
                e = new Date(e),
                this._isValidDate(e) || (e = i)),
                e.toString().indexOf("-") >= 0 && (e = e.replace(/\-/g, "/"),
                e = new Date(e),
                this._isValidDate(e) || (e = i)),
                "" != e) {
                    var s = e;
                    if (null === (e = null != Globalize ? Globalize.parseDate(s, this.formatString, this.culture) : r.jqx.dataFormat ? r.jqx.dataFormat.parsedate(s, this.formatString, this.localization.calendar) : new Date(e)) && null !== s && this._isValidDate(s) && (e = s),
                    !this._isValidDate(e))
                        return
                }
            }
            if (null != e && "null" != e && "undefined" != e || this.allowNullDate || (e = this.min),
            this._isValidDate(e) || (e = null),
            null != e && "null" != e && "undefined" != e && "" !== e) {
                if (!(e < this.getMinDate() || e > this.getMaxDate()))
                    return null == this.value && (this.value = new r.jqx._jqxDateTimeInput.getDateTime(new Date),
                    this.value._setHours(0),
                    this.value._setMinutes(0),
                    this.value._setSeconds(0),
                    this.value._setMilliseconds(0)),
                    e.getFullYear && (this.value._setYear(e.getFullYear()),
                    this.value._setDay(1),
                    this.value._setMonth(e.getMonth() + 1),
                    this.value._setHours(e.getHours()),
                    this.value._setMinutes(e.getMinutes()),
                    this.value._setSeconds(e.getSeconds()),
                    this.value._setMilliseconds(e.getMilliseconds()),
                    this.value._setDay(e.getDate())),
                    this._validateTimeRange(),
                    this._refreshValue(),
                    this.cookies && null != this.value && r.jqx.cookie.cookie("jqxDateTimeInput" + this.element.id, this.value.dateTime.toString(), this.cookieoptions),
                    0 != this.getDate() - t ? (this._raiseEvent("0", e, t),
                    this._raiseEvent("9", e, t),
                    !0) : void 0
            } else
                null != this.value && (this.value = null,
                this._calendar.setDate(null),
                this._refreshValue(),
                this.cookies && null != this.value && r.jqx.cookie.cookie("jqxDateTimeInput" + this.element.id, this.value.dateTime.toString(), this.cookieoptions),
                this._setSelectionStart(0),
                this._selectGroup(-1),
                this._raiseEvent("0", e, t),
                this._raiseEvent("9", e, t))
        },
        getDate: function() {
            return null == this.value ? null : new Date(this.value.dateTime)
        },
        getText: function() {
            return this.dateTimeInput.val()
        },
        setRange: function(e, t) {
            if ("object" != typeof e || this._isValidDate(e) || (e = null),
            "object" != typeof t || this._isValidDate(t) || (t = null),
            (null == e || "string" != typeof e || (e = new Date(e),
            this._isValidDate(e))) && (null == t || "string" != typeof t || (t = new Date(t),
            this._isValidDate(t))) && !(e && isNaN(e) && "NaN" == e.toString() && "string" != typeof e || t && isNaN(t) && "NaN" == t.toString() && "string" != typeof t)) {
                this._calendar.setRange(e, t),
                t && e && t.valueOf() != e.valueOf() ? this._range = {
                    from: e,
                    to: t
                } : this._range = this._calendar.getRange();
                var i = e;
                null != i && i.getFullYear && (null == this.value && (this.value = new r.jqx._jqxDateTimeInput.getDateTime(new Date),
                this.value._setHours(0),
                this.value._setMinutes(0),
                this.value._setSeconds(0),
                this.value._setMilliseconds(0)),
                this.value._setYear(i.getFullYear()),
                this.value._setMonth(i.getMonth() + 1),
                this.value._setHours(i.getHours()),
                this.value._setMinutes(i.getMinutes()),
                this.value._setSeconds(i.getSeconds()),
                this.value._setMilliseconds(i.getMilliseconds()),
                this.value._setDay(i.getDate())),
                this._refreshValue(),
                this.value ? this._raiseEvent("0", this.value.dateTime) : this._raiseEvent("0", null)
            }
        },
        getRange: function() {
            var e = this._calendar.getRange();
            if (this._range) {
                var t = this._range.from
                  , i = this._range.to;
                i && t && i.valueOf() != t.valueOf() && (e.from && e.from.setHours(t.getHours(), t.getMinutes(), t.getSeconds(), t.getMilliseconds()),
                e.to && e.to.setHours(i.getHours(), i.getMinutes(), i.getSeconds(), i.getMilliseconds()))
            }
            return e
        },
        _validateValue: function(e) {
            for (var t = 0; t < this.items.length; t++) {
                var i = this.editors[t].value;
                switch (this.items[t].type) {
                case "FORMAT_AMPM":
                    i < 0 ? i = 0 : i > 1 && (i = 1);
                    break;
                case "Character":
                    break;
                case "Day":
                    i < 1 ? i = 1 : i > 31 && (i = 31);
                    break;
                case "FORMAT_hh":
                    i < 1 ? i = 1 : i > 12 && (i = 12);
                    break;
                case "FORMAT_HH":
                    i < 0 ? i = 0 : i > 23 && (i = 23);
                    break;
                case "Millisecond":
                    i < 0 ? i = 0 : i > 999 && (i = 999);
                    break;
                case "Minute":
                    i < 0 ? i = 0 : i > 59 && (i = 59);
                    break;
                case "Month":
                    i < 1 ? i = 1 : i > 12 && (i = 12);
                    break;
                case "ReadOnly":
                    break;
                case "Second":
                    i < 0 ? i = 0 : i > 59 && (i = 59);
                    break;
                case "Year":
                    i < this.minDate.year ? i = this.minDate.year : i > this.maxDate.year && (i = this.maxDate.year)
                }
                this.editors[t].value != i && (this.editors[t].value = i)
            }
            this.updateValue(e),
            null != this.value && !0 === e && (this.value.dateTime > this.maxDate.dateTime ? (this._internalSetValue(this.maxDate),
            this._updateEditorsValue()) : this.value.dateTime < this.minDate.dateTime && (this._internalSetValue(this.minDate),
            this._updateEditorsValue()),
            this._updateText())
        },
        spinUp: function() {
            if (null != this.value) {
                if (null != this.activeEditor) {
                    var e = this.editors.indexOf(this.activeEditor);
                    if (-1 == e)
                        return;
                    "Day" == this.items[e].type && null != this.value && (this.activeEditor.maxValue = this.value._daysInMonth(this.value.year, this.value.month));
                    var t = this.activeEditor.positions;
                    this.activeEditor.increaseValue(this.enableAbsoluteSelection),
                    this.activeEditor.positions = t
                }
                this.isEditing && (this.isEditing = !1),
                this.updateValue(),
                this.isEditing = !0,
                this._updateText();
                var i = this.editors.indexOf(this.activeEditor);
                i >= 0 && this._selectGroup(i)
            }
        },
        spinDown: function() {
            if (null != this.value) {
                if (null != this.activeEditor) {
                    var e = this.editors.indexOf(this.activeEditor);
                    if (-1 == e)
                        return;
                    "Day" == this.items[e].type && null != this.value && (this.activeEditor.maxValue = this.value._daysInMonth(this.value.year, this.value.month));
                    var t = this.activeEditor.positions;
                    this.activeEditor.decreaseValue(this.enableAbsoluteSelection),
                    this.activeEditor.positions = t
                }
                this.isEditing && (this.isEditing = !1),
                this.updateValue(),
                this.isEditing = !0,
                this._updateText();
                var i = this.editors.indexOf(this.activeEditor);
                i >= 0 && this._selectGroup(i)
            }
        },
        _passKeyToCalendar: function(e) {
            if (13 == e.keyCode || 9 == e.keyCode)
                return this.hideCalendar("selected", "keyboard"),
                !0;
            if (27 == e.keyCode) {
                this.calendarContainer;
                var t = this._calendar
                  , i = this.closeCalendarAfterSelection;
                this.closeCalendarAfterSelection = !1,
                t.setDate(this.value.dateTime),
                this.closeCalendarAfterSelection = i,
                this.hideCalendar()
            }
            i = this.closeCalendarAfterSelection,
            this.closeCalendarAfterSelection = !1;
            var r = this._calendar._handleKey(e);
            return this.closeCalendarAfterSelection = i,
            r
        },
        handleCalendarKey: function(e, t) {
            r(e.target);
            var i = r.data(document.body, "openedJQXCalendar" + this.id);
            return !(null != i && i.length > 0) || t._passKeyToCalendar(e)
        },
        _findPos: function(e) {
            if (null != e) {
                for (; e && ("hidden" == e.type || 1 != e.nodeType || r.expr.filters.hidden(e)); )
                    e = e.nextSibling;
                var t = r(e).coord(!0);
                return [t.left, t.top]
            }
        },
        testOffset: function(e, t, i) {
            var s = e.outerWidth()
              , n = e.outerHeight()
              , o = r(window).width() + r(window).scrollLeft()
              , a = r(window).height() + r(window).scrollTop();
            if (t.left + s > o && s > this.host.width()) {
                var l = this.host.coord().left
                  , d = s - this.host.width();
                t.left = l - d + 2
            }
            return t.left < 0 && (t.left = parseInt(this.host.coord().left) + "px"),
            t.top -= Math.min(t.top, t.top + n > a && a > n ? Math.abs(n + i + 23) : 0),
            t
        },
        open: function(e) {
            this.timePopup = "time" == e,
            this.showCalendar()
        },
        close: function(e) {
            this.hideCalendar()
        },
        _getBodyOffset: function() {
            var e = 0
              , t = 0;
            return "0px" != r("body").css("border-top-width") && (e = parseInt(r("body").css("border-top-width")),
            isNaN(e) && (e = 0)),
            "0px" != r("body").css("border-left-width") && (t = parseInt(r("body").css("border-left-width")),
            isNaN(t) && (t = 0)),
            {
                left: t,
                top: e
            }
        },
        initTimePopup: function() {
            this.timePopupElement = r("<div style='border-style: solid; border-width: 0px;'></div>").appendTo(this.timeContainer),
            this.timePopupElement.addClass(this.toThemeProperty("jqx-widget-content jqx-widget jqx-date-time-input-popup"));
            var e = "";
            e += "<table><tbody><tr><td><a class='increment-hour-column' href='javascript:;' data-action='incrementHour'><div class='jqx-icon-up'></div></a></td><td class='separator'>&nbsp;</td><td><a class='increment-minute-column' href='javascript:;' data-action='incrementMinute'><div class='jqx-icon-up'></div></a></td><td class='separator'>&nbsp;</td><td><a class='increment-second-column' href='javascript:;' data-action='incrementSecond'><div class='jqx-icon-up'></div></a></td><td class='separator'>&nbsp;</td><td><a class='increment-millisecond-column' href='javascript:;' data-action='incrementMSSecond'><div class='jqx-icon-up'></div></a></td><td class='separator'>&nbsp;</td><td class='increment-meridian-column'><a href='javascript:;' data-action='toggleMeridian'><div class='jqx-icon-up'></div></a></td></tr><tr><td><input type='text' class='jqx-timepicker-hour' maxlength='2'></td><td class='separator'>:</td><td><input type='text' class='jqx-timepicker-minute' maxlength='2'></td><td class='separator'>:</td><td><input type='text' class='jqx-timepicker-second' maxlength='2'></td><td class='separator'>:</td><td><input type='text' class='jqx-timepicker-millisecond' maxlength='3'></td><td class='separator'>&nbsp;</td><td><input type='text' class='jqx-timepicker-meridian' maxlength='2'></td></tr><tr><td><a class='decrement-hour-column' href='javascript:;' data-action='decrementHour'><div class='jqx-icon-down'></div></a></td><td class='separator'></td><td><a class='decrement-minute-column' href='javascript:;' data-action='decrementMinute'><div class='jqx-icon-down'></div></a></td><td class='separator'></td><td><a class='decrement-second-column' href='javascript:;' data-action='decrementSecond'><div class='jqx-icon-down'></div></a></td><td class='separator'></td><td><a class='decrement-millisecond-column' href='javascript:;' data-action='decrementMillisecond'><div class='jqx-icon-down'></div></a></td><td class='separator'>&nbsp;</td><td><a class='decrement-meridian-column' href='javascript:;' data-action='toggleMeridian'><div class='jqx-icon-down'></div></a></td></tr></tbody></table>";
            var t = this._getFormatValue(this.formatString);
            "range" != this.selectionMode ? this.timePopupElement[0].innerHTML = e : this.timePopupElement[0].innerHTML = "<table><tr><td>" + e + "</td><td>-</td><td>" + e + "</td></tr></table>",
            this.timePopupElement.find(".jqx-icon-down").addClass(this.toThemeProperty("jqx-icon jqx-icon-arrow-down")),
            this.timePopupElement.find(".jqx-icon-up").addClass(this.toThemeProperty("jqx-icon jqx-icon-arrow-up"));
            var i = this.timePopupElement.find("input");
            i.addClass(this.toThemeProperty("jqx-input")),
            i.addClass(this.toThemeProperty("jqx-rc-all")),
            this.addHandler(i, "mousedown", function(e) {
                e.stopPropagation()
            });
            var s = function(e) {
                e.target.className.indexOf("hour") >= 0 && o._decrementHour(r(e.target)),
                e.target.className.indexOf("minute") >= 0 && o._decrementMinuteSecond(r(e.target)),
                e.target.className.indexOf("second") >= 0 && o._decrementMinuteSecond(r(e.target)),
                e.target.className.indexOf("millisecond") >= 0 && o._decrementMillisecond(r(e.target)),
                e.target.className.indexOf("meridian") >= 0 && o._decrementMeridian(r(e.target))
            }
              , n = function(e) {
                e.target.className.indexOf("hour") >= 0 && o._incrementHour(r(e.target)),
                e.target.className.indexOf("minute") >= 0 && o._incrementMinuteSecond(r(e.target)),
                e.target.className.indexOf("second") >= 0 && o._incrementMinuteSecond(r(e.target)),
                e.target.className.indexOf("millisecond") >= 0 && o._incrementMillisecond(r(e.target)),
                e.target.className.indexOf("meridian") >= 0 && o._incrementMeridian(r(e.target))
            };
            this.addHandler(i, "wheel", function(e) {
                !function(e, t) {
                    if (t.isEditing) {
                        var i = 0;
                        e || (e = window.event),
                        e.originalEvent && e.originalEvent.wheelDelta && (e.wheelDelta = e.originalEvent.wheelDelta),
                        e.originalEvent && null != e.originalEvent.deltaY && (i = -e.originalEvent.deltaY),
                        e.wheelDelta ? i = e.wheelDelta / 120 : e.detail && (i = -e.detail / 3),
                        i && (document.activeElement == e.target && "input" == e.target.nodeName.toLowerCase() && (i < 0 ? s(e) : n(e)),
                        e.preventDefault && e.preventDefault(),
                        e.returnValue = !1),
                        e.preventDefault && e.preventDefault(),
                        e.returnValue = !1
                    }
                }(e, o)
            }),
            this.addHandler(i, "keydown", function(e) {
                if (r(e.target),
                e.ctrlKey)
                    if (38 == e.keyCode) {
                        if (o.isOpened())
                            return o.hideCalendar("keyboard", "keyboard"),
                            o.dateTimeInput.focus(),
                            !1
                    } else if (40 == e.keyCode && !o.isOpened())
                        return o.showCalendar("keyboard", "keyboard"),
                        o.dateTimeInput.focus(),
                        !1;
                40 == e.keyCode ? (s(e),
                e.preventDefault()) : 38 == e.keyCode ? (n(e),
                e.preventDefault()) : 13 == e.keyCode ? (e.preventDefault(),
                o.hideCalendar("keyboard", "keyboard"),
                o.dateTimeInput.focus()) : 27 == e.keyCode && (e.preventDefault(),
                o.hideCalendar("cancel"),
                o.dateTimeInput.focus())
            }),
            this.hourInput = r(i[0]),
            this.minuteInput = r(i[1]),
            this.secondInput = r(i[2]),
            this.mssecondInput = r(i[3]),
            this.meridianInput = r(i[4]),
            this.hourInput2 = r(i[5]),
            this.minuteInput2 = r(i[6]),
            this.secondInput2 = r(i[7]),
            this.mssecondInput2 = r(i[8]),
            this.meridianInput2 = r(i[9]);
            var o = this
              , a = this.timePopupElement.find(".increment-hour-column");
            this.hourIncrement = r(a[0]),
            this.hourIncrement2 = r(a[1]),
            this.addHandler(i, "change", function(e) {
                var i = r(e.target);
                if (i.val().length <= 1 && i.val("0" + r(e.target).val()),
                e.target.className.indexOf("hour") >= 0) {
                    var s = parseInt(r(e.target).val());
                    if (t.indexOf("HH") >= 0)
                        for (; s > 24; )
                            s -= 24;
                    else
                        for (; s > 12; )
                            s -= 12;
                    s < 10 && (s = "0" + s),
                    i.val() != s && i.val(s)
                }
                if (e.target.className.indexOf("minute") >= 0 || e.target.className.indexOf("second") >= 0) {
                    for (s = parseInt(r(e.target).val()); s > 59; )
                        s--;
                    s < 10 && (s = "0" + s),
                    i.val() != s && i.val(s)
                }
            }),
            this._incrementHour = function(e) {
                var i = parseInt(e.val());
                i++,
                t.indexOf("HH") >= 0 ? i > 23 && (i = 0) : i > 12 && (i = 1),
                i < 10 && (i = "0" + i),
                e.val(i)
            }
            ,
            this._incrementMinuteSecond = function(e) {
                var t = parseInt(e.val());
                ++t > 59 && (t = 0),
                t < 10 && (t = "0" + t),
                e.val(t)
            }
            ,
            this._incrementMillisecond = function(e) {
                var t = parseInt(e.val());
                ++t > 999 && (t = 0),
                t < 10 && (t = "0" + t),
                e.val(t)
            }
            ,
            this._incrementMeridian = function(e) {
                var t = e.val();
                t = t.toLowerCase().indexOf("a") >= 0 ? "PM" : "AM",
                e.val(t)
            }
            ,
            this._decrementHour = function(e) {
                var i = parseInt(e.val());
                i--,
                t.indexOf("HH") >= 0 ? i < 0 && (i = 23) : i < 1 && (i = 12),
                i < 10 && (i = "0" + i),
                e.val(i)
            }
            ,
            this._decrementMinuteSecond = function(e) {
                var t = parseInt(e.val());
                --t < 0 && (t = 59),
                t < 10 && (t = "0" + t),
                e.val(t)
            }
            ,
            this._decrementMillisecond = function(e) {
                var t = parseInt(e.val());
                --t < 0 && (t = 999),
                t < 10 && (t = "0" + t),
                e.val(t)
            }
            ,
            this._decrementMeridian = function(e) {
                var t = e.val();
                t = t.toLowerCase().indexOf("a") >= 0 ? "PM" : "AM",
                e.val(t)
            }
            ,
            this.addHandler(this.hourIncrement, "mousedown", function(e) {
                e.stopPropagation(),
                o._incrementHour(o.hourInput)
            }),
            this.addHandler(this.hourIncrement2, "mousedown", function(e) {
                e.stopPropagation(),
                o._incrementHour(o.hourInput2)
            });
            var l = this.timePopupElement.find(".increment-minute-column");
            this.minuteIncrement = r(l[0]),
            this.minuteIncrement2 = r(l[1]),
            this.addHandler(this.minuteIncrement, "mousedown", function(e) {
                e.stopPropagation(),
                o._incrementMinuteSecond(o.minuteInput)
            }),
            this.addHandler(this.minuteIncrement2, "mousedown", function(e) {
                e.stopPropagation(),
                o._incrementMinuteSecond(o.minuteInput2)
            });
            var d = this.timePopupElement.find(".increment-second-column");
            this.secondIncrement = r(d[0]),
            this.secondIncrement2 = r(d[1]),
            this.addHandler(this.secondIncrement, "mousedown", function(e) {
                e.stopPropagation(),
                o._incrementMinuteSecond(o.secondInput)
            }),
            this.addHandler(this.secondIncrement2, "mousedown", function(e) {
                e.stopPropagation(),
                o._incrementMinuteSecond(o.secondInput2)
            });
            var h = this.timePopupElement.find(".increment-millisecond-column");
            this.millisecondsIncrement = r(h[0]),
            this.millisecondsIncrement2 = r(h[1]),
            this.addHandler(this.millisecondsIncrement, "mousedown", function(e) {
                e.stopPropagation(),
                o._incrementMillisecond(o.mssecondInput)
            }),
            this.addHandler(this.millisecondsIncrement2, "mousedown", function(e) {
                e.stopPropagation(),
                o._incrementMillisecond(o.mssecondInput2)
            });
            var c = this.timePopupElement.find(".increment-meridian-column");
            this.meridianIncrement = r(c[0]),
            this.meridianIncrement2 = r(c[1]),
            this.addHandler(this.meridianIncrement, "mousedown", function(e) {
                e.stopPropagation(),
                o._incrementMeridian(o.meridianInput)
            }),
            this.addHandler(this.meridianIncrement2, "mousedown", function(e) {
                e.stopPropagation(),
                o._incrementMeridian(o.meridianInput2)
            });
            var u = this.timePopupElement.find(".decrement-hour-column");
            this.hourDecrement = r(u[0]),
            this.hourDecrement2 = r(u[1]),
            this.addHandler(this.hourDecrement, "mousedown", function(e) {
                e.stopPropagation(),
                o._decrementHour(o.hourInput)
            }),
            this.addHandler(this.hourDecrement2, "mousedown", function(e) {
                e.stopPropagation(),
                o._decrementHour(o.hourInput2)
            });
            var p = this.timePopupElement.find(".decrement-minute-column");
            this.minuteDecrement = r(p[0]),
            this.minuteDecrement2 = r(p[1]),
            this.addHandler(this.minuteDecrement, "mousedown", function(e) {
                e.stopPropagation(),
                o._decrementMinuteSecond(o.minuteInput)
            }),
            this.addHandler(this.minuteDecrement2, "mousedown", function(e) {
                e.stopPropagation(),
                o._decrementMinuteSecond(o.minuteInput2)
            });
            var f = this.timePopupElement.find(".decrement-second-column");
            this.secondDecrement = r(f[0]),
            this.secondDecrement2 = r(f[1]),
            this.addHandler(this.secondDecrement, "mousedown", function(e) {
                e.stopPropagation(),
                o._decrementMinuteSecond(o.secondInput)
            }),
            this.addHandler(this.secondDecrement2, "mousedown", function(e) {
                e.stopPropagation(),
                o._decrementMinuteSecond(o.secondInput2)
            });
            var m = this.timePopupElement.find(".decrement-millisecond-column");
            this.millisecondsDecrement = r(m[0]),
            this.millisecondsDecrement2 = r(m[1]),
            this.addHandler(this.millisecondsDecrement, "mousedown", function(e) {
                e.stopPropagation(),
                o._decrementMillisecond(o.mssecondInput)
            }),
            this.addHandler(this.millisecondsDecrement2, "mousedown", function(e) {
                e.stopPropagation(),
                o._decrementMillisecond(o.mssecondInput2)
            });
            var g = this.timePopupElement.find(".decrement-meridian-column");
            this.meridianDecrement = r(g[0]),
            this.meridianDecrement2 = r(g[1]),
            this.addHandler(this.meridianDecrement, "mousedown", function(e) {
                e.stopPropagation(),
                o._decrementMeridian(o.meridianInput)
            }),
            this.addHandler(this.meridianDecrement2, "mousedown", function(e) {
                e.stopPropagation(),
                o._decrementMeridian(o.meridianInput2)
            });
            var v = this.timePopupElement.find("table");
            this.addHandler(this.timePopupElement, "mousedown", function(e) {
                e.stopPropagation()
            });
            var w = function(e) {
                var i = e.find("tr");
                -1 == t.indexOf("mm") && (o.minuteInput.hide(),
                o.minuteInput2.hide(),
                r(r(i[0]).children()[1]).hide(),
                r(r(i[0]).children()[2]).hide(),
                r(r(i[1]).children()[1]).hide(),
                r(r(i[1]).children()[2]).hide(),
                r(r(i[2]).children()[1]).hide(),
                r(r(i[2]).children()[2]).hide()),
                -1 == t.indexOf("ss") && (o.secondInput.hide(),
                o.secondInput2.hide(),
                r(r(i[0]).children()[3]).hide(),
                r(r(i[0]).children()[4]).hide(),
                r(r(i[1]).children()[3]).hide(),
                r(r(i[1]).children()[4]).hide(),
                r(r(i[2]).children()[3]).hide(),
                r(r(i[2]).children()[4]).hide()),
                -1 == t.indexOf("tt") && -1 == t.indexOf("hh") && (o.meridianInput.hide(),
                o.meridianInput2.hide(),
                r(r(i[0]).children()[7]).hide(),
                r(r(i[0]).children()[8]).hide(),
                r(r(i[1]).children()[7]).hide(),
                r(r(i[1]).children()[8]).hide(),
                r(r(i[2]).children()[7]).hide(),
                r(r(i[2]).children()[8]).hide()),
                -1 == t.indexOf("zz") && (o.mssecondInput.hide(),
                o.mssecondInput2.hide(),
                r(r(i[0]).children()[5]).hide(),
                r(r(i[0]).children()[6]).hide(),
                r(r(i[1]).children()[5]).hide(),
                r(r(i[1]).children()[6]).hide(),
                r(r(i[2]).children()[5]).hide(),
                r(r(i[2]).children()[6]).hide())
            };
            1 == v.length ? w(v) : (w(r(r(v)[1])),
            w(r(r(v)[2])))
        },
        updateTimePopup: function() {
            var e = this._getFormatValue(this.formatString);
            if ("range" != this.selectionMode) {
                var t = this.getDate();
                if (this.hourInput) {
                    if (t)
                        var i = t.getHours()
                          , r = t.getMinutes()
                          , s = t.getHours()
                          , n = t.getSeconds()
                          , o = t.getMilliseconds();
                    else
                        i = 0,
                        r = 0,
                        s = 0,
                        n = 0,
                        o = 0;
                    i >= 12 ? (s = "PM",
                    -1 == e.indexOf("HH") && 0 == (i -= 12) && (i = 12)) : s = "AM",
                    "none" != this.meridianInput.css("display") && 0 == i && (i = 12),
                    i < 10 && (i = "0" + i),
                    r < 10 && (r = "0" + r),
                    n < 10 && (n = "0" + n),
                    o < 10 && (o = "0" + o),
                    this.hourInput.val(i),
                    this.minuteInput.val(r),
                    this.secondInput.val(n),
                    this.mssecondInput.val(o),
                    this.meridianInput.val(s)
                }
            } else
                t = this.getRange().from,
                this.hourInput && (t ? (i = t.getHours(),
                r = t.getMinutes(),
                s = t.getHours(),
                n = t.getSeconds(),
                o = t.getMilliseconds()) : (i = 0,
                r = 0,
                s = 0,
                n = 0,
                o = 0),
                i >= 12 ? (s = "PM",
                -1 == e.indexOf("HH") && 0 == (i -= 12) && (i = 12)) : s = "AM",
                "none" != this.meridianInput.css("display") && 0 == i && (i = 12),
                i < 10 && (i = "0" + i),
                r < 10 && (r = "0" + r),
                n < 10 && (n = "0" + n),
                o < 10 && (o = "0" + o),
                this.hourInput.val(i),
                this.minuteInput.val(r),
                this.secondInput.val(n),
                this.mssecondInput.val(o),
                this.meridianInput.val(s)),
                t = this.getRange().to,
                this.hourInput2 && (t ? (i = t.getHours(),
                r = t.getMinutes(),
                s = t.getHours(),
                n = t.getSeconds(),
                o = t.getMilliseconds()) : (i = 0,
                r = 0,
                s = 0,
                n = 0,
                o = 0),
                i >= 12 ? (s = "PM",
                -1 == e.indexOf("HH") && 0 == (i -= 12) && (i = 12)) : s = "AM",
                "none" != this.meridianInput.css("display") && 0 == i && (i = 12),
                i < 10 && (i = "0" + i),
                r < 10 && (r = "0" + r),
                n < 10 && (n = "0" + n),
                o < 10 && (o = "0" + o),
                this.hourInput2.val(i),
                this.minuteInput2.val(r),
                this.secondInput2.val(n),
                this.mssecondInput2.val(o),
                this.meridianInput2.val(s))
        },
        showCalendar: function() {
            var e = this.calendarContainer
              , t = this._calendar;
            if (r.jqx.aria(this, "aria-expanded", !0),
            this.showTimeButton)
                if (this.timePopup) {
                    this.timePopupElement || this.initTimePopup(),
                    this.calendarContainer.css("visibility", "hidden"),
                    this.timeContainer.css("visibility", "visible"),
                    this.updateTimePopup();
                    for (var i = this.timeContainer.find("input"), s = 0, n = 0; n < i.length; n++)
                        "none" != i[n].style.display && (s += 50);
                    this.container.width(parseInt(s)),
                    this.touch || setTimeout(function() {
                        i[0].focus(),
                        r(i[0]).select()
                    }, 150 + this.openDelay)
                } else
                    this.container.width(parseInt(this.calendarContainer.width()) + 25),
                    this.timeContainer.css("visibility", "hidden"),
                    this.calendarContainer.css("visibility", "visible");
            null != this.value ? "range" != this.selectionMode ? this._oldDT = new Date(this.value.dateTime) : this._oldDT = this.getRange() : this._oldDT = null,
            t.canRender || (t.canRender = !0,
            t.render()),
            this.container;
            var o, a = this, l = (r(window).scrollTop(),
            r(window).scrollLeft(),
            parseInt(this._findPos(this.host[0])[1]) + parseInt(this.host.outerHeight()) - 1 + "px"), d = parseInt(Math.round(this.host.coord(!0).left));
            "element" === this.dropDownContainer && (l = parseInt(this.host.outerHeight()) - 1 + "px",
            o = 0),
            o = d + "px",
            this.container.css("left", o),
            this.container.css("top", l);
            var h = this.closeCalendarAfterSelection;
            if (this.closeCalendarAfterSelection = !1,
            this.isEditing = !1,
            "default" == a.selectionMode) {
                this._validateValue(),
                this._updateText();
                var c = null != this.value ? this.value.dateTime : new Date;
                t.setDate(c)
            }
            this.closeCalendarAfterSelection = h;
            var u = !1;
            if ("right" == this.dropDownHorizontalAlignment || this.rtl) {
                var p = this.container.outerWidth()
                  , f = Math.abs(p - this.host.outerWidth() + 2);
                this.rtl || (f -= 2),
                p > this.host.width() ? this.container.css("left", 23 + parseInt(Math.round(d)) - f + "px") : this.container.css("left", 25 + parseInt(Math.round(d)) + f + "px")
            }
            if ("top" == this.dropDownVerticalAlignment) {
                var m = e.height();
                this.timePopup && this.timeContainer.css("top", this.container.height() - 75),
                u = !0,
                e.css("top", 23),
                e.addClass(this.toThemeProperty("jqx-popup-up"));
                var g = parseInt(this.host.outerHeight())
                  , v = parseInt(l) - Math.abs(m + g + 23);
                this.container.css("top", v)
            }
            if (this.enableBrowserBoundsDetection) {
                var w = this.testOffset(e, {
                    left: parseInt(this.container.css("left")),
                    top: parseInt(l)
                }, parseInt(this.host.outerHeight()));
                parseInt(this.container.css("top")) != w.top ? (u = !0,
                e.css("top", 23),
                e.addClass(this.toThemeProperty("jqx-popup-up"))) : e.css("top", 0),
                this.container.css("top", w.top),
                parseInt(this.container.css("left")) != w.left && this.container.css("left", w.left)
            }
            if (this._raiseEvent(7, e),
            "none" != this.animationType) {
                this.container.css("display", "block");
                var x = parseInt(e.outerHeight());
                e.stop(),
                this.isanimating = !0,
                this.opening = !0,
                "fade" == this.animationType ? (e.css("margin-top", 0),
                e.css("opacity", 0),
                e.animate({
                    opacity: 1
                }, this.openDelay, function() {
                    a.isanimating = !1,
                    a.opening = !1,
                    r.data(document.body, "openedJQXCalendar" + a.id, e),
                    a.calendarContainer.focus()
                }),
                this.timePopup && (this.timeContainer.css("margin-top", 0),
                this.timeContainer.css("opacity", 0),
                this.timeContainer.animate({
                    opacity: 1
                }, this.openDelay, function() {
                    a.isanimating = !1,
                    a.opening = !1,
                    r.data(document.body, "openedJQXCalendar" + a.id, e),
                    a.timeContainer.focus()
                }))) : (e.css("opacity", 1),
                this.timePopup && this.timeContainer.css("opacity", 1),
                u ? e.css("margin-top", x) : e.css("margin-top", -x),
                this.timePopup && (u ? this.timeContainer.css("margin-top", x) : this.timeContainer.css("margin-top", -x),
                this.timeContainer.animate({
                    "margin-top": 0
                }, this.openDelay, function() {
                    a.isanimating = !1,
                    a.opening = !1,
                    r.data(document.body, "openedJQXCalendar" + a.id, e),
                    a.timeContainer.focus()
                })),
                e.animate({
                    "margin-top": 0
                }, this.openDelay, function() {
                    a.isanimating = !1,
                    a.opening = !1,
                    r.data(document.body, "openedJQXCalendar" + a.id, e),
                    a.calendarContainer.focus()
                }))
            } else
                e.stop(),
                a.isanimating = !1,
                a.opening = !1,
                e.css("opacity", 1),
                e.css("margin-top", 0),
                this.container.css("display", "block"),
                r.data(document.body, "openedJQXCalendar" + a.id, e),
                this.calendarContainer.focus(),
                this.timePopup && (this.timeContainer.stop(),
                this.timeContainer.css("opacity", 1),
                this.timeContainer.css("margin-top", 0),
                this.timeContainer.focus());
            null == this.value && this._calendar && this._calendar._getSelectedCell() && (this._calendar._getSelectedCell().isSelected = !1),
            this.timePopup ? (this.timeButtonIcon.addClass(this.toThemeProperty("jqx-icon-time-pressed")),
            this.timeButton.addClass(this.toThemeProperty("jqx-fill-state-hover")),
            this.timeButton.addClass(this.toThemeProperty("jqx-fill-state-pressed")),
            this.timeContainer.addClass(this.toThemeProperty("jqx-fill-state-focus"))) : (this.calendarButtonIcon.addClass(this.toThemeProperty("jqx-icon-calendar-pressed")),
            this.calendarButton.addClass(this.toThemeProperty("jqx-fill-state-hover")),
            this.calendarButton.addClass(this.toThemeProperty("jqx-fill-state-pressed")),
            this.calendarContainer.addClass(this.toThemeProperty("jqx-fill-state-focus"))),
            this.host.addClass(this.toThemeProperty("jqx-fill-state-focus"))
        },
        hideCalendar: function(e, t) {
            t && (this.changeType = t);
            var i = this.calendarContainer
              , s = this.container
              , n = this;
            if (r.jqx.aria(this, "aria-expanded", !1),
            this.showTimeButton && "hidden" != this.timeContainer.css("visibility") && "cancel" != e)
                if ("range" != this.selectionMode && this.hourInput) {
                    var o = this.getDate()
                      , a = parseInt(this.hourInput.val())
                      , l = parseInt(this.minuteInput.val())
                      , d = parseInt(this.secondInput.val())
                      , h = parseInt(this.mssecondInput.val())
                      , c = this.meridianInput.val();
                    isNaN(a) && (a = 0),
                    isNaN(l) && (l = 0),
                    isNaN(d) && (d = 0),
                    isNaN(h) && (h = 0),
                    "none" != this.meridianInput.css("display") && (c.toLowerCase().indexOf("p") >= 0 && a < 12 && (a += 12),
                    c.toLowerCase().indexOf("a") >= 0 && a >= 12 && (a -= 12)),
                    o || (o = new Date),
                    o.setHours(a, l, d, h),
                    this.setDate(o)
                } else if (this.hourInput && "selected" != e) {
                    var u = this.getRange();
                    a = parseInt(this.hourInput.val()),
                    l = parseInt(this.minuteInput.val()),
                    d = parseInt(this.secondInput.val()),
                    h = parseInt(this.mssecondInput.val()),
                    c = this.meridianInput.val(),
                    isNaN(a) && (a = 0),
                    isNaN(l) && (l = 0),
                    isNaN(d) && (d = 0),
                    isNaN(h) && (h = 0),
                    "none" != this.meridianInput.css("display") && (c.toLowerCase().indexOf("p") >= 0 && a < 12 && (a += 12),
                    c.toLowerCase().indexOf("a") >= 0 && a >= 12 && (a -= 12));
                    var p = u.from;
                    p || (p = new Date),
                    p.setHours(a, l, d, h),
                    a = parseInt(this.hourInput2.val()),
                    l = parseInt(this.minuteInput2.val()),
                    d = parseInt(this.secondInput2.val()),
                    h = parseInt(this.mssecondInput2.val()),
                    c = this.meridianInput2.val(),
                    "" == l && (l = 0),
                    "" == d && (d = 0),
                    "" == h && (h = 0),
                    "none" != this.meridianInput2.css("display") && (c.toLowerCase().indexOf("p") >= 0 && a < 12 && (a += 12),
                    c.toLowerCase().indexOf("a") >= 0 && a >= 12 && (a -= 12));
                    var f = u.to;
                    if (f || (f = new Date),
                    f.setHours(a, l, d, h),
                    f.valueOf() < p.valueOf())
                        return !1;
                    this.setRange(p, f)
                } else if ("selected" == e)
                    return;
            if (r.data(document.body, "openedJQXCalendar" + this.id, null),
            "none" != this.animationType) {
                var m = i.outerHeight();
                i.css("margin-top", 0),
                this.showTimeButton && this.timeContainer.css("margin-top", 0),
                this.isanimating = !0;
                var g = -m;
                parseInt(this.container.coord().top) < parseInt(this.host.coord().top) && (g = m),
                "fade" == this.animationType ? i.animate({
                    opacity: 0
                }, this.closeDelay, function() {
                    s.css("display", "none"),
                    n.isanimating = !1
                }) : i.animate({
                    "margin-top": g
                }, this.closeDelay, function() {
                    s.css("display", "none"),
                    n.isanimating = !1
                }),
                this.showTimeButton && ("fade" == this.animationType ? this.timeContainer.animate({
                    opacity: 0
                }, this.closeDelay, function() {
                    s.css("display", "none"),
                    n.isanimating = !1
                }) : this.timeContainer.animate({
                    "margin-top": g
                }, this.closeDelay, function() {
                    s.css("display", "none"),
                    n.isanimating = !1
                }))
            } else
                s.css("display", "none");
            null != e && this._updateSelectedDate(e),
            this.timeButtonIcon.removeClass(this.toThemeProperty("jqx-icon-time-pressed")),
            this.timeButton.removeClass(this.toThemeProperty("jqx-fill-state-hover")),
            this.timeButton.removeClass(this.toThemeProperty("jqx-fill-state-pressed")),
            this.calendarButtonIcon.removeClass(this.toThemeProperty("jqx-icon-calendar-pressed")),
            this.calendarButton.removeClass(this.toThemeProperty("jqx-fill-state-hover")),
            this.calendarButton.removeClass(this.toThemeProperty("jqx-fill-state-pressed")),
            this.host.removeClass(this.toThemeProperty("jqx-fill-state-focus")),
            this.timeContainer.removeClass(this.toThemeProperty("jqx-fill-state-focus")),
            this.calendarContainer.removeClass(this.toThemeProperty("jqx-fill-state-focus")),
            this._raiseEvent(8, i)
        },
        _updateSelectedDate: function() {
            var e = this.value;
            null == e && ((e = new r.jqx._jqxDateTimeInput.getDateTime(new Date))._setHours(0),
            e._setMinutes(0),
            e._setSeconds(0),
            e._setMilliseconds(0));
            var t = e.hour
              , i = e.minute
              , s = e.second
              , n = e.millisecond;
            if ("range" != this.selectionMode || null != this._calendar.getRange().from) {
                (a = new r.jqx._jqxDateTimeInput.getDateTime(this._calendar.value.dateTime))._setHours(t),
                a._setMinutes(i),
                a._setSeconds(s),
                a._setMilliseconds(n);
                var o = this.setDate(a.dateTime);
                if ("range" == this.selectionMode && !o && this._oldDT) {
                    var a, l = this.getRange(), d = (this._oldDT,
                    !1), h = !1, c = this._oldDT.from;
                    if (null != (a = l.from) && c && a.getFullYear() == c.getFullYear() && a.getMonth() == c.getMonth() && a.getDate() == c.getDate() && a.getHours() == c.getHours() && a.getMinutes() == c.getMinutes() && a.getSeconds() == c.getSeconds() && (d = !0),
                    null != (a = l.to) && (c = this._oldDT.to) && a.getFullYear() == c.getFullYear() && a.getMonth() == c.getMonth() && a.getDate() == c.getDate() && a.getHours() == c.getHours() && a.getMinutes() == c.getMinutes() && a.getSeconds() == c.getSeconds() && (h = !0),
                    d && h)
                        return !0;
                    this._raiseEvent(0, {}),
                    this._raiseEvent(9, {})
                }
            } else
                this.setDate(null)
        },
        _closeOpenedCalendar: function(e) {
            var t = r(e.target)
              , i = r.data(document.body, "openedJQXCalendar" + e.data.me.id)
              , s = !1;
            if (r.each(t.parents(), function() {
                if (this.className && this.className.indexOf) {
                    if (-1 != this.className.indexOf("jqx-calendar"))
                        return s = !0,
                        !1;
                    if (-1 != this.className.indexOf("jqx-date-time-input-popup"))
                        return s = !0,
                        !1;
                    if (-1 != this.className.indexOf("jqx-input"))
                        return !1
                }
            }),
            r(e.target).ischildof(e.data.me.host))
                return !0;
            if (null != e.target && ("B" == e.target.tagName || "b" == e.target.tagName)) {
                var n = e.data.me.host.coord()
                  , o = e.data.me.host.width()
                  , a = e.data.me.host.height()
                  , l = parseInt(n.top)
                  , d = parseInt(n.left);
                if (l <= e.pageY && e.pageY <= l + a && d <= e.pageX && e.pageX <= d + o)
                    return !0
            }
            if (null != i && !s && i.length > 0) {
                var h = i[0].id.toString().toString().substring(13);
                r(document).find("#" + h),
                !1 !== e.data.me.hideCalendar() && r.data(document.body, "openedJQXCalendar" + e.data.me.id, null)
            }
        },
        _loadItems: function() {
            if (null != this.value) {
                this.items = new Array;
                var e = this._getFormatValue(this.formatString);
                this.items = this._parseFormatValue(e),
                this.editors = new Array;
                for (var t = 0; t < this.items.length; t++) {
                    var i = this.items[t].getDateTimeEditorByItemType(this.value, this);
                    this.editors[t] = i
                }
            }
            this._updateEditorsValue(),
            this._updateText()
        },
        _updateText: function() {
            var e = this
              , t = "";
            if (0 == e.items.length && null != e.value && e._loadItems(),
            null != e.value && (e.items.length >= 1 && (t = e.format(e.value, 0, e.items.length)),
            e.dateTimeInput.val() != t && e._raiseEvent(1, e.value)),
            "range" == e.selectionMode) {
                var i = e.getRange();
                if (fromText = e.format(e.value, 0, e.items.length),
                i.to) {
                    var s = r.jqx._jqxDateTimeInput.getDateTime(i.from);
                    fromText = e.format(s, 0, e.items.length);
                    var n = r.jqx._jqxDateTimeInput.getDateTime(i.to);
                    toText = e.format(n, 0, e.items.length),
                    " - " == (t = fromText + " - " + toText) && (t = "")
                } else
                    t = ""
            }
            e.dateTimeInput.val(t)
        },
        format: function(e, t, i) {
            for (var r = "", s = t; s < i; ++s) {
                var n = this.items[s].dateParser(e, this);
                if (this.isEditing && "ReadOnly" != this.items[s].type && "range" != this.selectionMode) {
                    var o = "Day" == this.items[s].type && this.items[s].format.length > 2;
                    if ("FORMAT_AMPM" == this.items[s].type && (o = !0,
                    n = 0 == this.editors[s].value ? this.editors[s].amString : this.editors[s].pmString),
                    !o)
                        for (n = this.items[s].dateParserInEditMode(new Number(this.editors[s].value), "d" + this.editors[s].maxEditPositions, this); n.length < this.editors[s].maxEditPositions; )
                            n = "0" + n
                }
                r += n
            }
            return r
        },
        _getFormatValueGroupLength: function(e) {
            for (i = 1; i < e.toString().length; ++i)
                if (e.substring(i, i + 1) != e.substring(0, 1))
                    return i;
            return e.length
        },
        _parseFormatValue: function(e) {
            for (var t = new Array, i = e.toString(), s = 0; i.length > 0; ) {
                var n = this._getFormatValueGroupLength(i)
                  , o = null;
                switch (i.substring(0, 1)) {
                case ":":
                case "/":
                    n = 1,
                    o = r.jqx._jqxDateTimeInput.DateTimeFormatItem._create(i.substring(0, 1), "ReadOnly", this.culture);
                    break;
                case '"':
                case "'":
                    var a = i.indexOf(i[0], 1);
                    o = r.jqx._jqxDateTimeInput.DateTimeFormatItem._create(i.substring(1, 1 + Math.max(1, a - 1)), "ReadOnly", this.culture),
                    n = Math.max(1, a + 1);
                    break;
                case "\\":
                    i.length >= 2 && (o = r.jqx._jqxDateTimeInput.DateTimeFormatItem._create(i.substring(1, 1), "ReadOnly", this.culture),
                    n = 2);
                    break;
                case "d":
                case "D":
                    o = r.jqx._jqxDateTimeInput.DateTimeFormatItem._create(i.substring(0, n), "Day", this.culture);
                    break;
                case "f":
                case "F":
                    n > 7 && (n = 7),
                    o = n > 3 ? r.jqx._jqxDateTimeInput.DateTimeFormatItem._create(i.substring(0, n), "ReadOnly", this.culture) : r.jqx._jqxDateTimeInput.DateTimeFormatItem._create(i.substring(0, n), "Millisecond", this.culture);
                    break;
                case "g":
                    o = r.jqx._jqxDateTimeInput.DateTimeFormatItem._create(i.substring(0, n), "ReadOnly", this.culture);
                    break;
                case "h":
                    o = r.jqx._jqxDateTimeInput.DateTimeFormatItem._create(i.substring(0, n), "FORMAT_hh", this.culture);
                    break;
                case "H":
                    o = r.jqx._jqxDateTimeInput.DateTimeFormatItem._create(i.substring(0, n), "FORMAT_HH", this.culture);
                    break;
                case "m":
                    o = r.jqx._jqxDateTimeInput.DateTimeFormatItem._create(i.substring(0, n), "Minute", this.culture);
                    break;
                case "M":
                    n > 4 && (n = 4),
                    o = r.jqx._jqxDateTimeInput.DateTimeFormatItem._create(i.substring(0, n), "Month", this.culture);
                    break;
                case "s":
                case "S":
                    o = r.jqx._jqxDateTimeInput.DateTimeFormatItem._create(i.substring(0, n), "Second", this.culture);
                    break;
                case "t":
                case "T":
                    o = r.jqx._jqxDateTimeInput.DateTimeFormatItem._create(i.substring(0, n), "FORMAT_AMPM", this.culture);
                    break;
                case "y":
                case "Y":
                    n > 1 ? o = r.jqx._jqxDateTimeInput.DateTimeFormatItem._create(i.substring(0, n), "Year", this.culture) : (n = 1,
                    o = r.jqx._jqxDateTimeInput.DateTimeFormatItem._create(i.substring(0, 1), dateTimeFormatInfo, "ReadOnly", this.culture));
                    break;
                case "z":
                    o = r.jqx._jqxDateTimeInput.DateTimeFormatItem._create(i.substring(0, n), "ReadOnly", this.culture);
                    break;
                default:
                    n = 1,
                    o = r.jqx._jqxDateTimeInput.DateTimeFormatItem._create(i.substring(0, 1), "ReadOnly", this.culture)
                }
                t[s] = r.extend(!0, {}, o),
                i = i.substring(n),
                s++
            }
            return t
        },
        _getFormatValue: function(e) {
            if (null != e && 0 != e.length || (e = "d"),
            1 == e.length)
                switch (e.substring(0, 1)) {
                case "d":
                    return this.localization.calendar.patterns.d;
                case "D":
                    return this.localization.calendar.patterns.D;
                case "t":
                    return this.localization.calendar.patterns.t;
                case "T":
                    return this.localization.calendar.patterns.T;
                case "f":
                    return this.localization.calendar.patterns.f;
                case "F":
                    return this.localization.calendar.patterns.F;
                case "M":
                    return this.localization.calendar.patterns.M;
                case "Y":
                    return this.localization.calendar.patterns.Y;
                case "S":
                    return this.localization.calendar.patterns.S
                }
            return 2 == e.length && "%" == e.substring(0, 1) && (e = e.substring(1)),
            e
        },
        _updateEditorsValue: function() {
            var e = this.value;
            if (null != e) {
                var t = e.year
                  , i = e.day
                  , r = e.hour
                  , s = e.millisecond
                  , n = e.second
                  , o = e.minute
                  , a = e.month;
                if (null != this.items)
                    for (var l = 0; l < this.items.length; l++)
                        switch (this.items[l].type) {
                        case "FORMAT_AMPM":
                            0 == (d = r % 12) && (d = 12),
                            this.editors[l].value = r >= 0 && r < 12 ? 0 : 1;
                            break;
                        case "Day":
                            this.editors[l].value = i;
                            break;
                        case "FORMAT_hh":
                            var d;
                            0 == (d = r % 12) && (d = 12),
                            this.editors[l].value = d;
                            break;
                        case "FORMAT_HH":
                            this.editors[l].value = r;
                            break;
                        case "Millisecond":
                            this.editors[l].value = s;
                            break;
                        case "Minute":
                            this.editors[l].value = o;
                            break;
                        case "Month":
                            this.editors[l].value = a;
                            break;
                        case "Second":
                            this.editors[l].value = n;
                            break;
                        case "Year":
                            this.editors[l].value = t
                        }
            }
        },
        updateValue: function(e) {
            if (!(this.isEditing || this.items && 0 == this.items.length)) {
                for (var t = 1, i = 1, s = 0, n = 0, o = 0, a = 0, l = 1, d = !1, h = !1, c = !1, u = !1, p = !1, f = !1, m = !1, g = new Array, v = null, w = 0, x = 0; x < this.items.length; x++)
                    switch (this.items[x].type) {
                    case "FORMAT_AMPM":
                        this.editors[x].value,
                        v = this.editors[x];
                        break;
                    case "Character":
                        break;
                    case "Day":
                        this.items[x].format.length < 3 && (i = this.editors[x].value,
                        g[w++] = this.editors[x],
                        0 == i && (i = 1),
                        c = !0);
                        break;
                    case "FORMAT_hh":
                    case "FORMAT_HH":
                        s = this.editors[x].value,
                        u = !0;
                        break;
                    case "Millisecond":
                        n = this.editors[x].value,
                        m = !0;
                        break;
                    case "Minute":
                        a = this.editors[x].value,
                        p = !0;
                        break;
                    case "Month":
                        h = !0,
                        0 == (l = this.editors[x].value) && (l = 1);
                        break;
                    case "ReadOnly":
                        break;
                    case "Second":
                        o = this.editors[x].value,
                        f = !0;
                        break;
                    case "Year":
                        if (d = !0,
                        t = this.editors[x].value,
                        this.editors[x].getDateTimeItem().format.length < 3) {
                            var b = "1900";
                            4 == b.Length && (t += 100 * parseInt("" + b[0] + b[1]))
                        }
                        0 == t && (t = 1)
                    }
                var y = null != this.value ? new Date(this.value.dateTime) : null;
                if (t > 0 && l > 0 && i > 0 && a >= 0 && s >= 0 && o >= 0 && n >= 0) {
                    var _ = this.value;
                    null != _ && (d || (t = _.year),
                    h || (l = _.month),
                    c || (i = _.day));
                    try {
                        if (l > 12 && (l = 12),
                        l < 1 && (l = 1),
                        e && _._daysInMonth(t, l) <= i && (i = _._daysInMonth(t, l),
                        null != g && g.length > 0))
                            for (x = 0; x < g.length; x++)
                                g[x].value = i;
                        null != v && (0 == v.value ? s >= 12 && (s -= 12) : s + 12 < 24 && (s += 12)),
                        this.value.dateTime.getDate(),
                        this.value._setYear(parseInt(t)),
                        this.value._setDay(i),
                        this.value._setMonth(l),
                        u && this.value._setHours(s),
                        p && this.value._setMinutes(a),
                        f && this.value._setSeconds(o),
                        m && this.value._setMilliseconds(n),
                        this._validateTimeRange()
                    } catch (e) {
                        this.value = _
                    }
                    if (null != y && (this.value.dateTime.getFullYear() != y.getFullYear() || this.value.dateTime.getDate() != y.getDate() || this.value.dateTime.getMonth() != y.getMonth() || this.value.dateTime.getHours() != y.getHours() || this.value.dateTime.getMinutes() != y.getMinutes() || this.value.dateTime.getSeconds() != y.getSeconds())) {
                        if (this.changing) {
                            var q = this.changing(y, this.value.dateTime);
                            q && (this.value = r.jqx._jqxDateTimeInput.getDateTime(q))
                        }
                        this._raiseEvent("0", this.value.dateTime),
                        this.cookies && null != this.value && r.jqx.cookie.cookie("jqxDateTimeInput" + this.element.id, this.value.dateTime.toString(), this.cookieoptions),
                        this.change && this.change(this.value.dateTime)
                    }
                }
                var j = this.editors.indexOf(this.activeEditor);
                this.items[j],
                this.value && (this.calendarContainer.jqxCalendar("_isDisabled", this.value.dateTime) ? this.dateTimeInput.addClass(this.toThemeProperty("jqx-input-invalid")) : this.dateTimeInput.removeClass(this.toThemeProperty("jqx-input-invalid")))
            }
        },
        _internalSetValue: function(e) {
            this.value._setYear(parseInt(e.year)),
            this.value._setDay(e.day),
            this.value._setMonth(e.month),
            this.value._setHours(e.hour),
            this.value._setMinutes(e.minute),
            this.value._setSeconds(e.second),
            this.value._setMilliseconds(e.milisecond)
        },
        _raiseEvent: function(e, t, i) {
            var s = this.events[e]
              , n = {};
            n.owner = this,
            null == t && (t = {}),
            null == i && (i = t);
            var o = t.charCode ? t.charCode : t.keyCode ? t.keyCode : 0
              , a = !0
              , l = this.readonly
              , d = new r.Event(s);
            if (d.owner = this,
            d.args = n,
            d.args.date = this.getDate(),
            9 == e && (d.args.type = this.changeType,
            this.changeType = null),
            this.element.value = this.dateTimeInput.val(),
            9 == e && "range" != this.selectionMode) {
                var h = d.args.date;
                if (this._oldDT) {
                    if (null != h && h.getFullYear() == this._oldDT.getFullYear() && h.getMonth() == this._oldDT.getMonth() && h.getDate() == this._oldDT.getDate() && h.getHours() == this._oldDT.getHours() && h.getMinutes() == this._oldDT.getMinutes() && h.getSeconds() == this._oldDT.getSeconds())
                        return !0;
                    r.jqx.aria(this, "aria-valuenow", this.getDate()),
                    r.jqx.aria(this, "aria-valuetext", this.getText()),
                    null != this.getDate() ? r.jqx.aria(this, "aria-label", "Current focused date is " + this.getDate().toLocaleString()) : r.jqx.aria(this, "aria-label", "Current focused date is Null")
                }
                d.args.oldValue = i,
                d.args.newValue = d.args.date,
                this._oldDT && (d.args.oldValue = this._oldDT)
            }
            if ("range" == this.selectionMode) {
                if (d.args.date = this.getRange(),
                this._oldDT && (h = d.args.date.from,
                9 == e)) {
                    var c = !1
                      , u = !1
                      , p = this._oldDT.from;
                    if (null != h && p && h.getFullYear() == p.getFullYear() && h.getMonth() == p.getMonth() && h.getDate() == p.getDate() && h.getHours() == p.getHours() && h.getMinutes() == p.getMinutes() && h.getSeconds() == p.getSeconds() && (c = !0),
                    null != (h = d.args.date.to) && (p = this._oldDT.to) && h.getFullYear() == p.getFullYear() && h.getMonth() == p.getMonth() && h.getDate() == p.getDate() && h.getHours() == p.getHours() && h.getMinutes() == p.getMinutes() && h.getSeconds() == p.getSeconds() && (u = !0),
                    c && u)
                        return !0;
                    c = null == (c = d.args.date.from) ? "" : c.toString(),
                    u = null == (u = d.args.date.to) ? "" : u.toString(),
                    r.jqx.aria(this, "aria-valuenow", c + "-" + u),
                    r.jqx.aria(this, "aria-valuetext", this.getText()),
                    c && u && r.jqx.aria(this, "aria-label", "Current focused range is " + c.toLocaleString() + "-" + u.toLocaleString())
                }
                d.args.oldValue = i,
                d.args.newValue = d.args.date,
                this._oldDT && (d.args.oldValue = this._oldDT)
            }
            if ("none" == this.host.css("display"))
                return !0;
            2 != e && 3 != e && 4 != e && 5 != e && 6 != e && (a = this.host.trigger(d),
            d.stopPropagation && d.stopPropagation());
            var f = this;
            if (l || 2 != e || this.disabled || setTimeout(function() {
                f.isEditing = !0,
                this.selectionMode,
                f._selectGroup(-1)
            }, 25),
            4 == e) {
                if (l || this.disabled) {
                    if (8 != o && 46 != o || (this.isEditing = !1,
                    this.allowKeyboardDelete && (this.allowNullDate ? this.setDate(null) : "range" != this.selectionMode ? this.setDate(this.getMinDate()) : this.setRange(this.getMinDate(), this.getMinDate()))),
                    9 == o)
                        return !0;
                    if (!t.altKey)
                        return !1
                }
                a = this._handleKeyDown(t, o)
            } else if (5 == e) {
                if (9 == o)
                    return !0;
                if (l || this.disabled)
                    return !1
            } else if (6 == e) {
                if (9 == o)
                    return !0;
                if (l || this.disabled)
                    return !1;
                a = this._handleKeyPress(t, o)
            }
            return a
        },
        _doLeftKey: function() {
            if (null != this.activeEditor) {
                this.isEditing || (this.isEditing = !0);
                var e = this.activeEditor
                  , t = !1
                  , i = this.editors.indexOf(this.activeEditor)
                  , r = i;
                if (this.enableAbsoluteSelection && i >= 0 && this.activeEditor.positions > 0)
                    return this.activeEditor.positions--,
                    void this._selectGroup(i);
                for (; i > 0; )
                    if (this.activeEditor = this.editors[--i],
                    this._selectGroup(i),
                    "ReadOnly" != this.items[i].type) {
                        t = !0;
                        break
                    }
                return t || r >= 0 && (this.activeEditor = this.editors[r]),
                null != this.activeEditor && e != this.activeEditor && "ReadOnly" != this.items[i].type && (this.enableAbsoluteSelection ? this.activeEditor.positions = this.activeEditor.maxEditPositions - 1 : this.activeEditor.positions = 0),
                this.activeEditor != e && (this._validateValue(),
                this._updateText(),
                this._selectGroup(this.editors.indexOf(this.activeEditor)),
                !0)
            }
        },
        _doRightKey: function() {
            if (null != this.activeEditor) {
                this.isEditing || (this.isEditing = !0);
                var e = this.activeEditor
                  , t = !1
                  , i = this.editors.indexOf(this.activeEditor)
                  , r = i;
                if (this.enableAbsoluteSelection && i >= 0 && this.activeEditor.positions < this.activeEditor.maxEditPositions - 1)
                    return this.activeEditor.positions++,
                    void this._selectGroup(i);
                for (; i <= this.editors.length - 2; )
                    if (this.activeEditor = this.editors[++i],
                    this._selectGroup(i),
                    "ReadOnly" != this.items[i].type) {
                        if ("Day" == this.items[i].type && this.items[i].format.length > 2)
                            break;
                        t = !0;
                        break
                    }
                return t || r >= 0 && (this.activeEditor = this.editors[r]),
                null != this.activeEditor && this.activeEditor != e && "ReadOnly" != this.items[i].type && (this.activeEditor.positions = 0),
                this.activeEditor != e && (this._validateValue(),
                this._updateText(),
                this._selectGroup(this.editors.indexOf(this.activeEditor)),
                !0)
            }
        },
        _saveSelectedText: function() {
            var e = this._selection()
              , t = ""
              , r = this.dateTimeInput.val();
            if (e.start > 0 || e.length > 0)
                for (i = e.start; i < e.end; i++)
                    t += r[i];
            return window.clipboardData && window.clipboardData.setData("Text", t),
            t
        },
        _selectWithAdvancePattern: function() {
            var e = this.editors.indexOf(this.activeEditor)
              , t = !1;
            if ("ReadOnly" != this.items[e].type && (t = !0),
            t) {
                var i = this.activeEditor;
                if (null != i && i.positions == i.maxEditPositions) {
                    this.editorText = "";
                    var r = i.value
                      , s = !1;
                    switch (this.items[e].type) {
                    case "FORMAT_AMPM":
                        r < 0 ? r = 0 : r > 1 && (r = 1);
                        break;
                    case "Character":
                        break;
                    case "Day":
                        r < 1 ? r = 1 : r > 31 && (r = 31);
                        break;
                    case "FORMAT_hh":
                        r < 1 ? r = 1 : r > 12 && (r = 12);
                        break;
                    case "FORMAT_HH":
                        r < 0 ? r = 0 : r > 23 && (r = 23);
                        break;
                    case "Millisecond":
                        r < 0 ? r = 0 : r > 99 && (r = 99);
                        break;
                    case "Minute":
                        r < 0 ? r = 0 : r > 59 && (r = 59);
                        break;
                    case "Month":
                        r < 1 ? r = 1 : r > 12 && (r = 12);
                        break;
                    case "ReadOnly":
                        break;
                    case "Second":
                        r < 0 ? r = 0 : r > 59 && (r = 59);
                        break;
                    case "Year":
                        r < this.minDate.year ? r = this.minDate.year : r > this.maxDate.year && (r = this.maxDate.year)
                    }
                    return i.value != r && (s = !0),
                    !s && (this.isEditing = !1,
                    this._validateValue(),
                    this._updateText(),
                    this.isEditing = !0,
                    this._doRightKey(),
                    !0)
                }
            }
        },
        _handleKeyPress: function(e, t) {
            var i = this._selection()
              , r = e.ctrlKey || e.metaKey;
            if (r && 97 == t || r && 65 == t)
                return !0;
            if (8 == t)
                return i.start > 0 && this._setSelectionStart(i.start),
                !1;
            if (46 == t)
                return i.start < this.items.length && this._setSelectionStart(i.start),
                !1;
            if (27 === t)
                return this._firstFocusDate && (this.setDate(this._firstFocusDate),
                this._setSelectionStart(0),
                this._selectGroup(-1)),
                !1;
            if (i.start >= 0) {
                this.changeType = "keyboard";
                var s = String.fromCharCode(t)
                  , n = parseInt(s);
                if ("p" != s && "a" != s && "A" != s && "P" != s || this.activeEditor && "FORMAT_AMPM" == this.activeEditor.item.type && (0 != this.activeEditor.value || "p" != s && "P" != s ? 1 != this.activeEditor.value || "a" != s && "A" != s || this.spinDown() : this.spinUp()),
                !isNaN(n)) {
                    "block" == this.container.css("display") && this.hideCalendar(),
                    this.updateValue(),
                    this._updateText();
                    var o = this.editors.indexOf(this.activeEditor)
                      , a = null;
                    if (this.isEditing = !0,
                    "ReadOnly" != o.type && (a = this.activeEditor),
                    null != a && 0 == a.positions && (this.editorText = ""),
                    null == this.activeEditor && (this.activeEditor = this.editors[0]),
                    null == this.activeEditor)
                        return !1;
                    this.activeEditor.insert(s),
                    null != a && this.editorText.length >= a.maxEditPositions && (this.editorText = ""),
                    this.editorText += s;
                    var l = this._selectWithAdvancePattern();
                    if (this.activeEditor.positions == this.activeEditor.maxEditPositions) {
                        var d = this._getLastEditableEditorIndex();
                        this.editors.indexOf(this.activeEditor) == d && l && this.enableAbsoluteSelection ? this.activeEditor.positions = this.activeEditor.maxEditPositions - 1 : this.activeEditor.positions = 0
                    }
                    return this.updateValue(),
                    this._updateText(),
                    this._selectGroup(this.editors.indexOf(this.activeEditor)),
                    !1
                }
            }
            return this._isSpecialKey(t)
        },
        _getLastEditableEditorIndex: function() {
            for (itemIndex = this.items.length - 1; itemIndex >= 0; itemIndex--)
                if ("ReadOnly" != this.items[itemIndex].type)
                    return itemIndex;
            return -1
        },
        _handleKeyDown: function(e, t) {
            var i = this;
            if (this.timePopup = !1,
            84 == t && (this.timePopup = !0),
            115 == e.keyCode) {
                if (i.isOpened())
                    return i.hideCalendar("keyboard", "keyboard"),
                    !1;
                if (!i.isOpened())
                    return i.showCalendar("keyboard", "keyboard"),
                    !1
            }
            if (e.altKey) {
                if (38 == e.keyCode) {
                    if (i.isOpened())
                        return i.showTimeButton && !i.showCalendarButton && (i.timePopup = !0),
                        i.hideCalendar("keyboard", "keyboard"),
                        !1
                } else if (40 == e.keyCode && !i.isOpened())
                    return i.showTimeButton && !i.showCalendarButton && (i.timePopup = !0),
                    i.showCalendar("keyboard", "keyboard"),
                    !1
            } else if (e.ctrlKey)
                if (this.timePopup = !0,
                38 == e.keyCode) {
                    if (i.isOpened())
                        return i.hideCalendar("keyboard", "keyboard"),
                        !1
                } else if (40 == e.keyCode && !i.isOpened())
                    return i.showCalendar("keyboard", "keyboard"),
                    !1;
            if (i.isOpened())
                return 9 == e.keyCode ? (i.hideCalendar("selected", "keyboard"),
                !0) : void 0;
            i._selection();
            var s = e.ctrlKey || e.metaKey;
            if (s && 99 == t || s && 67 == t)
                return i._saveSelectedText(e),
                !0;
            if (s && 122 == t || s && 90 == t)
                return !1;
            if (s && 118 == t || s && 86 == t || e.shiftKey && 45 == t) {
                i.val();
                var n = this
                  , o = r('<textarea style="position: absolute; left: -1000px; top: -1000px;"/>');
                return r("body").append(o),
                o.select(),
                setTimeout(function() {
                    var e = o.val();
                    n.setDate(e),
                    o.remove()
                }, 100),
                !0
            }
            if (8 == t || 46 == t) {
                if (e.altKey || s || 46 != t) {
                    if (null != i.activeEditor) {
                        var a = i.editors.indexOf(i.activeEditor);
                        if (i.activeEditor.positions >= 0) {
                            var l = i._format(Number(i.activeEditor.value), "d" + i.activeEditor.maxEditPositions, i.culture);
                            if (tmp = l,
                            tmp = tmp.substring(0, i.activeEditor.positions) + "0" + tmp.substring(i.activeEditor.positions + 1),
                            parseInt(tmp) < i.activeEditor.minValue && (tmp = i._format(Number(i.activeEditor.minValue), "d" + i.activeEditor.maxEditPositions, i.culture)),
                            i.enableAbsoluteSelection ? i.activeEditor.value = tmp : i.activeEditor.value = i.activeEditor.minValue,
                            i._validateValue(),
                            i._updateText(),
                            i.changeType = "keyboard",
                            8 == t) {
                                var d = this;
                                i.enableAbsoluteSelection && i.activeEditor.positions > 0 ? setTimeout(function() {
                                    d.activeEditor.positions = d.activeEditor.positions - 1,
                                    d._selectGroup(a)
                                }, 10) : setTimeout(function() {
                                    d._doLeftKey()
                                }, 10)
                            } else
                                i._selectGroup(a)
                        } else
                            i._doLeftKey()
                    }
                } else
                    i.isEditing = !1,
                    i.allowKeyboardDelete && (i.changeType = "keyboard",
                    i.allowNullDate ? i.setDate(null) : "range" != i.selectionMode ? i.setDate(i.getMinDate()) : i.setRange(i.getMinDate(), i.getMinDate()));
                return !1
            }
            if (38 == t)
                return this.spinUp(),
                i.changeType = "keyboard",
                !1;
            if (40 == t)
                return this.spinDown(),
                i.changeType = "keyboard",
                !1;
            if (9 == t) {
                if (null == i.value)
                    return !0;
                if (e.shiftKey)
                    var h = this._doLeftKey();
                else
                    h = this._doRightKey();
                return !h
            }
            if (37 == t)
                return this._editor ? ((h = this._doLeftKey()) || (this.isEditing = !1,
                this._validateValue()),
                !h) : (h = this._doLeftKey(),
                !1);
            if (39 == t || 191 == t)
                return this._editor ? ((h = this._doRightKey()) || (this.isEditing = !1,
                this._validateValue()),
                !h) : (h = this._doRightKey(),
                !1);
            var c = this._isSpecialKey(t);
            return null == this.value && (t >= 48 && t <= 57 || t >= 96 && t <= 105) && (i.changeType = "keyboard",
            new Date >= this.getMinDate() && new Date <= this.getMaxDate() ? this.setDate(new Date) : this.setDate(this.getMaxDate())),
            !r.jqx.browser.mozilla || !!(r.jqx.browser.mozilla && r.jqx.browser.version > 24) || c
        },
        _isSpecialKey: function(e) {
            return 8 == e || 9 == e || 13 == e || 35 == e || 36 == e || 37 == e || 39 == e || 27 == e || 46 == e
        },
        _selection: function() {
            if ("selectionStart"in this.dateTimeInput[0]) {
                var e = this.dateTimeInput[0]
                  , t = e.selectionEnd - e.selectionStart;
                return {
                    start: e.selectionStart,
                    end: e.selectionEnd,
                    length: t,
                    text: e.value
                }
            }
            var i = document.selection.createRange();
            if (null == i)
                return {
                    start: 0,
                    end: e.value.length,
                    length: 0
                };
            var r = this.dateTimeInput[0].createTextRange()
              , s = r.duplicate();
            return r.moveToBookmark(i.getBookmark()),
            s.setEndPoint("EndToStart", r),
            t = i.text.length,
            {
                start: s.text.length,
                end: s.text.length + i.text.length,
                length: t,
                text: i.text
            }
        },
        _selectGroup: function(e, t) {
            if ("none" != this.host.css("display") && !this.readonly) {
                t || (t = this._selection());
                for (var i = "", r = "", s = null, n = 0; n < this.items.length; n++) {
                    if (r = this.items[n].dateParser(this.value, this),
                    this.isEditing && "ReadOnly" != this.items[n].type && !("Day" == this.items[n].type && this.items[n].format.length > 2) && "FORMAT_AMPM" != this.items[n].type)
                        for (r = this.items[n].dateParserInEditMode(new Number(this.editors[n].value), "d" + this.editors[n].maxEditPositions, this); r.length < this.editors[n].maxEditPositions; )
                            r = "0" + r;
                    if (i += r,
                    "ReadOnly" != this.items[n].type && !("Day" == this.items[n].type && this.items[n].format.length > 2))
                        if (null != e && -1 != e) {
                            if (n >= e) {
                                var o = i.length - r.length
                                  , a = r.length;
                                this.enableAbsoluteSelection && !isNaN(parseInt(r)) && this.isEditing && -1 != e && (a = 1,
                                o += this.editors[n].positions),
                                o == this.dateTimeInput.val().length && o--,
                                this._setSelection(o, o + a),
                                s = this.editors[n],
                                this.activeEditor = s;
                                break
                            }
                        } else if (i.length >= t.start) {
                            s = this.editors[n],
                            this.activeEditor = s,
                            o = i.length - r.length,
                            a = 1,
                            this.enableAbsoluteSelection ? !isNaN(parseInt(r)) && this.isEditing && -1 != e && (a = 1,
                            o += this.editors[n].positions) : a = r.length,
                            this._setSelection(o, o + a);
                            break
                        }
                }
                n < this.items.length && -1 == e && "ReadOnly" != this.items[n].type && (this.activeEditor.positions = 0);
                var l = this._selection();
                0 == l.length && l.start > 0 && this._getLastEditableEditorIndex()
            }
        },
        _getLastEditableEditorIndex: function() {
            var e = -1;
            for (i = 0; i < this.editors.length; i++)
                "ReadOnly" != this.items[i].type && ("Day" == this.items[i].type && this.items[i].format.length > 2 || (e = i));
            return e
        },
        _setSelection: function(e, t) {
            try {
                if ("selectionStart"in this.dateTimeInput[0])
                    this.dateTimeInput[0].setSelectionRange(e, t);
                else {
                    var i = this.dateTimeInput[0].createTextRange();
                    i.collapse(!0),
                    i.moveEnd("character", t),
                    i.moveStart("character", e),
                    i.select()
                }
            } catch (e) {}
        },
        _setSelectionStart: function(e) {
            this._setSelection(e, e)
        },
        destroy: function() {
            r.jqx.utilities.resize(this.host, null, !0),
            this.host.removeClass("jqx-rc-all"),
            this.timePopupElement && this.timePopupElement.remove(),
            this._calendar.destroy(),
            this.container.remove(),
            this._removeHandlers(),
            this.dateTimeInput.remove(),
            this.host.remove()
        },
        refreshValue: function() {
            this._refreshValue()
        },
        refresh: function(e) {
            1 != e && (this._setSize(),
            this._arrange())
        },
        resize: function(e, t) {
            this.width = e,
            this.height = t,
            this.refresh()
        },
        _setOption: function(e, t, i) {
            "value" === e && (this.selectionMode,
            this._oldDT = null,
            this.value = t,
            this._refreshValue(),
            this._raiseEvent(9, {
                type: null
            })),
            "maxDate" == e && (this._calendar.maxDate = t,
            this._raiseEvent(9, {
                type: null
            })),
            "minDate" == e && (this._calendar.minDate = t,
            this._raiseEvent(9, {
                type: null
            })),
            "showCalendarButton" == e && (t ? this.calendarButton.css("display", "block") : this.calendarButton.css("display", "none")),
            "disabled" == e && this.dateTimeInput.attr("disabled", t),
            "readonly" == e && (this.readonly = t,
            this.dateTimeInput.css("readonly", t)),
            "textAlign" == e && (this.dateTimeInput.css("text-align", t),
            this.textAlign = t),
            "width" == e ? (this.width = t,
            this.width = parseInt(this.width),
            this._arrange()) : "height" == e && (this.height = t,
            this.height = parseInt(this.height),
            this._arrange())
        },
        _updateHint: function() {
            var e = this;
            e.hint && e.isMaterialized() && setTimeout(function() {
                0 === e.dateTimeInput[0].value.length ? (e.element.removeAttribute("hint"),
                e.label[0].innerHTML = e.placeHolder) : e.hint && e.element.setAttribute("hint", !0)
            })
        },
        _refreshValue: function() {
            this._updateEditorsValue(),
            this.updateValue(),
            this._validateValue(),
            this._updateText(),
            this._updateHint()
        }
    }),
    function(e) {
        e.jqx._jqxDateTimeInput.DateTimeFormatItem = {},
        e.extend(e.jqx._jqxDateTimeInput.DateTimeFormatItem, {
            _create: function(e, t, i) {
                return this.format = e,
                this.type = t,
                this.culture = i,
                this
            },
            _itemValue: function() {
                switch (this.format.length) {
                case 1:
                    return 9;
                case 2:
                    return 99;
                case 3:
                default:
                    return 999
                }
            },
            _maximumValue: function() {
                switch (this.format.length) {
                case 1:
                    return 9;
                case 2:
                    return 99;
                case 3:
                default:
                    return 999
                }
            },
            dateParser: function(e, t) {
                return null == e ? "" : t._format(e.dateTime, 1 == this.format.length ? "%" + this.format : this.format, this.culture)
            },
            dateParserInEditMode: function(e, t, i) {
                return null == e ? "" : i._format(e.toString(), 1 == t.length ? "%" + t : t, this.culture)
            },
            getDateTimeEditorByItemType: function(t, i) {
                switch (this.type) {
                case "FORMAT_AMPM":
                    var r = e.jqx._jqxDateTimeInput.AmPmEditor._createAmPmEditor(this.format, t.hour / 12, i.localization.calendar.AM[0], i.localization.calendar.PM[0], this, i);
                    return e.extend({}, r);
                case "Character":
                    return null;
                case "Day":
                    var s, n = t.year, o = t.month;
                    s = 3 == this.format.length ? i.localization.calendar.days.namesAbbr : this.format.length > 3 ? i.localization.calendar.days.names : null;
                    t.day;
                    null != s && t.dayOfWeek + 1;
                    var a = e.jqx._jqxDateTimeInput.DateEditor._createDayEditor(t, t.day, 1, t._daysInMonth(n, o), 1 == this.format.length ? 1 : 2, 2, s, this, i);
                    return e.extend({}, a);
                case "FORMAT_hh":
                    var l = t.hour % 12;
                    0 == l && (l = 12);
                    var d = e.jqx._jqxDateTimeInput.NumberEditor._createNumberEditor(l, 1, 12, 1 == this.format.length ? 1 : 2, 2, this, i);
                    return e.extend({}, d);
                case "FORMAT_HH":
                    var h = e.jqx._jqxDateTimeInput.NumberEditor._createNumberEditor(t.hour, 0, 23, 1 == this.format.length ? 1 : 2, 2, this, i);
                    return e.extend({}, h);
                case "Millisecond":
                    var c = e.jqx._jqxDateTimeInput.NumberEditor._createNumberEditor(t.millisecond / this._itemValue(), 0, this._maximumValue(), this.format.length, this.format.length, this, i);
                    return e.extend({}, c);
                case "Minute":
                    var u = e.jqx._jqxDateTimeInput.NumberEditor._createNumberEditor(t.minute, 0, 59, 1 == this.format.length ? 1 : 2, 2, this, i);
                    return e.extend({}, u);
                case "Month":
                    var p;
                    p = 3 == this.format.length ? i.localization.calendar.months.namesAbbr : this.format.length > 3 ? i.localization.calendar.months.names : null;
                    var f = e.jqx._jqxDateTimeInput.DateEditor._createMonthEditor(t.month, 2 == this.format.length ? 2 : 1, p, this, i);
                    return e.extend({}, f);
                case "ReadOnly":
                    return e.jqx._jqxDateTimeInput.DisabledEditor._create(this.format.length, t.day, this, i);
                case "Second":
                    var m = e.jqx._jqxDateTimeInput.NumberEditor._createNumberEditor(t.second, 0, 59, 1 == this.format.length ? 1 : 2, 2, this, i);
                    return e.extend({}, m);
                case "Year":
                    var g = e.jqx._jqxDateTimeInput.DateEditor._createYearEditor(t.year, 4, this, i);
                    return e.extend({}, g)
                }
                return null
            }
        })
    }(jqxBaseFramework),
    function(e) {
        e.jqx._jqxDateTimeInput.DateEditor = e.extend(e.jqx._jqxDateTimeInput.DateEditor, {
            formatValueLength: 0,
            handleYears: !1,
            handleDays: !1,
            handleMonths: !1,
            positions: 0,
            value: 0,
            minEditPositions: 0,
            maxEditPositions: 0,
            minValue: 0,
            maxValue: 0,
            item: null,
            dateTimeFormatInfo: null,
            days: null,
            dateTimeMonths: null,
            lastDayInput: null,
            minPositions: function() {
                return this.handleYears && 4 == this.formatValueLength ? this.positions <= 1 ? 1 : this.positions >= 4 ? 4 : this.positions : this.minEditPositions
            },
            initializeFields: function(e, t, i, r, s) {
                this.minValue = e,
                this.maxValue = t,
                this.minEditPositions = i,
                this.maxEditPositions = r,
                this.updateActiveEditor(e),
                this.item = s
            },
            _createYearEditor: function(t, i, r, s) {
                return e.jqx._jqxDateTimeInput.DateEditor = e.extend(!0, {}, this),
                this.initializeFields(0, i < 4 ? 99 : 9999, 2 == i ? 2 : 1, i > 3 ? 4 : 2, r),
                this.initializeYearEditor(t, i, r.culture),
                this.handleYears = !0,
                this.that = s,
                this
            },
            initializeYearEditor: function(e, t, i) {
                this.formatValueLength = t,
                this.dateTimeFormatInfo = i;
                var r = e;
                r = Math.min(r, 9999),
                r = Math.max(r, 1),
                r = this.formatValueLength < 4 ? r % 100 : r,
                this.updateActiveEditor(r),
                this.value = r
            },
            updateActiveEditor: function(e) {
                this.value = e,
                this.positions = 0
            },
            _createDayEditor: function(t, i, r, s, n, o, a, l, d) {
                return e.jqx._jqxDateTimeInput.DateEditor = e.extend(!0, {}, this),
                this.initializeFields(r, s, 1, o, l),
                this.currentValue = t,
                this.value = i,
                this.days = a,
                this.handleDays = !0,
                this.that = d,
                this
            },
            getDayOfWeek: function(t) {
                return typeof this.currentValue == e.jqx._jqxDateTimeInput.DateTime && this.currentValue.dayOfWeek(),
                t
            },
            defaultTextValue: function() {
                this.value;
                var e = this.minEditPositions;
                return this.that._format(this.value, "d" + e, "")
            },
            textValue: function() {
                if (this.handleDays) {
                    if (null == this.days)
                        return this.defaultTextValue();
                    var e = this.value % 7 + 1;
                    return e = this.getDayOfWeek(e),
                    this.days[e]
                }
                return this.handleMonths ? null == this.dateTimeMonths || this.value < 1 || this.value > 12 ? this.defaultTextValue() : this.dateTimeMonths[this.value - 1] : this.defaultTextValue()
            },
            defaultInsertString: function(e) {
                if (null == e)
                    return this.deleteValue();
                if (0 == e.length)
                    return this.deleteValue();
                var t = e.substring(0, 1);
                if (!isNaN(t)) {
                    var i;
                    return i = this.that._format(Number(this.value), "d" + this.maxEditPositions, this.culture),
                    this.positions >= this.maxEditPositions && (this.positions = 0),
                    i = i.substring(0, this.positions) + t + i.substring(this.positions + 1),
                    i = this.setValueByString(i, 1),
                    !0
                }
            },
            setValueByString: function(e, t) {
                e = this.fixValueString(e);
                var i = new Number(e);
                return this.value = i,
                this.positions += t,
                e
            },
            fixValueString: function(e) {
                return e.length > this.maxEditPositions && (e = e.substring(e.length - this.maxEditPositions)),
                e
            },
            initializeValueString: function(e) {
                var t;
                return t = "",
                this.hasDigits() && (t = e),
                t
            },
            deleteValue: function() {
                return (this.value != this.minValue || 0 != this.hasDigits()) && (this.updateActiveEditor(this.minValue),
                !0)
            },
            hasDigits: function() {
                return this.positions > 0
            },
            insert: function(e) {
                if (this.handleDays) {
                    if (null != this.days) {
                        var t = !1;
                        if (t = this.insertLongString(e, t))
                            return t;
                        if (t = this.insertShortString(e, t))
                            return t
                    }
                    return 1 == this.value && null != this.lastDayInput && this.lastDayInput.toString().length > 0 && "0" == this.lastDayInput.toString() && (this.value = 0),
                    this.lastDayInput = e,
                    this.defaultInsertString(e)
                }
                if (this.handleMonths && null != this.dateTimeMonths) {
                    t = !1;
                    if (t = this.insertLongString2(e, t))
                        return t;
                    if (t = this.insertShortString2(e, t))
                        return t
                }
                return this.defaultInsertString(e)
            },
            insertShortString: function(e, t) {
                if (1 == e.length)
                    for (i = 0; i < 6; ++i) {
                        var r = (this.value + i) % 7 + 1;
                        if (this.days[r - 1].substring(0, 1) == e)
                            return this.updateActiveEditor(r),
                            t = !0
                    }
                return t
            },
            insertLongString: function(e, t) {
                if (e.length > 0)
                    for (i = 0; i < 6; ++i) {
                        var r = (this.value + i) % 7 + 1;
                        if (this.days[r - 1] == e)
                            return this.updateActiveEditor(r),
                            t = !0
                    }
                return t
            },
            _createMonthEditor: function(t, i, r, s, n) {
                return e.jqx._jqxDateTimeInput.DateEditor = e.extend(!0, {}, this),
                this.initializeFields(1, 12, i, 2, s),
                this.dateTimeMonths = r,
                this.value = t,
                null != this.dateTimeMonths && null != this.dateTimeMonths[12] && this.dateTimeMonths[12].length > 0 && (this.dateTimeMonths = null),
                this.handleMonths = !0,
                this.that = n,
                this
            },
            insertLongString2: function(e, t) {
                if (e.length > 0)
                    for (i = 0; i < 11; ++i)
                        if (month = (this.value + i) % 12 + 1,
                        this.dateTimeMonths[month - 1] == e)
                            return this.updateActiveEditor(month),
                            t = !0;
                return t
            },
            insertShortString2: function(e, t) {
                if (1 == e.length)
                    for (i = 0; i < 11; ++i) {
                        var r = (this.value + i) % 12 + 1;
                        if (this.dateTimeMonths[r - 1].substring(0, 1) == e)
                            return this.updateActiveEditor(r),
                            t = !0
                    }
                return t
            },
            correctMaximumValue: function(e) {
                return e > this.maxValue && (e = this.minValue),
                e
            },
            correctMinimumValue: function(e) {
                return e < this.minValue && (e = this.maxValue),
                e
            },
            increaseValue: function(e) {
                var t = this.that._format(Number(this.value), "d" + this.maxEditPositions, this.culture)
                  , i = t.toString()[this.positions];
                if ((i = parseInt(i) + 1) > 9 && (i = 0),
                !e) {
                    var r = this.value + 1;
                    return r = this.correctMaximumValue(r),
                    this.updateActiveEditor(r),
                    !0
                }
                var s = t.substring(0, this.positions) + i + t.substring(this.positions + 1);
                return !(s == this.value && !this.hasDigits()) && (this.updateActiveEditor(s),
                !0)
            },
            decreaseValue: function(e) {
                var t = this.that._format(Number(this.value), "d" + this.maxEditPositions, this.culture)
                  , i = t.toString()[this.positions];
                if ((i = parseInt(i) - 1) < 0 && (i = 9),
                !e) {
                    var r = this.value - 1;
                    return r = this.correctMinimumValue(r),
                    this.updateActiveEditor(r),
                    !0
                }
                var s = t.substring(0, this.positions) + i + t.substring(this.positions + 1);
                return !(s == this.value && !this.hasDigits()) && (this.updateActiveEditor(s),
                !0)
            },
            getDateTimeItem: function() {
                return this.item
            }
        })
    }(jqxBaseFramework),
    function(e) {
        e.jqx._jqxDateTimeInput.NumberEditor = {},
        e.extend(e.jqx._jqxDateTimeInput.NumberEditor, {
            formatValueLength: 0,
            positions: 0,
            value: 0,
            minEditPositions: 0,
            maxEditPositions: 0,
            minValue: 0,
            maxValue: 0,
            item: null,
            minPositions: function() {
                return this.handleYears && 4 == this.formatValueLength ? this.positions <= 1 ? 1 : this.positions >= 4 ? 4 : this.positions : this.minEditPositions
            },
            _createNumberEditor: function(t, i, r, s, n, o, a) {
                return e.jqx._jqxDateTimeInput.NumberEditor = e.extend(!0, {}, this),
                this.initializeFields(i, r, s, n, o),
                this.that = a,
                this
            },
            initializeFields: function(e, t, i, r, s) {
                this.minValue = e,
                this.maxValue = t,
                this.minEditPositions = i,
                this.maxEditPositions = r,
                this.updateActiveEditor(e),
                this.item = s
            },
            updateActiveEditor: function(e) {
                this.value = e,
                this.positions = 0
            },
            getDayOfWeek: function(t) {
                return typeof this.currentValue == e.jqx._jqxDateTimeInput.DateTime && this.currentValue.dayOfWeek(),
                t
            },
            textValue: function() {
                this.value;
                var e = this.minEditPositions;
                return this.that._format(this.value, "d" + e, "")
            },
            insert: function(e) {
                if (null == e)
                    return this.deleteValue();
                if (0 == e.length)
                    return this.deleteValue();
                var t = e.substring(0, 1);
                if (!isNaN(t)) {
                    var i;
                    return i = this.that._format(Number(this.value), "d" + this.maxEditPositions, this.culture),
                    this.positions >= this.maxEditPositions && (this.positions = 0),
                    i = i.substring(0, this.positions) + t + i.substring(this.positions + 1),
                    i = this.setValueByString(i, 1),
                    !0
                }
            },
            setValueByString: function(e, t) {
                e = this.fixValueString(e);
                var i = new Number(e);
                return this.value = i,
                this.positions += t,
                e
            },
            fixValueString: function(e) {
                return e.length > this.maxEditPositions && (e = e.substring(e.length - this.maxEditPositions)),
                e
            },
            initializeValueString: function(e) {
                var t;
                return t = "",
                this.hasDigits() && (t = e),
                t
            },
            deleteValue: function() {
                return (this.value != this.minValue || 0 != this.hasDigits()) && (this.updateActiveEditor(this.minValue),
                !0)
            },
            hasDigits: function() {
                return this.positions > 0
            },
            correctMaximumValue: function(e) {
                return e > this.maxValue && (e = this.minValue),
                e
            },
            correctMinimumValue: function(e) {
                return e < this.minValue && (e = this.maxValue),
                e
            },
            increaseValue: function(e) {
                var t = this.that._format(Number(this.value), "d" + this.maxEditPositions, this.culture)
                  , i = t.toString()[this.positions];
                if ((i = parseInt(i) + 1) > 9 && (i = 0),
                !e) {
                    var r = this.value + 1;
                    return r = this.correctMaximumValue(r),
                    this.updateActiveEditor(r),
                    !0
                }
                var s = t.substring(0, this.positions) + i + t.substring(this.positions + 1);
                return !(s == this.value && !this.hasDigits()) && (this.updateActiveEditor(s),
                !0)
            },
            decreaseValue: function(e) {
                var t = this.that._format(Number(this.value), "d" + this.maxEditPositions, this.culture)
                  , i = t.toString()[this.positions];
                if ((i = parseInt(i) - 1) < 0 && (i = 9),
                !e) {
                    var r = this.value - 1;
                    return r = this.correctMinimumValue(r),
                    this.updateActiveEditor(r),
                    !0
                }
                var s = t.substring(0, this.positions) + i + t.substring(this.positions + 1);
                return !(s == this.value && !this.hasDigits()) && (this.updateActiveEditor(s),
                !0)
            },
            getDateTimeItem: function() {
                return this.item
            }
        })
    }(jqxBaseFramework),
    function(e) {
        e.jqx._jqxDateTimeInput.DisabledEditor = {},
        e.extend(e.jqx._jqxDateTimeInput.DisabledEditor, {
            _create: function(e, t, i, r, s, n) {
                return this.format = e,
                this.value = -1,
                this.item = s,
                this.that = n,
                this
            },
            textValue: function() {
                return ""
            },
            insert: function(e) {
                return !1
            },
            deleteValue: function() {
                return !1
            },
            increaseValue: function() {
                return !1
            },
            decreaseValue: function() {
                return !1
            },
            getDateTimeItem: function() {
                return this.item
            }
        })
    }(jqxBaseFramework),
    function(e) {
        e.jqx._jqxDateTimeInput.AmPmEditor = {},
        e.extend(e.jqx._jqxDateTimeInput.AmPmEditor, {
            _createAmPmEditor: function(e, t, i, r, s, n) {
                return this.format = e,
                this.value = t,
                this.minValue = 0,
                this.amString = i,
                this.pmString = r,
                this.item = s,
                this.that = n,
                i == r && (this.amString = "<" + i,
                this.pmString = ">" + r),
                this
            },
            textValue: function() {
                var e = this.amString;
                return 0 != this.value && (e = this.pmString),
                1 == this.format.length && e.length > 1 && (e = e.substring(0, 1)),
                e
            },
            insert: function(e) {
                var t = e.toString();
                if (0 == t.Length)
                    return this.deleteValue();
                var i = !1;
                if (this.amString.Length > 0 && this.pmString.Length > 0) {
                    var r = amString[0]
                      , s = t[0]
                      , n = pmString[0];
                    r.toString() == s.toString() ? (this.value = 0,
                    i = !0) : n.toString() == s.toString() && (this.value = 1,
                    i = !0)
                } else
                    this.pmString.Length > 0 ? (this.value = 1,
                    i = !0) : this.amString.Length > 0 && (this.value = 0,
                    i = !0);
                return i
            },
            deleteValue: function() {
                if (0 == this.amString.Length && 0 != this.pmString.Length) {
                    if (0 == this.value)
                        return !1;
                    this.value = 0
                } else {
                    if (1 == this.value)
                        return !1;
                    this.value = 1
                }
                return !0
            },
            increaseValue: function() {
                return this.value = 1 - this.value,
                !0
            },
            decreaseValue: function() {
                return this.increaseValue(),
                !0
            },
            getDateTimeItem: function() {
                return this.item
            }
        })
    }(jqxBaseFramework),
    jqxBaseFramework.jqx._jqxDateTimeInput.getDateTime = function(e) {
        return {
            dateTime: new Date(e),
            daysPer4Years: 1461,
            daysPerYear: 365,
            daysToMonth365: {
                0: 0,
                1: 31,
                2: 59,
                3: 90,
                4: 120,
                5: 151,
                6: 181,
                7: 212,
                8: 243,
                9: 273,
                10: 304,
                11: 334,
                12: 365
            },
            daysToMonth366: {
                0: 0,
                1: 31,
                2: 60,
                3: 91,
                4: 121,
                5: 152,
                6: 182,
                7: 213,
                8: 244,
                9: 274,
                10: 305,
                11: 335,
                12: 366
            },
            maxValue: 3155378976e9,
            millisPerDay: 864e5,
            millisPerHour: 36e5,
            millisPerMinute: 6e4,
            millisPerSecond: 1e3,
            minTicks: 0,
            minValue: 0,
            ticksPerDay: 864e9,
            ticksPerHour: 36e9,
            ticksPerMillisecond: 1e4,
            ticksPerMinute: 6e8,
            ticksPerSecond: 1e7,
            hour: e.getHours(),
            minute: e.getMinutes(),
            day: e.getDate(),
            second: e.getSeconds(),
            month: 1 + e.getMonth(),
            year: e.getFullYear(),
            millisecond: e.getMilliseconds(),
            dayOfWeek: e.getDay(),
            isWeekend: function(e) {
                return null != e && null != e || (e = this.dateTime),
                e.getDay() % 6 == 0
            },
            dayOfYear: function(e) {
                null != e && null != e || (e = this.dateTime);
                var t = new Date(e.getFullYear(),0,1);
                return Math.ceil((e - t) / 864e5)
            },
            _setDay: function(e) {
                null != e && null != e || (e = 0),
                this.dateTime.setDate(e),
                this.day = this.dateTime.getDate()
            },
            _setMonth: function(e) {
                null != e && null != e || (e = 0),
                this.dateTime.setMonth(e - 1),
                this.month = 1 + this.dateTime.getMonth()
            },
            _setYear: function(e) {
                null != e && null != e || (e = 0),
                this.dateTime.setFullYear(e),
                this.year = this.dateTime.getFullYear()
            },
            _setHours: function(e) {
                null != e && null != e || (e = 0),
                this.dateTime.setHours(e),
                this.hour = this.dateTime.getHours()
            },
            _setMinutes: function(e) {
                null != e && null != e || (e = 0),
                this.dateTime.setMinutes(e),
                this.minute = this.dateTime.getMinutes()
            },
            _setSeconds: function(e) {
                null != e && null != e || (e = 0),
                this.dateTime.setSeconds(e),
                this.second = this.dateTime.getSeconds()
            },
            _setMilliseconds: function(e) {
                null != e && null != e || (e = 0),
                this.dateTime.setMilliseconds(e),
                this.millisecond = this.dateTime.getMilliseconds()
            },
            _addDays: function(e) {
                var t = this.dateTime
                  , i = t.getDate();
                return t.setDate(t.getDate() + e),
                i === t.getDate() && t.setHours(t.getHours() + t.getTimezoneOffset() / 60),
                t
            },
            _addWeeks: function(e) {
                var t = this.dateTime;
                return t.setDate(t.getDate() + 7 * e),
                t
            },
            _addMonths: function(e) {
                var t = this.dateTime;
                return t.setMonth(t.getMonth() + e),
                t
            },
            _addYears: function(e) {
                var t = this.dateTime;
                return t.setFullYear(t.getFullYear() + e),
                t
            },
            _addHours: function(e) {
                var t = this.dateTime;
                return t.setHours(t.getHours() + e),
                t
            },
            _addMinutes: function(e) {
                var t = this.dateTime;
                return t.setMinutes(t.getMinutes() + e),
                t
            },
            _addSeconds: function(e) {
                var t = this.dateTime;
                return t.setSeconds(t.getSeconds() + e),
                t
            },
            _addMilliseconds: function(e) {
                var t = this.dateTime;
                return t.setMilliseconds(t.getMilliseconds() + e),
                t
            },
            _isLeapYear: function(e) {
                if (e < 1 || e > 9999)
                    throw "invalid year";
                return e % 4 == 0 && (e % 100 != 0 || e % 400 == 0)
            },
            _dateToTicks: function(e, t, i) {
                if (e >= 1 && e <= 9999 && t >= 1 && t <= 12) {
                    var r = this._isLeapYear(e) ? this.daysToMonth366 : this.daysToMonth365;
                    if (i >= 1 && i <= r[t] - r[t - 1])
                        return 864e9 * (365 * (e -= 1) + e / 4 - e / 100 + e / 400 + r[t - 1] + i - 1)
                }
            },
            _daysInMonth: function(e, t) {
                if (t < 1 || t > 12)
                    throw "Invalid month.";
                var i = this._isLeapYear(e) ? this.daysToMonth366 : this.daysToMonth365;
                return i[t] - i[t - 1]
            },
            _timeToTicks: function(e, t, i) {
                return 1e7 * (3600 * e + 60 * t + i)
            },
            _equalDate: function(e) {
                return this.year == e.getFullYear() && this.day == e.getDate() && this.month == e.getMonth() + 1
            }
        }
    }
}
, function(e, t, i) {
    !function(e) {
        function t(t, i) {
            return this.owner = t,
            this.datafield = null,
            this.displayfield = null,
            this.text = "",
            this.createfilterpanel = null,
            this.sortable = !0,
            this.hideable = !0,
            this.editable = !0,
            this.hidden = !1,
            this.adaptivehidden = !1,
            this.groupable = !0,
            this.renderer = null,
            this.cellsrenderer = null,
            this.checkchange = null,
            this.threestatecheckbox = !1,
            this.buttonclick = null,
            this.columntype = null,
            this.cellsformat = "",
            this.align = "left",
            this.cellsalign = "left",
            this.width = "auto",
            this.minwidth = 25,
            this.maxwidth = "auto",
            this.pinned = !1,
            this.visibleindex = -1,
            this.filterable = !0,
            this.filter = null,
            this.filteritems = [],
            this.resizable = !0,
            this.initeditor = null,
            this.createeditor = null,
            this.createwidget = null,
            this.initwidget = null,
            this.destroywidget = null,
            this.destroyeditor = null,
            this.geteditorvalue = null,
            this.validation = null,
            this.classname = "",
            this.cellclassname = "",
            this.cellendedit = null,
            this.cellbeginedit = null,
            this.cellvaluechanging = null,
            this.aggregates = null,
            this.aggregatesrenderer = null,
            this.menu = !0,
            this.createfilterwidget = null,
            this.filtertype = "default",
            this.filtercondition = null,
            this.rendered = null,
            this.exportable = !0,
            this.exporting = !1,
            this.draggable = !0,
            this.nullable = !0,
            this.clipboard = !0,
            this.selectable = !1,
            this._applyStyle = function() {
                var e = this;
                return e.hovered ? (e.style.headerBackgroundHoveredColor && (e.element.style.backgroundColor = e.style.headerBackgroundHoveredColor),
                void (e.style.headerHoveredColor && (e.element.style.color = e.style.headerHoveredColor))) : e.selected ? (e.style.headerBackgroundSelectedColor && (e.element.style.backgroundColor = e.style.headerBackgroundSelectedColor),
                void (e.style.headerSelectedColor && (e.element.style.color = e.style.headerSelectedColor))) : (e.style.headerBackgroundColor ? e.element.style.backgroundColor = e.style.headerBackgroundColor : e.element.style.backgroundColor = "",
                void (e.style.headerColor ? e.element.style.color = e.style.headerColor : e.element.style.color = ""))
            }
            ,
            this._applyCellStyle = function(e) {
                var t = this
                  , i = !1;
                if (e.length)
                    for (var r = 0; r < e.length; r++)
                        this._applyCellStyle(e[r]);
                else if ((t.style.backgroundColor || t.style.color || t.style.hoveredColor || t.style.hoveredColor || t.style.backgroundSelectedColor || t.style.selectedColor) && (i = !0),
                i) {
                    if (e.className.indexOf("hover") >= 0)
                        return t.style.backgroundHoveredColor && (e.style.backgroundColor = t.style.backgroundHoveredColor),
                        void (t.style.hoveredColor && (e.style.color = t.style.hoveredColor));
                    if (e.className.indexOf("selected") >= 0)
                        return t.style.backgroundSelectedColor && (e.style.backgroundColor = t.style.backgroundSelectedColor),
                        void (t.style.selectedColor && (e.style.color = t.style.selectedColor));
                    t.style.backgroundColor && (e.style.backgroundColor = t.style.backgroundColor),
                    t.style.color && (e.style.color = t.style.color)
                }
            }
            ,
            this.style = {
                headerBackgroundColor: "",
                headerColor: "",
                headerBackgroundHoveredColor: "",
                headerHoveredColor: "",
                headerBackgroundSelectedColor: "",
                headerSelectedColor: "",
                backgroundColor: "",
                color: "",
                backgroundHoveredColor: "",
                hoveredColor: "",
                backgroundSelectedColor: "",
                selectedColor: ""
            },
            this.enabletooltips = !0,
            this.columngroup = null,
            this.filterdelay = 800,
            this.reseteverpresentrowwidgetvalue = null,
            this.geteverpresentrowwidgetvalue = null,
            this.createeverpresentrowwidget = null,
            this.initeverpresentrowwidget = null,
            this.validateeverpresentrowwidgetvalue = null,
            this.destroyeverpresentrowwidget = null,
            this.getcolumnproperties = function() {
                return {
                    nullable: this.nullable,
                    sortable: this.sortable,
                    hideable: this.hideable,
                    hidden: this.hidden,
                    groupable: this.groupable,
                    width: this.width,
                    align: this.align,
                    editable: this.editable,
                    minwidth: this.minwidth,
                    maxwidth: this.maxwidth,
                    resizable: this.resizable,
                    datafield: this.datafield,
                    text: this.text,
                    exportable: this.exportable,
                    cellsalign: this.cellsalign,
                    pinned: this.pinned,
                    cellsformat: this.cellsformat,
                    columntype: this.columntype,
                    classname: this.classname,
                    cellclassname: this.cellclassname,
                    menu: this.menu
                }
            }
            ,
            this.setproperty = function(e, t) {
                if (this[e]) {
                    var i = this[e];
                    this[e] = t,
                    this.owner._columnPropertyChanged(this, e, t, i)
                } else if (this[e.toLowerCase()]) {
                    i = this[e.toLowerCase()];
                    this[e.toLowerCase()] = t,
                    this.owner._columnPropertyChanged(this, e.toLowerCase(), t, i)
                }
            }
            ,
            this._initfields = function(i) {
                if (null != i) {
                    var r = this.that;
                    if (e.jqx.hasProperty(i, "dataField") && (this.datafield = e.jqx.get(i, "dataField")),
                    e.jqx.hasProperty(i, "selectable") && (this.selectable = e.jqx.get(i, "selectable")),
                    e.jqx.hasProperty(i, "displayField") ? this.displayfield = e.jqx.get(i, "displayField") : this.displayfield = this.datafield,
                    e.jqx.hasProperty(i, "enableTooltips") && (this.enabletooltips = e.jqx.get(i, "enableTooltips")),
                    e.jqx.hasProperty(i, "text") ? this.text = e.jqx.get(i, "text") : this.text = this.displayfield,
                    e.jqx.hasProperty(i, "style") && (this.style = e.jqx.get(i, "style")),
                    e.jqx.hasProperty(i, "createfilterpanel") && (this.createfilterpanel = e.jqx.get(i, "createfilterpanel")),
                    e.jqx.hasProperty(i, "sortable") && (this.sortable = e.jqx.get(i, "sortable")),
                    e.jqx.hasProperty(i, "hideable") && (this.hideable = e.jqx.get(i, "hideable")),
                    e.jqx.hasProperty(i, "hidden") && (this.hidden = e.jqx.get(i, "hidden")),
                    e.jqx.hasProperty(i, "adaptivehidden") && (this.adaptivehidden = e.jqx.get(i, "adaptivehidden")),
                    e.jqx.hasProperty(i, "groupable") && (this.groupable = e.jqx.get(i, "groupable")),
                    e.jqx.hasProperty(i, "renderer") && (this.renderer = e.jqx.get(i, "renderer")),
                    e.jqx.hasProperty(i, "align") && (this.align = e.jqx.get(i, "align")),
                    e.jqx.hasProperty(i, "cellsAlign") && (this.cellsalign = e.jqx.get(i, "cellsAlign")),
                    e.jqx.hasProperty(i, "clipboard") && (this.clipboard = e.jqx.get(i, "clipboard")),
                    e.jqx.hasProperty(i, "cellsFormat") && (this.cellsformat = e.jqx.get(i, "cellsFormat")),
                    e.jqx.hasProperty(i, "width") && (this.width = e.jqx.get(i, "width")),
                    e.jqx.hasProperty(i, "minWidth") && (this.minwidth = parseInt(e.jqx.get(i, "minWidth")),
                    isNaN(this.minwidth) && (this.minwidth = 25)),
                    e.jqx.hasProperty(i, "maxWidth") && (this.maxwidth = parseInt(e.jqx.get(i, "maxWidth")),
                    isNaN(this.maxwidth) && (this.maxwidth = "auto")),
                    e.jqx.hasProperty(i, "cellsRenderer") ? this.cellsrenderer = e.jqx.get(i, "cellsRenderer") : i.cellsRenderer && (this.cellsrenderer = i.cellsRenderer),
                    e.jqx.hasProperty(i, "columnType") && (this.columntype = e.jqx.get(i, "columnType")),
                    e.jqx.hasProperty(i, "checkChange") && (this.checkchange = e.jqx.get(i, "checkChange")),
                    e.jqx.hasProperty(i, "buttonClick") ? this.buttonclick = e.jqx.get(i, "buttonClick") : i.buttonClick && (this.buttonclick = i.buttonClick),
                    e.jqx.hasProperty(i, "pinned") && (this.pinned = e.jqx.get(i, "pinned")),
                    e.jqx.hasProperty(i, "visibleIndex") && (this.visibleindex = e.jqx.get(i, "visibleIndex")),
                    e.jqx.hasProperty(i, "filterable") && (this.filterable = e.jqx.get(i, "filterable")),
                    e.jqx.hasProperty(i, "filter") && (this.filter = e.jqx.get(i, "filter")),
                    e.jqx.hasProperty(i, "resizable") && (this.resizable = e.jqx.get(i, "resizable")),
                    e.jqx.hasProperty(i, "editable") && (this.editable = e.jqx.get(i, "editable")),
                    e.jqx.hasProperty(i, "initEditor") ? this.initeditor = e.jqx.get(i, "initEditor") : i.initEditor && (this.initeditor = i.initEditor),
                    e.jqx.hasProperty(i, "createEditor") ? this.createeditor = e.jqx.get(i, "createEditor") : i.createEditor && (this.createeditor = i.createEditor),
                    e.jqx.hasProperty(i, "initWidget") ? this.initwidget = e.jqx.get(i, "initWidget") : i.initWidget && (this.initwidget = i.initWidget),
                    e.jqx.hasProperty(i, "createWidget") ? this.createwidget = e.jqx.get(i, "createWidget") : i.createWidget && (this.createwidget = i.createWidget),
                    e.jqx.hasProperty(i, "destroyWidget") ? this.destroywidget = e.jqx.get(i, "destroyWidget") : i.destroyWidget && (this.destroywidget = i.destroyWidget),
                    e.jqx.hasProperty(i, "reseteverpresentrowwidgetvalue") || e.jqx.hasFunction(i, "reseteverpresentrowwidgetvalue") ? this.reseteverpresentrowwidgetvalue = e.jqx.get(i, "reseteverpresentrowwidgetvalue") : i.resetEverPresentRowWidgetValue && (this.reseteverpresentrowwidgetvalue = i.resetEverPresentRowWidgetValue),
                    e.jqx.hasProperty(i, "geteverpresentrowwidgetvalue") || e.jqx.hasFunction(i, "geteverpresentrowwidgetvalue") ? this.geteverpresentrowwidgetvalue = e.jqx.get(i, "geteverpresentrowwidgetvalue") : i.getEverPresentRowWidgetValue && (this.geteverpresentrowwidgetvalue = i.getEverPresentRowWidgetValue),
                    e.jqx.hasProperty(i, "createeverpresentrowwidget") || e.jqx.hasFunction(i, "createeverpresentrowwidget") ? this.createeverpresentrowwidget = e.jqx.get(i, "createeverpresentrowwidget") : i.createEverPresentRowWidget && (this.createeverpresentrowwidget = i.createEverPresentRowWidget),
                    e.jqx.hasProperty(i, "initeverpresentrowwidget") || e.jqx.hasFunction(i, "initeverpresentrowwidget") ? this.initeverpresentrowwidget = e.jqx.get(i, "initeverpresentrowwidget") : i.initEverPresentRowWidget && (this.initeverpresentrowwidget = i.initEverPresentRowWidget),
                    e.jqx.hasProperty(i, "validateeverpresentrowwidgetvalue") ? this.validateeverpresentrowwidgetvalue = e.jqx.get(i, "validateeverpresentrowwidgetvalue") : i.validateEverPresentRowWidgetValue && (this.validateeverpresentrowwidgetvalue = i.validateEverPresentRowWidgetValue),
                    e.jqx.hasProperty(i, "destroyeverpresentrowwidget") || e.jqx.hasFunction(i, "destroyeverpresentrowwidget") ? this.destroyeverpresentrowwidget = e.jqx.get(i, "destroyeverpresentrowwidget") : i.destroyEverPresentRowWidget && (this.destroyEverPresentRowWidget = i.destroyEverPresentRowWidget),
                    e.jqx.hasProperty(i, "destroyEditor") ? this.destroyeditor = e.jqx.get(i, "destroyEditor") : i.destroyEditor && (this.destroyeditor = i.destroyEditor),
                    e.jqx.hasProperty(i, "getEditorValue") ? this.geteditorvalue = e.jqx.get(i, "getEditorValue") : i.getEditorValue && (this.geteditorvalue = i.getEditorValue),
                    e.jqx.hasProperty(i, "validation") ? this.validation = e.jqx.get(i, "validation") : i.validation && (this.validation = i.validation),
                    e.jqx.hasProperty(i, "cellBeginEdit") ? this.cellbeginedit = e.jqx.get(i, "cellBeginEdit") : i.cellBeginEdit && (this.cellbeginedit = i.cellBeginEdit),
                    e.jqx.hasProperty(i, "cellEndEdit") ? this.cellendedit = e.jqx.get(i, "cellEndEdit") : i.cellEndEdit && (this.cellendedit = i.cellEndEdit),
                    e.jqx.hasProperty(i, "className") && (this.classname = e.jqx.get(i, "className")),
                    e.jqx.hasProperty(i, "cellClassName") ? this.cellclassname = e.jqx.get(i, "cellClassName") : i.cellClassName && (this.cellclassname = i.cellClassName),
                    e.jqx.hasProperty(i, "menu") && (this.menu = e.jqx.get(i, "menu")),
                    e.jqx.hasProperty(i, "aggregates") && (this.aggregates = e.jqx.get(i, "aggregates")),
                    e.jqx.hasProperty(i, "aggregatesRenderer") && (this.aggregatesrenderer = e.jqx.get(i, "aggregatesRenderer")),
                    e.jqx.hasProperty(i, "createFilterWidget") && (this.createfilterwidget = e.jqx.get(i, "createFilterWidget")),
                    e.jqx.hasProperty(i, "filterType") && (this.filtertype = e.jqx.get(i, "filterType")),
                    e.jqx.hasProperty(i, "filterDelay") && (this.filterdelay = e.jqx.get(i, "filterDelay")),
                    e.jqx.hasProperty(i, "rendered") && (this.rendered = e.jqx.get(i, "rendered")),
                    e.jqx.hasProperty(i, "exportable") && (this.exportable = e.jqx.get(i, "exportable")),
                    e.jqx.hasProperty(i, "filterItems") && (this.filteritems = e.jqx.get(i, "filterItems")),
                    e.jqx.hasProperty(i, "cellValueChanging") && (this.cellvaluechanging = e.jqx.get(i, "cellValueChanging")),
                    e.jqx.hasProperty(i, "draggable") && (this.draggable = e.jqx.get(i, "draggable")),
                    e.jqx.hasProperty(i, "filterCondition") && (this.filtercondition = e.jqx.get(i, "filterCondition")),
                    e.jqx.hasProperty(i, "threeStateCheckbox") && (this.threestatecheckbox = e.jqx.get(i, "threeStateCheckbox")),
                    e.jqx.hasProperty(i, "nullable") && (this.nullable = e.jqx.get(i, "nullable")),
                    e.jqx.hasProperty(i, "columnGroup") && (this.columngroup = e.jqx.get(i, "columnGroup")),
                    !i instanceof String && "string" != typeof i)
                        for (var s in i)
                            if (!r.hasOwnProperty(s) && !r.hasOwnProperty(s.toLowerCase()))
                                throw t.host.remove(),
                                new Error("jqxGrid: Invalid property name - " + s + ".")
                }
            }
            ,
            this._initfields(i),
            this
        }
        function i(e, t) {
            return this.setdata = function(e) {
                null != e && (this.bounddata = e,
                this.boundindex = e.boundindex,
                this.visibleindex = e.visibleindex,
                this.group = e.group,
                this.parentbounddata = e.parentItem,
                this.uniqueid = e.uniqueid,
                this.level = e.level)
            }
            ,
            this.setdata(t),
            this.parentrow = null,
            this.subrows = new Array,
            this.owner = e,
            this.height = 25,
            this.hidden = !1,
            this.rowdetails = null,
            this.rowdetailsheight = 100,
            this.rowdetailshidden = !0,
            this.top = -1,
            this.setrowinfo = function(e) {
                this.hidden = e.hidden,
                this.rowdetails = e.rowdetails,
                this.rowdetailsheight = e.rowdetailsheight,
                this.rowdetailshidden = !e.showdetails,
                this.height = e.height
            }
            ,
            this
        }
        e.jqx.jqxWidget("jqxGrid", "", {}),
        e.extend(e.jqx._jqxGrid.prototype, {
            defineInstance: function() {
                var t = {
                    adaptive: !1,
                    adaptivewidth: 600,
                    disabled: !1,
                    width: 600,
                    height: 400,
                    pagerheight: 40,
                    groupsheaderheight: 34,
                    pagesize: 10,
                    pagesizeoptions: ["5", "10", "20"],
                    rowsheight: 32,
                    columnsheight: 32,
                    filterrowheight: 36,
                    groupindentwidth: 30,
                    rowdetails: !1,
                    enablerowdetailsindent: !0,
                    enablemousewheel: !0,
                    initrowdetails: null,
                    layoutrowdetails: null,
                    editable: !1,
                    editmode: "selectedcell",
                    pageable: !1,
                    pagermode: "default",
                    pagerbuttonscount: 5,
                    groupable: !1,
                    sortable: !1,
                    sortmode: "one",
                    filterable: !1,
                    filtermode: "default",
                    autoshowfiltericon: !0,
                    showfiltercolumnbackground: !0,
                    showpinnedcolumnbackground: !0,
                    showsortcolumnbackground: !0,
                    altrows: !1,
                    altstart: 1,
                    altstep: 1,
                    showrowdetailscolumn: !0,
                    showrowlines: !0,
                    showcolumnlines: !0,
                    showcolumnheaderlines: !0,
                    showtoolbar: !1,
                    toolbarheight: 36,
                    showstatusbar: !1,
                    statusbarheight: 36,
                    enableellipsis: !0,
                    groups: [],
                    groupsrenderer: null,
                    groupcolumnrenderer: null,
                    groupsexpandedbydefault: !1,
                    pagerrenderer: null,
                    touchmode: "auto",
                    columns: [],
                    selectedrowindex: -1,
                    selectedrowindexes: new Array,
                    selectedcells: new Array,
                    autobind: !0,
                    selectedcell: null,
                    tableZIndex: 79,
                    headerZIndex: 29,
                    updatefilterconditions: null,
                    showgroupaggregates: !1,
                    showaggregates: !1,
                    showfilterrow: !1,
                    showeverpresentrow: !1,
                    everpresentrowposition: "top",
                    everpresentrowactions: "add reset",
                    everpresentrowactionsmode: "buttons",
                    everpresentrowheight: 30,
                    autorowheight: !1,
                    autokoupdates: !0,
                    handlekeyboardnavigation: null,
                    showsortmenuitems: !0,
                    showfiltermenuitems: !0,
                    showgroupmenuitems: !0,
                    enablebrowserselection: !1,
                    enablekeyboarddelete: !0,
                    clipboard: !0,
                    clipboardbegin: null,
                    clipboardend: null,
                    copytoclipboardwithheaders: !1,
                    copytoclipboardhiddencolumns: !1,
                    ready: null,
                    updatefilterpanel: null,
                    autogeneratecolumns: !1,
                    rowdetailstemplate: null,
                    scrollfeedback: null,
                    rendertoolbar: null,
                    renderstatusbar: null,
                    rendered: null,
                    multipleselectionbegins: null,
                    columngroups: null,
                    cellhover: null,
                    source: {
                        beforeprocessing: null,
                        beforesend: null,
                        loaderror: null,
                        localdata: null,
                        data: null,
                        datatype: "array",
                        datafields: [],
                        url: "",
                        root: "",
                        record: "",
                        id: "",
                        totalrecords: 0,
                        recordstartindex: 0,
                        recordendindex: 0,
                        loadallrecords: !0,
                        sortcolumn: null,
                        sortdirection: null,
                        sort: null,
                        filter: null,
                        sortcomparer: null
                    },
                    filter: null,
                    dataview: null,
                    updatedelay: null,
                    autoheight: !1,
                    autowidth: !1,
                    showheader: !0,
                    showgroupsheader: !0,
                    closeablegroups: !0,
                    scrollbarsize: e.jqx.utilities.scrollBarSize,
                    touchscrollbarsize: e.jqx.utilities.touchScrollBarSize,
                    scrollbarautoshow: e.jqx.utilities.scrollBarAutoShow,
                    virtualmode: !1,
                    sort: null,
                    columnsmenu: !0,
                    columnsresize: !1,
                    columnsautoresize: !0,
                    columnsreorder: !1,
                    columnsmenuwidth: 16,
                    autoshowcolumnsmenubutton: !0,
                    showcolumnsactionbutton: !1,
                    popupwidth: "auto",
                    popupheight: "auto",
                    columnmenuopening: null,
                    columnmenuclosing: null,
                    sorttogglestates: 2,
                    rendergridrows: null,
                    enableanimations: !0,
                    enablecolumnsvirtualization: !0,
                    enabletooltips: !1,
                    selectionmode: "singlerow",
                    enablehover: !0,
                    loadingerrormessage: "The data is still loading. When the data binding is completed, the Grid raises the 'bindingcomplete' event. Call this function in the 'bindingcomplete' event handler.",
                    verticalscrollbarstep: 30,
                    verticalscrollbarlargestep: 400,
                    horizontalscrollbarstep: 10,
                    horizontalscrollbarlargestep: 50,
                    keyboardnavigation: !0,
                    keyboardmenunavigation: !0,
                    touchModeStyle: "auto",
                    autoshowloadelement: !0,
                    showdefaultloadelement: !0,
                    showemptyrow: !0,
                    autosavestate: !1,
                    autoloadstate: !1,
                    _updating: !1,
                    _pagescache: new Array,
                    _pageviews: new Array,
                    _cellscache: new Array,
                    _rowdetailscache: new Array,
                    _rowdetailselementscache: new Array,
                    _requiresupdate: !1,
                    _hasOpenedMenu: !1,
                    scrollmode: "physical",
                    deferreddatafields: null,
                    localization: null,
                    rtl: !1,
                    menuitemsarray: [],
                    events: ["initialized", "rowClick", "rowSelect", "rowUnselect", "groupExpand", "groupCollapse", "sort", "columnClick", "cellClick", "pageChanged", "pageSizeChanged", "bindingComplete", "groupsChanged", "filter", "columnResized", "cellSelect", "cellUnselect", "cellBeginEdit", "cellEndEdit", "cellValueChanged", "rowExpand", "rowCollapse", "rowDoubleClick", "cellDoubleClick", "columnReordered", "pageChanging"]
                };
                return this === e.jqx._jqxGrid.prototype ? t : (e.extend(!0, this, t),
                t)
            },
            createInstance: function(t) {
                this.that = this;
                var i = this;
                i.pagesize = parseInt(i.pagesize),
                i.toolbarheight = parseInt(i.toolbarheight),
                i.columnsheight = parseInt(i.columnsheight),
                i.filterrowheight = parseInt(i.filterrowheight),
                i.statusbarheight = parseInt(i.statusbarheight),
                i.groupsheaderheight = parseInt(i.groupsheaderheight),
                i.detailsVisibility = new Array,
                i.savedArgs = t && t.length > 0 ? t[0] : null;
                var r = "<div class='jqx-clear jqx-border-reset jqx-overflow-hidden jqx-max-size jqx-position-relative'><div tabindex='1' class='jqx-clear jqx-max-size jqx-position-relative jqx-overflow-hidden jqx-background-reset' id='wrapper" + i.element.id + "'><div class='jqx-clear jqx-position-absolute' id='toolbar' style='visibility: hidden;'></div><div class='jqx-clear jqx-position-absolute' id='groupsheader' style='visibility: hidden;'></div><div class='jqx-clear jqx-overflow-hidden jqx-position-absolute jqx-border-reset jqx-background-reset' id='content" + i.element.id + "'></div><div class='jqx-clear jqx-position-absolute' id='verticalScrollBar" + i.element.id + "'></div><div class='jqx-clear jqx-position-absolute' id='horizontalScrollBar" + i.element.id + "'></div><div class='jqx-clear jqx-position-absolute jqx-border-reset' id='bottomRight'></div><div class='jqx-clear jqx-position-absolute' id='addrow'></div><div class='jqx-clear jqx-position-absolute' id='statusbar'></div><div class='jqx-clear jqx-position-absolute' id='pager' style='z-index: 20;'></div></div></div>";
                if (i.element.innerHTML = "",
                i.source) {
                    if (!i.source.dataBind) {
                        if (!e.jqx.dataAdapter)
                            throw new Error("jqxGrid: Missing reference to jqxdata.js");
                        i.source = new e.jqx.dataAdapter(i.source)
                    }
                    (h = i.source._source.datafields) && h.length > 0 && (i.editmode = i.editmode.toLowerCase(),
                    i.selectionmode = i.selectionmode.toLowerCase())
                }
                i.host.attr("role", "grid"),
                i.host.attr("align", "left"),
                i.element.innerHTML = r,
                i.host.addClass(i.toTP("jqx-grid")),
                i.host.addClass(i.toTP("jqx-reset")),
                i.host.addClass(i.toTP("jqx-rc-all")),
                i.host.addClass(i.toTP("jqx-widget")),
                i.host.addClass(i.toTP("jqx-widget-content")),
                i.wrapper = i.host.find("#wrapper" + i.element.id),
                i.content = i.host.find("#content" + i.element.id),
                i.content.addClass(i.toTP("jqx-reset"));
                var s = i.host.find("#verticalScrollBar" + i.element.id)
                  , n = i.host.find("#horizontalScrollBar" + i.element.id);
                if (i.bottomRight = i.host.find("#bottomRight").addClass(i.toTP("jqx-grid-bottomright jqx-scrollbar-state-normal")),
                !s.jqxScrollBar)
                    throw new Error("jqxGrid: Missing reference to jqxscrollbar.js");
                if (i.editors = new Array,
                i.vScrollBar = s.jqxScrollBar({
                    vertical: !0,
                    rtl: i.rtl,
                    touchMode: i.touchmode,
                    step: i.verticalscrollbarstep,
                    largestep: i.verticalscrollbarlargestep,
                    theme: i.theme,
                    _triggervaluechanged: !1
                }),
                i.hScrollBar = n.jqxScrollBar({
                    vertical: !1,
                    rtl: i.rtl,
                    touchMode: i.touchmode,
                    step: i.horizontalscrollbarstep,
                    largestep: i.horizontalscrollbarlargestep,
                    theme: i.theme,
                    _triggervaluechanged: !1
                }),
                i.addnewrow = i.host.find("#addrow"),
                i.addnewrow[0].id = "addrow" + i.element.id,
                i.addnewrow.addClass(i.toTP("jqx-widget-header")),
                i.pager = i.host.find("#pager"),
                i.pager[0].id = "pager" + i.element.id,
                i.toolbar = i.host.find("#toolbar"),
                i.toolbar[0].id = "toolbar" + i.element.id,
                i.toolbar.addClass(i.toTP("jqx-grid-toolbar")),
                i.toolbar.addClass(i.toTP("jqx-widget-header")),
                i.statusbar = i.host.find("#statusbar"),
                i.statusbar[0].id = "statusbar" + i.element.id,
                i.statusbar.addClass(i.toTP("jqx-grid-statusbar")),
                i.statusbar.addClass(i.toTP("jqx-widget-header")),
                i.pager.addClass(i.toTP("jqx-grid-pager")),
                i.pager.addClass(i.toTP("jqx-widget-header")),
                i.groupsheader = i.host.find("#groupsheader"),
                i.groupsheader.addClass(i.toTP("jqx-grid-groups-header")),
                i.groupsheader.addClass(i.toTP("jqx-widget-header")),
                i.groupsheader[0].id = "groupsheader" + i.element.id,
                i.vScrollBar.css("visibility", "hidden"),
                i.hScrollBar.css("visibility", "hidden"),
                i.vScrollInstance = e.data(i.vScrollBar[0], "jqxScrollBar").instance,
                i.hScrollInstance = e.data(i.hScrollBar[0], "jqxScrollBar").instance,
                i.gridtable = null,
                i.isNestedGrid = !!i.host.parent() && 299 == i.host.parent().css("z-index"),
                i.touchdevice = i.isTouchDevice(),
                i.localizestrings && (i.localizestrings(),
                null != i.localization && i.localizestrings(i.localization, !1)),
                i.rowdetailstemplate && (null == i.rowdetailstemplate.rowdetails && (i.rowdetailstemplate.rowdetails = "<div></div>"),
                null == i.rowdetailstemplate.rowdetailsheight && (i.rowdetailstemplate.rowdetailsheight = 200),
                null == i.rowdetailstemplate.rowdetailshidden && (i.rowdetailstemplate.rowdetailshidden = !0)),
                i.showfilterrow && !i.filterable)
                    throw new Error('jqxGrid: "showfilterrow" requires setting the "filterable" property to true!');
                if (i.autorowheight && !i.autoheight && !i.pageable)
                    throw new Error('jqxGrid: "autorowheight" requires setting the "autoheight" or "pageable" property to true!');
                if (i.virtualmode && null == i.rendergridrows)
                    throw new Error('jqxGrid: "virtualmode" requires setting the "rendergridrows"!');
                if (i.virtualmode && !i.pageable && i.groupable)
                    throw new Error('jqxGrid: "grouping" in "virtualmode" without paging is not supported!');
                if (!i._testmodules()) {
                    if (i._builddataloadelement(),
                    i._cachedcolumns = i.columns,
                    i.columns && i.columns.length > i.headerZIndex && (i.headerZIndex = i.columns.length + 100),
                    i.theme && i.theme.indexOf("material") >= 0) {
                        var o = e("<span>Test</span>")
                          , a = e("<span>Test</span>");
                        o.addClass(i.toTP("jqx-grid-row-cell")),
                        a.addClass(i.toTP("jqx-grid-column-header-cell")),
                        i.host.append(o),
                        i.host.append(a);
                        var l = o.outerHeight()
                          , d = a.outerHeight();
                        l > this.rowsheight && (i.rowsheight = l,
                        this._cellheight = l),
                        d > this.columnsheight && (i.columnsheight = d,
                        this._columnHeight = d),
                        o.remove(),
                        a.remove()
                    }
                    var h;
                    if (31 != i.rowsheight && i._measureElement("cell"),
                    (32 != i.columnsheight || i.columngroups) && i._measureElement("column"),
                    i.source)
                        if (null == (h = i.source.datafields) && i.source._source && (h = i.source._source.datafields),
                        h)
                            for (var c = 0; c < i.columns.length; c++) {
                                if ((a = i.columns[c]) && a.cellsformat && a.cellsformat.length > 2)
                                    for (var u = 0; u < h.length; u++)
                                        if (h[u].name == a.datafield && !h[u].format) {
                                            h[u].format = a.cellsformat;
                                            break
                                        }
                            }
                    i.databind(i.source),
                    i.showtoolbar && i.toolbar.css("visibility", "inherit"),
                    i.showstatusbar && i.statusbar.css("visibility", "inherit"),
                    i._arrange(),
                    i.pageable && i._initpager && i._initpager(),
                    i.tableheight = null;
                    var p = i.that
                      , f = function() {
                        p.content && (p.content[0].scrollTop = 0,
                        p.content[0].scrollLeft = 0),
                        p.gridcontent && (p.gridcontent[0].scrollLeft = 0,
                        p.gridcontent[0].scrollTop = 0)
                    };
                    i.addHandler(i.content, "mousedown", function() {
                        f()
                    }),
                    i.addHandler(i.content, "scroll", function(e) {
                        return f(),
                        !1
                    }),
                    i.showfilterrow || (i.showstatusbar || i.showtoolbar || i.host.addClass("jqx-disableselect"),
                    i.content.addClass("jqx-disableselect")),
                    i.enablebrowserselection && (i.content.removeClass("jqx-disableselect"),
                    i.host.removeClass("jqx-disableselect")),
                    i._resizeWindow(),
                    i.disabled && i.host.addClass(i.toThemeProperty("jqx-fill-state-disabled")),
                    i.hasTransform = e.jqx.utilities.hasTransform(i.host),
                    "logical" == i.scrollmode && (i.vScrollInstance.thumbStep = i.rowsheight,
                    i.vScrollInstance.step = i.rowsheight),
                    e.jqx.isHidden(i.host) || (i.filterable || i.groupable || i.sortable) && i._initmenu()
                }
            },
            _resizeWindow: function() {
                var t = this.that;
                if (null != this.width && -1 != this.width.toString().indexOf("%") || null != this.height && -1 != this.height.toString().indexOf("%")) {
                    this._updatesizeonwindowresize = !0,
                    e.jqx.utilities.resize(this.host, function(i) {
                        var r = e(window).width()
                          , s = e(window).height()
                          , n = t.host.width()
                          , o = t.host.height();
                        if (t.pageable) {
                            var a = t.host.find(".jqx-grid-pager-input");
                            r < 350 ? a.hide() : a.show()
                        }
                        if (t.autoheight && (t._lastHostWidth = s),
                        t._lastHostWidth != n || t._lastHostHeight != o) {
                            if (t.touchdevice && t.editcell && "orientationchange" !== i)
                                return;
                            t._updatesize(t._lastHostWidth != n, t._lastHostHeight != o)
                        }
                        t._lastWidth = r,
                        t._lastHeight = s,
                        t._lastHostWidth = n,
                        t._lastHostHeight = o
                    });
                    var i = t.host.width()
                      , r = t.host.height();
                    t._lastHostWidth = i,
                    t._lastHostHeight = r
                }
            },
            _builddataloadelement: function() {
                if (this.dataloadelement && this.dataloadelement.remove(),
                this.dataloadelement = e('<div style="overflow: hidden; position: absolute;"></div>'),
                this.showdefaultloadelement) {
                    var t = e('<div style="z-index: 99; margin-left: -66px; left: 50%; top: 50%; margin-top: -24px; position: relative; width: 100px; height: 33px; padding: 5px; font-family: verdana; font-size: 12px; color: #767676; border-color: #898989; border-width: 1px; border-style: solid; background: #f6f6f6; border-collapse: collapse;"><div style="float: left;"><div style="float: left; overflow: hidden; width: 32px; height: 32px;" class="jqx-grid-load"/><span style="margin-top: 10px; float: left; display: block; margin-left: 5px;" >' + this.gridlocalization.loadtext + "</span></div></div>");
                    t.addClass(this.toTP("jqx-rc-all")),
                    this.dataloadelement.addClass(this.toTP("jqx-rc-all")),
                    t.addClass(this.toTP("jqx-fill-state-normal")),
                    this.dataloadelement.append(t)
                } else
                    this.dataloadelement.addClass(this.toTP("jqx-grid-load"));
                this.dataloadelement.width(this.host.width()),
                this.dataloadelement.height(this.host.height()),
                this.wrapper.prepend(this.dataloadelement)
            },
            _measureElement: function(t) {
                var i = e("<span style='visibility: hidden; white-space: nowrap;'>measure Text</span>");
                i.addClass(this.toTP("jqx-widget")),
                e(document.body).append(i),
                "cell" == t ? this._cellheight = i.height() : this._columnheight = i.height(),
                i.remove()
            },
            _measureMenuElement: function() {
                var t = e("<span style='visibility: hidden; white-space: nowrap;'>measure Text</span>");
                t.addClass(this.toTP("jqx-widget")),
                t.addClass(this.toTP("jqx-menu")),
                t.addClass(this.toTP("jqx-menu-item-top")),
                t.addClass(this.toTP("jqx-fill-state-normal")),
                this.isTouchDevice() && t.addClass(this.toTP("jqx-grid-menu-item-touch")),
                e(document.body).append(t);
                var i = t.outerHeight();
                return t.remove(),
                i
            },
            _measureElementWidth: function(t) {
                var i = e("<span style='visibility: hidden; white-space: nowrap;'>" + t + "</span>");
                i.addClass(this.toTP("jqx-widget")),
                i.addClass(this.toTP("jqx-grid")),
                i.addClass(this.toTP("jqx-grid-column-header")),
                i.addClass(this.toTP("jqx-widget-header")),
                e(document.body).append(i);
                var r = i.outerWidth() + 20;
                return i.remove(),
                r
            },
            _getBodyOffset: function() {
                var t = 0
                  , i = 0;
                return "0px" != e("body").css("border-top-width") && (t = parseInt(e("body").css("border-top-width")),
                isNaN(t) && (t = 0)),
                "0px" != e("body").css("border-left-width") && (i = parseInt(e("body").css("border-left-width")),
                isNaN(i) && (i = 0)),
                {
                    left: i,
                    top: t
                }
            },
            _testmodules: function() {
                var t = ""
                  , i = this.that
                  , r = function() {
                    "" != t.length && (t += ",")
                };
                if (this.columnsmenu && !this.host.jqxMenu && (this.sortable || this.groupable || this.filterable) && (r(),
                t += " jqxmenu.js"),
                this.host.jqxScrollBar || (r(),
                t += " jqxscrollbar.js"),
                this.host.jqxButton || (r(),
                t += " jqxbuttons.js"),
                e.jqx.dataAdapter || (r(),
                t += " jqxdata.js"),
                this.pageable && !this.gotopage && (r(),
                t += "jqxgrid.pager.js"),
                this.filterable && !this.applyfilters && (r(),
                t += " jqxgrid.filter.js"),
                this.groupable && !this._initgroupsheader && (r(),
                t += " jqxgrid.grouping.js"),
                this.columnsresize && !this.autoresizecolumns && (r(),
                t += " jqxgrid.columnsresize.js"),
                this.columnsreorder && !this.setcolumnindex && (r(),
                t += " jqxgrid.columnsreorder.js"),
                this.sortable && !this.sortby && (r(),
                t += " jqxgrid.sort.js"),
                this.editable && !this.begincelledit && (r(),
                t += " jqxgrid.edit.js"),
                this.showaggregates && !this.getcolumnaggregateddata && (r(),
                t += " jqxgrid.aggregates.js"),
                this.keyboardnavigation && !this.selectrow && (r(),
                t += " jqxgrid.selection.js"),
                "" != t || this.editable || this.filterable || this.pageable) {
                    var s = []
                      , n = function(e) {
                        switch (e) {
                        case "checkbox":
                            i.host.jqxCheckBox || s.checkbox || (s.checkbox = !0,
                            r(),
                            t += " jqxcheckbox.js");
                            break;
                        case "numberinput":
                            i.host.jqxNumberInput || s.numberinput || (s.numberinput = !0,
                            r(),
                            t += " jqxnumberinput.js");
                            break;
                        case "datetimeinput":
                            i.host.jqxDateTimeInput || s.datetimeinput ? i.host.jqxCalendar || s.calendar || (r(),
                            t += " jqxcalendar.js") : (r(),
                            s.datetimeinput = !0,
                            t += " jqxdatetimeinput.js(requires: jqxcalendar.js)");
                            break;
                        case "combobox":
                            i.host.jqxComboBox || s.combobox ? i.host.jqxListBox || s.listbox || (r(),
                            s.listbox = !0,
                            t += " jqxlistbox.js") : (r(),
                            s.combobox = !0,
                            t += " jqxcombobox.js(requires: jqxlistbox.js)");
                            break;
                        case "dropdownlist":
                            i.host.jqxDropDownList || s.dropdownlist ? i.host.jqxListBox || s.listbox || (r(),
                            s.listbox = !0,
                            t += " jqxlistbox.js") : (r(),
                            s.dropdownlist = !0,
                            t += " jqxdropdownlist.js(requires: jqxlistbox.js)")
                        }
                    };
                    (this.filterable || this.pageable) && n("dropdownlist");
                    for (var o = 0; o < this.columns.length; o++) {
                        var a;
                        if (null != this.columns[o])
                            if (n(a = this.columns[o].columntype),
                            this.filterable && this.showfilterrow)
                                "checkedlist" != (a = this.columns[o].filtertype) && "bool" != a || n("checkbox"),
                                "date" == a && n("datetimeinput")
                    }
                    if ("" != t)
                        throw new Error("jqxGrid: Missing references to the following module(s): " + t)
                }
                return !1
            },
            focus: function() {
                try {
                    this.wrapper.focus();
                    var e = this.that;
                    setTimeout(function() {
                        e.wrapper.focus()
                    }, 25),
                    this.focused = !0
                } catch (e) {}
            },
            hiddenParent: function() {
                return e.jqx.isHidden(this.host)
            },
            resize: function(e, t) {
                this.width = e,
                this.height = t,
                this._updatesize(!0, !0)
            },
            _updatesize: function(t, i) {
                if (!this._loading) {
                    var r = this.that;
                    r._newmax = null;
                    var s = r.host.width()
                      , n = r.host.height();
                    r._oldWidth || (r._oldWidth = s),
                    r._oldHeight || (r._oldHeight = n),
                    r._resizeTimer && clearTimeout(r._resizeTimer);
                    if (r.resizingGrid = !0,
                    !e.jqx.isHidden(r.host)) {
                        if (r.editcell && (r.endcelledit(r.editcell.row, r.editcell.column, !0, !0),
                        r._oldselectedcell = null),
                        n != r._oldHeight || 1 == i) {
                            var o = r.groupable && r.groups.length > 0
                              , a = r.vScrollBar.css("visibility");
                            if (!r.autoheight) {
                                if (r.virtualmode && (r._pageviews = new Array),
                                o || r.rowdetails || r.pageable) {
                                    r._arrange(),
                                    r.prerenderrequired = !0;
                                    n = Math.round(r.host.height()) + 2 * r.rowsheight;
                                    realheight = r._gettableheight();
                                    var l = Math.round(n / r.rowsheight)
                                      , d = Math.max(r.dataview.totalrows, r.dataview.totalrecords);
                                    r.pageable && (d = r.pagesize,
                                    r.pagesize > Math.max(r.dataview.totalrows, r.dataview.totalrecords) && r.autoheight ? d = Math.max(r.dataview.totalrows, r.dataview.totalrecords) : r.autoheight || r.dataview.totalrows < r.pagesize && (d = Math.max(r.dataview.totalrows, r.dataview.totalrecords)));
                                    r.rowsheight,
                                    r._getpagesize();
                                    !r.pageable && r.autoheight && (l = d),
                                    r.virtualsizeinfo && (r.virtualsizeinfo.visiblerecords = l),
                                    r.rendergridcontent(!0, !1),
                                    r._renderrows(r.virtualsizeinfo)
                                } else {
                                    r._arrange(),
                                    r.virtualsizeinfo = r._calculatevirtualheight();
                                    var n = Math.round(r.host.height()) + 2 * r.rowsheight;
                                    parseInt(n) >= parseInt(r._oldHeight) && (r.prerenderrequired = !0),
                                    r._renderrows(r.virtualsizeinfo),
                                    r.rtl && (r._updatecolumnwidths(),
                                    r.table && r.table.width(r.columnsheader.width()),
                                    r._updatecellwidths())
                                }
                                a != r.vScrollBar.css("visibility") && (r.vScrollInstance.setPosition(0),
                                r._arrange(),
                                r._updatecolumnwidths(),
                                r.table && r.table.width(r.columnsheader.width()),
                                r._updatecellwidths())
                            }
                        }
                        if (s != r._oldWidth || 1 == t) {
                            var h = !1;
                            if (r.editcell && r.editcell.editor)
                                switch (r.editcell.columntype) {
                                case "dropdownlist":
                                    if (h = r.editcell.editor.jqxDropDownList("isOpened") || r.editcell.editor.jqxDropDownList("isanimating") && !r.editcell.editor.jqxDropDownList("ishiding"))
                                        return r.editcell.editor.jqxDropDownList({
                                            openDelay: 0
                                        }),
                                        r.editcell.editor.jqxDropDownList("open"),
                                        void r.editcell.editor.jqxDropDownList({
                                            openDelay: 250
                                        });
                                    break;
                                case "combobox":
                                    if (h = r.editcell.editor.jqxComboBox("isOpened") || r.editcell.editor.jqxComboBox("isanimating") && !r.editcell.editor.jqxComboBox("ishiding"))
                                        return r.editcell.editor.jqxComboBox({
                                            openDelay: 0
                                        }),
                                        r.editcell.editor.jqxComboBox("open"),
                                        void r.editcell.editor.jqxComboBox({
                                            openDelay: 250
                                        });
                                    break;
                                case "datetimeinput":
                                    if (h)
                                        return h = r.editcell.editor.jqxDateTimeInput("isOpened") || r.editcell.editor.jqxDateTimeInput("isanimating") && !r.editcell.editor.jqxDateTimeInput("ishiding"),
                                        r.editcell.editor.jqxDateTimeInput({
                                            openDelay: 0
                                        }),
                                        r.editcell.editor.jqxDateTimeInput("open"),
                                        void r.editcell.editor.jqxDateTimeInput({
                                            openDelay: 250
                                        })
                                }
                            var c = r.hScrollBar.css("visibility");
                            r._arrange(),
                            r._updatecolumnwidths(),
                            r.table && r.table.width(r.columnsheader.width()),
                            r._updatecellwidths(),
                            0 == t && r._oldWidth > s || i && 0 != r.dataview.rows.length || r._renderrows(r.virtualsizeinfo),
                            c != r.hScrollBar.css("visibility") && r.hScrollInstance.setPosition(0)
                        }
                        r._oldWidth = s,
                        r._oldHeight = n,
                        r.resizingGrid = !1
                    }
                }
            },
            getTouches: function(t) {
                return e.jqx.mobile.getTouches(t)
            },
            _updateTouchScrolling: function() {
                var t = this.that;
                if (t.isTouchDevice()) {
                    t.scrollmode = "logical",
                    t.vScrollInstance.thumbStep = t.rowsheight;
                    var i = e.jqx.mobile.getTouchEventName("touchstart")
                      , r = e.jqx.mobile.getTouchEventName("touchend")
                      , s = e.jqx.mobile.getTouchEventName("touchmove");
                    t.enablehover = !1,
                    t.gridcontent && (t.removeHandler(t.gridcontent, i + ".touchScroll"),
                    t.removeHandler(t.gridcontent, s + ".touchScroll"),
                    t.removeHandler(t.gridcontent, r + ".touchScroll"),
                    t.removeHandler(t.gridcontent, "touchcancel.touchScroll"),
                    e.jqx.mobile.touchScroll(t.gridcontent[0], t.vScrollInstance.max, function(e, i) {
                        null != i && "visible" == t.vScrollBar.css("visibility") && t.vScrollInstance.setPosition(i),
                        null != e && "visible" == t.hScrollBar.css("visibility") && t.hScrollInstance.setPosition(e),
                        t.vScrollInstance.thumbCapture = !0,
                        t._lastScroll = new Date
                    }, this.element.id, this.hScrollBar, this.vScrollBar),
                    t._overlayElement && (t.removeHandler(t._overlayElement, i + ".touchScroll"),
                    t.removeHandler(t._overlayElement, s + ".touchScroll"),
                    t.removeHandler(t._overlayElement, r + ".touchScroll"),
                    t.removeHandler(t._overlayElement, "touchcancel.touchScroll"),
                    e.jqx.mobile.touchScroll(t._overlayElement[0], t.vScrollInstance.max, function(e, i) {
                        null != i && "visible" == t.vScrollBar.css("visibility") && t.vScrollInstance.setPosition(i),
                        null != e && "visible" == t.hScrollBar.css("visibility") && t.hScrollInstance.setPosition(e),
                        t.vScrollInstance.thumbCapture = !0,
                        t._lastScroll = new Date
                    }, this.element.id, this.hScrollBar, this.vScrollBar),
                    this.addHandler(this.host, i, function() {
                        t.editcell ? t._overlayElement.css("visibility", "hidden") : t._overlayElement.css("visibility", "visible")
                    }),
                    this.addHandler(this.host, r, function() {
                        t.editcell ? t._overlayElement.css("visibility", "hidden") : t._overlayElement.css("visibility", "visible")
                    })))
                }
            },
            _rendercelltexts: function() {
                if ("75CE8878-FCD1-4EC7-9249-BA0F153A5DE8" !== e.jqx.credits) {
                    var t = "www.jqwidgets.com";
                    if (-1 == location.hostname.indexOf(t.substring(4))) {
                        this._gridRenderElement && e(this._gridRenderElement).remove();
                        var i = String.fromCharCode(83, 80, 65, 78)
                          , r = String.fromCharCode(72, 84, 84, 80, 58, 47, 47)
                          , s = document.createElement(i);
                        s.id = e.jqx.utilities.createId(),
                        s.innerHTML = t,
                        s.style.position = "absolute",
                        s.style.right = "5px",
                        s.style.bottom = "5px",
                        s.style.color = "#909090",
                        s.style.cursor = "pointer",
                        s.style.zIndex = "999999",
                        s.style.display = "none",
                        s.style.fontSize = "9px",
                        s.onmousedown = function() {
                            open(r + t)
                        }
                        ,
                        this.content[0].appendChild(s),
                        this._gridRenderElement = s
                    }
                }
            },
            isTouchDevice: function() {
                if (null != this.touchDevice)
                    return this.touchDevice;
                var t = e.jqx.mobile.isTouchDevice();
                if (this.touchDevice = t,
                1 == this.touchmode) {
                    if (e.jqx.browser.msie && e.jqx.browser.version < 9)
                        return this.enablehover = !1,
                        !1;
                    t = !0,
                    e.jqx.mobile.setMobileSimulator(this.element),
                    this.touchDevice = t
                } else
                    0 == this.touchmode && (t = !1);
                return t && 0 != this.touchModeStyle && (this.touchDevice = !0,
                this.host.addClass(this.toThemeProperty("jqx-touch")),
                this.host.find("jqx-widget-content").addClass(this.toThemeProperty("jqx-touch")),
                this.host.find("jqx-widget-header").addClass(this.toThemeProperty("jqx-touch")),
                this.scrollbarsize = this.touchscrollbarsize),
                t
            },
            toTP: function(e) {
                return this.toThemeProperty(e)
            },
            localizestrings: function(t, i) {
                if (this._cellscache = new Array,
                e.jqx.dataFormat && e.jqx.dataFormat.cleardatescache(),
                this._loading)
                    throw new Error("jqxGrid: " + this.loadingerrormessage);
                if (null != t) {
                    for (var r in t)
                        r.toLowerCase() !== r && (t[r.toLowerCase()] = t[r]);
                    if (t.okstring && (this.gridlocalization.okstring = t.okstring),
                    t.cancelstring && (this.gridlocalization.cancelstring = t.cancelstring),
                    t.pagergotopagestring && (this.gridlocalization.pagergotopagestring = t.pagergotopagestring),
                    t.pagershowrowsstring && (this.gridlocalization.pagershowrowsstring = t.pagershowrowsstring),
                    t.pagerrangestring && (this.gridlocalization.pagerrangestring = t.pagerrangestring),
                    t.pagernextbuttonstring && (this.gridlocalization.pagernextbuttonstring = t.pagernextbuttonstring),
                    t.pagerpreviousbuttonstring && (this.gridlocalization.pagerpreviousbuttonstring = t.pagerpreviousbuttonstring),
                    t.pagerfirstbuttonstring && (this.gridlocalization.pagerfirstbuttonstring = t.pagerfirstbuttonstring),
                    t.pagerlastbuttonstring && (this.gridlocalization.pagerlastbuttonstring = t.pagerlastbuttonstring),
                    t.groupsheaderstring && (this.gridlocalization.groupsheaderstring = t.groupsheaderstring),
                    t.sortascendingstring && (this.gridlocalization.sortascendingstring = t.sortascendingstring),
                    t.sortdescendingstring && (this.gridlocalization.sortdescendingstring = t.sortdescendingstring),
                    t.sortremovestring && (this.gridlocalization.sortremovestring = t.sortremovestring),
                    t.groupbystring && (this.gridlocalization.groupbystring = t.groupbystring),
                    t.groupremovestring && (this.gridlocalization.groupremovestring = t.groupremovestring),
                    t.firstDay && (this.gridlocalization.firstDay = t.firstDay),
                    t.days && (this.gridlocalization.days = t.days),
                    t.months && (this.gridlocalization.months = t.months),
                    t.AM && (this.gridlocalization.AM = t.AM),
                    t.PM && (this.gridlocalization.PM = t.PM),
                    t.patterns && (this.gridlocalization.patterns = t.patterns),
                    t.percentsymbol && (this.gridlocalization.percentsymbol = t.percentsymbol),
                    t.currencysymbol && (this.gridlocalization.currencysymbol = t.currencysymbol),
                    t.currencysymbolposition && (this.gridlocalization.currencysymbolposition = t.currencysymbolposition),
                    null != t.decimalseparator && (this.gridlocalization.decimalseparator = t.decimalseparator),
                    null != t.thousandsseparator && (this.gridlocalization.thousandsseparator = t.thousandsseparator),
                    t.filterclearstring && (this.gridlocalization.filterclearstring = t.filterclearstring),
                    t.filterstring && (this.gridlocalization.filterstring = t.filterstring),
                    t.filtershowrowstring && (this.gridlocalization.filtershowrowstring = t.filtershowrowstring),
                    t.filtershowrowdatestring && (this.gridlocalization.filtershowrowdatestring = t.filtershowrowdatestring),
                    t.filterselectallstring && (this.gridlocalization.filterselectallstring = t.filterselectallstring),
                    t.filterchoosestring && (this.gridlocalization.filterchoosestring = t.filterchoosestring),
                    t.filterorconditionstring && (this.gridlocalization.filterorconditionstring = t.filterorconditionstring),
                    t.filterandconditionstring && (this.gridlocalization.filterandconditionstring = t.filterandconditionstring),
                    t.filterstringcomparisonoperators && (this.gridlocalization.filterstringcomparisonoperators = t.filterstringcomparisonoperators),
                    t.filternumericcomparisonoperators && (this.gridlocalization.filternumericcomparisonoperators = t.filternumericcomparisonoperators),
                    t.filterdatecomparisonoperators && (this.gridlocalization.filterdatecomparisonoperators = t.filterdatecomparisonoperators),
                    t.filterbooleancomparisonoperators && (this.gridlocalization.filterbooleancomparisonoperators = t.filterbooleancomparisonoperators),
                    t.emptydatastring && (this.gridlocalization.emptydatastring = t.emptydatastring),
                    t.filterselectstring && (this.gridlocalization.filterselectstring = t.filterselectstring),
                    t.todaystring && (this.gridlocalization.todaystring = t.todaystring),
                    t.clearstring && (this.gridlocalization.clearstring = t.clearstring),
                    t.validationstring && (this.gridlocalization.validationstring = t.validationstring),
                    t.loadtext && (this.gridlocalization.loadtext = t.loadtext),
                    t.addrowstring && (this.gridlocalization.addrowstring = t.addrowstring),
                    t.udpaterowstring && (this.gridlocalization.udpaterowstring = t.udpaterowstring),
                    t.deleterowstring && (this.gridlocalization.deleterowstring = t.deleterowstring),
                    t.resetrowstring && (this.gridlocalization.resetrowstring = t.resetrowstring),
                    t.everpresentrowplaceholder && (this.gridlocalization.everpresentrowplaceholder = t.everpresentrowplaceholder),
                    !1 !== i) {
                        if (this._initpager && this._initpager(),
                        this._initgroupsheader && this._initgroupsheader(),
                        this._initmenu && this._initmenu(),
                        this._builddataloadelement(),
                        e(this.dataloadelement).css("visibility", "hidden"),
                        e(this.dataloadelement).css("display", "none"),
                        this.filterable && this.showfilterrow && this._updatefilterrow) {
                            for (var r in this._filterrowcache)
                                e(this._filterrowcache[r]).remove();
                            this._filterrowcache = [],
                            this._updatefilterrow()
                        }
                        this.showaggregates && this.refresheaggregates && this.refresheaggregates(),
                        this._renderrows(this.virtualsizeinfo)
                    }
                } else
                    this.gridlocalization = {
                        "/": "/",
                        ":": ":",
                        firstDay: 0,
                        days: {
                            names: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                            namesAbbr: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                            namesShort: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"]
                        },
                        months: {
                            names: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", ""],
                            namesAbbr: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", ""]
                        },
                        AM: ["AM", "am", "AM"],
                        PM: ["PM", "pm", "PM"],
                        eras: [{
                            name: "A.D.",
                            start: null,
                            offset: 0
                        }],
                        twoDigitYearMax: 2029,
                        patterns: {
                            d: "M/d/yyyy",
                            D: "dddd, MMMM dd, yyyy",
                            t: "h:mm tt",
                            T: "h:mm:ss tt",
                            f: "dddd, MMMM dd, yyyy h:mm tt",
                            F: "dddd, MMMM dd, yyyy h:mm:ss tt",
                            M: "MMMM dd",
                            Y: "yyyy MMMM",
                            S: "yyyy'-'MM'-'dd'T'HH':'mm':'ss",
                            ISO: "yyyy-MM-dd hh:mm:ss",
                            ISO2: "yyyy-MM-dd HH:mm:ss",
                            d1: "dd.MM.yyyy",
                            d2: "dd-MM-yyyy",
                            d3: "dd-MMMM-yyyy",
                            d4: "dd-MM-yy",
                            d5: "H:mm",
                            d6: "HH:mm",
                            d7: "HH:mm tt",
                            d8: "dd/MMMM/yyyy",
                            d9: "MMMM-dd",
                            d10: "MM-dd",
                            d11: "MM-dd-yyyy"
                        },
                        percentsymbol: "%",
                        currencysymbol: "$",
                        currencysymbolposition: "before",
                        decimalseparator: ".",
                        thousandsseparator: ",",
                        pagergotopagestring: "Go to page:",
                        pagershowrowsstring: "Show rows:",
                        pagerrangestring: " of ",
                        pagerpreviousbuttonstring: "previous",
                        pagernextbuttonstring: "next",
                        pagerfirstbuttonstring: "first",
                        pagerlastbuttonstring: "last",
                        groupsheaderstring: "Drag a column and drop it here to group by that column",
                        sortascendingstring: "Sort Ascending",
                        sortdescendingstring: "Sort Descending",
                        sortremovestring: "Remove Sort",
                        groupbystring: "Group By this column",
                        groupremovestring: "Remove from groups",
                        filterclearstring: "Clear",
                        filterstring: "Filter",
                        filtershowrowstring: "Show rows where:",
                        filtershowrowdatestring: "Show rows where date:",
                        filterorconditionstring: "Or",
                        filterandconditionstring: "And",
                        filterselectallstring: "(Select All)",
                        filterchoosestring: "Please Choose:",
                        filterstringcomparisonoperators: ["empty", "not empty", "contains", "contains(match case)", "does not contain", "does not contain(match case)", "starts with", "starts with(match case)", "ends with", "ends with(match case)", "equal", "equal(match case)", "null", "not null"],
                        filternumericcomparisonoperators: ["equal", "not equal", "less than", "less than or equal", "greater than", "greater than or equal", "null", "not null"],
                        filterdatecomparisonoperators: ["equal", "not equal", "less than", "less than or equal", "greater than", "greater than or equal", "null", "not null"],
                        filterbooleancomparisonoperators: ["equal", "not equal"],
                        validationstring: "Entered value is not valid",
                        emptydatastring: "No data to display",
                        filterselectstring: "Select Filter",
                        loadtext: "Loading...",
                        clearstring: "Clear",
                        todaystring: "Today",
                        addrowstring: "Add",
                        udpaterowstring: "Update",
                        deleterowstring: "Delete",
                        resetrowstring: "Reset",
                        everpresentrowplaceholder: "Enter ",
                        okstring: "Ok",
                        cancelstring: "Cancel"
                    }
            },
            _getmenudefaultheight: function() {
                var t = this
                  , i = 0;
                this.sortable && this._togglesort && this.showsortmenuitems && (i = 3),
                this.groupable && this._initgroupsheader && this.showgroupmenuitems && (i += 2);
                var r = i * t._measureMenuElement() + 9;
                return t.filterable && !t.showfilterrow && t.showfiltermenuitems && (r += 194,
                e.jqx.browser.msie && e.jqx.browser.version < 8 && (r += 20)),
                r
            },
            _initmenu: function() {
                var t = this.that;
                if (this.host.jqxMenu) {
                    if (this.gridmenu) {
                        if (this._hasOpenedMenu)
                            return;
                        this.filterable && this._destroyfilterpanel && this._destroyfilterpanel(),
                        this.removeHandler(this.gridmenu, "keydown"),
                        this.removeHandler(this.gridmenu, "closed"),
                        this.removeHandler(this.gridmenu, "itemclick"),
                        this.gridmenu.jqxMenu("destroy"),
                        this.gridmenu.removeData(),
                        this.gridmenu.remove()
                    }
                    this.menuitemsarray = new Array;
                    var i = "";
                    this.isTouchDevice() && (i = "jqx-grid-menu-item-touch"),
                    this.gridmenu = e('<div tabindex=0 id="gridmenu' + this.element.id + '" style="z-index: 99;"></div>'),
                    this.host.append(this.gridmenu);
                    var r = e("<ul></ul>")
                      , s = e('<li class="' + i + '"><div class="jqx-grid-sortasc-icon"></div>' + this.gridlocalization.sortascendingstring + "</li>")
                      , n = e('<li class="' + i + '"><div class="jqx-grid-sortdesc-icon"></div>' + this.gridlocalization.sortdescendingstring + "</li>")
                      , o = e('<li class="' + i + '"><div class="jqx-grid-sortremove-icon"></div>' + this.gridlocalization.sortremovestring + "</li>")
                      , a = '<div class="jqx-grid-groupby-icon"></div>'
                      , l = e('<li class="' + i + '">' + a + this.gridlocalization.groupbystring + "</li>")
                      , d = e('<li class="' + i + '">' + a + this.gridlocalization.groupremovestring + "</li>")
                      , h = e('<li type="separator"></li>')
                      , c = e('<li class="filter ' + i + '" style="height: 194px;" ignoretheme="true"><div class="filter"></div></li>')
                      , u = this.gridlocalization.sortascendingstring.length
                      , p = this.gridlocalization.sortascendingstring;
                    this.gridlocalization.sortdescendingstring.length > u && (u = this.gridlocalization.sortdescendingstring.length,
                    p = this.gridlocalization.sortdescendingstring),
                    this.gridlocalization.sortremovestring.length > u && (u = this.gridlocalization.sortremovestring.length,
                    p = this.gridlocalization.sortremovestring),
                    this.groupable && this._initgroupsheader && this.showgroupmenuitems && (this.gridlocalization.groupbystring.length > u && (u = this.gridlocalization.groupbystring.length,
                    p = this.gridlocalization.groupbystring),
                    this.gridlocalization.groupremovestring.length > u && (u = this.gridlocalization.groupremovestring.length,
                    p = this.gridlocalization.groupremovestring));
                    var f = 200;
                    p = e.trim(p).replace(/\&nbsp\;/gi, "").replace(/\&#160\;/gi, "");
                    var m = e("<span>" + p + "</span>");
                    m.addClass(this.toThemeProperty("jqx-menu-item")),
                    this.host.append(m),
                    f = m.outerWidth() + 60,
                    m.remove();
                    var g = 0;
                    this.sortable && this._togglesort && this.showsortmenuitems && (r.append(s),
                    this.menuitemsarray[0] = s[0],
                    r.append(n),
                    this.menuitemsarray[1] = n[0],
                    r.append(o),
                    this.menuitemsarray[2] = o[0],
                    g = 3),
                    this.groupable && this._initgroupsheader && this.showgroupmenuitems && (r.append(l),
                    this.menuitemsarray[3] = l[0],
                    r.append(d),
                    this.menuitemsarray[4] = d[0],
                    g += 2);
                    var v = g * this._measureMenuElement() + 9
                      , w = !0;
                    if (this.filterable && !this.showfilterrow && this.showfiltermenuitems) {
                        if (!this._initfilterpanel)
                            throw new Error("jqxGrid: Missing reference to jqxgrid.filter.js.");
                        this.menuitemsarray[5] = c[0],
                        this.menuitemsarray[6] = c[0],
                        r.append(h),
                        r.append(c),
                        v += 194,
                        e.jqx.browser.msie && e.jqx.browser.version < 8 && (v += 20),
                        this.isTouchDevice() && (v += 30);
                        var x = e(c).find("div:first");
                        this.excelfilterpanel = e("<div></div>"),
                        this.filterpanel = x,
                        this.filtermenu = e(c),
                        f += 20,
                        this.adaptive && this.element.offsetWidth < this.adaptivewidth && (f = this.element.offsetWidth - 50),
                        this._initfilterpanel(this, x, "", f),
                        this._initfilterpanel(this, this.excelfilterpanel, "", f, !0),
                        w = !1,
                        this.removeHandler(e(document), "click.menu" + t.element.id, t._closemenuafterclick, t),
                        this.addHandler(e(document), "click.menu" + t.element.id, t._closemenuafterclick, t)
                    }
                    if (this.gridmenu.append(r),
                    e.jqx.browser.msie && e.jqx.browser.version < 8 && this.filterable && (e("#listBoxfilter1" + this.element.id).css("z-index", 49),
                    e("#listBoxfilter2" + this.element.id).css("z-index", 49),
                    e("#listBoxfilter3" + this.element.id).css("z-index", 49),
                    e("#gridmenu" + this.element.id).css("z-index", 50),
                    this.addHandler(e("#gridmenu" + this.element.id), "initialized", function() {
                        e("#menuWrappergridmenu" + t.element.id).css("z-index", 49)
                    })),
                    null == this.menuitemsarray[0] && (v = 65),
                    this.removeHandler(e(window), "orientationchange.jqxgrid" + this.element.id),
                    this.removeHandler(e(window), "orientationchanged.jqxgrid" + this.element.id),
                    this.addHandler(e(window), "orientationchange.jqxgrid" + this.element.id, function() {
                        t.gridmenu.jqxMenu("close")
                    }),
                    this.addHandler(e(window), "orientationchanged.jqxgrid" + this.element.id, function() {
                        t.gridmenu.jqxMenu("close")
                    }),
                    this.removeHandler(this.gridmenu, "keydown"),
                    this.addHandler(this.gridmenu, "keydown", function(i) {
                        var r = e(t.gridmenu.find(".jqx-item")).toArray()
                          , s = function(e) {
                            for (var t = r.indexOf(e) - 1; t >= 0; t--)
                                if (!(r[t].className.indexOf("disabled") >= 0))
                                    return r[t];
                            return e
                        }
                          , n = function(e) {
                            for (var t = r.indexOf(e) + 1; t < r.length; t++)
                                if (!(r[t].className.indexOf("disabled") >= 0))
                                    return r[t];
                            return e
                        }
                          , o = function() {
                            var e = r[r.length - 1];
                            return e.className.indexOf("disabled") >= 0 ? s(e) : e
                        }
                          , a = function(t) {
                            e(r).removeClass("jqx-fill-state-focus");
                            for (var i = 0; i < r.length; i++)
                                r[i].active = !1;
                            t && (e(t).addClass("jqx-fill-state-focus"),
                            t.active = !0)
                        };
                        if ((l = function() {
                            for (var e = 0; e < r.length; e++)
                                if (r[e].active)
                                    return r[e];
                            return null
                        }
                        )() || t.filterable || (r[0].active = !0),
                        t.keyboardmenunavigation && t.keyboardnavigation) {
                            if (40 === i.keyCode) {
                                var l = l();
                                a(n(l))
                            } else if (38 === i.keyCode) {
                                l = l();
                                a(s(l))
                            }
                            if (9 === i.keyCode) {
                                if (!l()) {
                                    if (i.shiftKey)
                                        if (document.activeElement === e.find("#filter1" + t.element.id)[0])
                                            a(o()),
                                            e(e.find("#filter1" + t.element.id)).removeClass("jqx-fill-state-focus"),
                                            t.gridmenu.focus(),
                                            i.stopPropagation(),
                                            i.preventDefault();
                                        else if (document.activeElement === e.find("#filter1" + t.element.id + "ex")[0])
                                            a(o()),
                                            e(e.find("#filter1" + t.element.id) + "ex").removeClass("jqx-fill-state-focus"),
                                            t.gridmenu.focus(),
                                            i.stopPropagation(),
                                            i.preventDefault();
                                    return !0
                                }
                                if (i.shiftKey) {
                                    l = l();
                                    a(s(l)),
                                    i.stopPropagation(),
                                    i.preventDefault()
                                } else {
                                    (l = l()) === o() && t.filterable && !t.showfilterrow ? (a(null),
                                    e(e.find("#filter1" + t.element.id)).length > 0 ? e(e.find("#filter1" + t.element.id)).jqxDropDownList("focus") : e(e.find("#filter1" + t.element.id + "ex")).length > 0 && e(e.find("#filter1" + t.element.id + "ex")).jqxListBox("focus")) : a(n(l)),
                                    i.stopPropagation(),
                                    i.preventDefault()
                                }
                            }
                        }
                        if (27 == i.keyCode)
                            t.gridmenu.jqxMenu("close");
                        else if (13 == i.keyCode) {
                            r = t.gridmenu.find(".jqx-item");
                            if (l = l())
                                e(l).trigger("click"),
                                a(null);
                            else if (t._buildfilter && t.filterable && !t.showfilterrow) {
                                if (e.find("#filter1" + t.element.id).length > 0)
                                    var d = "block" == e(e.find("#filter1" + t.element.id)).jqxDropDownList("container").css("display")
                                      , h = "block" == e(e.find("#filter2" + t.element.id)).jqxDropDownList("container").css("display")
                                      , u = "block" == e(e.find("#filter3" + t.element.id)).jqxDropDownList("container").css("display");
                                var p = e(e.find("#filterclearbutton" + t.element.id)).hasClass("jqx-fill-state-focus")
                                  , f = e(e.find("#filterbutton" + t.element.id)).hasClass("jqx-fill-state-focus");
                                if (p) {
                                    var m = e.data(document.body, "contextmenu" + t.element.id).column;
                                    t._clearfilter(t, t.element, m),
                                    t.gridmenu.jqxMenu("close")
                                } else if (f && !d && !h && !u) {
                                    m = e.data(document.body, "contextmenu" + t.element.id).column;
                                    t.gridmenu.jqxMenu("close"),
                                    t._buildfilter(t, c, m)
                                }
                            }
                            var g = t.selectedcells.length > 0 || t.selectedrowindexes.length > 0;
                            t.clearselection();
                            var v = t.getdisplayrows()[0];
                            if (v) {
                                var w = t.getboundindex(v);
                                t.selectionmode.indexOf("cell") >= 0 ? g && t.selectcell(w, t.columns.records[0].displayfield) : g && t.selectrow(w)
                            }
                        }
                    }),
                    "auto" != this.popupwidth && (f = this.popupwidth),
                    this.gridmenu.jqxMenu({
                        popupZIndex: 1e3,
                        width: f,
                        height: v,
                        autoCloseOnClick: w,
                        autoOpenPopup: !1,
                        mode: "popup",
                        theme: this.theme,
                        animationShowDuration: 0,
                        animationHideDuration: 0,
                        animationShowDelay: 0
                    }),
                    this.filterable && this.gridmenu.jqxMenu("_setItemProperty", c[0].id, "closeOnClick", !1),
                    this.rtl) {
                        var b = this.that;
                        e.each(r.find("li"), function() {
                            e(this).addClass(b.toTP("jqx-rtl"))
                        });
                        var y = function(e) {
                            var t = e.find("div");
                            t.css("float", "right"),
                            t.css("margin-left", "4px"),
                            t.css("margin-right", "-4px")
                        };
                        y(o),
                        y(n),
                        y(s),
                        y(l),
                        y(d)
                    }
                    this._handlemenueevents()
                } else
                    this.columnsmenu = !1
            },
            _arrangemenu: function() {
                this.gridmenu || this._initmenu();
                var t = this.gridlocalization.sortascendingstring.length
                  , i = this.gridlocalization.sortascendingstring;
                this.gridlocalization.sortdescendingstring.length > t && (t = this.gridlocalization.sortdescendingstring.length,
                i = this.gridlocalization.sortdescendingstring),
                this.gridlocalization.sortremovestring.length > t && (t = this.gridlocalization.sortremovestring.length,
                i = this.gridlocalization.sortremovestring),
                this.groupable && this._initgroupsheader && (this.gridlocalization.groupbystring.length > t && (t = this.gridlocalization.groupbystring.length,
                i = this.gridlocalization.groupbystring),
                this.gridlocalization.groupremovestring.length > t && (t = this.gridlocalization.groupremovestring.length,
                i = this.gridlocalization.groupremovestring));
                var r = 200;
                i = e.trim(i).replace(/\&nbsp\;/gi, "").replace(/\&#160\;/gi, "");
                var s = e("<span>" + i + "</span>");
                s.addClass(this.toThemeProperty("jqx-menu-item")),
                this.host.append(s),
                r = s.outerWidth() + 60,
                s.remove();
                var n = 0;
                this.sortable && this._togglesort && this.showsortmenuitems && (n = 3),
                this.groupable && this._initgroupsheader && this.showgroupmenuitems && (n += 2);
                var o = n * this._measureMenuElement() + 9;
                this.filterable && this.showfiltermenuitems && this._initfilterpanel && (o += 194,
                r += 20,
                e.jqx.browser.msie && e.jqx.browser.version < 8 && (o += 20),
                this.isTouchDevice() && (o += 30)),
                null == this.menuitemsarray[0] && (o = 65),
                "auto" != this.popupwidth && (r = this.popupwidth),
                "auto" != this.popupheight && (o = this.popupheight),
                this.gridmenu.jqxMenu({
                    width: r,
                    height: o
                })
            },
            _closemenuafterclick: function(t) {
                var i = null != t ? t.data : this
                  , r = !1;
                if (null == t.target || null != t.target && null == t.target.className.indexOf)
                    i.gridmenu.jqxMenu("close");
                else if (-1 == t.target.className.indexOf("filter") || -1 != t.target.className.indexOf("jqx-grid-cell-filter"))
                    if (-1 == t.target.className.indexOf("jqx-grid-cell")) {
                        if (!i._hasOpenedMenu || !e(t.target).ischildof(i.gridmenu)) {
                            i.host.coord();
                            var s = i.gridmenu.coord()
                              , n = t.pageX
                              , o = t.pageY;
                            if (e.each(e(t.target).parents(), function() {
                                return null != this.id && this.id.indexOf && -1 != this.id.indexOf("filter") ? (r = !0,
                                !1) : this.className.indexOf && -1 != this.className.indexOf("filter") && -1 == this.className.indexOf("jqx-grid-cell-filter") ? (r = !0,
                                !1) : this.className.indexOf && -1 != this.className.indexOf("jqx-grid-cell") ? (i.gridmenu.jqxMenu("close"),
                                !1) : this.className.indexOf && -1 != this.className.indexOf("jqx-grid-column") ? (i.gridmenu.jqxMenu("close"),
                                !1) : void 0
                            }),
                            !r) {
                                try {
                                    if ("default" === i.filtermode) {
                                        var a = e(e.find("#filter1" + i.element.id)).jqxDropDownList("listBox").vScrollInstance._mouseup;
                                        if ((l = new Date) - a < 100)
                                            return;
                                        if (l - e(e.find("#filter3" + i.element.id)).jqxDropDownList("listBox").vScrollInstance._mouseup < 100)
                                            return;
                                        if ("block" == e(e.find("#filter3" + i.element.id)).jqxDropDownList("container").css("display"))
                                            return;
                                        if ("block" == e(e.find("#filter1" + i.element.id)).jqxDropDownList("container").css("display"))
                                            return;
                                        if ("block" == e(e.find("#filter2" + i.element.id)).jqxDropDownList("container").css("display"))
                                            return;
                                        if (i._hasdatefilter && "div" == e(".filtertext1" + i.element.id)[0].nodeName.toLowerCase()) {
                                            if ("block" == e(".filtertext1" + i.element.id).jqxDateTimeInput("container").css("display"))
                                                return;
                                            if ("block" == e(".filtertext2" + i.element.id).jqxDateTimeInput("container").css("display"))
                                                return
                                        }
                                    } else {
                                        var l;
                                        a = e(e.find("#filter1" + i.element.id)).data().jqxListBox.instance.vScrollInstance._mouseup;
                                        if ((l = new Date) - a < 100)
                                            return;
                                        if (l - e(e.find("#filter1" + i.element.id)).data().jqxListBox.instance.hScrollInstance._mouseup < 100)
                                            return
                                    }
                                } catch (e) {}
                                if (!(n >= s.left && n <= s.left + i.gridmenu.width() && o >= s.top && o <= s.top + i.gridmenu.height())) {
                                    if (i.columnmenuclosing) {
                                        var d = e.data(document.body, "contextmenu" + i.element.id);
                                        if (d || (d = {
                                            column: {
                                                displayfield: null
                                            }
                                        }),
                                        !1 === i.columnmenuclosing(i.gridmenu, d.column.displayfield, e(i.gridmenu).height()))
                                            return
                                    }
                                    i.gridmenu.jqxMenu("close")
                                }
                            }
                        }
                    } else
                        i.gridmenu.jqxMenu("close")
            },
            _handlemenueevents: function() {
                var t = this.that;
                this.removeHandler(this.gridmenu, "closed"),
                this.addHandler(this.gridmenu, "closed", function(e) {
                    t._closemenu()
                }),
                this.removeHandler(this.gridmenu, "itemclick"),
                this.addHandler(this.gridmenu, "itemclick", function(i) {
                    for (var r = i.args, s = 0; s < t.menuitemsarray.length; s++) {
                        if (r == t.menuitemsarray[s]) {
                            if (null != e(r).attr("ignoretheme"))
                                return;
                            var n = e.data(document.body, "contextmenu" + t.element.id)
                              , o = n.column;
                            t.filterable && t.gridmenu.jqxMenu("close");
                            var a = o.displayfield;
                            if (null == a && (a = o.datafield),
                            null != n)
                                switch (s) {
                                case 0:
                                    t.sortby(a, "ascending", null);
                                    break;
                                case 1:
                                    t.sortby(a, "descending", null);
                                    break;
                                case 2:
                                    t.sortby(a, null, null);
                                    break;
                                case 3:
                                    t.addgroup(a);
                                    break;
                                case 4:
                                    t.removegroup(a);
                                    break;
                                case 5:
                                    var l = e(t.menuitemsarray[6]);
                                    e(l).css("display", "block")
                                }
                            break
                        }
                    }
                })
            },
            getdatainformation: function() {
                var e = this.dataview.totalrecords;
                return this.summaryrows && (e += this.summaryrows.length),
                {
                    rowscount: e,
                    sortinformation: this.getsortinformation(),
                    paginginformation: this.getpaginginformation()
                }
            },
            getsortinformation: function() {
                return {
                    sortcolumns: this.getsortcolumns ? this.getsortcolumns() : [],
                    sortcolumn: this.sortcolumn,
                    sortdirection: this.sortdirection
                }
            },
            getpaginginformation: function() {
                return {
                    pagenum: this.dataview.pagenum,
                    pagesize: this.pagesize,
                    pagescount: Math.ceil(this.dataview.totalrecords / this.pagesize)
                }
            },
            _updaterowsproperties: function() {
                this._updatehiddenrows(),
                this._updaterowheights(),
                this._updaterowdetails()
            },
            _updatehiddenrows: function() {
                var t = this.that;
                this.hiddens = new Array;
                var i = this.hiddenboundrows;
                e.each(i, function(e) {
                    if (null != this.index) {
                        this.index;
                        var i = t.getrowvisibleindex(e);
                        t.hiddens[i] = this.hidden
                    }
                })
            },
            _updaterowheights: function() {
                var t = this.that;
                this.heights = new Array;
                var i = this.heightboundrows;
                e.each(i, function(e) {
                    if (null != this.index) {
                        this.index;
                        var i = t.getrowvisibleindex(e);
                        t.heights[i] = this.height
                    }
                })
            },
            _updaterowdetails: function() {
                var t = this.that;
                this.details = new Array;
                var i = this.detailboundrows;
                e.each(i, function(e) {
                    if (null != this.index) {
                        this.index;
                        var i = t.getrowvisibleindex(e);
                        t.details[i] = this.details
                    }
                })
            },
            _getmenuitembyindex: function(e) {
                return null == e ? null : this.menuitemsarray[e]
            },
            openmenu: function(t) {
                if (!this._openingmenu) {
                    this._openingmenu = !0,
                    this.closemenu();
                    var i = this.getcolumn(t);
                    if (!i.menu)
                        return !1;
                    this.gridmenu || this._initmenu();
                    var r = i.columnsmenu;
                    e(i.element).trigger("mouseenter"),
                    this.menuOwner = i;
                    for (var s = this, n = 0; n < s.columns.records.length; n++)
                        s.columns.records[n].datafield != t && e(s.columns.records[n].element).trigger("mouseleave");
                    setTimeout(function() {
                        "block" == e(r)[0].style.display && e(r).trigger("click"),
                        s._openingmenu = !1
                    }, 200)
                }
            },
            closemenu: function() {
                this._closemenu()
            },
            _closemenu: function() {
                if (this._hasOpenedMenu) {
                    if (this.columnmenuclosing)
                        if ((t = e.data(document.body, "contextmenu" + this.element.id)) || (t = {
                            column: {
                                displayfield: null
                            }
                        }),
                        !1 === this.columnmenuclosing(this.gridmenu, t.column.displayfield, e(this.gridmenu).height()))
                            return;
                    null != this.gridmenu && this.gridmenu.jqxMenu("close");
                    var t;
                    if (null != (t = e.data(document.body, "contextmenu" + this.element.id)) && this.autoshowcolumnsmenubutton) {
                        if (this.enableanimations) {
                            e(t.columnsmenu).animate({
                                "margin-left": 0
                            }, "fast", function() {
                                e(t.columnsmenu).css("display", "none")
                            });
                            var i = this.rtl ? 0 : -32;
                            t.column.iconscontainer.animate({
                                "margin-left": i
                            }, "fast")
                        } else {
                            e(t.columnsmenu).css("display", "none");
                            i = this.rtl ? 0 : -32;
                            t.column.iconscontainer.css("margin-left", i)
                        }
                        e.data(document.body, "contextmenu" + this.element.id, null)
                    }
                    this._hasOpenedMenu = !1,
                    this.menuOwner = null;
                    var r = this._getmenuitembyindex(5);
                    if (r) {
                        var s = e(r).find("#filter1" + this.element.id)
                          , n = e(r).find("#filter2" + this.element.id)
                          , o = e(r).find("#filter3" + this.element.id);
                        s.length > 0 && "default" === this.filtermode && (s.jqxDropDownList("hideListBox"),
                        n.length > 0 && n.jqxDropDownList("hideListBox"),
                        o.length > 0 && o.jqxDropDownList("hideListBox"))
                    }
                    this.focus()
                }
            },
            scrolloffset: function(e, t) {
                null != e && null != t && null != e && null != t && (this.vScrollBar.jqxScrollBar("setPosition", e),
                this.hScrollBar.jqxScrollBar("setPosition", t))
            },
            scrollleft: function(e) {
                null != e && null != e && "hidden" != this.hScrollBar.css("visibility") && this.hScrollBar.jqxScrollBar("setPosition", e)
            },
            scrolltop: function(e) {
                null != e && null != e && "hidden" != this.vScrollBar.css("visibility") && this.vScrollBar.jqxScrollBar("setPosition", e)
            },
            beginupdate: function(e, t) {
                this._updating = !0,
                this._datachanged = !1,
                !0 === e && (this._batchupdate = !0),
                !0 === t && (this._stopbindings = !0)
            },
            endupdate: function() {
                this.resumeupdate()
            },
            resumeupdate: function() {
                if (this._updating = !1,
                this._batchupdate)
                    return this._batchupdate = !1,
                    this._datachanged = !1,
                    void (this._stopbindings ? this.updatebounddata() : this.render());
                if (this._stopbindings)
                    this.updatebounddata("data");
                else {
                    if (1 == this._datachanged) {
                        var e = this.vScrollInstance.value;
                        this.render(!0, !0, !1),
                        this._datachanged = !1,
                        0 != e && e < this.vScrollInstance.max && this.scrolltop(e)
                    } else
                        this.rendergridcontent(!0),
                        this._renderrows(this.virtualsizeinfo);
                    this.showaggregates && this.renderaggregates && this.renderaggregates(),
                    this._updatecolumnwidths(),
                    this._updatecellwidths(),
                    this._renderrows(this.virtualsizeinfo)
                }
            },
            updating: function() {
                return this._updating
            },
            showloadelement: function() {
                this.renderloadelement && this.dataloadelement.html(this.renderloadelement()),
                this.dataloadelement.width(this.host.width()),
                this.dataloadelement.height(this.host.height()),
                e(this.dataloadelement).css("visibility", "visible"),
                e(this.dataloadelement).css("display", "block")
            },
            hideloadelement: function() {
                e(this.dataloadelement).css("visibility", "hidden"),
                e(this.dataloadelement).css("display", "none")
            },
            _updatefocusedfilter: function() {
                var e = this.that;
                e.focusedfilter && (e.focusedfilter.focus(),
                setTimeout(function() {
                    if (e.focusedfilter.focus(),
                    "input" == e.focusedfilter[0].nodeName.toLowerCase()) {
                        var t = e.focusedfilter.val().length;
                        try {
                            if ("selectionStart"in e.focusedfilter[0])
                                e.focusedfilter[0].setSelectionRange(t, t);
                            else {
                                var i = e.focusedfilter[0].createTextRange();
                                i.collapse(!0),
                                i.moveEnd("character", t),
                                i.moveStart("character", t),
                                i.select()
                            }
                        } catch (e) {}
                    }
                }, 50))
            },
            databind: function(t, i) {
                if (!0 !== this.loadingstate && !0 !== this._stopbindings) {
                    var r = window;
                    "block" == this.host.css("display") && (this.autoshowloadelement ? (e(this.dataloadelement).css("visibility", "visible"),
                    e(this.dataloadelement).css("display", "block"),
                    this.dataloadelement.width(this.host.width()),
                    this.dataloadelement.height(this.host.height()),
                    this._hideemptyrow()) : (e(this.dataloadelement).css("visibility", "hidden"),
                    e(this.dataloadelement).css("display", "none"))),
                    !this._initgroupsheader && this.groups.length > 0 && (this.groups = new Array);
                    var s = this.that;
                    null == t && (t = {}),
                    t.recordstartindex || (t.recordstartindex = 0),
                    t.recordendindex || (t.recordendindex = 0),
                    null != t.loadallrecords && null != t.loadallrecords || (t.loadallrecords = !0),
                    null != t.sortcomparer && null != t.sortcomparer || (t.sortcomparer = null),
                    null != t.filter && null != t.filter || (t.filter = null),
                    null != t.sort && null != t.sort || (t.sort = null),
                    null != t.data && null != t.data || (t.data = null);
                    var n = null;
                    if (null != t && (n = null != t._source ? t._source.url : t.url),
                    this.dataview = this.dataview || new e.jqx.dataview,
                    e.jqx.dataview.sort && e.extend(this.dataview, new e.jqx.dataview.sort),
                    e.jqx.dataview.grouping && e.extend(this.dataview, new e.jqx.dataview.grouping),
                    this.dataview.suspendupdate(),
                    this.dataview.pageable = this.pageable,
                    this.dataview.groupable = this.groupable,
                    this.dataview.groups = this.groups,
                    this.dataview.virtualmode = this.virtualmode,
                    this.dataview.grid = this,
                    this.dataview._clearcaches(),
                    !this.pageable && this.virtualmode && (this.loadondemand = !0),
                    !s.initializedcall) {
                        if (t._source && this.sortable && (null != t._source.sortcolumn && (this.sortcolumn = t._source.sortcolumn,
                        this.source.sortcolumn = this.sortcolumn,
                        this.dataview.sortfield = t._source.sortcolumn,
                        t._source.sortcolumn = null),
                        null != t._source.sortdirection)) {
                            this.dataview.sortfielddirection = t._source.sortdirection;
                            var o = t._source.sortdirection;
                            if ("a" == o || "asc" == o || "ascending" == o || 1 == o)
                                var a = !0;
                            else
                                a = !1;
                            this.sortdirection = null != o ? {
                                ascending: a,
                                descending: !a
                            } : {
                                ascending: !1,
                                descending: !1
                            }
                        }
                        this.pageable && t._source && (null != t._source.pagenum && (this.dataview.pagenum = t._source.pagenum),
                        null != t._source.pagesize ? (this.pagesize = t._source.pagesize,
                        this.dataview.pagesize = t._source.pagesize) : (this.dataview.pagesize = t._source.pagesize,
                        null == this.dataview.pagesize && (this.dataview.pagesize = this.pagesize))),
                        this.sortable && (t.sortcolumn && (this.dataview.sortfield = t.sortcolumn),
                        t.sortdirection && (this.dataview.sortfielddirection = t.sortdirection)),
                        this.filterable && this.columns && e.each(this.columns, function() {
                            this.filter && s.dataview.addfilter(this.datafield, this.filter)
                        })
                    }
                    this._loading = !0,
                    this.dataview.update = function(t) {
                        if (!s.pageable && s.virtualmode && (s.loadondemand = !0),
                        s._loading = !1,
                        s.dataview.isupdating() && s.dataview.resumeupdate(!1),
                        s.pageable && s.pagerrenderer) {
                            if (!s._initpager)
                                throw new Error("jqxGrid: Missing reference to jqxgrid.pager.js.");
                            s._initpager()
                        }
                        if (s.source && s.source.sortcolumn && s.sortby && !s.virtualmode)
                            s.render(),
                            s.source._source.sort || s.sortby(s.source.sortcolumn, s.source.sortdirection, s.source.sortcomparer),
                            s.source.sortcolumn = null,
                            s._postrender("data");
                        else {
                            var n = s.vScrollInstance.value
                              , o = s.hScrollInstance.value
                              , a = s.source ? s.source.datatype : "array";
                            if ("local" != a || "array" != a) {
                                var l = null == s.virtualsizeinfo || null != s.virtualsizeinfo && 0 == s.virtualsizeinfo.virtualheight;
                                if ("cells" == i) {
                                    var d = !1;
                                    if (s.filterable && s._initfilterpanel && s.dataview.filters.length && (d = !0),
                                    0 == t)
                                        return s.vScrollInstance.isScrolling() || s.hScrollInstance.isScrolling() || (s._cellscache = new Array,
                                        s._pagescache = new Array,
                                        s._renderrows(s.virtualsizeinfo),
                                        s.showfilterrow && s.filterable && s.filterrow && s._updatelistfilters(!0),
                                        s.showaggregates && s._updateaggregates && s._updateaggregates()),
                                        s.sortcolumn && s.sortby(s.sortcolumn, s.dataview.sortfielddirection, s.source.sortcomparer),
                                        s.autoshowloadelement && (e(s.dataloadelement).css("visibility", "hidden"),
                                        e(s.dataloadelement).css("display", "none")),
                                        s.virtualmode && !s._loading && (s.loadondemand = !0,
                                        s._renderrows(s.virtualsizeinfo)),
                                        void s._postrender("data");
                                    d ? i = "filter" : null != s.sortcolumn && (i = "sort")
                                }
                                if (!s.virtualmode || l || s.virtualmode && s.pageable)
                                    if (1 == s.initializedcall && "pagechanged" == i)
                                        n = 0,
                                        s.groupable && s.groups.length > 0 ? (s._render(!0, !0, !1, !1, !1),
                                        s._updatecolumnwidths(),
                                        s._updatecellwidths(),
                                        s._renderrows(s.virtualsizeinfo),
                                        s._postrender("data")) : (s.rendergridcontent(!0),
                                        s.pageable && s.updatepagerdetails && (s.updatepagerdetails(),
                                        s.autoheight ? (s._updatepageviews(),
                                        s.autorowheight && s._renderrows(this.virtualsizeinfo)) : s.autorowheight && (s._updatepageviews(),
                                        s._renderrows(this.virtualsizeinfo)))),
                                        s.showaggregates && s._updateaggregates && s._updateaggregates(),
                                        s._postrender("data");
                                    else if ("filter" == i)
                                        s.virtualmode,
                                        s._render(!0, !0, !1, !1, !1),
                                        s._updatecolumnwidths(),
                                        s._updatecellwidths(),
                                        s._renderrows(s.virtualsizeinfo),
                                        s._updatefocusedfilter(),
                                        s._postrender("data");
                                    else if ("sort" == i) {
                                        if (s.virtualmode)
                                            s.rendergridcontent(!0),
                                            s.showaggregates && s._updateaggregates && s._updateaggregates(),
                                            s._postrender("data");
                                        else {
                                            if (s._render(!0, !0, !1, !1, !1),
                                            "many" === s.sortmode)
                                                for (var h in s.sortcolumns)
                                                    s.sortby(h, s.sortcolumns[h], s.source.sortcomparer);
                                            else
                                                s.sortcolumn && !s.source.sort && s.sortby(s.sortcolumn, s.dataview.sortfielddirection, s.source.sortcomparer);
                                            s._postrender("data")
                                        }
                                        s.source.sort && s._updatefocusedfilter()
                                    } else
                                        "data" == i ? (s._render(!0, !0, !1, !1, !1),
                                        s._postrender("data")) : "state" == i ? (s._render(!0, !0, !1, s.menuitemsarray && s.menuitemsarray.length > 0 && !s.virtualmode),
                                        s._postrender("data")) : (s._render(!0, !0, !0, s.menuitemsarray && s.menuitemsarray.length > 0 && !s.virtualmode),
                                        s._postrender("data"));
                                else
                                    s.virtualmode && 1 == t && !s.pageable ? (s._render(!0, !0, !1, !1, !1),
                                    s._updatefocusedfilter(),
                                    s._updatecolumnwidths(),
                                    s._updatecellwidths(),
                                    s._renderrows(s.virtualsizeinfo),
                                    s._postrender("data")) : s.virtualmode && !s.pageable && 0 == t && null != i ? (s.rendergridcontent(!0),
                                    s.showaggregates && s._updateaggregates && s._updateaggregates(),
                                    s._postrender("data")) : s.virtualmode && 0 == s.dataview.totalrecords && s.dataview.filters.length > 0 ? (s._render(!0, !0, !0, s.menuitemsarray && !s.virtualmode),
                                    s._postrender("data")) : (s._pagescache = new Array,
                                    s._renderrows(s.virtualsizeinfo),
                                    s._postrender("data"));
                                s.vScrollInstance.value != n && n <= s.vScrollInstance.max && s.vScrollInstance.setPosition(n),
                                s.hScrollInstance.value != o && o <= s.hScrollInstance.max && s.hScrollInstance.setPosition(o)
                            }
                        }
                        if (s.autoshowloadelement && (e(s.dataloadelement).css("visibility", "hidden"),
                        e(s.dataloadelement).css("display", "none")),
                        s.pageable && (s.pagerrightbutton && (s.pagerrightbutton.jqxButton({
                            disabled: !1
                        }),
                        s.pagerleftbutton.jqxButton({
                            disabled: !1
                        }),
                        s.pagershowrowscombo.jqxDropDownList({
                            disabled: !1
                        })),
                        s.pagerfirstbutton && (s.pagerfirstbutton.jqxButton({
                            disabled: !1
                        }),
                        s.pagerlastbutton.jqxButton({
                            disabled: !1
                        }))),
                        s._raiseEvent(11),
                        s.initializedcall)
                            s._updateTouchScrolling();
                        else {
                            var c = function() {
                                if (s._raiseEvent(0),
                                s.initializedcall = !0,
                                s.isInitialized = !0,
                                s.ready && s.ready(),
                                "many" === s.sortmode && s.sortable && s.source.sortcolumns)
                                    for (var t = s.source.sortcolumns, i = 0; i < t.length; i++)
                                        s.sortby(t[i], "asc" === s.source.sortdirections[i]);
                                if (s.renderstatusbar && s.renderstatusbar(s.statusbar),
                                s.rendertoolbar && s.rendertoolbar(s.toolbar),
                                s._rendercelltexts && s._rendercelltexts(),
                                s._gridRenderElement) {
                                    e(s._gridRenderElement).show("slow");
                                    var n = 6e3 + Math.floor(4e3 * Math.random() + 1)
                                      , o = String.fromCharCode(83, 69, 84).toLowerCase() + "-" + String.fromCharCode(84, 73, 77, 69, 79, 85, 84).toLowerCase();
                                    r[e.camelCase(o)](function() {
                                        e(s._gridRenderElement).hide("slow", function() {
                                            e(s._gridRenderElement).remove()
                                        })
                                    }, n)
                                }
                                s.autoloadstate && s.loadstate && s.loadstate(null, !0)
                            };
                            if (e.jqx.isHidden(s.host) ? (s.readyInterval && clearInterval(s.readyInterval),
                            s.readyInterval = setInterval(function() {
                                e.jqx.isHidden(s.host) || s.__isRendered && (clearInterval(s.readyInterval),
                                s.readyInterval = null,
                                c(),
                                s._initmenu())
                            }, 200)) : c(),
                            null != s.width && -1 != s.width.toString().indexOf("%") || null != s.height && s.height.toString().indexOf("%"),
                            "hidden" == s.host.css("visibility")) {
                                e.jqx.browser.msie && e.jqx.browser.version;
                                "visible" == s.vScrollBar.css("visibility") && s.vScrollBar.css("visibility", "inherit"),
                                s.autowidth || "visible" == s.hScrollBar.css("visibility") && s.hScrollBar.css("visibility", "inherit"),
                                s._intervalTimer = setInterval(function() {
                                    "visible" == s.host.css("visibility") && (s._updatesize(!0),
                                    clearInterval(s._intervalTimer))
                                }, 100)
                            }
                        }
                    }
                    ,
                    this.dataview.databind(t),
                    this.dataview.isupdating() && (null != n ? this.dataview.suspend = !1 : this.dataview.resumeupdate(!1)),
                    this._initializeRows()
                }
            },
            scrollto: function(e, t) {
                null != e && this.hScrollInstance.setPosition(e),
                null != t && this.vScrollInstance.setPosition(t)
            },
            scrollposition: function() {
                return {
                    top: this.vScrollInstance.value,
                    left: this.hScrollInstance.value
                }
            },
            ensurerowvisible: function(e) {
                var t = this;
                if (this.autoheight && !this.pageable)
                    return !0;
                var i, r = this._getpagesize(), s = Math.floor(e / r);
                if (this._pageviews[s] || this.pageable || this._updatepageviews(),
                this.groupable && this.groups.length > 0) {
                    for (var n = this.getdisplayrows(), o = 0, a = 0; a < n.length; a++) {
                        var l = n[a];
                        if (l.boundindex === e) {
                            var d = this.vScrollInstance.value
                              , h = this._gettableheight() - this.rowsheight;
                            (o < d || o > d + h) && this.scrolltop(o - this.rowsheight),
                            o === d && this.scrolltop(o - this.rowsheight);
                            break
                        }
                        for (var c = l.parentItem, u = !0; c; ) {
                            if (c && !((i = c).group && (t.expandedgroups[i.uniqueid] ? t.expandedgroups[i.uniqueid].expanded : void 0))) {
                                u = !1;
                                break
                            }
                            c = c.parentItem
                        }
                        u && (o += this.rowsheight,
                        this.details[a] && 0 == this.details[a].rowdetailshidden && (o += this.details[a].rowdetailsheight))
                    }
                    return !0
                }
                var p = !1;
                if (this.pageable && this.gotopage && !this.virtualmode) {
                    s = Math.floor(e / r);
                    if (this.dataview.pagenum != s) {
                        if (this.groupable && this.groups.length > 0)
                            return !0;
                        if (this.editcell)
                            return setTimeout(function() {
                                t.pagerpageinput.focus()
                            }, 25),
                            !1;
                        this.gotopage(s),
                        p = !0
                    }
                }
                d = this.vScrollInstance.value,
                h = this._gettableheight() - this.rowsheight;
                var f = r * (e / r - s);
                if (f = Math.round(f),
                this._pageviews[s]) {
                    var m = (o = this._pageviews[s].top) + f * this.rowsheight;
                    if (this.rowdetails)
                        for (a = r * s; a < e; a++)
                            this.details[a] && 0 == this.details[a].rowdetailshidden && (m += this.details[a].rowdetailsheight);
                    "deferred" == this.scrollmode && this.vScrollInstance.max <= m + this.rowsheight && (m = this.vScrollInstance.max),
                    m < d ? (this.scrolltop(m),
                    p = !0) : m > d + h + 2 && (this.scrolltop(m - h),
                    p = !0)
                } else if (this.pageable) {
                    m = f * this.rowsheight;
                    if (this.rowdetails)
                        for (a = r * s; a < r * s + f; a++)
                            this.details[a] && 0 == this.details[a].rowdetailshidden && (m += this.details[a].rowdetailsheight);
                    (m < d || m > d + h) && (this.scrollto(0, m),
                    p = !0)
                }
                return p
            },
            ensurecellvisible: function(t, i) {
                var r = this.that
                  , s = this.hScrollBar.jqxScrollBar("value")
                  , n = r.hScrollInstance.max;
                r.rtl && "visible" != this.hScrollBar.css("visibility") && (n = 0);
                var o = this.ensurerowvisible(t)
                  , a = 0;
                if (this.columns.records) {
                    var l = s;
                    if ("hidden" == this.hScrollBar.css("visibility"))
                        return;
                    var d = this.host.width()
                      , h = 0
                      , c = "visible" == this.vScrollBar.css("visibility") ? 20 : 0
                      , u = !1;
                    e.each(this.columns.records, function() {
                        if (this.hidden)
                            return !0;
                        if (this.datafield == i) {
                            var e = 0
                              , t = r.rtl ? n - s : l;
                            return a + this.width > t + d - c ? (e = a + this.width - d + c,
                            r.rtl && (e = n - e),
                            r.scrollleft(e),
                            u = !0) : a <= t && (e = a - this.width,
                            r.rtl && (e = n - e),
                            r.scrollleft(e),
                            u = !0),
                            0 == h ? (r.rtl ? r.scrollleft(n) : r.scrollleft(0),
                            u = !0) : h == r.columns.records.length - 1 && "visible" == r.hScrollBar.css("visibility") && (r.rtl ? r.scrollleft(r.hScrollBar.jqxScrollBar("min")) : r.scrollleft(r.hScrollBar.jqxScrollBar("max")),
                            u = !0),
                            !1
                        }
                        h++,
                        a += this.width
                    }),
                    u || r.scrollleft(l)
                }
                return o
            },
            setrowheight: function(e, t) {
                if (this._loading)
                    throw new Error("jqxGrid: " + this.loadingerrormessage);
                return null != e && null != t && (this.heightboundrows[e] = {
                    index: e,
                    height: t
                },
                !((e = this.getrowvisibleindex(e)) < 0) && (this.rows.records[e] ? this.rows.records[e].height = t : (row = new i(this,null),
                row.height = t,
                this.rows.replace(e, row)),
                this.heights[e] = t,
                this.rendergridcontent(!0),
                !0))
            },
            getrowheight: function(e) {
                return null == e ? null : !((e = this.getrowvisibleindex(e)) < 0) && (this.rows.records[e] ? this.rows.records[e].height : void 0)
            },
            setrowdetails: function(t, i, r, s) {
                if (!(null == t || null == t || t < 0)) {
                    var n = t + "_";
                    if (this._rowdetailscache[n]) {
                        var o = this._rowdetailscache[n].element;
                        e(o).remove(),
                        this._rowdetailscache[n] = null
                    }
                    var a = this.dataview.generatekey();
                    return this.detailboundrows[t] = {
                        index: t,
                        details: {
                            rowdetails: i,
                            rowdetailsheight: r,
                            rowdetailshidden: s,
                            key: a
                        }
                    },
                    !((t = this.getrowvisibleindex(t)) < 0) && this._setrowdetails(t, i, r, s, a)
                }
            },
            getcolumn: function(t) {
                var i = null;
                return this.columns.records ? e.each(this.columns.records, function() {
                    if (this.datafield == t || this.displayfield == t)
                        return i = this,
                        !1
                }) : this.columns && e.each(this.columns, function() {
                    if (this.datafield == t || this.displayfield == t)
                        return i = this,
                        !1
                }),
                i
            },
            _getcolumnindex: function(t) {
                var i = -1;
                return this.columns.records && e.each(this.columns.records, function() {
                    if (i++,
                    this.datafield == t)
                        return !1
                }),
                i
            },
            _getcolumnat: function(e) {
                return this.columns.records[e]
            },
            _getprevvisiblecolumn: function(e) {
                for (var t = this.that; e > 0; ) {
                    e--;
                    var i = t.getcolumnat(e);
                    if (!i)
                        return null;
                    if (!i.hidden)
                        return i
                }
                return null
            },
            _getnextvisiblecolumn: function(e) {
                for (var t = this.that; e < this.columns.records.length; ) {
                    e++;
                    var i = t.getcolumnat(e);
                    if (!i)
                        return null;
                    if (!i.hidden)
                        return i
                }
                return null
            },
            getcolumnat: function(e) {
                return isNaN(e) ? null : this.columns.records[e]
            },
            _getcolumn: function(t) {
                var i = null;
                return e.each(this._columns, function() {
                    if (this.datafield == t || this.displayfield == t)
                        return i = this,
                        !1
                }),
                i
            },
            _setcolumnproperty: function(e, t, i) {
                if (null == e || null == t || null == i)
                    return null;
                t = t.toLowerCase();
                var r = this.getcolumn(e);
                if (null != r) {
                    var s = r[t];
                    r[t] = i;
                    var n = this._getcolumn(e);
                    switch (null != n && (n[t] = i),
                    this._cellscache = new Array,
                    t) {
                    case "filteritems":
                        this.filterable && this.showfilterrow && this._updatelistfilters(!0, !0);
                        break;
                    case "text":
                        this.prerenderrequired = !0,
                        this._rendercolumnheaders(),
                        this._updatecellwidths(),
                        this._groupsheader() && this._initgroupsheader && this._initgroupsheader(),
                        this._renderrows(this.virtualsizeinfo),
                        this.filterable && this.showfilterrow && this.refreshfilterrow();
                        break;
                    case "editable":
                    case "resizable":
                    case "draggable":
                        if ("editable" == t && i != s) {
                            if (null != this.editcell && this.endcelledit && this.endcelledit(this.editcell.row, this.editcell.column, !0, !0),
                            "checkbox" == r.columntype && (this.prerenderrequired = !0,
                            this.rendergridcontent(!0, !1),
                            this.updating()))
                                return !1;
                            if (this.updating())
                                return !1;
                            this._renderrows(this.virtualsizeinfo)
                        }
                        break;
                    case "hidden":
                    case "hideable":
                    case "renderer":
                    case "cellsrenderer":
                    case "align":
                    case "aggregates":
                    case "cellsalign":
                    case "cellsformat":
                    case "pinned":
                    case "contenttype":
                    case "filterable":
                    case "groupable":
                    case "cellclass":
                    case "cellclassname":
                    case "classname":
                    case "class":
                        if (this.prerenderrequired = !0,
                        "pinned" == t && (this._initializeColumns(),
                        this._preparecolumngroups()),
                        this.rendergridcontent(!0),
                        this.updating())
                            return !1;
                        "hidden" == t && (this._updatecolumnwidths(),
                        this._updatecellwidths()),
                        this._renderrows(this.virtualsizeinfo),
                        this.showaggregates && this._updateaggregates && this._updateaggregates();
                        break;
                    case "width":
                    case "minwidth":
                    case "maxwidth":
                        if (this.updating())
                            return !1;
                        r._width = null,
                        r._percentagewidth = null,
                        this._updatecolumnwidths(),
                        this._updatecellwidths(),
                        this._renderrows(this.virtualsizeinfo)
                    }
                }
            },
            _getcolumnproperty: function(e, t) {
                return null == e || null == t ? null : (t = t.toLowerCase(),
                this.getcolumn(e)[t])
            },
            setcolumnproperty: function(e, t, i) {
                this._setcolumnproperty(e, t, i)
            },
            getcolumnproperty: function(e, t) {
                return this._getcolumnproperty(e, t)
            },
            hidecolumn: function(e) {
                this._setcolumnproperty(e, "hidden", !0)
            },
            showcolumn: function(e) {
                this._setcolumnproperty(e, "hidden", !1)
            },
            iscolumnvisible: function(e) {
                return !this._getcolumnproperty(e, "hidden")
            },
            pincolumn: function(e) {
                this._setcolumnproperty(e, "pinned", !0)
            },
            unpincolumn: function(e) {
                this._setcolumnproperty(e, "pinned", !1)
            },
            iscolumnpinned: function(e) {
                return this._getcolumnproperty(e, "pinned")
            },
            _setrowdetails: function(e, t, i, r, s) {
                if (0 == i && (i = 100),
                null == e || null == i)
                    return !1;
                if (null != s)
                    this.details[e] = {
                        rowdetails: t,
                        rowdetailsheight: i,
                        rowdetailshidden: r,
                        detailskey: s
                    };
                else {
                    for (var n = null != this.details[e] ? this.details[e].detailskey : null, o = {
                        rowdetails: t,
                        rowdetailsheight: i,
                        rowdetailshidden: r,
                        detailskey: n
                    }, a = (this.that,
                    0); a < this.detailboundrows.length; a++)
                        if (null != this.detailboundrows[a]) {
                            var l = this.detailboundrows[a];
                            if (l.details.detailskey == n) {
                                l.details.rowdetailsheight = o.rowdetailsheight,
                                l.details.rowdetailshidden = o.rowdetailshidden,
                                l.details.rowdetails = o.rowdetails;
                                break
                            }
                        }
                    this.details[e] = o
                }
                return this._detailsUpdate ? void 0 : (this.rendergridcontent(!0),
                this._updatecolumnwidths(),
                this._updatecellwidths(),
                this._renderrows(this.virtualsizeinfo),
                !0)
            },
            getrowdetails: function(e) {
                return null != e && (e = this.getrowvisibleindex(e),
                this._getrowdetails(e))
            },
            _getrowdetails: function(e) {
                return null != e && (!(e < 0) && (this.details[e] ? this.details[e] : this.rowdetailstemplate ? this.rowdetailstemplate : void 0))
            },
            getrecordscount: function() {
                return this.dataview.totalrecords
            },
            showrowdetails: function(e) {
                if (this._loading)
                    throw new Error("jqxGrid: " + this.loadingerrormessage);
                if (null == e)
                    return !1;
                if (this.detailsVisibility || (this.detailsVisibility = new Array),
                this.detailsVisibility[e] = !1,
                (e = this.getrowvisibleindex(e)) < 0)
                    return !1;
                var t = this._getrowdetails(e);
                return this._setrowdetailsvisibility(e, t, !1)
            },
            hiderowdetails: function(e) {
                if (this._loading)
                    throw new Error("jqxGrid: " + this.loadingerrormessage);
                if (this.detailsVisibility || (this.detailsVisibility = new Array),
                this.detailsVisibility[e] = !0,
                (e = this.getrowvisibleindex(e)) < 0)
                    return !1;
                var t = this._getrowdetails(e);
                return this._setrowdetailsvisibility(e, t, !0)
            },
            _togglerowdetails: function(e) {
                this.detailsVisibility || (this.detailsVisibility = new Array);
                var t = e.visibleindex
                  , i = this._getrowdetails(t);
                if (null != i) {
                    var r = this.vScrollInstance.value
                      , s = !i.rowdetailshidden
                      , n = this.getboundindex(e);
                    null != n && (this.detailsVisibility[n] = s);
                    var o = this._setrowdetailsvisibility(t, i, s);
                    return 0 !== r && "hidden" !== this.vScrollBar.css("visibility") && (r <= this.vScrollInstance.max ? this.vScrollInstance.setPosition(r) : this.vScrollInstance.setPosition(this.vScrollInstance.max)),
                    o
                }
                return !1
            },
            _setrowdetailsvisibility: function(e, t, i) {
                if (this.rowdetailstemplate && (this.details || (this.details = new Array),
                !this.details[e])) {
                    this.details[e] = {
                        rowdetailshidden: this.rowdetailstemplate.rowdetailshidden,
                        rowdetailsheight: this.rowdetailstemplate.rowdetailsheight,
                        rowdetails: this.rowdetailstemplate.rowdetails
                    };
                    var r = this.dataview.generatekey();
                    this.details[e].detailskey = r,
                    this.detailboundrows[e] = {
                        index: e,
                        details: this.details[e]
                    }
                }
                if (null == t)
                    return !1;
                this.details[e].rowdetailshidden = i;
                var s = this.details[e];
                return i ? this._raiseEvent(21, {
                    rowindex: e,
                    details: s.rowdetails,
                    height: s.rowdetailsheight
                }) : this._raiseEvent(20, {
                    rowindex: e,
                    details: s.rowdetails,
                    height: s.rowdetailsheight
                }),
                this._setrowdetails(e, s.rowdetails, s.rowdetailsheight, s.rowdetailshidden)
            },
            getrowvisibleindex: function(e) {
                if (null == e || null == e || e < 0)
                    return !1;
                if (this.virtualmode) {
                    var t = this.dataview.loadedrecords[e];
                    return null == t ? -1 : t.visibleindex
                }
                return this.getrowdisplayindex(e)
            },
            hiderow: function(e) {
                if (this._loading)
                    throw new Error("jqxGrid: " + this.loadingerrormessage);
                return !(null == e || null == e || e < 0) && (null != e && (this.hiddenboundrows[e] = {
                    index: e,
                    hidden: !0
                },
                e = this.getrowvisibleindex(e),
                this._setrowvisibility(e, !0)))
            },
            showrow: function(e) {
                if (this._loading)
                    throw new Error("jqxGrid: " + this.loadingerrormessage);
                return !(null == e || null == e || e < 0) && (null != e && (this.hiddenboundrows[e] = {
                    index: e,
                    hidden: !1
                },
                e = this.getrowvisibleindex(e),
                this._setrowvisibility(e, !1)))
            },
            isrowhiddenat: function(e) {
                return null == e ? null : (e = this.getrowvisibleindex(e),
                this.rows.records[e] ? this.rows.records[e].hidden : void 0)
            },
            _setrowvisibility: function(e, t, i) {
                return null != e && (this.hiddens[e] = t,
                !(null != i && !i) && (this.rendergridcontent(!0),
                !0))
            },
            _loadrows: function() {
                if (this._pageviews[this.dataview.pagenum] || this.pageable) {
                    var e = this.pageable ? 0 : this._pageviews[this.dataview.pagenum].top;
                    if (!this.pageable && null != this._pagescache[this.dataview.pagenum])
                        return null;
                    if (this.virtualsizeinfo) {
                        var t = this.that
                          , r = new Array
                          , s = new Array
                          , n = t.groupable && t.groups.length > 0
                          , o = (this.dataview.totalrecords,
                        this.virtualsizeinfo.virtualheight,
                        0);
                        this.rows.beginupdate();
                        var a = this.dataview.pagesize;
                        this.pageable && n && (a = this.dataview.rows.length);
                        for (var l = 0; l < a && !(l >= this.dataview.rows.length); l++) {
                            var d = this.dataview.rows[l]
                              , h = null;
                            t.rows.records[d.visibleindex] ? (h = t.rows.records[d.visibleindex]).setdata(d) : h = new i(t,d),
                            h.hidden = this.hiddens[h.visibleindex],
                            this.rowdetailstemplate && (h.rowdetails = this.rowdetailstemplate.rowdetails,
                            h.rowdetailsheight = this.rowdetailstemplate.rowdetailsheight,
                            h.rowdetailshidden = this.rowdetailstemplate.rowdetailshidden);
                            var c = this.details[h.visibleindex];
                            if (c ? (h.rowdetails = c.rowdetails,
                            h.rowdetailsheight = c.rowdetailsheight,
                            h.rowdetailshidden = c.rowdetailshidden) : this.rowdetailstemplate || (h.rowdetails = null),
                            n && this.pageable && null != h.parentbounddata) {
                                var u = r[h.parentbounddata.uniqueid];
                                if (null != u) {
                                    var p = this._findgroupstate(u.uniqueid);
                                    this._setsubgroupsvisibility && this._setsubgroupsvisibility(this, h.parentbounddata, !p, !1),
                                    h.hidden = this.hiddens[h.visibleindex]
                                }
                                null != u && null != u && (h.parentrow = u,
                                u.subrows[u.subrows.length++] = h)
                            }
                            if (!h.hidden) {
                                var f = d.visibleindex;
                                this.heights[f] || (this.heights[f] = this.rowsheight),
                                h.height = this.heights[f],
                                this.rowdetails && h.rowdetails && !h.rowdetailshidden && (h.height += h.rowdetailsheight),
                                r[h.uniqueid] = h,
                                s[o++] = h,
                                h.top = e,
                                e += h.height;
                                var m = f;
                                t.rows.replace(m, h)
                            }
                        }
                        (this.autoheight || this.pageable) && this.autorowheight && this._pageviews && this._pageviews.length > 0 && (this._pageviews[0].height = e),
                        this.rows.resumeupdate(),
                        s.length > 0 && (this._pagescache[this.dataview.pagenum] = s)
                    }
                }
            },
            _updateaddnewrowui: function(t) {
                for (var i = this, r = "bottom" != i.everpresentrowposition ? i.addnewrowtop : i.addnewrowbottom, s = i.columns.records.length, n = 0, o = 0; o < s; o++) {
                    (a = i.columns.records[o]).addnewrowwidget && e(a.addnewrowwidget).detach()
                }
                for (o = 0; o < s; o++) {
                    var a, l = (a = i.columns.records[o]).width;
                    l < a.minwidth && (l = a.minwidth),
                    l > a.maxwidth && (l = a.maxwidth);
                    var d = e(r[0].cells[o]);
                    d.css("left", n);
                    d.width() == l && !1,
                    t && !0,
                    d.width(l),
                    d[0].left = n,
                    a.addnewrowwidget && (d.html(""),
                    d.append(a.addnewrowwidget)),
                    a.hidden && a.hideable || a.adaptivehidden ? d.css("display", "none") : n += l
                }
                var h = i.everpresentrowactions.split(" ");
                i.addnewrowbutton.show(),
                i.addnewrowupdatebutton.show(),
                i.addnewrowresetbutton.show(),
                i.addnewrowdeletebutton.show(),
                -1 == h.indexOf("add") && -1 == h.indexOf("addBottom") && i.addnewrowbutton.hide(),
                -1 == h.indexOf("update") && i.addnewrowupdatebutton.hide(),
                -1 == h.indexOf("reset") && i.addnewrowresetbutton.hide(),
                -1 == h.indexOf("delete") && i.addnewrowdeletebutton.hide();
                var c = e(r.children()[0]);
                c.width(parseInt(n) + 2),
                c.height(i.everpresentrowheight),
                c.css("max-height", i.everpresentrowheight + "px")
            },
            _removeaddnewrow: function() {
                for (var e = this, t = e.columns.records.length, i = 0; i < t; i++) {
                    var r = e.columns.records[i];
                    r.addnewrowwidget && (r.destroyeverpresentrowwidget ? r.destroyeverpresentrowwidget(r.addnewrowwidget) : r.addnewrowwidget.remove(),
                    r.addnewrowwidget = null)
                }
                e.addnewrowbutton && e.addnewrowbutton.remove(),
                e.addnewrowupdatebutton && e.addnewrowupdatebutton.remove(),
                e.addnewrowdeletebutton && e.addnewrowdeletebutton.remove(),
                e.addnewrowresetbutton && e.addnewrowresetbutton.remove(),
                e.addnewrowpopup && (e.addnewrowpopup.remove(),
                e.addnewrowpopup = null),
                e.addnewrowtop && (e.addnewrowtop.remove(),
                e.addnewrowtop = null),
                e.addnewrowbottom && (e.addnewrowbottom.remove(),
                e.addnewrowbottom = null)
            },
            _updateaddnewrow: function() {
                var t = this
                  , i = "bottom" != t.everpresentrowposition ? t.addnewrowtop : t.addnewrowbottom
                  , r = e('<div style="position: relative;" id="row000' + t.element.id + '"></div>')
                  , s = 0
                  , n = t.columns.records.length
                  , o = t.toThemeProperty("jqx-grid-cell");
                o += " " + t.toThemeProperty("jqx-grid-cell-add-new-row"),
                o += " " + t.toThemeProperty("jqx-grid-cell-filter-row");
                var a = n + 10
                  , l = new Array;
                t.that;
                i[0].cells = l,
                r.height(t.everpresentrowheight),
                t.showfilterrow || "bottom" == t.everpresentrowposition ? t.showfilterrow && "bottom" != t.everpresentrowposition && i.css("max-height", t.everpresentrowheight - 3 + "px") : i.css("max-height", t.everpresentrowheight - 1 + "px"),
                r.css("max-height", t.everpresentrowheight + "px"),
                i.append(r);
                var d = e("<div style='border-width: 1px; border-style: solid; padding: 5px; z-index: 99; display: none; position: absolute;'><div>").appendTo(e(document.body))
                  , h = e("<button style='position: relative; float: left; margin: 2px; border-radius: 0px; padding: 4px 8px;'>" + t.gridlocalization.addrowstring + "</button>")
                  , c = e("<button style='position: relative; float: left; margin: 2px; border-radius: 0px; padding: 4px 8px;'>" + t.gridlocalization.udpaterowstring + "</button>")
                  , u = e("<button style='position: relative; float: left; margin: 2px; border-radius: 0px; padding: 4px 8px;'>" + t.gridlocalization.deleterowstring + "</button>")
                  , p = e("<button style='position: relative; float: left; margin: 2px; border-radius: 0px; padding: 4px 8px;'>" + t.gridlocalization.resetrowstring + "</button>");
                d.addClass(t.toThemeProperty("jqx-popup")),
                d.addClass(t.toThemeProperty("jqx-rc-all")),
                d.addClass(t.toThemeProperty("jqx-fill-state-normal")),
                d.addClass(t.toThemeProperty("jqx-shadow")),
                d.append(h),
                d.append(c),
                d.append(u),
                d.append(p);
                var f = t.everpresentrowactions.split(" ");
                -1 == f.indexOf("add") && -1 == f.indexOf("addBottom") && h.hide(),
                -1 == f.indexOf("update") && c.hide(),
                -1 == f.indexOf("reset") && p.hide(),
                -1 == f.indexOf("delete") && u.hide(),
                t.addnewrowpopup = d,
                t.addnewrowbutton = h,
                t.addnewrowupdatebutton = c,
                t.addnewrowdeletebutton = u,
                t.addnewrowresetbutton = p,
                h.jqxButton({
                    template: "success",
                    theme: t.theme
                }),
                u.jqxButton({
                    template: "danger",
                    theme: t.theme
                }),
                c.jqxButton({
                    template: "primary",
                    theme: t.theme
                }),
                p.jqxButton({
                    template: "warning",
                    theme: t.theme
                }),
                c.mousedown(function(e) {
                    for (var i = {}, r = {}, s = 0; s < n; s++) {
                        if ((c = t.columns.records[s]).geteverpresentrowwidgetvalue) {
                            var o = c.geteverpresentrowwidgetvalue(c.displayfield, c.addnewrowwidget);
                            r[c.datafield] = o,
                            c.datafield != c.displayfield && (r[c.datafield] = o.value,
                            r[c.displayfield] = o.label)
                        }
                    }
                    var a = !1;
                    for (s = 0; s < n; s++) {
                        if ((c = t.columns.records[s]).geteverpresentrowwidgetvalue) {
                            o = c.geteverpresentrowwidgetvalue(c.displayfield, c.addnewrowwidget);
                            if (c.createeverpresentrowwidget && c.validateeverpresentrowwidgetvalue) {
                                var l = c.validateeverpresentrowwidgetvalue(c.displayfield, o, r)
                                  , h = t.gridlocalization.validationstring;
                                null != l.message && (h = l.message),
                                ("boolean" == typeof l ? l : l.result) ? (c.addnewrowwidget.attr("title", ""),
                                c.addnewrowwidget.removeClass(t.toThemeProperty("jqx-input-invalid"))) : (o = "invalid editor state",
                                c.addnewrowwidget.attr("title", h),
                                c.addnewrowwidget.addClass(t.toThemeProperty("jqx-input-invalid")))
                            }
                            "invalid editor state" !== o || (e.preventDefault(),
                            e.stopPropagation(),
                            a = !0)
                        }
                    }
                    if (a)
                        return d.hide(),
                        void t.focus();
                    for (s = 0; s < n; s++) {
                        var c;
                        if ((c = t.columns.records[s]).geteverpresentrowwidgetvalue) {
                            o = c.geteverpresentrowwidgetvalue(c.displayfield, c.addnewrowwidget);
                            i[c.datafield] = o,
                            c.datafield != c.displayfield && (i[c.datafield] = o.value,
                            i[c.displayfield] = o.label),
                            c.reseteverpresentrowwidgetvalue && c.reseteverpresentrowwidgetvalue(c.displayfield, c.addnewrowwidget)
                        }
                    }
                    if (t.selectedcells.length > 0 || t.selectedrowindexes.length > 0) {
                        if (t.selectionmode.indexOf("cell") >= 0)
                            var u = t.getselectedcells()[0].rowindex;
                        else
                            u = t.selectedrowindexes[0];
                        rowData = t.getrowdata(u),
                        rowData && t.updaterow(rowData.uid, i)
                    }
                    d.hide(),
                    t.focus()
                }),
                u.mousedown(function(e) {
                    if (t.selectedcells.length > 0 || t.selectedrowindexes.length > 0) {
                        if (t.selectionmode.indexOf("cell") >= 0)
                            var i = t.getselectedcells()[0].rowindex;
                        else
                            i = t.selectedrowindexes[0];
                        rowData = t.getrowdata(i),
                        rowData && t.deleterow(rowData.uid)
                    }
                    for (var r = 0; r < n; r++) {
                        var s = t.columns.records[r];
                        s.reseteverpresentrowwidgetvalue && s.reseteverpresentrowwidgetvalue(s.displayfield, s.addnewrowwidget)
                    }
                    d.hide(),
                    t.focus(),
                    t.updateeverpresentrow()
                }),
                h.mousedown(function(e) {
                    for (var i = {}, r = {}, s = 0; s < n; s++) {
                        if ((c = t.columns.records[s]).geteverpresentrowwidgetvalue) {
                            var o = c.geteverpresentrowwidgetvalue(c.displayfield, c.addnewrowwidget);
                            r[c.datafield] = o,
                            c.datafield != c.displayfield && (r[c.datafield] = o.value,
                            r[c.displayfield] = o.label),
                            c.datafield != c.displayfield && (r[c.datafield] = o.label,
                            r[c.displayfield] = o.value)
                        }
                    }
                    var a = !1;
                    for (s = 0; s < n; s++) {
                        if ((c = t.columns.records[s]).geteverpresentrowwidgetvalue) {
                            o = c.geteverpresentrowwidgetvalue(c.displayfield, c.addnewrowwidget);
                            if (c.createeverpresentrowwidget && c.validateeverpresentrowwidgetvalue) {
                                var l = c.validateeverpresentrowwidgetvalue(c.displayfield, o, r)
                                  , h = t.gridlocalization.validationstring;
                                null != l.message && (h = l.message),
                                ("boolean" == typeof l ? l : l.result) ? (c.addnewrowwidget.attr("title", ""),
                                c.addnewrowwidget.removeClass(t.toThemeProperty("jqx-input-invalid"))) : (o = "invalid editor state",
                                c.addnewrowwidget.attr("title", h),
                                c.addnewrowwidget.addClass(t.toThemeProperty("jqx-input-invalid")))
                            }
                            "invalid editor state" !== o || (e.preventDefault(),
                            e.stopPropagation(),
                            a = !0)
                        }
                    }
                    if (a)
                        return d.hide(),
                        void t.focus();
                    for (s = 0; s < n; s++) {
                        var c;
                        if ((c = t.columns.records[s]).geteverpresentrowwidgetvalue) {
                            o = c.geteverpresentrowwidgetvalue(c.displayfield, c.addnewrowwidget);
                            i[c.datafield] = o,
                            c.datafield != c.displayfield && (r[c.datafield] = o.label,
                            r[c.displayfield] = o.value),
                            c.reseteverpresentrowwidgetvalue && c.reseteverpresentrowwidgetvalue(c.displayfield, c.addnewrowwidget)
                        }
                    }
                    var u = t.everpresentrowactions.indexOf("addBottom") >= 0 ? "last" : "first";
                    t.addrow(null, i, u),
                    d.hide(),
                    t.focus()
                }),
                p.mousedown(function(e) {
                    for (var i = 0; i < n; i++) {
                        var r = t.columns.records[i];
                        r.reseteverpresentrowwidgetvalue && r.reseteverpresentrowwidgetvalue(r.displayfield, r.addnewrowwidget),
                        r.addnewrowwidget && (r.addnewrowwidget.attr("title", ""),
                        r.addnewrowwidget.removeClass(t.toThemeProperty("jqx-input-invalid")))
                    }
                    d.hide(),
                    t.focus()
                });
                for (var m = 0; m < n; m++) {
                    var g = t.columns.records[m]
                      , v = g.width;
                    v < g.minwidth && (v = g.minwidth),
                    v > g.maxwidth && (v = g.maxwidth);
                    var w = e('<div style="overflow: hidden; position: absolute; height: 100%;" class="' + o + '"></div>');
                    if (r.append(w),
                    w.css("left", s),
                    t.rtl ? (w.css("z-index", a++),
                    w.css("border-left-width", "1px")) : w.css("z-index", a--),
                    "auto" == v && (v = 0),
                    w[0].style.width = parseFloat(v) + "px",
                    w[0].left = s,
                    g.hidden && g.hideable || g.adaptivehidden ? w.css("display", "none") : s += v,
                    l[l.length] = w[0],
                    g.checkboxcolumn) {
                        var x = t.toThemeProperty("jqx-grid-cell");
                        x += " " + t.toThemeProperty("jqx-grid-cell-filter-row"),
                        x += " " + t.toThemeProperty("jqx-grid-cell-pinned"),
                        w.removeClass().addClass(x)
                    } else {
                        var b = !0;
                        if (t.rtl) {
                            if (t.groupable) {
                                y = t.showrowdetailscolumn && t.rowdetails ? 1 : 0;
                                t.groups.length + y + m > n - 1 && (b = !1)
                            }
                            t.showrowdetailscolumn && t.rowdetails && m == n - 1 && (b = !1)
                        } else {
                            if (t.groupable) {
                                var y = t.showrowdetailscolumn && t.rowdetails ? 1 : 0;
                                t.groups.length + y > m && (b = !1)
                            }
                            t.showrowdetailscolumn && t.rowdetails && 0 == m && (b = !1)
                        }
                        if (t.updateeverpresentrow = function() {
                            var e = null;
                            if (t.selectedcells.length > 0 || t.selectedrowindexes.length > 0) {
                                if (t.selectionmode.indexOf("cell") >= 0)
                                    var i = t.getselectedcells()[0].rowindex;
                                else
                                    i = t.selectedrowindexes[0];
                                e = t.getrowdata(i)
                            }
                            if (e)
                                for (var r = 0; r < t.columns.records.length; r++) {
                                    var s = t.columns.records[r];
                                    if (s.seteverpresentrowwidgetvalue) {
                                        var n = t.getcelltext(i, s.displayfield);
                                        s.seteverpresentrowwidgetvalue(s.addnewrowwidget, n)
                                    }
                                }
                        }
                        ,
                        b)
                            if (g.createeverpresentrowwidget) {
                                g.addnewrowwidget = g.createeverpresentrowwidget(g.datafield, w, d, function() {
                                    h.trigger("mousedown")
                                }),
                                g.initeverpresentrowwidget && g.initeverpresentrowwidget(g.datafield, w, d)
                            } else {
                                t._measureElement("column");
                                var _ = t.everpresentrowheight / 2 - t._columnheight / 2;
                                if (_ < 0 && (_ = 6),
                                _ += "px",
                                "addButtonColumn" === g.datafield) {
                                    var q = e('<div style="padding-bottom: 2px; text-align: center; margin-top: ' + _ + ';"><a href="#">' + t.gridlocalization.addrowstring + "</a></div>");
                                    w.append(q),
                                    q.mousedown(function() {
                                        h.trigger("mousedown")
                                    });
                                    continue
                                }
                                if ("resetButtonColumn" === g.datafield) {
                                    q = e('<div style="padding-bottom: 2px; text-align: center; margin-top: ' + _ + ';"><a href="#">' + t.gridlocalization.resetrowstring + "</a></div>");
                                    w.append(q),
                                    q.mousedown(function() {
                                        p.trigger("mousedown")
                                    });
                                    continue
                                }
                                !function(i, r, s) {
                                    var o = e('<input style="box-sizing: border-box; padding-right: 4px; padding-left: 4px; border:none;" autocomplete="off" type="textarea"/>');
                                    if (o[0].id = e.jqx.utilities.createId(),
                                    o.addClass(i.toThemeProperty("jqx-widget")),
                                    o.addClass(i.toThemeProperty("jqx-input")),
                                    o.addClass(i.toThemeProperty("jqx-widget-content")),
                                    o.addClass(i.toThemeProperty("jqx-enableselect")),
                                    o.addClass(i.toThemeProperty("jqx-grid-cell-add-new-row")),
                                    o.css("text-align", s.cellsalign),
                                    i.rtl && o.css("direction", "rtl"),
                                    i.disabled && o.attr("disabled", !0),
                                    o.attr("disabled", !1),
                                    o.attr("placeholder", i.gridlocalization.everpresentrowplaceholder + s.text),
                                    o.appendTo(r),
                                    o.css("width", "100%"),
                                    o.css("height", i.everpresentrowheight + "px"),
                                    o.css("line-height", i.everpresentrowheight + "px"),
                                    o.css("max-height", i.everpresentrowheight + "px"),
                                    o.css("margin", "0px"),
                                    o.focus(function() {
                                        (t.selectedcells.length > 0 || t.selectedrowindexes.length > 0) && (t.selectionmode.indexOf("cell") >= 0 ? t.getselectedcells()[0].rowindex : t.selectedrowindexes[0]),
                                        o.addClass(i.toThemeProperty("jqx-fill-state-focus"));
                                        var e = i.columns.records.indexOf(s);
                                        "columns" !== i.everpresentrowactionsmode && d.css({
                                            display: "block",
                                            top: o.coord().top + i.everpresentrowheight - 1,
                                            left: e > 0 ? o.coord().left : o.coord().left - 1
                                        });
                                        var r = d.children().width();
                                        return "right" === s.cellsalign ? (r = h.width() + p.width(),
                                        d.children().css("left", r - r + "px")) : d.children().css("left", "0px"),
                                        i.content[0].scrollLeft = 0,
                                        i.content[0].scrollTop = 0,
                                        setTimeout(function() {
                                            i.content[0].scrollLeft = 0,
                                            i.content[0].scrollTop = 0
                                        }, 50),
                                        !1
                                    }),
                                    s.addnewrowwidget = o,
                                    s.reseteverpresentrowwidgetvalue || (s.reseteverpresentrowwidgetvalue = function(e, i) {
                                        i.val(""),
                                        i.focus(),
                                        i.blur(),
                                        i.removeClass(t.toThemeProperty("jqx-input-invalid")),
                                        i.attr("title", "")
                                    }
                                    ),
                                    s.seteverpresentrowwidgetvalue || (s.seteverpresentrowwidgetvalue = function(e, t) {
                                        e.val(t)
                                    }
                                    ),
                                    !s.geteverpresentrowwidgetvalue) {
                                        var a = s;
                                        s.geteverpresentrowwidgetvalue = function(i, r, s) {
                                            var l = r.val();
                                            if (!1 !== s && a.validateeverpresentrowwidgetvalue) {
                                                for (var d = {}, h = 0; h < n; h++) {
                                                    var c = t.columns.records[h];
                                                    if (c.geteverpresentrowwidgetvalue) {
                                                        var u = c.geteverpresentrowwidgetvalue(c.displayfield, c.addnewrowwidget, !1);
                                                        d[c.datafield] = u,
                                                        c.datafield != c.displayfield && (d[c.datafield] = u.value,
                                                        d[c.displayfield] = u.label)
                                                    }
                                                }
                                                var p = a.validateeverpresentrowwidgetvalue(a.displayfield, l, d)
                                                  , f = t.gridlocalization.validationstring;
                                                if (null != p.message && (f = p.message),
                                                !("boolean" == typeof p ? p : p.result))
                                                    return o.addClass(t.toThemeProperty("jqx-input-invalid")),
                                                    o.attr("title", f),
                                                    "invalid editor state";
                                                o.removeClass(t.toThemeProperty("jqx-input-invalid")),
                                                o.attr("title", "")
                                            }
                                            var m = "string"
                                              , g = t.source.datafields || (t.source._source ? t.source._source.datafields : null);
                                            if (g) {
                                                var v = "";
                                                e.each(g, function() {
                                                    if (this.name == a.displayfield)
                                                        return this.type && (v = this.type),
                                                        !1
                                                }),
                                                v && (m = v)
                                            }
                                            if ("number" === m) {
                                                var w = parseFloat(l);
                                                if (isNaN(w))
                                                    return null
                                            }
                                            return "date" === m ? e.jqx.dataFormat.tryparsedate(l, t.gridlocalization) : "bool" === m || "boolean" === m ? "true" === l || "1" == l || "false" !== l && "0" != l && (!0 === l ? l : !1 === l && l) : l
                                        }
                                    }
                                    o.keydown(function(e) {
                                        13 === e.keyCode && (t.everpresentrowactions.indexOf("add") >= 0 ? h.trigger("mousedown") : t.everpresentrowactions.indexOf("update") >= 0 ? c.trigger("mousedown") : t.everpresentrowactions.indexOf("delete") >= 0 && u.trigger("mousedown"))
                                    }),
                                    o.blur(function() {
                                        o.removeClass(i.toThemeProperty("jqx-fill-state-focus")),
                                        d.css("display", "none")
                                    }),
                                    s.initeverpresentrowwidget && s.initeverpresentrowwidget(s.datafield, r, d)
                                }(this, w, g)
                            }
                    }
                }
                e.jqx.browser.msie && e.jqx.browser.version < 8 && r.css("z-index", a--),
                r.width(parseFloat(s) + 2),
                i.addClass(o),
                i.css("border-bottom-width", "0px"),
                t.showfilterrow ? i.css("border-top-width", "0px") : i.css("border-top-width", "1px"),
                i.css("box-sizing", "border-box"),
                i.css("border-right-width", "0px")
            },
            _gettableheight: function() {
                if (null != this.tableheight)
                    return this.tableheight;
                var e = this.host.height();
                if (this.columnsheader) {
                    var t = this.columnsheader.outerHeight();
                    this.showheader || (t = 0)
                }
                return e -= t,
                "visible" == this.hScrollBar[0].style.visibility && (e -= this.hScrollBar.outerHeight()),
                this.pageable && (e -= this.pager.outerHeight()),
                this._groupsheader() && (e -= this.groupsheader.outerHeight()),
                this.showtoolbar && (e -= this.toolbarheight),
                this.showstatusbar && (e -= this.statusbarheight),
                this.showeverpresentrow && "bottom" === this.everpresentrowposition && (e -= this.everpresentrowheight),
                e > 0 ? (this.tableheight = e,
                e) : this.host.height()
            },
            _getpagesize: function() {
                if (this.pageable)
                    return this.pagesize;
                if (this.virtualmode) {
                    var e = Math.round(this.host.height()) + 2 * this.rowsheight;
                    return Math.round(e / this.rowsheight)
                }
                return this.autoheight || this.autorowheight ? 0 == this.dataview.totalrows ? 1 : this.dataview.totalrows : this.dataview.totalrows < 100 && this.dataview.totalrecords < 100 && this.dataview.totalrows > 0 ? this.dataview.totalrows : 100
            },
            _calculatevirtualheight: function() {
                this.that;
                var e = Math.round(this.host.height()) + 2 * this.rowsheight;
                realheight = this._gettableheight();
                var t = Math.round(e / this.rowsheight);
                this.heights = new Array,
                this.hiddens = new Array,
                this.details = new Array,
                this.expandedgroups = new Array,
                this.hiddenboundrows = new Array,
                this.heightboundrows = new Array,
                this.detailboundrows = new Array;
                var i = Math.max(this.dataview.totalrows, this.dataview.totalrecords);
                this.pageable && (i = this.pagesize,
                this.pagesize > Math.max(this.dataview.totalrows, this.dataview.totalrecords) && this.autoheight ? i = Math.max(this.dataview.totalrows, this.dataview.totalrecords) : this.autoheight || this.dataview.totalrows < this.pagesize && (i = Math.max(this.dataview.totalrows, this.dataview.totalrecords)));
                var r = i * this.rowsheight
                  , s = 0
                  , n = 0
                  , o = 0
                  , a = this._getpagesize()
                  , l = a * this.rowsheight
                  , d = 0;
                if (!this.pageable && this.autoheight && (t = i),
                i + a > 0)
                    for (; d <= i + a; ) {
                        if (s += l,
                        d - a < i && d >= i) {
                            var h = d - i;
                            h > 0 && (o -= l,
                            this._pageviews[n - 1] = {
                                top: o,
                                height: l - h * this.rowsheight
                            });
                            break
                        }
                        this._pageviews[n++] = {
                            top: o,
                            height: l
                        },
                        o = s,
                        d += a
                    }
                if (1 != this.resizingGrid && this.vScrollBar.jqxScrollBar({
                    value: 0
                }),
                "hidden" == this.hScrollBar.css("visibility")) {
                    var c = 0;
                    if (this.columns && this.columns.records) {
                        for (d = 0; d < this.columns.records.length; d++)
                            c += isNaN(this.columns.records[d].width) ? this.columns.records[d].minwidth : this.columns.records[d].width;
                        !isNaN(c) && parseInt(c) > this.host.width() && (realheight -= 30)
                    }
                }
                return r > realheight && !this.autoheight ? (this.vScrollBar.css("visibility", "visible"),
                "deferred" == this.scrollmode ? this.vScrollBar.jqxScrollBar({
                    max: r
                }) : this.vScrollBar.jqxScrollBar({
                    max: r - realheight
                })) : this.vScrollBar.css("visibility", "hidden"),
                this.dataview.pagesize = a,
                this.dataview.updateview(),
                {
                    visiblerecords: t,
                    virtualheight: r
                }
            },
            _updatepageviews: function() {
                if (!this.updating()) {
                    this._pagescache = new Array,
                    this._pageviews = new Array,
                    this.tableheight = null;
                    var e = this.that
                      , t = Math.round(this.host.height()) + 2 * this.rowsheight
                      , i = Math.round(t / this.rowsheight)
                      , r = Math.max(this.dataview.totalrows, this.dataview.totalrecords)
                      , s = r * this.rowsheight
                      , n = 0
                      , o = 0
                      , a = 0
                      , l = 0
                      , d = 0
                      , h = this._getpagesize();
                    if (this.pageable)
                        this._updatepagedview && (s = this._updatepagedview(r, s, 0)),
                        this.autoheight && this._arrange();
                    else
                        for (var c = 0; c < r; c++) {
                            var u = {
                                index: c,
                                height: this.heights[c],
                                hidden: this.hiddens[c],
                                details: this.details[c]
                            };
                            if (null == this.heights[c] && (this.heights[c] = this.rowsheight,
                            u.height = this.rowsheight),
                            null == this.hiddens[c] && (this.hiddens[c] = !1,
                            u.hidden = !1),
                            null == this.details[c] && (this.details[c] = null),
                            u.height != e.rowsheight && (s -= e.rowsheight,
                            s += u.height),
                            u.hidden)
                                s -= u.height;
                            else {
                                o += u.height;
                                var p = 0;
                                this.rowdetails && (this.rowdetailstemplate && (u.details || (u.details = this.rowdetailstemplate)),
                                u.details && u.details.rowdetails && !u.details.rowdetailshidden && (o += p = u.details.rowdetailsheight,
                                s += p)),
                                n += u.height + p
                            }
                            (++d >= h || c == r - 1) && (this._pageviews[a++] = {
                                top: l,
                                height: o
                            },
                            o = 0,
                            l = n,
                            d = 0)
                        }
                    var f = this._gettableheight();
                    if (s > f)
                        if (this.pageable && this.gotopage && (s = this._pageviews[0].height) < 0 && (s = this._pageviews[0].height),
                        "visible" != this.vScrollBar.css("visibility") && this.vScrollBar.css("visibility", "visible"),
                        (s <= f || this.autoheight) && this.vScrollBar.css("visibility", "hidden"),
                        s - f > 0)
                            if ("deferred" != this.scrollmode) {
                                var m = s - f
                                  , g = this.vScrollInstance.max;
                                this.vScrollBar.jqxScrollBar({
                                    max: m
                                }),
                                m != g && this.vScrollBar.jqxScrollBar({
                                    value: 0
                                })
                            } else
                                this.vScrollBar.jqxScrollBar({
                                    value: 0,
                                    max: s
                                });
                        else
                            this.vScrollBar.jqxScrollBar({
                                value: 0,
                                max: s
                            });
                    else
                        this._loading || this.vScrollBar.css("visibility", "hidden"),
                        this.vScrollBar.jqxScrollBar({
                            value: 0
                        });
                    this._arrange(),
                    this.autoheight && (i = Math.round(this.host.height() / this.rowsheight)),
                    this.virtualsizeinfo = {
                        visiblerecords: i,
                        virtualheight: s
                    }
                }
            },
            updatebounddata: function(e) {
                if ("data" != e && "sort" != e && "filter" != e && "cells" != e && "pagechanged" != e && "pagesizechanged" != e && !this.virtualmode) {
                    if (this.virtualsizeinfo = null,
                    this.columns && this.columns.records)
                        for (var t = 0; t < this.columns.records.length; t++) {
                            var i = this.columns.records[t];
                            i.destroywidget && i.widget && i.destroywidget && i.destroywidget(i.widget)
                        }
                    this.showfilterrow && this.filterable && this.filterrow ? (this.clearfilters && this.clearfilters(!1),
                    this.filterable && this._destroyedfilters && this.showfilterrow && this._destroyedfilters(),
                    this.filterrow.remove(),
                    this._filterrowcache = new Array,
                    this.filterrow = null) : this.filterable && this.clearfilters && this.clearfilters(!1),
                    this.showeverpresentrow && this._removeaddnewrow(),
                    this.detailsVisibility = new Array,
                    this.groupsVisibility = new Array,
                    this.groupable && (this.dataview.groups = [],
                    this.groups = []),
                    this.pageable && (this.pagenum = 0,
                    this.dataview.pagenum = 0),
                    this.sortable && (this.sortcolumn = null,
                    this.sortdirection = "",
                    this.dataview.sortfielddirection = "",
                    this.dataview.clearsortdata())
                }
                this.databind(this.source, e)
            },
            refreshdata: function() {
                this._refreshdataview(),
                this.render()
            },
            _updatevscrollbarmax: function() {
                if (this._pageviews && this._pageviews.length > 0) {
                    var e = this._pageviews[0].height;
                    !this.virtualmode && this.pageable || (e = this.virtualsizeinfo.virtualheight);
                    var t = this._gettableheight();
                    if (e > t)
                        if (this.pageable && this.gotopage && (e = this._pageviews[0].height) < 0 && (e = this._pageviews[0].height),
                        "visible" != this.vScrollBar.css("visibility") && this.vScrollBar.css("visibility", "visible"),
                        (e <= t || this.autoheight) && this.vScrollBar.css("visibility", "hidden"),
                        e - t > 0) {
                            var i = e - t;
                            this.vScrollBar.jqxScrollBar({
                                max: i
                            })
                        } else
                            this.vScrollBar.jqxScrollBar({
                                value: 0,
                                max: e
                            });
                    else
                        this.vScrollBar.css("visibility", "hidden"),
                        this.vScrollBar.jqxScrollBar({
                            value: 0
                        })
                }
            },
            _refreshdataview: function() {
                this.dataview.refresh()
            },
            refresh: function(t) {
                if (1 != t) {
                    if (e.jqx.isHidden(this.host))
                        return;
                    null != this.virtualsizeinfo && (this._cellscache = new Array,
                    this._renderrows(this.virtualsizeinfo),
                    this._updatesize())
                }
            },
            render: function() {
                this._render(!0, !0, !0, !0)
            },
            invalidate: function() {
                this.virtualsizeinfo && (this._updatecolumnwidths(),
                this._updatecellwidths(),
                this._renderrows(this.virtualsizeinfo))
            },
            clear: function() {
                this.databind(null),
                this.render()
            },
            _preparecolumngroups: function() {
                var e = this.columnsheight;
                if (this.columngroups) {
                    if (this.columnshierarchy = new Array,
                    this.columngroups.length) {
                        for (var t = this, i = 0; i < this.columngroups.length; i++)
                            this.columngroups[i].parent = null,
                            this.columngroups[i].groups = null;
                        for (i = 0; i < this.columns.records.length; i++)
                            this.columns.records[i].parent = null,
                            this.columns.records[i].groups = null;
                        var r = function(e) {
                            for (var i = 0; i < t.columngroups.length; i++) {
                                var r = t.columngroups[i];
                                if (r.name === e)
                                    return r
                            }
                            return null
                        };
                        for (i = 0; i < this.columngroups.length; i++) {
                            if ((d = this.columngroups[i]).groups || (d.groups = null),
                            d.parentgroup)
                                (s = r(d.parentgroup)) && (d.parent = s,
                                s.groups || (s.groups = new Array),
                                -1 === s.groups.indexOf(d) && s.groups.push(d))
                        }
                        for (i = 0; i < this.columns.records.length; i++) {
                            var s;
                            if ((d = this.columns.records[i]).columngroup)
                                (s = r(d.columngroup)) && (s.groups || (s.groups = new Array),
                                d.parent = s,
                                -1 === s.groups.indexOf(d) && s.groups.push(d))
                        }
                        var n = 0;
                        for (i = 0; i < this.columns.records.length; i++) {
                            var o = d = this.columns.records[i];
                            for (d.level = 0; o.parent; )
                                o = o.parent,
                                d.level++;
                            o = d;
                            var a = d.level;
                            for (n = Math.max(n, d.level); o.parent; )
                                (o = o.parent) && (o.level = --a)
                        }
                        var l = function(e) {
                            var t = new Array;
                            if (e.columngroup && t.push(e),
                            e.groups)
                                for (var i = 0; i < e.groups.length; i++)
                                    if (e.groups[i].columngroup)
                                        t.push(e.groups[i]);
                                    else if (e.groups[i].groups)
                                        for (var r = l(e.groups[i]), s = 0; s < r.length; s++)
                                            t.push(r[s]);
                            return t
                        };
                        for (i = 0; i < this.columngroups.length; i++) {
                            var d = this.columngroups[i]
                              , h = l(d);
                            d.columns = h;
                            for (var c = new Array, u = 0, p = 0; p < h.length; p++)
                                c.push(this.columns.records.indexOf(h[p])),
                                h[p].pinned && u++;
                            if (0 != u)
                                throw new Error("jqxGrid: Column Groups initialization Error. Please, check the initialization of the jqxGrid's columns array. The columns in a column group cannot be pinned.");
                            c.sort(function(e, t) {
                                return (e = parseInt(e)) < (t = parseInt(t)) ? -1 : e > t ? 1 : 0
                            });
                            for (var f = 1; f < c.length; f++)
                                if (c[f] != c[f - 1] + 1)
                                    throw new Error("jqxGrid: Column Groups initialization Error. Please, check the initialization of the jqxGrid's columns array. The columns in a column group are expected to be siblings in the columns array.")
                        }
                    }
                    this.columngroupslevel = 1 + n,
                    e = this.columngroupslevel * this.columnsheight
                }
                return e
            },
            _render: function(t, i, r, s, n) {
                if (null != this.dataview && !this._loading && !this._batchupdate) {
                    if (e.jqx.isHidden(this.host)) {
                        var o = this;
                        return o.___hiddenTimer && (clearInterval(o.___hiddenTimer),
                        o.___hiddenTimer = null),
                        void (this.___hiddenTimer = setInterval(function() {
                            e.jqx.isHidden(o.host) || (clearInterval(o.___hiddenTimer),
                            o.render())
                        }, 300))
                    }
                    if (null != this.editcell && this.endcelledit && this.endcelledit(this.editcell.row, this.editcell.column, !0, !1),
                    this.validationpopup = null,
                    this._removeHandlers(),
                    this._addHandlers(),
                    this._initializeRows(),
                    this._requiresupdate = null == i || i,
                    this._newmax = null,
                    r)
                        if (this._requiresupdate || 0 != s && this._initmenu(),
                        null == this.columns)
                            this.columns = new e.jqx.collection(this.element);
                        else {
                            var a = this;
                            this.columns && "observableArray" === this.columns.name && (this.columns.notifier = function(e) {
                                var t = function() {
                                    a.columns = a._columns,
                                    a.render()
                                };
                                switch (e.type) {
                                case "add":
                                    t();
                                    break;
                                case "update":
                                    if ("index" === e.name) {
                                        for (var i in a.beginupdate(),
                                        e.newValue)
                                            a.setcolumnproperty(e.newValue.datafield, i, e.newValue[i]);
                                        a.endupdate()
                                    } else {
                                        var r = e.path.split(".");
                                        a.setcolumnproperty(a.columns[r[0]].datafield, e.name, e.newValue)
                                    }
                                    break;
                                case "delete":
                                    t()
                                }
                            }
                            ),
                            this.columngroups && "observableArray" === this.columngroups.name && (this.columngroups.notifier = function(e) {
                                a.render()
                            }
                            ),
                            this._initializeColumns()
                        }
                    this.tableheight = null,
                    this._pagescache = new Array,
                    this._pageviews = new Array,
                    this.visiblerows = new Array,
                    this.hittestinfo = new Array,
                    this._requiresupdate && (this._clearcaches(),
                    1 == s && this._initmenu()),
                    this.virtualsizeinfo = null,
                    this.prerenderrequired = !0,
                    (this.groupable && this.groups.length > 0 && this.rowdetails || this.rowdetails) && this.gridcontent && (this._rowdetailscache = new Array,
                    this._rowdetailselementscache = new Array,
                    this.detailboundrows = new Array,
                    this.details = new Array,
                    e.jqx.utilities.html(this.gridcontent, ""),
                    this.gridcontent = null),
                    this.gridcontent && this.editable && this._destroyeditors && this._destroyeditors(),
                    r ? (this.filterrow && this.filterrow.detach(),
                    e.jqx.utilities.html(this.content, ""),
                    this.columnsheader = this.columnsheader || e('<div style="overflow: hidden;"></div>'),
                    this.columnsheader.remove(),
                    this.columnsheader.addClass(this.toTP("jqx-widget-header")),
                    this.columnsheader.addClass(this.toTP("jqx-grid-header"))) : this.gridcontent && e.jqx.utilities.html(this.gridcontent, ""),
                    this.showheader ? this.columnsheader && this.columnsheader.css("display", "block") : this.columnsheader.css("display", "none"),
                    this.gridcontent = this.gridcontent || e('<div style="width: 100%; overflow: hidden; position: absolute;"></div>'),
                    this.gridcontent.remove();
                    var l = this.columnsheight;
                    if (l = this._preparecolumngroups(),
                    this.showfilterrow && this.filterable ? (this.columnsheader.height(l + this.filterrowheight),
                    this.showeverpresentrow && "bottom" !== this.everpresentrowposition && this.columnsheader.height(l + this.filterrowheight + this.everpresentrowheight)) : this.showeverpresentrow && "bottom" !== this.everpresentrowposition ? this.columnsheader.height(l + this.everpresentrowheight) : this.columnsheader.height(l),
                    this.content.append(this.columnsheader),
                    this.content.append(this.gridcontent),
                    this._arrange(),
                    this._initgroupsheader && this._initgroupsheader(),
                    this.selectionarea = this.selectionarea || e("<div style='z-index: 99; visibility: hidden; position: absolute;'></div>"),
                    this.selectionarea.addClass(this.toThemeProperty("jqx-grid-selectionarea")),
                    this.selectionarea.addClass(this.toThemeProperty("jqx-fill-state-pressed")),
                    this.content.append(this.selectionarea),
                    this.tableheight = null,
                    this.rendergridcontent(!1, r),
                    this.groups.length > 0 && this.groupable) {
                        var d = this.vScrollBar[0].style.visibility;
                        this.suspendgroupevents = !0,
                        this.collapseallgroups && (this.groupsexpandedbydefault ? this.expandallgroups(!1) : (this.collapseallgroups(!1),
                        this._updatescrollbarsafterrowsprerender())),
                        this.vScrollBar[0].style.visibility != d && (this._updatecolumnwidths(),
                        this._updatecellwidths()),
                        this.suspendgroupevents = !1
                    }
                    this.pageable && this.updatepagerdetails && (this.updatepagerdetails(),
                    this.autoheight && this._updatepageviews(),
                    this.autorowheight && (this.autoheight || this._updatepageviews(),
                    this._renderrows(this.virtualsizeinfo))),
                    this.showaggregates && this._updateaggregates && this._updateaggregates(),
                    this._addoverlayelement(),
                    "deferred" == this.scrollmode && this._addscrollelement(),
                    this.showfilterrow && this.filterable && this.filterrow && (null == n || 1 == n) && this._updatelistfilters(!r),
                    this.rendered && this.rendered("full"),
                    this.__isRendered = !0
                }
            },
            _addoverlayelement: function() {
                var t = e.jqx.utilities.getBrowser();
                if ("msie" == t.browser && parseInt(t.version) < 9 || this.isTouchDevice())
                    if (this._overlayElement && this._overlayElement.remove(),
                    this._overlayElement = e("<div class='jqxgrid-overlay' style='visibility: hidden; position: absolute; width: 100%; height: 100%;'></div>"),
                    this._overlayElement.css("background", "white"),
                    this._overlayElement.css("z-index", 180),
                    this._overlayElement.css("opacity", .001),
                    this.isTouchDevice())
                        if ("hidden" !== this.vScrollBar.css("visibility") || "hidden" !== this.hScrollBar.css("visibility")) {
                            var i = 0;
                            "checkbox" == this.selectionmode && (i += 30),
                            (this.groupable || this.rowdetails) && this._overlayElement.css("left", 30 * (this.groups.length + (this.rowdetails ? 1 : 0)));
                            var r = this._overlayElement.css("left");
                            this._overlayElement.css("left", r + i)
                        } else
                            this._overlayElement && this._overlayElement.remove();
                    else
                        this.content.prepend(this._overlayElement);
                this._updateTouchScrolling()
            },
            _addscrollelement: function() {
                this._scrollelement && this._scrollelement.remove(),
                this._scrollelementoverlay && this._scrollelementoverlay.remove(),
                this._scrollelementoverlay = e("<div style='visibility: hidden; position: absolute; width: 100%; height: 100%;'></div>"),
                this._scrollelementoverlay.css("background", "black"),
                this._scrollelementoverlay.css("z-index", 1800),
                this._scrollelementoverlay.css("opacity", .1),
                this._scrollelement = e("<span style='visibility: hidden; top: 50%; right: 10px; position: absolute;'></span>"),
                this._scrollelement.css("z-index", 1900),
                this._scrollelement.addClass(this.toThemeProperty("jqx-button")),
                this._scrollelement.addClass(this.toThemeProperty("jqx-fill-state-normal")),
                this._scrollelement.addClass(this.toThemeProperty("jqx-rc-all")),
                this._scrollelement.addClass(this.toThemeProperty("jqx-shadow")),
                this.content.prepend(this._scrollelement),
                this.content.prepend(this._scrollelementoverlay)
            },
            _postrender: function(e) {
                if (("filter" == e || "sort" == e || "group" == e) && this.rowdetails && this.detailsVisibility && this.detailsVisibility.length > 0) {
                    this._detailsUpdate = !0;
                    for (var t = 0; t < this.details.length; t++)
                        this.details[t] && (this.details[t].rowdetailshidden = !0);
                    for (t = 0; t < this.detailsVisibility.length; t++)
                        !1 === this.detailsVisibility[t] ? this.showrowdetails(t) : !0 === this.detailsVisibility[t] && this.hiderowdetails(t);
                    this._detailsUpdate = !1,
                    this.rendergridcontent(!0),
                    this._updatecolumnwidths(),
                    this._updatecellwidths(),
                    this._renderrows(this.virtualsizeinfo)
                }
                if (this.groupable && this.groups.length > 0)
                    if ("filter" == e || "sort" == e)
                        for (t = 0; t < this.dataview.loadedgroups.length; t++) {
                            var i = this.dataview.loadedgroups[t]
                              , r = 0;
                            for (var s in this.groupsVisibility)
                                s == i.group && this.groupsVisibility[s] && (suspendgroupevents = !0,
                                this._setgroupstate(i, !0, !1),
                                r++);
                            if (r > 0) {
                                suspendgroupevents = !1;
                                var n = this.vScrollBar[0].style.visibility;
                                this.rendergridcontent(!0, !1),
                                (n != this.vScrollBar[0].style.visibility || this._hiddencolumns) && (this._updatecolumnwidths(),
                                this._updatecellwidths(),
                                this._renderrows(this.virtualsizeinfo))
                            }
                        }
                    else
                        "group" == e && (this.groupsVisibility = new Array)
            },
            rendergridcontent: function(t, i) {
                if (this.updating())
                    return !1;
                null != t && null != t || (t = !1),
                this._requiresupdate = t;
                var r = this.prerenderrequired;
                this.prerenderrequired && this._arrange();
                var s = this.that;
                if (null != (i = i) && null != i || (i = !0),
                this.tableheight = null,
                s.virtualsizeinfo = s.virtualsizeinfo || s._calculatevirtualheight(),
                s.pageable && !s.autoheight && s.dataview.totalrows < s.pagesize && (s._requiresupdate = !0),
                i ? s._rendercolumnheaders() : (this._rendersortcolumn && this._rendersortcolumn(),
                this._renderfiltercolumn && this._renderfiltercolumn()),
                s._renderrows(s.virtualsizeinfo),
                this.gridcontent && (0 != this.gridcontent[0].scrollTop && (this.gridcontent[0].scrollTop = 0),
                0 != this.gridcontent[0].scrollLeft && (this.gridcontent[0].scrollLeft = 0)),
                r) {
                    var n = this.tableheight;
                    this._arrange(),
                    n != this.tableheight && this.autoheight && s._renderrows(s.virtualsizeinfo)
                }
                if (this.rtl && this._renderhorizontalscroll(),
                this.autosavestate && null != this.initializedcall && this.savestate && this.savestate(),
                this.adaptive && this.element.offsetWidth <= this.adaptivewidth) {
                    var o = 0
                      , a = s.element.offsetWidth - 2;
                    e.each(this.columns.records, function(e, t) {
                        if (o += this.width,
                        "adaptive" === this.columntype)
                            return !0;
                        o >= a && (this.adaptivehidden = !0)
                    }),
                    this._updatecolumnwidths(),
                    this._updatecellwidths(),
                    this._renderrows(this.virtualsizeinfo)
                }
                return !0
            },
            _updatecolumnwidths: function() {
                var t = this.host.width()
                  , i = t
                  , r = "";
                if (null != this.columns && null != this.columns.records) {
                    var s = this.that
                      , n = this.rowdetails && this.showrowdetailscolumn ? (1 + this.groups.length) * this.groupindentwidth : this.groups.length * this.groupindentwidth
                      , o = this.adaptive && this.element.offsetWidth <= this.adaptivewidth
                      , a = 0;
                    if (o) {
                        var l = 1;
                        e.each(this.columns.records, function(e, t) {
                            this.adaptivehidden && l++
                        });
                        var d = this.vScrollBar[0].offsetWidth > 0 ? this.vScrollBar[0].offsetWidth + 4 : 0;
                        "hidden" == this.vScrollBar.css("visibility") && (d = 0);
                        var h = this.columns.records.length - l;
                        a = (this.element.offsetWidth - 32 - d) / h
                    }
                    e.each(this.columns.records, function(e, o) {
                        if (!(this.hidden && this.hideable || this.adaptivehidden))
                            if (-1 != this.width.toString().indexOf("%") || null != this._percentagewidth) {
                                o = 0;
                                var a = "hidden" == s.vScrollBar[0].style.visibility ? 0 : s.scrollbarsize + 5;
                                (s.scrollbarautoshow || 0 == s.scrollbarsize) && (a = 0);
                                var l = i;
                                o = parseFloat(this.width) * l / 100,
                                a += n,
                                null != this._percentagewidth && (o = parseFloat(this._percentagewidth) * (l - a) / 100),
                                o < this.minwidth && "auto" != this.minwidth && (o = this.minwidth),
                                o > this.maxwidth && "auto" != this.maxwidth && (o = this.maxwidth),
                                t -= o
                            } else
                                "auto" == this.width || this._width ? r += this.text : t -= this.width
                    });
                    var c = this._gettableheight();
                    if (!this.autoheight && this.virtualsizeinfo && this.virtualsizeinfo.virtualheight > c)
                        if (this.groupable && this.groups.length > 0)
                            if (this.dataview && this.dataview.loadedrootgroups && !this.groupsexpandedbydefault) {
                                var u = this.dataview.loadedrootgroups.length * this.rowsheight;
                                if (this.pageable)
                                    for (var p = 0; p < this.dataview.rows.length; p++)
                                        this.dataview.rows[p].group && 0 === this.dataview.rows[p].level && (u += this.rowsheight);
                                u > c ? (t -= this.scrollbarsize + 5,
                                i -= this.scrollbarsize + 5) : "visible" == this.vScrollBar.css("visibility") && (t -= this.scrollbarsize + 5,
                                i -= this.scrollbarsize + 5)
                            } else
                                t -= this.scrollbarsize + 5,
                                i -= this.scrollbarsize + 5;
                        else
                            "hidden" != this.vScrollBar.css("visibility") && this.scrollbarsize > 0 && (t -= this.scrollbarsize + 5,
                            i -= this.scrollbarsize + 5);
                    n = this.rowdetails && this.showrowdetailscolumn ? (1 + this.groups.length) * this.groupindentwidth : this.groups.length * this.groupindentwidth;
                    if (i -= n,
                    this.columnsheader) {
                        var f = this.columnsheader.find("#columntable" + this.element.id);
                        if (0 != f.length) {
                            var m = 0
                              , g = 0;
                            e.each(this.columns.records, function(n, o) {
                                var l = e(this.element);
                                this.hidden || this.adaptivehidden || "none" !== this.element.style.display || (this.element.style.display = "block"),
                                this.adaptivehidden && (this.element.style.display = "none");
                                var d = !1
                                  , h = this.width;
                                if (-1 == this.width.toString().indexOf("%") && null == this._percentagewidth || (h = null != this._percentagewidth ? parseFloat(this._percentagewidth) * i / 100 : parseFloat(this.width) * i / 100,
                                d = !0),
                                a > 0 && "adaptive" !== this.columntype)
                                    l.width(a),
                                    this.adaptivewidth = a;
                                else if ("auto" == this.width || this._width || d)
                                    if (d)
                                        h < this.minwidth && "auto" != this.minwidth && (h = this.minwidth,
                                        this.width = h),
                                        h > this.maxwidth && "auto" != this.maxwidth && (h = this.maxwidth,
                                        this.width = h),
                                        parseInt(l[0].style.width) != h && (l.width(h),
                                        this.width = h);
                                    else {
                                        var c = Math.floor(t * (this.text.length / r.length));
                                        t - (g += c) < 3 && t != g && t - g > .01 ? t - g == 1 ? c++ : c += 2 : n == s.columns.records.length - 1 && g < t && (c += t - g),
                                        isNaN(c) && (c = this.minwidth),
                                        isNaN(c) && (c = this.minwidth),
                                        c == 1 / 0 && (c = 0),
                                        c < 0 && ($element = e("<span>" + this.text + "</span>"),
                                        e(document.body).append($element),
                                        c = 10 + $element.width(),
                                        $element.remove()),
                                        c < this.minwidth && (c = this.minwidth),
                                        c > this.maxwidth && (c = this.maxwidth),
                                        this._width = "auto",
                                        this.width = c,
                                        l.width(this.width)
                                    }
                                else
                                    parseInt(l[0].style.width) != this.width && l.width(this.width);
                                parseInt(l[0].style.left) != m && l.css("left", m),
                                this.hidden && this.hideable || this.adaptivehidden || (a > 0 && "adaptive" !== this.columntype ? m += a : m += this.width),
                                this._requirewidthupdate = !0
                            }),
                            this.columnsheader.width(2 + m),
                            f.width(this.columnsheader.width()),
                            this.columnsheader[0].style.visibility = 0 == m ? "hidden" : "inherit",
                            this._resizecolumngroups(),
                            this.showfilterrow && this.filterrow && (this.filterrow.width(this.columnsheader.width()),
                            this._updatefilterrowui()),
                            this.showeverpresentrow && ("bottom" !== this.everpresentrowposition ? this.addnewrowtop.width(this.columnsheader.width()) : this.addnewrowbottom.width(this.columnsheader.width()),
                            this._updateaddnewrowui()),
                            this.autowidth && this._arrange()
                        }
                    }
                }
            },
            _rendercolumnheaders: function() {
                var t = this.that;
                if (!this.prerenderrequired)
                    return this._rendersortcolumn && this._rendersortcolumn(),
                    this._renderfiltercolumn && this._renderfiltercolumn(),
                    this.showfilterrow && this.filterrow && (this.filterrow.width(this.columnsheader.width()),
                    this._updatefilterrowui()),
                    void (this.showeverpresentrow && ("bottom" !== this.everpresentrowposition ? this.addnewrowtop.width(this.columnsheader.width()) : this.addnewrowbottom.width(this.columnsheader.width()),
                    this._updateaddnewrowui()));
                this._columnsbydatafield = new Array,
                this.columnsheader.find("#columntable" + this.element.id).remove();
                var i = e('<div id="columntable' + this.element.id + '" style="height: 100%; position: relative;"></div>');
                i[0].cells = new Array;
                var r = 0
                  , s = 0
                  , n = ""
                  , o = this.host.width()
                  , a = o
                  , l = new Array
                  , d = new Array
                  , h = this.rowdetails && this.showrowdetailscolumn ? (1 + this.groups.length) * this.groupindentwidth : this.groups.length * this.groupindentwidth;
                if (e.each(this.columns.records, function(e, i) {
                    if (!(this.hidden && this.hideable || this.adaptivehidden))
                        if ("auto" == this.width || this._width)
                            n += this.text;
                        else if (this.width < this.minwidth && "auto" != this.minwidth)
                            o -= this.minwidth;
                        else if (this.width > this.maxwidth && "auto" != this.maxwidth)
                            o -= this.maxwidth;
                        else if (-1 != this.width.toString().indexOf("%")) {
                            i = 0;
                            var r = "hidden" == t.vScrollBar[0].style.visibility ? 0 : t.scrollbarsize + 5;
                            r += h,
                            (i = parseFloat(this.width) * (a - r) / 100) < this.minwidth && "auto" != this.minwidth && (i = this.minwidth),
                            i > this.maxwidth && "auto" != this.maxwidth && (i = this.maxwidth),
                            o -= i
                        } else
                            "string" == typeof this.width && (this.width = parseInt(this.width)),
                            o -= this.width;
                    this.pinned || this.grouped || this.checkboxcolumn ? (t._haspinned && (this.pinned = !0),
                    l[l.length] = this) : d[d.length] = this
                }),
                this.rtl) {
                    var c = 0;
                    l.reverse();
                    for (u = this.columns.records.length - 1; u >= this.columns.records.length - l.length; u--)
                        this.columns.replace(u, l[c++]);
                    for (p = 0; p < d.length; p++)
                        this.columns.replace(p, d[p])
                } else {
                    for (var u = 0; u < l.length; u++)
                        this.columns.replace(u, l[u]);
                    for (var p = 0; p < d.length; p++)
                        this.columns.replace(l.length + p, d[p])
                }
                var f = this.headerZIndex
                  , m = t.groupable ? t.groups.length : 0;
                this.rowdetails && this.showrowdetailscolumn && m++;
                var g = t.columnsheader.height();
                this.showfilterrow && (this.columngroups ? g -= this.filterrowheight : g = this.columnsheight),
                this.showeverpresentrow && "bottom" !== this.everpresentrowposition && (this.columngroups ? g -= this.everpresentrowheight : g = this.columnsheight);
                var v = this._gettableheight();
                if (this.virtualsizeinfo && this.virtualsizeinfo.virtualheight > v && !this.scrollbarautoshow)
                    if (this.groupable && this.groups.length > 0)
                        if (this.dataview && this.dataview.loadedrootgroups && !this.groupsexpandedbydefault) {
                            var w = 0;
                            if (this.pageable) {
                                if (this.pageable)
                                    for (var x = 0; x < this.dataview.rows.length; x++)
                                        this.dataview.rows[x].group && 0 === this.dataview.rows[x].level && (w += this.rowsheight)
                            } else
                                w = this.dataview.loadedrootgroups.length * this.rowsheight;
                            w > v && (o -= this.scrollbarsize + 5,
                            a -= this.scrollbarsize + 5)
                        } else
                            o -= this.scrollbarsize + 5,
                            a -= this.scrollbarsize + 5;
                    else
                        !this.autoheight && this.scrollbarsize > 0 && (o -= this.scrollbarsize + 5,
                        a -= this.scrollbarsize + 5);
                a -= h;
                var b = document.createDocumentFragment()
                  , y = 0;
                if (e.each(this.columns.records, function(l, d) {
                    this.height = t.columnsheight,
                    t.columngroups && t.columngroups.length && (this.height = function(e, i) {
                        var r = t.columngroupslevel * t.columnsheight;
                        return r -= i.level * t.columnsheight
                    }(this.datafield, this),
                    g = this.height);
                    var h = t.toTP("jqx-grid-column-header") + " " + t.toTP("jqx-widget-header");
                    t.rtl && (h += " " + t.toTP("jqx-grid-column-header-rtl"));
                    var c = t.rtl ? 150 + f + 1 : 150 + f - 1
                      , u = t.rtl ? f++ : f--
                      , p = e('<div role="columnheader" style="z-index: ' + u + ';position: absolute; height: 100%;" class="' + h + '"><div style="height: 100%; width: 100%;"></div></div>');
                    t.columngroups && (p[0].style.height = g + "px",
                    p[0].style.bottom = "0px",
                    this.pinned && (p[0].style.zIndex = c)),
                    this.uielement = p,
                    "" != this.classname && this.classname && p.addClass(this.classname);
                    var v = this.width
                      , w = !1;
                    if (null === this.width && (this.width = "auto"),
                    -1 == this.width.toString().indexOf("%") && null == this._percentagewidth || (v = null != this._percentagewidth ? parseFloat(this._percentagewidth) * a / 100 : parseFloat(this.width) * a / 100,
                    w = !0),
                    "auto" == this.width || this._width || w) {
                        if (w)
                            v < this.minwidth && "auto" != this.minwidth && (v = this.minwidth),
                            v > this.maxwidth && "auto" != this.maxwidth && (v = this.maxwidth),
                            null != this._percentagewidth && -1 == this.width.toString().indexOf("%") || (this._percentagewidth = this.width),
                            p.width(v),
                            this.width = v;
                        else if (!this.hidden && !this.adaptivehidden) {
                            var x = Math.floor(o * (this.text.length / n.length));
                            o - (y += x) < 3 && o != y && o - y > .01 ? o - y == 1 ? x++ : x += 2 : l == t.columns.records.length - 1 && y < o && (x += o - y),
                            isNaN(x) && (x = this.minwidth),
                            x < 0 && ($element = e("<span>" + this.text + "</span>"),
                            e(document.body).append($element),
                            x = 10 + $element.width(),
                            $element.remove()),
                            x < this.minwidth && (x = this.minwidth),
                            x > this.maxwidth && (x = this.maxwidth),
                            this._width = "auto",
                            this.width = x,
                            v = this.width,
                            p.width(this.width)
                        }
                    } else
                        v < this.minwidth && "auto" != this.minwidth && (v = this.minwidth,
                        this.width = v),
                        v > this.maxwidth && "auto" != this.maxwidth && (v = this.maxwidth,
                        this.width = v),
                        p[0].style.width = parseInt(v) + "px";
                    (this.hidden && this.hideable || this.adaptivehidden) && p.css("display", "none");
                    var _ = e(p.children()[0])
                      , q = t.rtl ? t.toTP("jqx-grid-column-menubutton") + " " + t.toTP("jqx-grid-column-menubutton-rtl") : t.toTP("jqx-grid-column-menubutton");
                    q += " " + t.toTP("jqx-icon-arrow-down");
                    var j = e('<div style="height: ' + g + 'px; display: none; left: 100%; top: 0%; position: absolute;"><div class="' + q + '" style="width: 100%; height:100%;"></div></div>');
                    t.enableanimations || j.css("margin-left", -16),
                    t.rtl && j.css("left", "0px"),
                    this.columnsmenu = j[0],
                    i[0].cells[l] = p[0],
                    j[0].style.width = parseInt(t.columnsmenuwidth) + "px";
                    var S = t.columnsmenu
                      , C = !1
                      , T = !1
                      , I = t.groupable && m > 0 && r < m || t.rowdetails && r < m;
                    if (t.rtl && (I = t.groupable && m > 0 && r < m || t.rowdetails && r < m,
                    I &= l > t.columns.records.length - 1 - m),
                    I)
                        r++,
                        S &= !1,
                        this.sortable = !1,
                        this.editable = !1,
                        T = !0;
                    else {
                        var k = null != this.renderer ? this.renderer(this.text, this.align, g) : t._rendercolumnheader(this.text, this.align, g, t);
                        null == k && (k = t._rendercolumnheader(this.text, this.align, g, t)),
                        null != this.renderer && (k = e(k)),
                        S &= !0,
                        C = !0
                    }
                    if (t.WinJS ? MSApp.execUnsafeLocalFunction(function() {
                        _.append(e(k))
                    }) : this.renderer ? _.append(e(k)) : k && (_[0].innerHTML = k),
                    null != k) {
                        var D = e('<div class="iconscontainer" style="height: ' + g + 'px; margin-left: -32px; display: block; position: absolute; left: 100%; top: 0%; width: 32px;"><div class="filtericon ' + t.toTP("jqx-widget-header") + '" style="height: ' + g + 'px; float: right; display: none; width: 16px;"><div class="' + t.toTP("jqx-grid-column-filterbutton") + '" style="width: 100%; height:100%;"></div></div><div class="sortasc ' + t.toTP("jqx-widget-header") + '" style="height: ' + g + 'px; float: right; display: none; width: 16px;"><div class="' + t.toTP("jqx-grid-column-sortascbutton") + " " + t.toTP("jqx-icon-arrow-up") + '" style="width: 100%; height:100%;"></div></div><div class="sortdesc ' + t.toTP("jqx-widget-header") + '" style="height: ' + g + 'px; float: right; display: none; width: 16px;"><div class="' + t.toTP("jqx-grid-column-sortdescbutton") + " " + t.toTP("jqx-icon-arrow-down") + '" style="width: 100%; height:100%;"></div></div><div class="sorticon ' + t.toTP("jqx-widget-header") + '" style="height: ' + g + 'px; float: right; visibility: hidden; width: 16px;"><div class="' + t.toTP("jqx-grid-column-sorticon") + " " + t.toTP("jqx-icon-arrow-down") + '" style="width: 100%; height:100%;"></div></div></div>');
                        j.addClass(t.toTP("jqx-widget-header")),
                        _.append(D);
                        var P = D.children();
                        this.sorticon = P[3],
                        this.sortasc = P[1],
                        this.sortdesc = P[2],
                        this.filtericon = P[0],
                        this.iconscontainer = D,
                        t.rtl && (D.css("margin-left", "0px"),
                        D.css("left", "0px"),
                        e(this.sorticon).css("float", "left"),
                        e(this.sortasc).css("float", "left"),
                        e(this.filtericon).css("float", "left"),
                        e(this.sortdesc).css("float", "left")),
                        !t.autoshowfiltericon && this.filterable && e(this.filtericon).css("display", "block")
                    }
                    if (this.element = p[0],
                    S && (t._handlecolumnsmenu(t, _, p, j, this),
                    this.menu || j.hide()),
                    b.appendChild(p[0]),
                    t.groupable && C) {
                        if (p[0].id = t.dataview.generatekey(),
                        !t._handlecolumnstogroupsdragdrop)
                            throw new Error("jqxGrid: Missing reference to jqxgrid.grouping.js.");
                        t._handlecolumnstogroupsdragdrop(this, p)
                    }
                    t.columnsreorder && this.draggable && t._handlecolumnsdragreorder && t._handlecolumnsdragreorder(this, p);
                    var B = this;
                    B._applyStyle(),
                    t.addHandler(p, "mouseenter", function(e) {
                        B.hovered = !0,
                        B._applyStyle()
                    }),
                    t.addHandler(p, "mouseleave", function(e) {
                        B.hovered = !1,
                        B._applyStyle()
                    });
                    var M = function(e, i, r) {
                        if (e.selectable) {
                            var s = t.getrows();
                            if (void 0 === e.selected && (e.selected = !1),
                            i.shiftKey && void 0 !== t._clickedcolumn || (t._clickedcolumn = e),
                            i.shiftKey && t._clickedcolumn && void 0 === r) {
                                var n = t.columns.records.indexOf(t._clickedcolumn)
                                  , o = t.columns.records.indexOf(e)
                                  , a = Math.min(n, o)
                                  , l = Math.max(n, o);
                                t.clearselection();
                                for (var d = a; d <= l; d++)
                                    M(t.columns.records[d], i, !0);
                                return void t._renderrows(this.virtualsizeinfo)
                            }
                            r ? e.selected = !0 : (i.ctrlKey || t.clearselection(),
                            e.selected = !e.selected);
                            for (d = 0; d < s.length; d++)
                                t._applycellselection(s[d].boundindex, e.displayfield, e.selected, !1);
                            e.selected ? e.element.setAttribute("selected", "") : e.element.removeAttribute("selected"),
                            e._applyStyle(),
                            void 0 === r && t._renderrows(this.virtualsizeinfo)
                        }
                    };
                    if (t.addHandler(p, "click", function(e) {
                        if (B.checkboxcolumn)
                            return !0;
                        if (t.sorttogglestates > 0 && t._togglesort && !t._loading) {
                            if (t.suspendClick)
                                return !0;
                            t._togglesort(B)
                        }
                        M(B, e),
                        e.preventDefault(),
                        t._raiseEvent(7, {
                            column: B.getcolumnproperties(),
                            datafield: B.datafield,
                            originalEvent: e
                        })
                    }),
                    B.resizable && t.columnsresize && !T) {
                        var H = !1
                          , O = "mousemove";
                        t.isTouchDevice() && !0 !== t.touchmode && (H = !0,
                        O = e.jqx.mobile.getTouchEventName("touchstart")),
                        t.addHandler(p, O, function(i) {
                            var r = parseInt(i.pageX)
                              , s = 5
                              , n = parseInt(p.coord().left);
                            if (t.hasTransform && (n = e.jqx.utilities.getOffset(p).left),
                            t.resizing)
                                return !0;
                            if (t._handlecolumnsresize) {
                                if (H)
                                    return s = 40,
                                    (r = t.getTouches(i)[0].pageX) >= n + B.width - s ? (t.resizablecolumn = {
                                        columnelement: p,
                                        column: B
                                    },
                                    p.css("cursor", "col-resize")) : (p.css("cursor", ""),
                                    t.resizablecolumn = null),
                                    !0;
                                var o = B.width;
                                if (t.rtl && (o = 0),
                                r >= n + o - s) {
                                    if (r <= n + o + s)
                                        return t.resizablecolumn = {
                                            columnelement: p,
                                            column: B
                                        },
                                        p.css("cursor", "col-resize"),
                                        !1;
                                    p.css("cursor", ""),
                                    t.resizablecolumn = null
                                } else
                                    p.css("cursor", ""),
                                    r < n + o - s && (B._animating || B._menuvisible || p.mouseenter()),
                                    t.resizablecolumn = null
                            }
                        })
                    }
                    (p.css("left", s),
                    this.hidden && this.hideable || this.adaptivehidden || (s += v),
                    B.rendered) && (B.rendered(e(_[0].firstChild), B.align, g) && null != D && D.hide());
                    if (B.checkboxcolumn) {
                        if (D && D.hide(),
                        !t.host.jqxCheckBox)
                            throw new Error("jqxGrid: Missing reference to jqxcheckbox.js");
                        _.html('<div style="cursor: pointer; margin-left: 3px; top: 50%; margin-top: -9px; position: relative;"></div>');
                        var z = _.find("div:first");
                        z.jqxCheckBox({
                            _canFocus: !1,
                            disabled: t.disabled,
                            disabledContainer: !0,
                            theme: t.theme,
                            enableContainerClick: !1,
                            animationShowDelay: 0,
                            animationHideDelay: 0
                        }),
                        z.addClass(t.toThemeProperty("jqx-checkbox")),
                        B.checkboxelement = z;
                        var A = z.data().jqxCheckBox.instance;
                        t._checkboxcolumn = B,
                        A.updated = function(e, i, r) {
                            t._checkboxcolumnupdating = !0,
                            t.disabled && (z.jqxCheckBox({
                                disabled: t.disabled
                            }),
                            i = r),
                            i ? t.selectallrows() : t.unselectallrows(),
                            t._checkboxcolumnupdating = !1
                        }
                    }
                }),
                s > 0 ? this.columnsheader.width(2 + s) : this.columnsheader.width(s),
                i[0].appendChild(b),
                this.columnsrow = i,
                t.columnsheader.append(i),
                this.showfilterrow && this._updatefilterrow) {
                    if (this.columngroups ? i.height(this.columngroupslevel * this.columnsheight) : i.height(this.columnsheight),
                    !this.filterrow) {
                        var _ = e("<div style='position: relative !important; '></div>");
                        _[0].id = "filterrow." + this.element.id,
                        _.height(this.filterrowheight),
                        this.filterrow = _
                    }
                    this.filterrow.width(2 + s),
                    this.columnsheader.append(this.filterrow),
                    this._updatefilterrow()
                }
                if (this.showeverpresentrow && "bottom" !== this.everpresentrowposition) {
                    if (this.columngroups ? i.height(this.columngroupslevel * this.columnsheight) : i.height(this.columnsheight),
                    !this.addnewrowtop) {
                        var q = e("<div style='position: relative !important; z-index:" + this.headerZIndex + ";'></div>");
                        q[0].id = "addnewrowtop." + this.element.id,
                        q.height(this.everpresentrowheight),
                        this.addnewrowtop = q
                    }
                    this.addnewrowtop.width(2 + s),
                    "topAboveFilterRow" == this.everpresentrowposition && this.filterrow ? this.addnewrowtop.insertBefore(this.filterrow) : this.columnsheader.append(this.addnewrowtop),
                    this._updateaddnewrow()
                } else if (this.showeverpresentrow && "bottom" === this.everpresentrowposition) {
                    if (!this.addnewrowbottom) {
                        var j = e("<div style='position: relative !important; z-index:" + this.headerZIndex + ";'></div>");
                        j[0].id = "addnewrowbottom." + this.element.id,
                        j.height(this.everpresentrowheight),
                        this.addnewrowbottom = j
                    }
                    this.addnewrowbottom.width(2 + s),
                    this.addnewrow.append(this.addnewrowbottom),
                    this._updateaddnewrow()
                }
                i[0].style.visibility = 0 == s ? "hidden" : "inherit",
                i.width(s),
                this._handlecolumnsdragdrop && this._handlecolumnsdragdrop(),
                this._handlecolumnsreorder && this._handlecolumnsreorder(),
                this._rendersortcolumn && this._rendersortcolumn(),
                this._renderfiltercolumn && this._renderfiltercolumn(),
                this._handlecolumnsresize && this._handlecolumnsresize(),
                this.columngroups && this._rendercolumngroups(),
                this._updatecheckboxselection && this._updatecheckboxselection()
            },
            _rendercolumngroups: function() {
                if (this.columngroups) {
                    for (var t = 0, i = 0; i < this.columns.records.length; i++)
                        this.columns.records[i].pinned && t++;
                    var r = this.headerZIndex - t + this.columns.records.length
                      , s = this.that
                      , n = s.toTP("jqx-grid-column-header") + " " + s.toTP("jqx-grid-columngroup-header") + " " + s.toTP("jqx-widget-header");
                    s.rtl && (n += " " + s.toTP("jqx-grid-columngroup-header-rtl"));
                    var o = this.columnsheader.find("#columntable" + this.element.id);
                    o.find("jqx-grid-columngroup-header").remove();
                    for (var a = 0; a < this.columngroupslevel - 1; a++)
                        for (i = 0; i < this.columngroups.length; i++) {
                            var l = this.columngroups[i]
                              , d = l.level;
                            if (d === a) {
                                var h = d * this.columnsheight
                                  , c = 99999;
                                if (l.groups) {
                                    var u = function(e) {
                                        for (var t = 0, i = 0; i < e.groups.length; i++) {
                                            var r = e.groups[i];
                                            r.groups ? t += u(r) : r.hidden || (t += r.width,
                                            c = Math.min(parseFloat(r.element.style.left), c))
                                        }
                                        return t
                                    };
                                    l.width = u(l),
                                    l.left = c;
                                    var p = this.columnsheight
                                      , f = r--
                                      , m = e('<div role="columnheader" style="z-index: ' + f + ';position: absolute;" class="' + n + '"></div>')
                                      , g = e(this._rendercolumnheader(l.text, l.align, this.columnsheight, this));
                                    if (l.renderer) {
                                        g = e("<div style='height: 100%; width: 100%;'></div>");
                                        var v = l.renderer(l.text, l.align, p);
                                        g.html(v)
                                    }
                                    m.append(g),
                                    m[0].style.left = c + "px",
                                    0 === c && (m[0].style.borderLeftColor = "transparent"),
                                    this.showcolumnheaderlines || (m[0].style.borderRightColor = "transparent",
                                    m[0].style.borderBottomColor = "transparent",
                                    m[0].style.boxShadow = "none"),
                                    m[0].style.top = h + "px",
                                    m[0].style.height = p + "px",
                                    m[0].style.width = -1 + l.width + "px",
                                    o.append(m),
                                    l.element = m,
                                    l.rendered && l.rendered(g, l.align, p)
                                }
                            }
                        }
                }
            },
            _resizecolumngroups: function() {
                if (this.columngroups)
                    for (var e = 0; e < this.columngroups.length; e++) {
                        var t = this.columngroups[e]
                          , i = t.level * this.columnsheight
                          , r = 99999;
                        if (t.groups) {
                            var s = function(e) {
                                for (var t = 0, i = 0; i < e.groups.length; i++) {
                                    var n = e.groups[i];
                                    n.groups ? t += s(n) : n.hidden || (t += n.width,
                                    r = Math.min(parseFloat(n.element.style.left), r))
                                }
                                return t
                            };
                            t.width = s(t),
                            t.left = r;
                            var n = this.columnsheight
                              , o = t.element;
                            o[0].style.left = r + "px",
                            o[0].style.top = i + "px",
                            o[0].style.height = n + "px",
                            o[0].style.width = -1 + t.width + "px"
                        }
                    }
            },
            _handlecolumnsmenu: function(t, i, r, s, n) {
                t.dragmousedown = null,
                s[0].id = t.dataview.generatekey(),
                i.append(s),
                r[0].columnsmenu = s[0],
                n.element = r[0];
                var o = this.columnsmenuwidth + 1
                  , a = "mouseenter";
                if (t.isTouchDevice() && (a = "touchstart"),
                t.addHandler(r, a, function(i) {
                    var a = parseInt(i.pageX)
                      , l = t.columnsresize && n.resizable ? 3 : 0
                      , d = parseInt(r.coord().left);
                    t.hasTransform && (d = e.jqx.utilities.getOffset(r).left);
                    var h = n.width;
                    if (t.rtl && (h = 0),
                    0 != l && a >= d + h - l && a <= d + h + l)
                        return !1;
                    var c = t.vScrollInstance.isScrolling();
                    n.menu && t.autoshowcolumnsmenubutton && !c && !t.disabled && function() {
                        if (!n.menu)
                            return !1;
                        if (!t.resizing) {
                            if (n._menuvisible && t._hasOpenedMenu)
                                return !1;
                            if (n._animating = !0,
                            t.menuitemsarray && t.menuitemsarray.length > 0)
                                if (t.enableanimations)
                                    s.css("display", "block"),
                                    s.stop(),
                                    n.iconscontainer.stop(),
                                    t.rtl ? (s.css("margin-left", -o),
                                    s.animate({
                                        "margin-left": "0px"
                                    }, "fast", function() {
                                        s.css("display", "block"),
                                        n._animating = !1,
                                        n._menuvisible = !0
                                    })) : (s.css("margin-left", "0px"),
                                    s.animate({
                                        "margin-left": -o
                                    }, "fast", function() {
                                        s.css("display", "block"),
                                        n._animating = !1,
                                        n._menuvisible = !0
                                    })),
                                    e = t.rtl ? o : -(32 + o),
                                    n.iconscontainer.animate({
                                        "margin-left": e
                                    }, "fast");
                                else {
                                    s.css("display", "block");
                                    var e = t.rtl ? 16 : -48;
                                    n.iconscontainer.css("margin-left", e + "px"),
                                    n._animating = !1,
                                    n._menuvisible = !0
                                }
                        }
                    }()
                }),
                !t.autoshowcolumnsmenubutton) {
                    s.css("display", "block");
                    var l = t.rtl ? 16 : -48;
                    n.iconscontainer.css("margin-left", l + "px"),
                    t.rtl ? s.css({
                        "margin-left": "0px"
                    }) : s.css({
                        "margin-left": -o
                    })
                }
                t.addHandler(r, "mouseleave", function(i) {
                    if (t.menuitemsarray && t.menuitemsarray.length > 0 && n.menu) {
                        var r = e.data(document.body, "contextmenu" + t.element.id);
                        if (null != r && s[0].id == r.columnsmenu.id)
                            return;
                        if (t.autoshowcolumnsmenubutton)
                            if (t.enableanimations) {
                                t.rtl ? s.css("margin-left", "0px") : s.css("margin-left", -o),
                                s.stop(),
                                n.iconscontainer.stop(),
                                t.rtl ? s.animate({
                                    "margin-left": -o
                                }, "fast", function() {
                                    s.css("display", "none"),
                                    n._menuvisible = !1
                                }) : s.animate({
                                    "margin-left": 0
                                }, "fast", function() {
                                    s.css("display", "none"),
                                    n._menuvisible = !1
                                });
                                a = t.rtl ? 0 : -32;
                                n.iconscontainer.animate({
                                    "margin-left": a
                                }, "fast")
                            } else {
                                s.css("display", "none");
                                var a = t.rtl ? 0 : -32;
                                n.iconscontainer.css("margin-left", a + "px"),
                                n._menuvisible = !1
                            }
                    }
                });
                var d = !0
                  , h = ""
                  , c = e(n.filtericon);
                t.addHandler(s, "mousedown", function(i) {
                    t.gridmenu || t._initmenu(),
                    d = !e.data(t.gridmenu[0], "contextMenuOpened" + t.gridmenu[0].id),
                    null != (h = e.data(document.body, "contextmenu" + t.element.id)) && (h = h.column.datafield)
                }),
                t.addHandler(c, "mousedown", function(i) {
                    t.gridmenu || t._initmenu(),
                    d = !e.data(t.gridmenu[0], "contextMenuOpened" + t.gridmenu[0].id),
                    null != (h = e.data(document.body, "contextmenu" + t.element.id)) && (h = h.column.datafield)
                });
                var u = function() {
                    if (!n.menu)
                        return !1;
                    if (t.gridmenu || t._initmenu(),
                    t.disabled)
                        return !1;
                    for (var i = 0; i < t.columns.records.length; i++)
                        t.columns.records[i].datafield != n.datafield && (t.columns.records[i]._menuvisible = !1);
                    var r = s.coord(!0)
                      , o = s.height();
                    if (!d && (d = !0,
                    h == n.datafield))
                        return t._closemenu(),
                        !1;
                    var a = t.host.coord(!0);
                    if (t.hasTransform && (a = e.jqx.utilities.getOffset(t.host),
                    r = e.jqx.utilities.getOffset(s)),
                    a.left + t.host.width() > parseInt(r.left) + t.gridmenu.width() ? t.gridmenu.jqxMenu("open", r.left, r.top + o) : t.gridmenu.jqxMenu("open", s.width() + r.left - t.gridmenu.width(), r.top + o),
                    t.gridmenu.width() < 100 && t._arrangemenu(),
                    t.adaptive && t.element.offsetWidth < t.adaptivewidth) {
                        t.gridmenu.jqxMenu("close"),
                        t.gridmenu.jqxMenu("open", a.left, r.top + o);
                        var l = 0;
                        for (i = 0; i < t.columns.records.length; i++) {
                            var c = t.columns.records[i];
                            c.hidden || c.adaptivehidden || "adaptive" === c.columntype || (l += c.adaptivewidth)
                        }
                        t.gridmenu.width(l),
                        t.gridmenu.height(t.content.height())
                    }
                    (!t.filterable || t.filterable && t.showfilterrow) && setTimeout(function() {
                        t.gridmenu.focus();
                        for (var i = t.gridmenu.find(".jqx-item"), r = 0; r < i.length; r++)
                            i[r].active && (i[r].active = !1);
                        var s = i[0];
                        i[0].className.indexOf("disabled") >= 0 && (s = i[1]),
                        e(i).removeClass("jqx-fill-state-focus"),
                        e(s).addClass("jqx-fill-state-focus"),
                        s.active = !0
                    }, 225),
                    t._hasOpenedMenu = !0;
                    var u = t._getmenuitembyindex(0)
                      , p = t._getmenuitembyindex(1)
                      , f = t._getmenuitembyindex(2)
                      , m = t._getmenuitembyindex(3)
                      , g = t._getmenuitembyindex(4)
                      , v = t._getmenuitembyindex(5);
                    if (null != u && null != p && null != f) {
                        var w = n.sortable && t.sortable;
                        if (t.gridmenu.jqxMenu("disable", u.id, !w),
                        t.gridmenu.jqxMenu("disable", p.id, !w),
                        t.gridmenu.jqxMenu("disable", f.id, !w),
                        null != n.displayfield)
                            if (t.sortcolumn == n.displayfield) {
                                var x = t.getsortinformation();
                                w && (x.sortdirection.ascending ? t.gridmenu.jqxMenu("disable", u.id, !0) : t.gridmenu.jqxMenu("disable", p.id, !0))
                            } else
                                t.gridmenu.jqxMenu("disable", f.id, !0)
                    }
                    if (null != m && null != g && (t.groupable && n.groupable ? t.groups && -1 != t.groups.indexOf(n.datafield) ? (t.gridmenu.jqxMenu("disable", m.id, !0),
                    t.gridmenu.jqxMenu("disable", g.id, !1)) : (t.gridmenu.jqxMenu("disable", m.id, !1),
                    t.gridmenu.jqxMenu("disable", g.id, !0)) : (t.gridmenu.jqxMenu("disable", g.id, !0),
                    t.gridmenu.jqxMenu("disable", m.id, !0))),
                    null != v) {
                        t.menuOwner = n,
                        t._updatefilterpanel(t, v, n);
                        var b = 0;
                        t.sortable && t._togglesort && t.showsortmenuitems && (b += 3),
                        t.groupable && t.addgroup && t.showgroupmenuitems && (b += 2);
                        var y = 33 * b + 6;
                        y = b * t._measureMenuElement() + 14;
                        e.jqx.browser.msie && e.jqx.browser.version < 8 && (y += 20,
                        e(v).height(194)),
                        t.isTouchDevice() && (y += 10),
                        t.filterable && t.showfiltermenuitems && (n.filterable ? (t.gridmenu.height(y + 194),
                        e(v).css("display", "block")) : (t.gridmenu.height(y),
                        e(v).css("display", "none")))
                    }
                    t.columnmenuopening && (!1 === t.columnmenuopening(t.gridmenu, n.displayfield, t.gridmenu.height()) && setTimeout(function() {
                        t._closemenu()
                    }));
                    e.data(document.body, "contextmenu" + t.element.id, {
                        column: n,
                        columnsmenu: s[0]
                    })
                };
                t.addHandler(c, "click", function(e) {
                    return !!n.menu && (t.showfilterrow || ("block" != s[0].style.display && r.trigger("mouseenter"),
                    setTimeout(function() {
                        "block" != s[0].style.display && r.trigger("mouseenter"),
                        u()
                    }, 200)),
                    !1)
                }),
                t.addHandler(s, "click", function(e) {
                    return !!n.menu && (u(),
                    !1)
                }),
                t.isTouchDevice() && t.addHandler(s, e.jqx.mobile.getTouchEventName("touchstart"), function(e) {
                    return !!n.menu && (t._hasOpenedMenu ? t._closemenu() : u(),
                    !1)
                })
            },
            _removecolumnhandlers: function(t) {
                var i = this.that
                  , r = e(t.element);
                if (r.length > 0) {
                    i.removeHandler(r, "mouseenter"),
                    i.removeHandler(r, "mouseleave");
                    var s = e(t.filtericon);
                    if (i.removeHandler(s, "mousedown"),
                    i.removeHandler(s, "click"),
                    i.removeHandler(r, "click"),
                    i.removeHandler(r, "mousemove"),
                    i.columnsreorder && (i.removeHandler(r, "mousedown.drag"),
                    i.removeHandler(r, "mousemove.drag")),
                    i.removeHandler(r, "dragstart"),
                    r[0].columnsmenu) {
                        var n = e(r[0].columnsmenu);
                        i.removeHandler(n, "click"),
                        i.removeHandler(n, "mousedown"),
                        i.removeHandler(n, e.jqx.mobile.getTouchEventName("touchstart"))
                    }
                }
            },
            _rendercolumnheader: function(e, t, i, r) {
                return r.columngroups ? (i / 2 - this._columnheight / 2 < 0 && 6,
                "px") : 32 != this.columnsheight && (this.columnsheight / 2 - this._columnheight / 2 < 0 && 6,
                "px"),
                this.enableellipsis ? "left" == t ? '<div style="padding-bottom: 2px; overflow: hidden; text-overflow: ellipsis; text-align: ' + t + "; margin-left: 4px; margin-right: 2px; line-height: " + i + 'px;"><span style="text-overflow: ellipsis; cursor: default;">' + e + "</span></div>" : '<div style="padding-bottom: 2px; overflow: hidden; text-overflow: ellipsis; text-align: ' + t + "; margin-left: 2px; margin-right: 4px; line-height: " + i + 'px;"><span style="text-overflow: ellipsis; cursor: default;">' + e + "</span></div>" : "center" == t || "middle" == t ? '<div style="padding-bottom: 2px; text-align: center; line-height: ' + i + 'px;"><a href="#">' + e + "</a></div>" : '<a style="line-height: ' + i + "px; float: " + t + ';" href="#">' + e + "</a>"
            },
            _renderrows: function(t, i, r) {
                var s = this.that;
                if ((this.pageable || this.groupable) && (this.autoheight || this.autorowheight) && null != this.table && null != this.table[0].rows && this.table[0].rows.length < this.dataview.rows.length && (s.prerenderrequired = !0),
                !this.pageable && (this.autoheight || this.autorowheight) && (this.virtualmode || this.unboundmode)) {
                    var n = this.source.totalrecords;
                    isNaN(n) || null != this.table && null != this.table[0].rows && this.table[0].rows.length != n && (s.prerenderrequired = !0)
                }
                !this.autoheight && !this.autorowheight || s.prerenderrequired || this.table && this.table[0].rows && (this.table[0].rows.length < this.dataview.records.length && (this.pageable && this.table[0].rows.length < this.dataview.pagesize ? s.prerenderrequired = !0 : this.pageable || (s.prerenderrequired = !0)),
                this.table[0].rows.length < this.dataview.cachedrecords.length && (this.pageable && this.table[0].rows.length < this.dataview.pagesize ? s.prerenderrequired = !0 : this.pageable || (s.prerenderrequired = !0))),
                s._prerenderrows(t),
                s._requiresupdate && (s._requiresupdate = !1,
                s._updatepageviews());
                var o = function() {
                    s._loading || (s.WinJS ? MSApp.execUnsafeLocalFunction(function() {
                        s._rendervisualrows()
                    }) : s._rendervisualrows(),
                    s.virtualmode && s.showaggregates && s._updateaggregates && s.refreshaggregates())
                }
                  , a = e.jqx.browser.msie && e.jqx.browser.version < 10;
                if (this.virtualmode) {
                    this.loadondemand && (o(),
                    function() {
                        if (s.rendergridrows) {
                            var e = s._startboundindex;
                            null == e && (e = 0);
                            var t = e + 1 + s.dataview.pagesize;
                            if (null != e && null != t) {
                                var r = !!s.source._source;
                                if ((r ? s.source._source.recordstartindex : s.source.recordstartindex) != e || 1 == i) {
                                    if (r) {
                                        if (t >= s.source._source.totalrecords && ((e = (t = s.source._source.totalrecords) - s.dataview.pagesize - 1) < 0 && (e = 0),
                                        s.source._source.recordendindex == t && s.source._source.recordstartindex == e))
                                            return;
                                        s.source._source.recordstartindex = e,
                                        s.source._source.recordendindex = t
                                    } else
                                        s.source.recordstartindex = e,
                                        s.source.recordendindex = t;
                                    s.updatebounddata("cells")
                                }
                            }
                        }
                    }(),
                    this.loadondemand = !1);
                    var l = null == this._browser ? this._isIE10() : this._browser;
                    this.editable && this.editcell && !this.vScrollInstance.isScrolling() && !this.hScrollInstance.isScrolling() ? o() : this.autoheight ? o() : l || a || navigator && -1 != navigator.userAgent.indexOf("Safari") ? (null != this._scrolltimer && clearTimeout(this._scrolltimer),
                    this._scrolltimer = setTimeout(function() {
                        o()
                    }, 5)) : o()
                } else {
                    if ("deferred" == this.scrollmode && (this.hScrollInstance.isScrolling() || this.vScrollInstance.isScrolling())) {
                        null != this._scrolltimer && clearInterval(this._scrolltimer);
                        var d = this._getfirstvisualrow();
                        if (null != d) {
                            var h = this.scrollfeedback ? this.scrollfeedback(d.bounddata) : function(t) {
                                if (null == d)
                                    return "";
                                var i = "<table>"
                                  , r = s.deferreddatafields;
                                null == r && s.columns.records.length > 0 && (r = new Array).push(s.columns.records[0].displayfield);
                                for (var n = 0; n < r.length; n++) {
                                    var o = r[n]
                                      , a = s._getcolumnbydatafield(o);
                                    if (a) {
                                        var l = s._getcellvalue(a, d);
                                        "" != a.cellsformat && e.jqx.dataFormat && (e.jqx.dataFormat.isDate(l) ? l = e.jqx.dataFormat.formatdate(l, a.cellsformat, s.gridlocalization) : e.jqx.dataFormat.isNumber(l) && (l = e.jqx.dataFormat.formatnumber(l, a.cellsformat, s.gridlocalization))),
                                        i += "<tr><td>" + l + "</td></tr>"
                                    }
                                }
                                return i += "</table>"
                            }(d.bounddata);
                            h != this._scrollelementcontent && (this._scrollelement[0].innerHTML = h,
                            this._scrollelementcontent = h)
                        }
                        return this._scrollelement.css("visibility", "visible"),
                        this._scrollelementoverlay.css("visibility", "visible"),
                        this._scrollelement.css("margin-top", -this._scrollelement.height() / 2),
                        void (this._scrolltimer = setInterval(function() {
                            s.hScrollInstance.isScrolling() || s.vScrollInstance.isScrolling() || (o(),
                            s._scrollelement.css("visibility", "hidden"),
                            s._scrollelementoverlay.css("visibility", "hidden"),
                            clearInterval(s._scrolltimer),
                            d && s.ensurerowvisible(d.visibleindex))
                        }, 100))
                    }
                    if (navigator && -1 == navigator.userAgent.indexOf("Chrome") && -1 != navigator.userAgent.indexOf("Safari") && (this._updatedelay = 1),
                    null != this.touchDevice && 1 == this.touchDevice && (this._updatedelay = 5),
                    ((l = null == this._browser ? this._isIE10() : this._browser) || a) && (this._updatedelay = 5),
                    l && this.hScrollInstance.isScrolling())
                        return void o();
                    if (e.jqx.browser.mozilla && 0 == this._updatedelay && (this.vScrollInstance.isScrolling() || this.hScrollInstance.isScrolling()) && (this._updatedelay = 0),
                    this.isTouchDevice() && (this._updatedelay = 0),
                    null != this.updatedelay && (this._updatedelay = this.updatedelay),
                    0 == this._updatedelay)
                        o();
                    else {
                        var c = this._jqxgridrendertimer;
                        null != c && clearTimeout(c),
                        this.vScrollInstance.isScrolling() || this.hScrollInstance.isScrolling() ? (this._updatedelay ? c = setTimeout(function() {
                            o()
                        }, this._updatedelay) : (c = null,
                        o()),
                        this._jqxgridrendertimer = c) : (this._jqxgridrendertimer = c,
                        o())
                    }
                }
                if (s.autorowheight && !s.autoheight && this._pageviews.length > 0) {
                    var u = this._gettableheight()
                      , p = this._pageviews[0].height;
                    if (p > u)
                        if (this.pageable && this.gotopage && (p = this._pageviews[0].height) < 0 && (p = this._pageviews[0].height),
                        "visible" != this.vScrollBar.css("visibility") && this.vScrollBar.css("visibility", "visible"),
                        (p <= u || this.autoheight) && this.vScrollBar.css("visibility", "hidden"),
                        p - u > 0) {
                            if ("deferred" != this.scrollmode) {
                                var f = p - u
                                  , m = this.vScrollInstance.max;
                                if (this.vScrollBar.jqxScrollBar({
                                    max: f
                                }),
                                Math.round(f) != Math.round(m))
                                    this.vScrollBar.jqxScrollBar("value") > f && this.vScrollBar.jqxScrollBar({
                                        value: 0
                                    })
                            }
                        } else
                            this.vScrollBar.jqxScrollBar({
                                value: 0,
                                max: p
                            });
                    else
                        this._loading || this.vScrollBar.css("visibility", "hidden"),
                        this.vScrollBar.jqxScrollBar({
                            value: 0
                        });
                    this._arrange(),
                    this.virtualsizeinfo && (this.virtualsizeinfo.virtualheight = p)
                }
            },
            scrolling: function() {
                return {
                    vertical: this.vScrollInstance.isScrolling(),
                    horizontal: this.hScrollInstance.isScrolling()
                }
            },
            _renderhorizontalscroll: function() {
                var e = this.hScrollInstance
                  , t = e.value;
                "hidden" === this.hScrollBar.css("visibility") && (e.value = 0,
                t = 0);
                var i = parseInt(t);
                if (null != this.table) {
                    var r = this.table[0].rows.length
                      , s = this.columnsrow
                      , n = this.groupable && this.groups.length > 0 ? this.groups.length : 0
                      , o = this.columns.records.length - n
                      , a = this.columns.records
                      , l = 0 == this.dataview.rows.length;
                    if (this.rtl && "hidden" != this.hScrollBar.css("visibility") && (i = e.max - i),
                    l && !this._haspinned) {
                        for (var d = 0; d < r; d++)
                            for (var h = this.table[0].rows[d], c = 0; c < n + o; c++) {
                                if (null != (u = h.cells[c]))
                                    if (a[c].pinned)
                                        if (u.style.marginLeft = i + "px",
                                        0 == d)
                                            s[0].cells[c].style.marginLeft = i + "px"
                            }
                        this.table[0].style.marginLeft = -i + "px",
                        s[0].style.marginLeft = -i + "px"
                    } else if (this._haspinned || null == this._haspinned) {
                        for (d = 0; d < r; d++)
                            for (h = this.table[0].rows[d],
                            c = 0; c < n + o; c++) {
                                var u;
                                if (null != (u = h.cells[c]))
                                    if (a[c].pinned) {
                                        if (0 == i && "" == u.style.marginLeft)
                                            continue;
                                        var p = null
                                          , f = null
                                          , m = null;
                                        if (this.showeverpresentrow && this.addnewrowtop && this.addnewrowtop[0].cells && (m = this.addnewrowtop[0].cells[c]),
                                        this.showfilterrow && this.filterrow && this.filterrow[0].cells && (f = this.filterrow[0].cells[c]),
                                        this.showaggregates && this.statusbar[0].cells && (p = this.statusbar[0].cells[c]),
                                        this.rtl) {
                                            if (u.style.marginLeft = -parseInt(t) + "px",
                                            0 == d)
                                                s[0].cells[c].style.marginLeft = -parseInt(t) + "px",
                                                p && (p.style.marginLeft = -parseInt(t) + "px"),
                                                f && (f.style.marginLeft = -parseInt(t) + "px"),
                                                m && (m.style.marginLeft = -parseInt(t) + "px")
                                        } else if (u.style.marginLeft = i + "px",
                                        0 == d)
                                            s[0].cells[c].style.marginLeft = i + "px",
                                            p && (p.style.marginLeft = i + "px"),
                                            f && (f.style.marginLeft = i + "px"),
                                            m && (m.style.marginLeft = i + "px")
                                    }
                            }
                        this.table[0].style.marginLeft = -i + "px",
                        s[0].style.marginLeft = -i + "px"
                    } else
                        0 == this._haspinned && (this.table[0].style.marginLeft = -i + "px",
                        s[0].style.marginLeft = -i + "px");
                    if (this.showaggregates && this.statusbar[0].cells) {
                        var g = 0;
                        this.rtl && "hidden" != this.vScrollBar.css("visibility") && "hidden" != this.hScrollBar.css("visibility") && (g = 2 + parseInt(this.hScrollBar.css("left"))),
                        this.statusbar[0].style.marginLeft = -i + g + "px"
                    }
                    this.showfilterrow && this.filterrow && this.filterrow[0].cells && (this.filterrow[0].style.marginLeft = -i + "px"),
                    this.showeverpresentrow && this.addnewrowtop && this.addnewrowtop[0].cells && (this.addnewrowtop[0].style.marginLeft = -i + "px")
                }
            },
            _updaterowdetailsvisibility: function() {
                if (this.rowdetails)
                    for (var t = 0; t < this._rowdetailselementscache.length; t++)
                        e(this._rowdetailselementscache[t]).css("display", "none")
            },
            _getvisualcolumnsindexes: function(e, t, i, r, s, n) {
                if (this.rowdetails || this.rtl || this.editcell || this.width && this.width.toString().indexOf("%") >= 0 || this.exporting)
                    return {
                        start: 0,
                        end: i + r
                    };
                var o = 0
                  , a = -1
                  , l = i + r
                  , d = !1;
                if (this.autorowheight)
                    return {
                        start: 0,
                        end: i + r
                    };
                if (!s)
                    for (var h = 0; h < i + r; h++) {
                        if (d || this.columns.records[h].pinned && n && (d = !0),
                        this.columns.records[h].hidden || this.columns.records[h].adaptivehidden || (o += this.columns.records[h].width),
                        o >= e && -1 == a && (a = h),
                        o > t + e) {
                            l = h;
                            break
                        }
                    }
                return ++l > i + r && (l = i + r),
                (-1 == a || d) && (a = 0),
                {
                    start: a,
                    end: l
                }
            },
            _getvirtualcolumnsindexes: function(e, t, i, r, s) {
                if (this.rtl || this.editcell || this.exporting)
                    return {
                        start: 0,
                        end: i + r
                    };
                var n = 0
                  , o = -1
                  , a = i + r;
                if (this.autorowheight)
                    return {
                        start: 0,
                        end: i + r
                    };
                if (!s)
                    for (var l = 0; l < i + r; l++) {
                        if (this.columns.records[l].hidden || this.columns.records[l].adaptivehidden || (n += this.columns.records[l].width),
                        n >= e && -1 == o && (o = l),
                        n > t + e) {
                            a = l;
                            break
                        }
                    }
                return ++a > i + r && (a = i + r),
                -1 == o && (o = 0),
                {
                    start: o,
                    end: a
                }
            },
            _getfirstvisualrow: function() {
                var e = this.vScrollInstance.value
                  , t = parseInt(e);
                if (0 == this._pagescache.length && (this.dataview.updateview(),
                this._loadrows()),
                "visible" != this.vScrollBar[0].style.visibility && (t = 0),
                !this.pageable) {
                    var i = this._findvisiblerow(t, this._pageviews);
                    if (-1 == i)
                        return null;
                    i != this.dataview.pagenum ? (this.dataview.pagenum = i,
                    this.dataview.updateview(),
                    this._loadrows()) : this._pagescache[this.dataview.pagenum] || this._loadrows()
                }
                var r = this._findvisiblerow(t, this._pagescache[this.dataview.pagenum])
                  , s = this._pagescache[this.dataview.pagenum];
                if (s && s[0])
                    return s[r]
            },
            _rendervisualrows: function() {
                if (this.virtualsizeinfo) {
                    var t = this.vScrollInstance
                      , i = this.hScrollInstance
                      , r = t.value
                      , s = i.value
                      , n = parseInt(r)
                      , o = parseInt(s)
                      , a = this._gettableheight()
                      , l = null != this._hostwidth ? this._hostwidth : this.host.width();
                    "visible" == this.hScrollBar[0].style.visibility && (a += 29),
                    "deferred" == this.scrollmode && 0 != this._newmax && n > this._newmax && null != this._newmax && (n = this._newmax);
                    var d = t.isScrolling() || i.isScrolling() || this._keydown
                      , h = this.groupable && this.groups.length > 0;
                    if (this.visiblerows = new Array,
                    this.hittestinfo = new Array,
                    this.editcell && null == this.editrow && this._hidecelleditor(!1),
                    null != this.editrow && this._hideeditors(),
                    this.virtualmode && !this.pageable && (this._pagescache = new Array),
                    0 == this._pagescache.length && (this.dataview.updateview(),
                    this._loadrows()),
                    "hidden" == this.vScrollBar[0].style.visibility && (n = 0),
                    !this.pageable) {
                        var c = this._findvisiblerow(n, this._pageviews);
                        if (-1 == c)
                            return this._clearvisualrows(),
                            this._renderemptyrow(),
                            void this._updaterowdetailsvisibility();
                        c != this.dataview.pagenum ? (this.dataview.pagenum = c,
                        this.dataview.updateview(),
                        this._loadrows()) : this._pagescache[this.dataview.pagenum] || this._loadrows()
                    }
                    var u = this.groupable && this.groups.length > 0 ? this.groups.length : 0;
                    if (this.columns.records) {
                        var p = this.columns.records.length - u
                          , f = this._findvisiblerow(n, this._pagescache[this.dataview.pagenum])
                          , m = this._pagescache[this.dataview.pagenum]
                          , g = f;
                        g < 0 && (g = 0);
                        var v = 0
                          , w = 0
                          , x = 0
                          , b = 0
                          , y = this.virtualsizeinfo.visiblerecords
                          , _ = this.groupable ? this.groups.length : 0
                          , q = this.toTP("jqx-grid-cell") + " " + this.toTP("jqx-item");
                        this.rtl && (q += " " + this.toTP("jqx-grid-cell-rtl")),
                        (this.autoheight || this.autorowheight) && this.pageable && (!this.groupable || this.groupable && 0 === this.groups.length) && (y = this.dataview.pagesize),
                        h && (q = " " + this.toTP("jqx-grid-group-cell")),
                        this.isTouchDevice() && (q += " " + this.toTP("jqx-touch")),
                        this.autorowheight && (q += " jqx-grid-cell-wrap");
                        var j = this.rowsheight
                          , S = this._rendercell
                          , C = this._getvisualcolumnsindexes(o, l, u, p, h, !0)
                          , T = C.start
                          , I = C.end
                          , k = this._getvirtualcolumnsindexes(o, l, u, p, h)
                          , D = k.start
                          , P = k.end;
                        e.jqx.browser.msie && e.jqx.browser.version;
                        if ((this.autoheight || this.pageable) && this.autorowheight && this._pageviews[0] && (this._oldpageviewheight = this._pageviews[0].height),
                        this.autorowheight && (g = 0),
                        g >= 0) {
                            this._updaterowdetailsvisibility(),
                            this._startboundindex = null != m ? m[g].bounddata.boundindex : 0,
                            this._startvisibleindex = null != m ? m[g].bounddata.visibleindex : 0;
                            var B = this.table[0].rows;
                            if (this.columns.records.length > 10 && this.enablecolumnsvirtualization)
                                for (var M = function(e) {
                                    return !(!e.parentNode || "#document-fragment" == e.parentNode.nodeName)
                                }, H = 0; H < B.length; H++) {
                                    for (var O = B[H], z = 0; z < D; z++) {
                                        var A = z;
                                        if (!this.columns.records[A].pinned && null != this.columns.records[A].datafield) {
                                            M(E = O.cells[A]) && E.parentNode.removeChild(E);
                                            var L = this.columns.records[A].element;
                                            this.columns.records[A]._rendered = !1,
                                            M(L) && this.columnsrow[0].removeChild(L),
                                            this.filterrow && M(this.filterrow[0].cells[A]) && this.columns.records[A].filterable && this.filterrow[0].cells[A].parentNode.removeChild(this.filterrow[0].cells[A])
                                        }
                                    }
                                    for (z = P; z < this.columns.records.length; z++) {
                                        A = z;
                                        if (!this.columns.records[A].pinned && null != this.columns.records[A].datafield) {
                                            M(E = O.cells[A]) && E.parentNode.removeChild(E);
                                            L = this.columns.records[A].element;
                                            this.columns.records[A]._rendered = !1,
                                            M(L) && this.columnsrow[0].removeChild(L),
                                            this.filterrow && M(this.filterrow[0].cells[A]) && this.columns.records[A].filterable && this.filterrow[0].cells[A].parentNode.removeChild(this.filterrow[0].cells[A])
                                        }
                                    }
                                    for (z = D; z < P; z++) {
                                        var E;
                                        A = z;
                                        M(E = O.cells[A]) || O.appendChild(E);
                                        L = this.columns.records[A].element;
                                        this.columns.records[A]._rendered = !0,
                                        L.selectable && (E.removeAttribute("selected"),
                                        L.selected && E.setAttribute("selected", "")),
                                        M(L) || this.columnsrow[0].appendChild(L),
                                        this.filterrow && !M(this.filterrow[0].cells[A]) && this.columns.records[A].filterable && this.filterrow[0].firstChild.appendChild(this.filterrow[0].cells[A])
                                    }
                                }
                            for (var N = 0; N < y && w < y; N++) {
                                var F = null != m ? m[g + N] : null;
                                if (this.virtualmode && N >= this.source.totalrecords && (F = null),
                                null == F) {
                                    if (g = -N,
                                    this._pagescache[this.dataview.pagenum + 1])
                                        m = this._pagescache[this.dataview.pagenum + 1],
                                        this.dataview.pagenum++;
                                    else {
                                        var V = this._pageviews.length;
                                        do {
                                            if (!(this.dataview.pagenum < this._pageviews.length - 1)) {
                                                m = void 0;
                                                break
                                            }
                                            this.dataview.pagenum++,
                                            m = void 0,
                                            this._pageviews[this.dataview.pagenum].height > 0 && (this.dataview.updateview(),
                                            this._loadrows(),
                                            m = this._pagescache[this.dataview.pagenum])
                                        } while (null == m && this.dataview.pagenum < V)
                                    }
                                    null != m && (F = m[g + N])
                                }
                                if (null != F) {
                                    if (F.hidden)
                                        continue;
                                    if (this._endboundindex = this._startboundindex + N,
                                    this._endvisibleindex = this._startvisibleindex + N,
                                    0 == N) {
                                        var R = Math.abs(n - F.top);
                                        this.table[0].style.top = -R + "px",
                                        b = -R
                                    }
                                    if (!(O = this.table[0].rows[w]))
                                        continue;
                                    parseInt(O.style.height) != F.height && (O.style.height = parseInt(F.height) + "px"),
                                    x += F.height;
                                    var W = this.rowdetails && F.rowdetails
                                      , G = !F.rowdetailshidden;
                                    W && G && (O.style.height = parseInt(F.height - F.rowdetailsheight) + "px",
                                    y++);
                                    var X = this._isrowselected(!0, F);
                                    for (z = T; z < I; z++) {
                                        A = z;
                                        this._rendervisualcell(S, q, X, W, G, h, _, O, F, A, w, d)
                                    }
                                    if (null != F.group && this._rendergroup && this._rendergroup(_, O, F, u, p, w, l),
                                    this.autorowheight && (this.autoheight || this.pageable)) {
                                        for (j = this.rowsheight,
                                        z = T; z < I; z++)
                                            this.editable && this.editcell && this.editcell.column == this.columns.records[z].datafield && this.editcell.row == this.getboundindex(F) && this.editcell.editor ? j = Math.max(j, this.editcell.editor.height()) : O.cells[z].firstChild && (j = Math.max(j, 8 + parseInt(O.cells[z].firstChild.offsetHeight)));
                                        O.style.height = parseInt(j) + "px",
                                        this.heights[this._startboundindex + N] = j,
                                        W && G && (j += F.rowdetailsheight),
                                        F.height = j
                                    }
                                    if (this.visiblerows[this.visiblerows.length] = F,
                                    this.hittestinfo[this.hittestinfo.length] = {
                                        row: F,
                                        visualrow: O,
                                        details: !1
                                    },
                                    W && G) {
                                        w++;
                                        O = this.table[0].rows[w];
                                        this._renderrowdetails(q, O, F, u, p, w),
                                        this.visiblerows[this.visiblerows.length] = F,
                                        this.hittestinfo[this.hittestinfo.length] = {
                                            row: F,
                                            visualrow: O,
                                            details: !0
                                        }
                                    }
                                    if (!this.autorowheight && x + b >= a)
                                        break
                                } else
                                    cansetheight = !0,
                                    this._clearvisualrow(o, h, w, u, p),
                                    x + v + b <= a && (v += j);
                                w++
                            }
                            if (this._horizontalvalue = o,
                            v > 0 && "visible" == this.vScrollBar[0].style.visibility) {
                                parseInt(this.table.css("top"));
                                var J = this._pageviews[this._pageviews.length - 1]
                                  , Q = t.max
                                  , U = J.top + J.height - a;
                                "visible" == this.hScrollBar.css("visibility") && (U += this.scrollbarsize + 20),
                                Q == U || this.autorowheight || U >= 0 && ("deferred" != this.scrollmode ? (t.max = U,
                                t.setPosition(t.max)) : this._newmax != U && (this._newmax = U,
                                this._rendervisualrows()))
                            }
                        }
                        if ((this.autoheight || this.pageable) && this.autorowheight) {
                            this._pagescache = new Array;
                            var $ = 0
                              , Y = 0;
                            for (H = 0; H < this.visiblerows.length; H++) {
                                var K = this.visiblerows[H];
                                K.top = $,
                                $ += K.height,
                                Y += K.height;
                                W = this.rowdetails && K.rowdetails,
                                G = !K.rowdetailshidden,
                                O = this.table[0].rows[H];
                                W && G && H++;
                                for (z = T; z < I; z++) {
                                    var Z = this.columns.records[z];
                                    if (!Z.hidden && !Z.adaptivehidden && !Z.cellsrenderer) {
                                        var ee = O.cells[z]
                                          , te = 0;
                                        if (ee.firstChild) {
                                            te = (K.height - parseInt(ee.firstChild.offsetHeight) - 8) / 2;
                                            if (W && G)
                                                te = (K.height - K.rowdetailsheight - e(ee.firstChild).height() - 8) / 2
                                        } else
                                            te = (K.height - parseInt(e(ee).height()) - 8) / 2;
                                        if (te >= 0 && (te = parseInt(te) + 4,
                                        ee.firstChild && -1 == ee.firstChild.className.indexOf("jqx-grid-groups-row") && "checkbox" != Z.columntype && "button" != Z.columntype)) {
                                            if (this.editable && this.editcell && this.editcell.column == Z.datafield && this.editcell.row == this.getboundindex(K))
                                                continue;
                                            ee.firstChild.style.marginTop = te + "px"
                                        }
                                    }
                                }
                            }
                            this._pageviews[0] && (this._pageviews[0].height = Y),
                            this._arrange()
                        }
                        if (this._renderemptyrow(),
                        this.toCompile && this.toCompile.length > 0) {
                            e.each(this.toCompile, function(t, i) {
                                if (this.compiled)
                                    return !0;
                                var r = this.cell;
                                if (!r)
                                    return !0;
                                e.jqx.angularCompile && e.jqx.angularCompile(r, "<div>" + this.value + "</div>"),
                                this.compiled = !0
                            })
                        }
                    }
                }
            },
            _hideemptyrow: function() {
                if (this.showemptyrow && this.table && this.table[0].rows) {
                    var t = this.table[0].rows[0];
                    if (t)
                        for (var i = !1, r = 0; r < t.cells.length; r++) {
                            var s = e(t.cells[r]);
                            "none" == s.css("display") || i || s.width() != this.host.width() && s.text() != this.gridlocalization.emptydatastring || (s[0].checkbox = null,
                            s[0].button = null,
                            i = !0,
                            s[0].innerHTML = "")
                        }
                }
            },
            _renderemptyrow: function() {
                if (!this._loading && 0 == this.dataview.records.length && this.showemptyrow) {
                    var t = !1
                      , i = this.toTP("jqx-grid-cell");
                    if (this.table && this.table.length > 0 && this.table[0].rows && this.table[0].rows.length > 0) {
                        var r = this.table[0].rows[0];
                        this.table[0].style.top = "0px";
                        for (var s = 0; s < r.cells.length; s++) {
                            var n = e(r.cells[s]);
                            if ("none" != n.css("display") && !t) {
                                n[0].checkbox = null,
                                n[0].button = null,
                                n[0].className = i,
                                t = !0,
                                n[0].innerHTML = "";
                                var o = e("<span style='white-space: nowrap; float: left; margin-left: 50%; position: relative;'></span>");
                                o.text(this.gridlocalization.emptydatastring),
                                n.append(o);
                                var a = 0;
                                this.oldhscroll || (a = parseInt(this.table[0].style.marginLeft),
                                this.rtl && (n.css("z-index", 999),
                                n.css("overflow", "visible"))),
                                o.css("left", -a - o.width() / 2),
                                o.css("top", this._gettableheight() / 2 - o.height() / 2),
                                e.jqx.browser.msie && e.jqx.browser.version < 8 && (o.css("margin-left", "0px"),
                                o.css("left", this.host.width() / 2 - o.width() / 2));
                                var l = Math.abs(parseInt(this.table[0].style.top));
                                isNaN(l) && (l = 0),
                                e(r).height(this._gettableheight() + l),
                                n.css("margin-left", "0px"),
                                n.width(this.host.width()),
                                this.table.width() < this.host.width() && this.table.width(this.host.width())
                            }
                            n.addClass(this.toThemeProperty("jqx-grid-empty-cell"))
                        }
                    }
                }
            },
            _clearvisualrows: function() {
                var e = this.virtualsizeinfo.visiblerecords
                  , t = this.hScrollInstance.value
                  , i = parseInt(t)
                  , r = this.groupable && this.groups.length > 0;
                if (this.columns.records)
                    for (var s = 0; s < e; s++)
                        this._clearvisualrow(i, r, s, 0, this.columns.records.length)
            },
            _iscellselected: function(e, t, i) {
                var r = !1
                  , s = 0;
                if (this.virtualmode && this.pageable && this.groupable && this.groups.length > 0 && (s = this.dataview.pagesize * this.dataview.pagenum),
                this.groups.length > 0 && this.pageable && this.groupable) {
                    var n = this.getrowboundindexbyid(t.bounddata.uid);
                    if (-1 != n) {
                        for (var o in this.selectedcells)
                            o == n + "_" + i && (r = !0);
                        return r
                    }
                    return !1
                }
                if (e && null != t.bounddata)
                    if ("singlerow" != this.selectionmode) {
                        if (this.dataview.filters.length > 0)
                            if (this.virtualmode || null == t.bounddata.dataindex)
                                for (var o in this.selectedcells)
                                    o == s + t.bounddata.boundindex + "_" + i && (r = !0);
                            else
                                for (var o in this.selectedcells)
                                    o == s + t.bounddata.dataindex + "_" + i && (r = !0);
                        else
                            for (var o in this.selectedcells)
                                if (o == s + t.bounddata.boundindex + "_" + i) {
                                    r = !0;
                                    break
                                }
                    } else if (this.dataview.filters.length > 0) {
                        if (this.virtualmode || null == t.bounddata.dataindex) {
                            for (var o in this.selectedcells)
                                if (o == s + t.bounddata.boundindex + "_" + i) {
                                    r = !0;
                                    break
                                }
                        } else
                            for (var o in this.selectedcells)
                                if (o == s + t.bounddata.dataindex + "_" + i) {
                                    r = !0;
                                    break
                                }
                    } else
                        for (var o in this.selectedcells)
                            if (o == s + t.bounddata.boundindex == this.selectedrowindex) {
                                r = !0;
                                break
                            }
                return r
            },
            _isrowselected: function(e, t) {
                var i = !1
                  , r = 0;
                if (this.virtualmode && this.pageable && this.groupable && this.groups.length > 0 && (r = this.dataview.pagesize * this.dataview.pagenum),
                this.groupable && this.groups.length > 0 && this.pageable) {
                    var s = this.getrowboundindexbyid(t.bounddata.uid);
                    return null != s && -1 != s && (-1 != this.selectedrowindexes.indexOf(s) && (i = !0),
                    i || (i = s == this.selectedrowindex && -1 != this.selectedrowindex),
                    i)
                }
                return e && null != t.bounddata && ("singlerow" != this.selectionmode ? this.dataview.filters.length > 0 ? this.virtualmode || null == t.bounddata.dataindex ? -1 != this.selectedrowindexes.indexOf(r + t.bounddata.boundindex) && (i = !0) : -1 != this.selectedrowindexes.indexOf(r + t.bounddata.dataindex) && (i = !0) : -1 != this.selectedrowindexes.indexOf(r + t.bounddata.boundindex) && (i = !0) : this.dataview.filters.length > 0 ? this.virtualmode || null == t.bounddata.dataindex ? -1 != this.selectedrowindexes.indexOf(r + t.bounddata.boundindex) && (i = !0) : -1 != this.selectedrowindexes.indexOf(r + t.bounddata.dataindex) && (i = !0) : r + t.bounddata.boundindex == this.selectedrowindex && (i = !0)),
                i
            },
            _rendervisualcell: function(t, i, r, s, n, o, a, l, d, h, c, u) {
                var p = this.columns.records[h];
                if (p.hidden || p.adaptivehidden) {
                    (f = l.cells[h]).innerHTML = ""
                } else {
                    cellvalue = this._getcellvalue(p, d);
                    var f = l.cells[h]
                      , m = i;
                    if (-1 != this.selectionmode.indexOf("cell") && (r = this.dataview.filters.length > 0 ? !!this.selectedcells[d.bounddata.dataindex + "_" + p.datafield] : !!this.selectedcells[d.boundindex + "_" + p.datafield],
                    this.editcell && this.editcell.row === d.boundindex && this.editcell.column === p.datafield && "checkbox" !== p.columntype && (r = !1),
                    (this.virtualmode || this.groupable && this.groups.length > 0 && this.pageable) && (r = this._iscellselected(!0, d, p.datafield))),
                    "" != p.cellclassname && p.cellclassname)
                        if ("string" == typeof p.cellclassname)
                            m += " " + p.cellclassname;
                        else {
                            var g = p.cellclassname(this.getboundindex(d), p.datafield, cellvalue, d.bounddata);
                            g && (m += " " + g)
                        }
                    var v = this.showsortcolumnbackground && this.sortcolumn && p.displayfield == this.sortcolumn;
                    if ("many" === this.sortmode && this.showsortcolumnbackground)
                        for (var w = this.getsortcolumns(), x = 0; x < w.length; x++)
                            p.displayfield === w[x].dataField && (v = !0);
                    if (v && (m += " " + this.toTP("jqx-grid-cell-sort")),
                    p.filter && this.showfiltercolumnbackground && (m += " " + this.toTP("jqx-grid-cell-filter")),
                    d.bounddata.totalsrow && (m += " " + this.toTP("jqx-grid-cell-pinned")),
                    (p.pinned && this.showpinnedcolumnbackground || p.grouped) && (o && d.bounddata.totalsrow || (m += " " + this.toTP("jqx-grid-cell-pinned"))),
                    this.altrows && null == d.group) {
                        var b = d.visibleindex;
                        b >= this.altstart && (this.altstart + b) % (1 + this.altstep) == 0 && (m += v ? " " + this.toTP("jqx-grid-cell-sort-alt") : " " + this.toTP("jqx-grid-cell-alt"),
                        p.filter && this.showfiltercolumnbackground && (m += " " + this.toTP("jqx-grid-cell-filter-alt")),
                        p.pinned && this.showpinnedcolumnbackground && (m += " " + this.toTP("jqx-grid-cell-pinned-alt")))
                    }
                    if (h <= a) {
                        if (o || this.rowdetails || this.pageable && this.virtualmode) {
                            var y = e(f)
                              , _ = this.columns.records[h].width;
                            f.style.width != parseInt(_) + "px" && y.width(_)
                        }
                    } else if ((o || this.rowdetails) && this._hiddencolumns) {
                        y = e(f),
                        _ = this.columns.records[h].width;
                        parseInt(f.style.width) != _ && y.width(_)
                    }
                    var q = !0;
                    if (this.rowdetails && s && (n && !o ? m += " " + this.toTP("jqx-grid-details-cell") : o && (m += " " + this.toTP("jqx-grid-group-details-cell")),
                    this.showrowdetailscolumn))
                        if (this.rtl) {
                            if (null == d.group && h == l.cells.length - a - 1) {
                                j = this.toThemeProperty("jqx-icon-arrow-down");
                                if (n)
                                    m += " " + this.toTP("jqx-grid-group-expand-rtl"),
                                    m += " " + j;
                                else
                                    m += " " + this.toTP("jqx-grid-group-collapse-rtl"),
                                    m += " " + (j = this.toThemeProperty("jqx-icon-arrow-left"));
                                return q = !1,
                                f.title = "",
                                f.innerHTML = "",
                                void (f.className != m && (f.className = m))
                            }
                        } else if (null == d.group && h == a && !d.bounddata.totalsrow) {
                            var j = this.toThemeProperty("jqx-icon-arrow-down");
                            if (n)
                                m += " " + this.toTP("jqx-grid-group-expand"),
                                m += " " + j;
                            else
                                m += " " + this.toTP("jqx-grid-group-collapse"),
                                m += " " + (j = this.toThemeProperty("jqx-icon-arrow-right"));
                            return q = !1,
                            f.title = "",
                            f.innerHTML = "",
                            void (f.className != m && (f.className = m))
                        }
                    if (r && q && h >= a && (m += " " + this.toTP("jqx-grid-cell-selected"),
                    m += " " + this.toTP("jqx-fill-state-pressed")),
                    f.className != m && (f.className = m),
                    p._applyCellStyle(f),
                    null != d.group)
                        return cellvalue = "",
                        f.title = "",
                        void (f.innerHTML = "");
                    t(this, p, d, cellvalue, f, u)
                }
            },
            _rendercell: function(t, i, r, s, n, o) {
                var a = s + "_" + i.visibleindex;
                if ("number" == i.columntype || null != i.cellsrenderer)
                    a = r.uniqueid + "_" + i.visibleindex;
                if ("number" == i.columntype && (s = r.visibleindex),
                "adaptive" === i.columntype && (s = "..."),
                i._applyCellStyle(n),
                t.showrowlines ? n.style.borderBottomColor = "" : n.style.borderBottomColor = "transparent",
                t.showcolumnheaderlines ? (i.element.style.borderRightColor = "",
                i.element.style.boxShadow = "") : (i.element.style.borderRightColor = "transparent",
                i.element.style.boxShadow = "none"),
                t.showcolumnlines ? n.style.borderRightColor = "" : n.style.borderRightColor = "transparent",
                t.editcell && null == t.editrow)
                    if ("selectedrow" == t.editmode && i.editable && t.editable) {
                        if (t.editcell.row == t.getboundindex(r) && t._showcelleditor)
                            return t.hScrollInstance.isScrolling() || t.vScrollInstance.isScrolling() ? t._showcelleditor(t.editcell.row, i, n, !1, !1) : t._showcelleditor(t.editcell.row, i, n, t.editcell.init),
                            void (n.className += " " + t.toTP("jqx-grid-cell-edit"))
                    } else if (t.editcell.row == t.getboundindex(r) && t.editcell.column == i.datafield && (t.editcell.element = n,
                    t.editcell.editing && t._showcelleditor))
                        return t.hScrollInstance.isScrolling() || t.vScrollInstance.isScrolling() ? t._showcelleditor(t.editcell.row, i, t.editcell.element, t.editcell.init, !1) : t._showcelleditor(t.editcell.row, i, t.editcell.element, t.editcell.init),
                        void (n.className += " " + t.toTP("jqx-grid-cell-edit"));
                var l = t._defaultcellsrenderer(s, i)
                  , d = t._cellscache[a];
                if (!d) {
                    if ("checkbox" == i.columntype)
                        return t._rendercheckboxcell(t, n, i, r, s),
                        t._cellscache[a] = {
                            element: "",
                            title: s
                        },
                        void (t.enabletooltips && i.enabletooltips && (n.title = "" + s));
                    if ("button" == i.columntype)
                        return null != i.cellsrenderer && (s = i.cellsrenderer(t.getboundindex(r), i.datafield, s, l, i.getcolumnproperties(), r.bounddata)),
                        t._renderbuttoncell(t, n, i, r, s),
                        t._cellscache[a] = {
                            element: "",
                            title: s
                        },
                        void (t.enabletooltips && i.enabletooltips && (n.title = "" + s));
                    if ("number" == i.columntype && (s = r.visibleindex),
                    i.createwidget)
                        return null != i.cellsrenderer && (s = i.cellsrenderer(t.getboundindex(r), i.datafield, s, l, i.getcolumnproperties(), r.bounddata)),
                        t._renderwidgetcell(t, n, i, r, s),
                        t._cellscache[a] = {
                            element: "",
                            title: s
                        },
                        void (t.enabletooltips && i.enabletooltips && (n.title = s));
                    f = null;
                    if (null != i.cellsrenderer) {
                        if ((f = i.cellsrenderer(t.getboundindex(r), i.datafield, s, l, i.getcolumnproperties(), r.bounddata)) && (f.indexOf("<jqx-") >= 0 || f.indexOf(" ng-") >= 0))
                            return void (t.toCompile && t.toCompile.push({
                                cell: n,
                                value: f,
                                row: t.getboundindex(r)
                            }))
                    } else
                        f = l;
                    null == f && (f = l);
                    var h = s;
                    if (t.enabletooltips && i.enabletooltips && ("" != i.cellsformat && e.jqx.dataFormat && (e.jqx.dataFormat.isDate(s) ? h = e.jqx.dataFormat.formatdate(h, i.cellsformat, t.gridlocalization) : e.jqx.dataFormat.isNumber(s) && (h = e.jqx.dataFormat.formatnumber(h, i.cellsformat, t.gridlocalization))),
                    n.title = h),
                    t.WinJS)
                        e(n).html(f);
                    else {
                        var c = n.innerHTML;
                        if (c.indexOf("editor") >= 0 || null != i.cellsrenderer || t.groupable || t.virtualmode)
                            n.innerHTML = f;
                        else if (c.length > 0) {
                            m = f.indexOf(">"),
                            g = f.indexOf("</"),
                            v = f.substring(m + 1, g),
                            w = n.childNodes[0];
                            if (v.indexOf(">") >= 0)
                                n.innerHTML = f;
                            else if (w.childNodes[0])
                                v != w.childNodes[0].nodeValue && (v.indexOf("&") >= 0 || c.indexOf("span") >= 0 ? n.innerHTML = f : w.childNodes[0].nodeValue = v);
                            else {
                                x = document.createTextNode(v);
                                w.appendChild(x)
                            }
                        } else
                            c != f && (n.innerHTML = f)
                    }
                    return t._cellscache[a] = {
                        element: n.innerHTML,
                        title: h
                    },
                    !0
                }
                if ("checkbox" == i.columntype) {
                    if (t.host.jqxCheckBox) {
                        "" === s && (s = null);
                        var u = 0 == n.innerHTML.toString().length;
                        if (!n.checkbox || t.groupable || u ? t._rendercheckboxcell(t, n, i, r, s) : (n.checkboxrow = t.getboundindex(r),
                        "" == s && (s = !1),
                        "1" == s && (s = !0),
                        "0" == s && (s = !1),
                        1 == s && (s = !0),
                        0 == s && (s = !1),
                        "true" == s && (s = !0),
                        "false" == s && (s = !1),
                        null != s || i.threestatecheckbox || (s = !1),
                        i.checkboxcolumn && (s = !1,
                        t.dataview.filters.length > 0 && !t.virtualmode && null != r.bounddata.dataindex ? -1 != t.selectedrowindexes.indexOf(r.bounddata.dataindex) && (s = !0) : -1 != t.selectedrowindexes.indexOf(r.bounddata.boundindex) && (s = !0)),
                        t.disabled || (n.checkboxinstance ? n.checkboxinstance._setState(s) : n.checkbox.jqxCheckBox("_setState", s))),
                        null != i.cellsrenderer) {
                            var p = i.cellsrenderer(t.getboundindex(r), i.datafield, s, l, i.getcolumnproperties(), r.bounddata);
                            null != p && (n.innerHTML = p)
                        }
                        return
                    }
                } else if ("button" == i.columntype && t.host.jqxButton)
                    return "" == s && (s = !1),
                    null != i.cellsrenderer && (s = i.cellsrenderer(t.getboundindex(r), i.datafield, s, l, i.getcolumnproperties(), r.bounddata)),
                    "" == n.innerHTML && (n.buttonrow = t.getboundindex(r),
                    n.button = null,
                    t._renderbuttoncell(t, n, i, r, s)),
                    void (n.button && !t.groupable ? (n.buttonrow = t.getboundindex(r),
                    n.button.val(s)) : t._renderbuttoncell(t, n, i, r, s));
                if (i.createwidget)
                    if ("" == n.innerHTML && (n.widgetrow = t.getboundindex(r),
                    n.widget = null,
                    i.widget = null,
                    t._renderwidgetcell(t, n, i, r, s)),
                    n.widget && !t.groupable) {
                        if (n.widgetrow = t.getboundindex(r),
                        !i.initwidget)
                            throw new Error("jqxGrid: 'initwidget' column function is not implemented. Please, implement 'initwidget'");
                        i.initwidget(t.getboundindex(r), i.datafield, s, n.firstChild)
                    } else
                        t._renderwidgetcell(t, n, i, r, s);
                else {
                    var f = d.element;
                    if (null != i.cellsrenderer || n.childNodes && 0 == n.childNodes.length || t.groupable || t.rowdetails)
                        n.innerHTML != f && (n.innerHTML = f);
                    else if (n.innerHTML.indexOf("editor") >= 0)
                        n.innerHTML = f;
                    else if (o) {
                        var m = f.indexOf(">")
                          , g = f.indexOf("</")
                          , v = f.substring(m + 1, g)
                          , w = n.childNodes[0];
                        if (v.indexOf(">") >= 0)
                            n.innerHTML = f;
                        else if (w.childNodes[0])
                            v != w.childNodes[0].nodeValue && (v.indexOf("&") >= 0 ? n.innerHTML = f : w.childNodes[0].nodeValue = v);
                        else {
                            var x = document.createTextNode(v);
                            w.appendChild(x)
                        }
                    } else
                        n.innerHTML != f && (n.innerHTML = f);
                    t.enabletooltips && i.enabletooltips && (n.title = d.title)
                }
            },
            _isIE10: function() {
                if (null == this._browser) {
                    var t = e.jqx.utilities.getBrowser();
                    if ("msie" == t.browser && parseInt(t.version) > 9)
                        this._browser = !0;
                    else if (this._browser = !1,
                    "msie" == t.browser) {
                        var i = "Browser CodeName: " + navigator.appCodeName;
                        i += "Browser Name: " + navigator.appName,
                        i += "Browser Version: " + navigator.appVersion,
                        i += "Platform: " + navigator.platform,
                        -1 != (i += "User-agent header: " + navigator.userAgent).indexOf("Zune 4.7") && (this._browser = !0)
                    }
                }
                return this._browser
            },
            _renderinlinecell: function(t, i, r, s, n) {
                e(i);
                i.innerHTML = '<div style="position: absolute;"></div>'
            },
            _rendercheckboxcell: function(t, i, r, s, n) {
                if (t.host.jqxCheckBox) {
                    var o = e(i);
                    if ("" === n && (n = !!r.threestatecheckbox && null),
                    null !== n || r.threestatecheckbox || (n = !1),
                    "1" == n && (n = !0),
                    "0" == n && (n = !1),
                    1 == n && (n = !0),
                    0 == n && (n = !1),
                    "true" == n && (n = !0),
                    "false" == n && (n = !1),
                    r.checkboxcolumn) {
                        n = !1;
                        var a = this.getboundindex(s);
                        -1 != this.selectedrowindexes.indexOf(a) && (n = !0)
                    }
                    if (0 == o.find(".jqx-checkbox").length)
                        i.innerHTML = '<div style="position: absolute; top: 50%; left: 50%; margin-top: -9px; margin-left: -12px;"></div>',
                        e(i.firstChild).jqxCheckBox({
                            disabled: t.disabled,
                            _canFocus: !1,
                            hasInput: !1,
                            hasThreeStates: r.threestatecheckbox,
                            enableContainerClick: !1,
                            animationShowDelay: 0,
                            animationHideDelay: 0,
                            locked: !0,
                            theme: t.theme,
                            checked: n
                        }),
                        this.enabletooltips && r.enabletooltips && (i.title = "" + n),
                        this.editable && r.editable && e(i.firstChild).jqxCheckBox({
                            locked: !1
                        }),
                        r.checkboxcolumn && e(i.firstChild).jqxCheckBox({
                            locked: !1
                        }),
                        i.checkbox = e(i.firstChild),
                        i.checkboxinstance = i.checkbox.data().jqxCheckBox.instance,
                        i.checkboxrow = this.getboundindex(s),
                        e.data(i.firstChild, "jqxCheckBox").instance.updated = function(s, n, o) {
                            if (t.disabled) {
                                n = o;
                                for (var a = t.table[0].rows.length, l = t._getcolumnindex(r.datafield), d = 0; d < a; d++) {
                                    (c = t.table[0].rows[d].cells[l].firstChild) && e(c).jqxCheckBox({
                                        disabled: t.disabled
                                    })
                                }
                            }
                            if (r.editable && !t.disabled) {
                                a = t.table[0].rows.length,
                                l = t._getcolumnindex(r.datafield);
                                if (null == t.editrow) {
                                    if (r.cellbeginedit)
                                        if (0 == r.cellbeginedit(i.checkboxrow, r.datafield, r.columntype, !n))
                                            return void t.setcellvalue(i.checkboxrow, r.datafield, !n, !0);
                                    if (r.cellvaluechanging) {
                                        var h = r.cellvaluechanging(i.checkboxrow, r.datafield, r.columntype, o, n);
                                        null != h && (n = h)
                                    }
                                    if ("selectedrow" !== t.editmode)
                                        for (d = 0; d < a; d++) {
                                            var c;
                                            (c = t.table[0].rows[d].cells[l].firstChild) && e(c).jqxCheckBox("destroy")
                                        }
                                    if (t.editcell && 0 == t.editcell.validated)
                                        t.setcellvalue(i.checkboxrow, r.datafield, !n, !0);
                                    else if ("selectedrow" !== t.editmode || null == t.editcell) {
                                        var u = t.getrowdata(i.checkboxrow);
                                        t._raiseEvent(17, {
                                            rowindex: i.checkboxrow,
                                            row: u,
                                            datafield: r.datafield,
                                            value: o,
                                            columntype: r.columntype
                                        }),
                                        t.setcellvalue(i.checkboxrow, r.datafield, n, !0),
                                        t._raiseEvent(18, {
                                            rowindex: i.checkboxrow,
                                            row: u,
                                            datafield: r.datafield,
                                            oldvalue: o,
                                            value: n,
                                            columntype: r.columntype
                                        })
                                    } else
                                        t.setcellvalue(i.checkboxrow, r.datafield, n, !1, !1);
                                    r.cellendedit && r.cellendedit(i.checkboxrow, r.datafield, r.columntype, n)
                                }
                            } else
                                r.checkboxcolumn && (t.editcell && t.endcelledit(t.editcell.row, t.editcell.column, !1, !0),
                                t.disabled || (n ? t.selectrow(i.checkboxrow) : t.unselectrow(i.checkboxrow),
                                t.autosavestate && t.savestate && t.savestate()))
                        }
                        ;
                    else
                        i.checkboxrow = this.getboundindex(s),
                        e(i.firstChild).jqxCheckBox("_setState", n, !(this.editable && r.editable || r.checkboxcolumn))
                }
            },
            _renderwidgetcell: function(t, i, r, s, n) {
                if (0 == e(i).find(".jqx-grid-widget").length) {
                    i.innerHTML = '<div class="jqx-grid-widget" style="opacity: 0.99; position: absolute; width: 100%; height:100%; top: 0%; left: 0%; padding: 0px;"></div>',
                    r.createwidget(s, r.datafield, n, i.firstChild),
                    e(i.firstChild).attr("hideFocus", "true"),
                    e(i.firstChild).children().addClass("jqx-grid-widget"),
                    i.widget = e(i.firstChild),
                    i.widgetrow = t.getboundindex(s),
                    r.widget = e(i.firstChild)
                } else
                    r.initwidget(t.getboundindex(s), r.datafield, n, i.firstChild),
                    i.widgetrow = t.getboundindex(s),
                    e(i.firstChild).val(n)
            },
            _renderbuttoncell: function(t, i, r, s, n) {
                if (t.host.jqxButton)
                    if ("" == n && (n = !1),
                    0 == e(i).find(".jqx-button").length)
                        if (i.innerHTML = '<input type="button" style="opacity: 0.99; position: absolute; top: 0%; left: 0%; padding: 0px; margin-top: 2px; margin-left: 2px;"/>',
                        e(i.firstChild).val(n),
                        e(i.firstChild).attr("hideFocus", "true"),
                        e(i.firstChild).jqxButton({
                            disabled: t.disabled,
                            theme: t.theme,
                            height: t.rowsheight - 4,
                            width: r.width - 4
                        }),
                        i.button = e(i.firstChild),
                        i.buttonrow = t.getboundindex(s),
                        this.isTouchDevice()) {
                            var o = e.jqx.mobile.getTouchEventName("touchend");
                            t.addHandler(e(i.firstChild), o, function(e) {
                                r.buttonclick && r.buttonclick(i.buttonrow, e)
                            })
                        } else
                            t.addHandler(e(i.firstChild), "click", function(e) {
                                r.buttonclick && r.buttonclick(i.buttonrow, e)
                            });
                    else
                        i.buttonrow = t.getboundindex(s),
                        e(i.firstChild).val(n)
            },
            _clearvisualrow: function(t, i, r, s, n) {
                var o = this.toTP("jqx-grid-cell");
                i && (o = " " + this.toTP("jqx-grid-group-cell")),
                o += " " + this.toTP("jqx-grid-cleared-cell");
                for (var a = this.table[0].rows, l = 0; l < s + n; l++)
                    if (a[r]) {
                        var d = a[r].cells[l];
                        d.className != o && (d.className = o);
                        var h = this.columns.records[l];
                        if (this._horizontalvalue != t && !h.pinned && 1 == this.oldhscroll) {
                            d.style.marginLeft = -t + "px"
                        }
                        var c = h.width;
                        h.adaptivewidth && (c = h.adaptivewidth),
                        c < h.minwidth && (c = h.minwidth),
                        c > h.maxwidth && (c = h.maxwidth),
                        parseInt(d.style.width) != c && (e(d)[0].style.width = "auto" != c ? c + "px" : c),
                        "" != d.title && (d.title = ""),
                        "" != d.innerHTML && (d.innerHTML = "")
                    }
                a[r] && parseInt(a[r].style.height) != this.rowsheight && (a[r].style.height = parseInt(this.rowsheight) + "px")
            },
            _findgroupstate: function(e) {
                var t = this._findgroup(e);
                return null != t && t.expanded
            },
            _findgroup: function(e) {
                return this.expandedgroups[e] ? this.expandedgroups[e] : null
            },
            _clearcaches: function() {
                this._columnsbydatafield = new Array,
                this._pagescache = new Array,
                this._pageviews = new Array,
                this._cellscache = new Array,
                this.heights = new Array,
                this.hiddens = new Array,
                this.hiddenboundrows = new Array,
                this.heightboundrows = new Array,
                this.detailboundrows = new Array,
                this.details = new Array,
                this.expandedgroups = new Array,
                this._rowdetailscache = new Array,
                this._rowdetailselementscache = new Array,
                e.jqx.dataFormat && e.jqx.dataFormat.cleardatescache(),
                this.tableheight = null
            },
            _getColumnText: function(t) {
                if (null == this._columnsbydatafield && (this._columnsbydatafield = new Array),
                this._columnsbydatafield[t])
                    return this._columnsbydatafield[t];
                var i = t
                  , r = null;
                return e.each(this.columns.records, function() {
                    if (this.datafield == t || this.displayfield == t)
                        return i = this.text,
                        r = this,
                        !1
                }),
                this._columnsbydatafield[t] = {
                    label: i,
                    column: r
                },
                this._columnsbydatafield[t]
            },
            _getcolumnbydatafield: function(t) {
                if (null == this.__columnsbydatafield && (this.__columnsbydatafield = new Array),
                this.__columnsbydatafield[t])
                    return this.__columnsbydatafield[t];
                var i = null;
                return e.each(this.columns.records, function() {
                    if (this.datafield == t || this.displayfield == t)
                        return this.text,
                        i = this,
                        !1
                }),
                this.__columnsbydatafield[t] = i,
                this.__columnsbydatafield[t]
            },
            isscrollingvertically: function() {
                return this.vScrollBar.jqxScrollBar("isScrolling")
            },
            _renderrowdetails: function(t, i, r, s, n, o) {
                if (null != i) {
                    var a = e(i)
                      , l = this.rowdetails && this.showrowdetailscolumn ? (1 + this.groups.length) * this.groupindentwidth : this.groups.length * this.groupindentwidth;
                    if (this.groupable && this.groups.length > 0)
                        for (var d = 0; d <= n; d++) {
                            var h;
                            (h = e(i.cells[d]))[0].innerHTML = "",
                            h[0].className = "jqx-grid-details-cell"
                        }
                    if ("none" == (h = e(i.cells[0]))[0].style.display) {
                        for (var c = i.cells[0], u = 2; null != c && "none" == c.style.display && u < 10; )
                            c = i.cells[0 + u - 1],
                            u++;
                        h = e(c)
                    }
                    if (this.rtl)
                        for (var p = s; p < n; p++)
                            i.cells[p].innerHTML = "",
                            i.cells[p].className = "jqx-grid-details-cell";
                    h.css("width", "100%"),
                    a.height(r.rowdetailsheight),
                    h[0].className = t;
                    var f = this.getboundindex(r)
                      , m = f + "_";
                    if (this._rowdetailscache[m]) {
                        var g = this._rowdetailscache[m].html;
                        if (this.initrowdetails) {
                            if (this._rowdetailscache[m].element) {
                                var v = this._rowdetailscache[m].element
                                  , w = h.coord()
                                  , x = this.gridcontent.coord()
                                  , b = parseInt(w.top) - parseInt(x.top)
                                  , y = parseInt(w.left) - parseInt(x.left);
                                this.rtl && (y = 0),
                                e(v).css("top", b),
                                e(v).css("left", y),
                                e(v).css("display", "block"),
                                e(v).width(this.host.width() - l),
                                this.layoutrowdetails && this.layoutrowdetails(f, v, this.element, this.getrowdata(f))
                            }
                        } else
                            h[0].innerHTML = g
                    } else {
                        h[0].innerHTML = "",
                        this.enablerowdetailsindent || (l = 0);
                        var _ = '<div class="jqx-enableselect" role="rowgroup" style="border: none; overflow: hidden; width: 100%; height: 100%; margin-left: ' + l + 'px;">' + r.rowdetails + "</div>";
                        if (this.rtl)
                            _ = '<div class="jqx-enableselect" role="rowgroup" style="border: none; overflow: hidden; width: 100%; height: 100%; margin-left: 0px; margin-right: ' + l + 'px;">' + r.rowdetails + "</div>";
                        if (this._rowdetailscache[m] = {
                            id: i.id,
                            html: _
                        },
                        this.initrowdetails) {
                            v = e(_)[0];
                            e(this.gridcontent).prepend(e(v)),
                            e(v).css("position", "absolute"),
                            e(v).width(this.host.width() - l),
                            e(v).height(h.height());
                            w = h.coord();
                            e(v).css("z-index", 599),
                            this.isTouchDevice() && e(v).css("z-index", 999),
                            e(v).addClass(this.toThemeProperty("jqx-widget-content"));
                            w = h.coord(),
                            x = this.gridcontent.coord(),
                            b = parseInt(w.top) - parseInt(x.top),
                            y = parseInt(w.left) - parseInt(x.left);
                            e(v).css("top", b),
                            e(v).css("left", y),
                            this.content[0].scrollTop = 0,
                            this.content[0].scrollLeft = 0;
                            var q = e(e(v).children()[0]);
                            "" != q[0].id && (q[0].id = q[0].id + f),
                            this.initrowdetails(f, v, this.element, this.getrowdata(f)),
                            this._rowdetailscache[m].element = v,
                            this._rowdetailselementscache[f] = v
                        } else
                            h[0].innerHTML = _
                    }
                }
            },
            _defaultcellsrenderer: function(t, i) {
                "" != i.cellsformat && e.jqx.dataFormat && (e.jqx.dataFormat.isDate(t) ? t = e.jqx.dataFormat.formatdate(t, i.cellsformat, this.gridlocalization) : e.jqx.dataFormat.isNumber(t) && (t = e.jqx.dataFormat.formatnumber(t, i.cellsformat, this.gridlocalization)));
                var r = "8px";
                if (31 != this.rowsheight && ((r = this.rowsheight / 2 - this._cellheight / 2) < 0 && (r = 4),
                r += "px"),
                this.enableellipsis) {
                    if ("center" == i.cellsalign || "middle" == i.cellsalign)
                        return '<div class="jqx-grid-cell-middle-align" style="margin-top: ' + r + ';">' + t + "</div>";
                    if ("left" == i.cellsalign)
                        return '<div class="jqx-grid-cell-left-align" style="margin-top: ' + r + ';">' + t + "</div>";
                    if ("right" == i.cellsalign)
                        return '<div class="jqx-grid-cell-right-align" style="margin-top: ' + r + ';">' + t + "</div>"
                }
                return "center" == i.cellsalign || "middle" == i.cellsalign ? '<div style="text-align: center; margin-top: ' + r + ';">' + t + "</div>" : '<span style="margin-left: 4px; margin-right: 2px; margin-top: ' + r + "; float: " + i.cellsalign + ';">' + t + "</span>"
            },
            getcelltext: function(t, i) {
                if (null == t || null == i)
                    return null;
                var r = this.getcellvalue(t, i)
                  , s = this.getcolumn(i);
                return s && "" != s.cellsformat && e.jqx.dataFormat && (e.jqx.dataFormat.isDate(r) ? r = e.jqx.dataFormat.formatdate(r, s.cellsformat, this.gridlocalization) : e.jqx.dataFormat.isNumber(r) && (r = e.jqx.dataFormat.formatnumber(r, s.cellsformat, this.gridlocalization))),
                r
            },
            getcelltextbyid: function(t, i) {
                if (null == t || null == i)
                    return null;
                var r = this.getcellvaluebyid(t, i)
                  , s = this.getcolumn(i);
                return s && "" != s.cellsformat && e.jqx.dataFormat && (e.jqx.dataFormat.isDate(r) ? r = e.jqx.dataFormat.formatdate(r, s.cellsformat, this.gridlocalization) : e.jqx.dataFormat.isNumber(r) && (r = e.jqx.dataFormat.formatnumber(r, s.cellsformat, this.gridlocalization))),
                r
            },
            _getcellvalue: function(e, t) {
                var i = null;
                return i = t.bounddata[e.datafield],
                null != e.displayfield && (i = t.bounddata[e.displayfield]),
                null == i && (i = ""),
                i
            },
            getcell: function(e, t) {
                if (null == e || null == t)
                    return null;
                var i = parseInt(e)
                  , r = e
                  , s = "";
                return isNaN(i) || (r = this.getrowdata(i)),
                null != r && (s = r[t]),
                this._getcellresult(s, e, t)
            },
            getrenderedcell: function(e, t) {
                if (null == e || null == t)
                    return null;
                var i = parseInt(e)
                  , r = e
                  , s = "";
                return isNaN(i) || (r = this.getrenderedrowdata(i)),
                null != r && (s = r[t]),
                this._getcellresult(s, e, t)
            },
            _getcellresult: function(e, t, i) {
                var r = this.getcolumn(i);
                if (null == r || null == r)
                    return null;
                var s = r.getcolumnproperties()
                  , n = s.hidden
                  , o = s.width
                  , a = s.pinned
                  , l = s.cellsalign
                  , d = s.cellsformat
                  , h = this.getrowheight(t);
                return 0 == h ? null : {
                    value: e,
                    row: t,
                    column: i,
                    datafield: i,
                    width: o,
                    height: h,
                    hidden: n,
                    pinned: a,
                    align: l,
                    format: d
                }
            },
            setcellvaluebyid: function(e, t, i, r, s) {
                var n = this.getrowboundindexbyid(e);
                return this.setcellvalue(n, t, i, r, s)
            },
            getcellvaluebyid: function(e, t) {
                var i = this.getrowboundindexbyid(e);
                return this.getcellvalue(i, t)
            },
            setcellvalue: function(t, i, r, s, n) {
                if (null == t || null == i)
                    return !1;
                var o = parseInt(t)
                  , a = t;
                isNaN(o) || (a = this.getrowdata(o));
                var l = !1;
                this.filterable && this._initfilterpanel && this.dataview.filters.length && (l = !0),
                this.virtualmode && (this._pagescache = new Array),
                this.sortcache && (this.sortcache = {});
                var d = ""
                  , h = "";
                if (null == a || a[i] === r)
                    return this._updating || 0 == s || this._renderrows(this.virtualsizeinfo),
                    !1;
                if (null !== a[i] || "" !== r) {
                    var c = this._getcolumnbydatafield(i)
                      , u = "string";
                    if (y = this.source.datafields || (this.source._source ? this.source._source.datafields : null)) {
                        var p = "";
                        e.each(y, function() {
                            if (this.name == c.displayfield)
                                return this.type && (p = this.type),
                                !1
                        }),
                        p && (u = p),
                        h = a[c.displayfield]
                    }
                    if (d = a[i],
                    !c.nullable || null != r && "" !== r && c.nullable && void 0 === r.label) {
                        if (e.jqx.dataFormat.isNumber(d) || "number" == u || "float" == u || "int" == u || "decimal" == u && "date" != u)
                            this.gridlocalization && "," == this.gridlocalization.decimalseparator && r && r.indexOf && r.indexOf(",") >= 0 && (r = r.replace(",", ".")),
                            r = new Number(r),
                            r = parseFloat(r),
                            isNaN(r) && (r = 0);
                        else if ((e.jqx.dataFormat.isDate(d) || "date" == u) && "" != r) {
                            var f = r;
                            "Invalid Date" != (f = new Date(f)) && null != f ? r = f : "Invalid Date" == f && (r = f = new Date)
                        }
                        if (a[i] === r)
                            return void (this._updating || 0 == s || this._renderrows(this.virtualsizeinfo))
                    }
                    var m = this.source && this.source._source.localdata && "observableArray" === this.source._source.localdata.name;
                    if (a[i] = r,
                    m) {
                        var g = this.source._source.localdata;
                        g._updating || (g._updating = !0,
                        g[t][i] = r,
                        g._updating = !1)
                    }
                    var v = this.getrenderedrowdata(o, !0);
                    if (v) {
                        if (v[i] = r,
                        null != r && null != r.label && (a[(c = this._getcolumnbydatafield(i)).displayfield] = r.label,
                        v[c.displayfield] = r.label,
                        a[i] = r.value,
                        v[i] = r.value,
                        m && !g._updating && (g._updating = !0,
                        g[t][i] = r.value,
                        g[t][c.displayfield] = r.label,
                        g._updating = !1)),
                        l && null != a.dataindex && (a.dataindex,
                        this.dataview.cachedrecords[a.dataindex][i] = r,
                        null != r && null != r.label && (this.dataview.cachedrecords[a.dataindex][i] = r.value,
                        this.dataview.cachedrecords[a.dataindex][c.displayfield] = r.label)),
                        this.source && this.source._knockoutdatasource && !this._updateFromAdapter && this.autokoupdates && this.source._source._localdata) {
                            var w = o;
                            l && null != a.dataindex && (w = a.dataindex);
                            var x = this.source._source._localdata()[w];
                            this.source.suspendKO = !0;
                            var b = x;
                            if (b[i] && b[i].subscribe)
                                null != r && null != r.label ? (b[c.displayfield](r.label),
                                b[i](r.value)) : b[i](r);
                            else {
                                var y = this.source._source.datafields
                                  , _ = null;
                                if (y && e.each(y, function() {
                                    if (this.name == i)
                                        return _ = this.map,
                                        !1
                                }),
                                null == _)
                                    null != r && null != r.label ? (b[i] = r.value,
                                    b[c.displayfield] = r.label) : b[i] = r;
                                else {
                                    var q = _.split(this.source.mapChar);
                                    if (q.length > 0) {
                                        for (var j = b, S = 0; S < q.length - 1; S++)
                                            j = j[q[S]];
                                        j[q[q.length - 1]] = r
                                    }
                                }
                                this.source._source._localdata.replace(x, e.extend({}, b))
                            }
                            this.source.suspendKO = !1
                        }
                        if (this.sortcolumn && this.dataview.sortby && !this._updating) {
                            var C = this.getsortinformation();
                            if (this.sortcolumn == i && "many" !== this.sortmode)
                                this.dataview.clearsortdata(),
                                this.dataview.sortby(C.sortcolumn, C.sortdirection.ascending);
                            else if ("many" === this.sortmode) {
                                var T = this.getsortcolumns();
                                this.dataview.clearsortdata(),
                                this.sortby(null);
                                for (var I = 0; I < T.length; I++)
                                    this.sortby(T[I].dataField, T[I].ascending)
                            }
                        } else
                            this._updating || this.dataview.sortby && this.dataview.sortcache[i] && (this.dataview.sortcache[i] = null);
                        if (this._cellscache = new Array,
                        this._pagescache = new Array,
                        this.source.updaterow && (null == n || 1 == n)) {
                            var k = this.that;
                            try {
                                var D = this.getrowid(o);
                                null == this.source.updaterow(D, a, function(e) {
                                    0 == e && (k.setcellvalue(t, i, d, !0, !1),
                                    d != h && k.setcellvalue(t, k.getcolumn(i).displayfield, h, !0, !1))
                                }) && !0
                            } catch (e) {
                                return !1,
                                k.setcellvalue(t, i, d, !0, !1),
                                void (d != h && k.setcellvalue(t, k.getcolumn(i).displayfield, h, !0, !1))
                            }
                        }
                        var P = this.vScrollInstance.value;
                        if (this._updating && 1 != s && (s = !1),
                        1 == s || null == s) {
                            k = this.that;
                            var B = function() {
                                k.pageable && k.updatepagerdetails && (k.updatepagerdetails(),
                                (k.autoheight || k.autorowheight) && k._updatepageviews())
                            }
                              , M = this.groupable && this.groups.length > 0;
                            l && !M ? ((this.autoheight || this.autorowheight) && (this.prerenderrequired = !0),
                            this.dataview.refresh(),
                            this.rendergridcontent(!0, !1),
                            B(),
                            this._renderrows(this.virtualsizeinfo)) : this.sortcolumn && !M ? ((this.autoheight || this.autorowheight) && (this.prerenderrequired = !0),
                            this.dataview.reloaddata(),
                            this.rendergridcontent(!0, !1),
                            B(),
                            this._renderrows(this.virtualsizeinfo)) : this.groupable && this.groups.length > 0 ? ((this.autoheight || this.autorowheight) && (this.prerenderrequired = !0),
                            this.pageable && -1 != this.groups.indexOf(i) ? (this._pagescache = new Array,
                            this._cellscache = new Array,
                            this.dataview.refresh(),
                            this._render(!0, !0, !1, !1)) : (this._pagescache = new Array,
                            this._cellscache = new Array,
                            this.dataview.updateview(),
                            this._renderrows(this.virtualsizeinfo))) : (this.dataview.updateview(),
                            this._renderrows(this.virtualsizeinfo))
                        }
                        if (this.vScrollInstance.setPosition(P),
                        this.showaggregates && this._updatecolumnsaggregates && this._updatecolumnsaggregates(),
                        this.showfilterrow && this.filterable && this.filterrow) {
                            var H = this.getcolumn(i).filtertype;
                            "list" != H && "checkedlist" != H || this._updatelistfilters(!0)
                        }
                        return this._raiseEvent(19, {
                            rowindex: t,
                            datafield: i,
                            newvalue: r,
                            value: r,
                            oldvalue: d
                        }),
                        !0
                    }
                }
            },
            getcellvalue: function(e, t) {
                if (null == e || null == t)
                    return null;
                var i = parseInt(e)
                  , r = e;
                return isNaN(i) || (r = this.getrowdata(i)),
                null != r ? r[t] : null
            },
            getrows: function() {
                var t = this.dataview.records.length;
                if (this.virtualmode) {
                    for (var i = new Array, r = 0; r < this.dataview.records.length; r++) {
                        var s = this.dataview.records[r];
                        s && i.push(s)
                    }
                    void 0 === this.dataview.records.length && e.each(this.dataview.records, function() {
                        this && i.push(this)
                    });
                    var n = 0;
                    return this.pageable && (n = this.dataview.pagenum * this.dataview.pagesize),
                    i.length > this.source._source.totalrecords - n ? i.slice(0, this.source._source.totalrecords - n) : i
                }
                if (this.dataview.sortdata) {
                    for (i = new Array,
                    r = 0; r < t; r++) {
                        var o;
                        o = e.extend({}, this.dataview.sortdata[r].value),
                        i[r] = o
                    }
                    return i
                }
                return this.dataview.records
            },
            getrowboundindexbyid: function(e) {
                var t = this.dataview.recordsbyid["id" + e];
                if (t && t.boundindex)
                    return this.getboundindex(t);
                for (var i = this.getboundrows(), r = 0; r < i.length; r++)
                    if (i[r] && i[r].uid == e)
                        return r;
                return -1
            },
            getrowdatabyid: function(e) {
                var t = this.dataview.recordsbyid["id" + e];
                if (t)
                    return t;
                var i = this.getrowboundindexbyid(e);
                return this.getboundrows()[i]
            },
            getrowdata: function(e) {
                return null == e && (e = 0),
                this.virtualmode ? this.dataview.records[e] : this.getboundrows()[e]
            },
            getrenderedrowdata: function(e, t) {
                if (null == e && (e = 0),
                this.virtualmode) {
                    var i = this.getrowvisibleindex(e);
                    return r = this.dataview.loadedrecords[i]
                }
                if ((i = this.getrowvisibleindex(e)) >= 0) {
                    if (this.groupable && this.groups.length > 0)
                        var r = this.dataview.loadedrecords[i];
                    else {
                        r = this.dataview.loadedrecords[i];
                        if (this.pageable && (null == t || 0 == t))
                            r = this.dataview.loadedrecords[this.dataview.pagesize * this.dataview.pagenum + e]
                    }
                    return r
                }
                return null
            },
            getboundrows: function() {
                return this.dataview.cachedrecords
            },
            getrowdisplayindex: function(e) {
                for (var t = this.getdisplayrows(), i = 0; i < t.length; i++)
                    if (t[i])
                        if (void 0 !== t[i].dataindex) {
                            if (t[i].dataindex == e)
                                return t[i].visibleindex
                        } else if (t[i].boundindex == e)
                            return t[i].visibleindex;
                return -1
            },
            getboundindex: function(e) {
                var t = e.boundindex;
                return this.groupable && this.groups.length > 0 && this.pageable && e.bounddata && (t = this.getrowboundindexbyid(e.bounddata.uid)),
                this.dataview.filters.length > 0 && (e.bounddata ? void 0 !== e.bounddata.dataindex && (t = e.bounddata.dataindex) : void 0 !== e.dataindex && (t = e.dataindex)),
                t
            },
            getrowboundindex: function(e) {
                var t = this.getdisplayrows()[e];
                return t ? void 0 !== t.dataindex ? t.dataindex : t.boundindex : -1
            },
            getdisplayrows: function() {
                return this.dataview.loadedrecords
            },
            getloadedrows: function() {
                return this.getdisplayrows()
            },
            getvisiblerowdata: function(e) {
                var t = this.getvisiblerows();
                return t ? t[e] : null
            },
            getloadedrowdata: function(e) {
                var t = this.getloadedrows();
                return t ? t[e] : null
            },
            getvisiblerows: function() {
                if (this.virtualmode)
                    return this.dataview.loadedrecords;
                if (this.pageable) {
                    for (var e = [], t = 0; t < this.dataview.pagesize; t++) {
                        if (null == (i = this.dataview.loadedrecords[t + this.dataview.pagesize * this.dataview.pagenum]))
                            break;
                        e.push(i)
                    }
                    return e
                }
                if (null != this._startboundindex && null != this._endboundindex) {
                    for (e = [],
                    t = this._startvisibleindex; t <= this._endvisibleindex; t++) {
                        var i;
                        if (null == (i = this.dataview.loadedrecords[t]))
                            break;
                        e.push(i)
                    }
                    return e
                }
                return this.dataview.loadedrecords
            },
            getrowid: function(e) {
                if (null == e && (e = 0),
                this.virtualmode) {
                    var t = this.getrowvisibleindex(e);
                    if (i = this.dataview.loadedrecords[t])
                        return i.uid
                } else {
                    var i = null
                      , r = this.dataview.filters.length > 0;
                    if (e >= 0 && e < this.dataview.bounditems.length && !r) {
                        if (this.groupable && this.groups.length > 0) {
                            t = this.getrowvisibleindex(e);
                            var i = this.dataview.loadedrecords[t]
                        } else
                            t = this.getrowvisibleindex(e),
                            i = this.dataview.loadedrecords[t];
                        if (i)
                            return i.uid
                    }
                    if (this.dataview.filters.length > 0)
                        return (i = this.getboundrows()[e]) && null != i.uid ? i.uid : null
                }
                return null
            },
            _updateGridData: function(e) {
                var t = !1;
                this.filterable && this._initfilterpanel && this.dataview.filters.length && (t = !0),
                t ? (this.dataview.refresh(),
                "updaterow" == e ? (this._render(!0, !0, !1, !1, !1),
                this.invalidate()) : this.render()) : this.sortcolumn || this.groupable && this.groups.length > 0 ? (this.dataview.reloaddata(),
                this.render()) : ("updaterow" === e && (this.dataview.refresh(),
                this.virtualmode || this._render(!0, !0, !1, !1, !1)),
                this._cellscache = new Array,
                this._pagescache = new Array,
                this._renderrows(this.virtualsizeinfo)),
                this.showfilterrow && this.filterable && this.filterrow && this._updatelistfilters(!0)
            },
            updaterow: function(t, i, r) {
                if (null != t && null != i) {
                    var s = this.that
                      , n = !1;
                    s._datachanged = !0;
                    var o = function(t, i, s) {
                        if (t._loading)
                            throw new Error("jqxGrid: " + t.loadingerrormessage);
                        var n = !1;
                        e.isArray(i) ? (e.each(i, function(e, i) {
                            n = t.dataview.updaterow(this, s[e], !1)
                        }),
                        t._cellscache = new Array,
                        t._pagescache = new Array,
                        t.dataview.refresh()) : n = t.dataview.updaterow(i, s);
                        var o = t.vScrollInstance.value;
                        if (null != r && 1 != r || null != t._updating && 0 != t._updating || t._updateGridData("updaterow"),
                        t.showaggregates && t._updatecolumnsaggregates && t._updatecolumnsaggregates(),
                        t.source && t.source._knockoutdatasource && !t._updateFromAdapter && t.autokoupdates && t.source._source._localdata) {
                            var a = t.dataview.recordsbyid["id" + i]
                              , l = t.dataview.records.indexOf(a)
                              , d = t.source._source._localdata()[l];
                            t.source.suspendKO = !0,
                            t.source._source._localdata.replace(d, e.extend({}, a)),
                            t.source.suspendKO = !1
                        }
                        if (t.source && t.source._source.localdata && "observableArray" === t.source._source.localdata.name && !t.source._source.localdata._updating) {
                            t.source._source.localdata._updating = !0;
                            var h = t.getrowboundindexbyid(i);
                            t.source._source.localdata.set(h, s),
                            t.source._source.localdata._updating = !1
                        }
                        return t.vScrollInstance.setPosition(o),
                        n
                    };
                    if (this.source.updaterow) {
                        try {
                            null == (n = this.source.updaterow(t, i, function(e) {
                                1 == e || null == e ? o(s, t, i) : n = !1
                            })) && (n = !0)
                        } catch (e) {
                            n = !1
                        }
                    } else
                        n = o(s, t, i);
                    return n
                }
                return !1
            },
            deleterow: function(t, i) {
                if (null != t) {
                    this._datachanged = !0;
                    var r = !1
                      , s = this.that
                      , n = this.getrowboundindexbyid(t)
                      , o = new Array;
                    new Array;
                    if (null != n && (this.selectedrowindexes.indexOf(n) >= 0 && this.selectedrowindexes.splice(this.selectedrowindexes.indexOf(n), 1),
                    this.selectedrowindex == n && (this.selectedrowindex = -1),
                    !this.virtualmode))
                        if (s.selectionmode.indexOf("row") >= 0)
                            e.each(this.selectedrowindexes, function() {
                                var e = s.getrowid(this);
                                o.push(e)
                            }),
                            this.selectedrowindexes = new Array,
                            this.selectedrowindex = -1;
                        else if (s.selectionmode.indexOf("cell") >= 0)
                            for (var a in s.selectedcells) {
                                var l = s.selectedcells[a]
                                  , d = s.getrowid(l.rowindex);
                                l.rowid = d
                            }
                    var h = function(t, r) {
                        if (t._loading)
                            throw new Error("jqxGrid: " + t.loadingerrormessage);
                        var s = !1
                          , a = t.vScrollInstance.value;
                        if (e.isArray(r))
                            e.each(r, function() {
                                s = t.dataview.deleterow(this, !1)
                            }),
                            t._cellscache = new Array,
                            t._pagescache = new Array,
                            t.dataview.refresh();
                        else
                            s = t.dataview.deleterow(r);
                        if (!t.virtualmode)
                            if (t.selectionmode.indexOf("row") >= 0)
                                e.each(o, function() {
                                    var e = t.getrowboundindexbyid(this);
                                    -1 != e && t.selectrow(e, !1)
                                });
                            else {
                                var l = new Array;
                                for (var d in t.selectedcells) {
                                    var h = t.selectedcells[d]
                                      , c = h.rowid
                                      , u = t.getrowboundindexbyid(c);
                                    -1 != u && (h.rowindex = u,
                                    l[u + "_" + h.datafield] = h)
                                }
                                t.selectedcells = l
                            }
                        if (null != t._updating && 0 != t._updating || null != i && 1 != i || setTimeout(function() {
                            t._render(!0, !0, !1, !1),
                            "visible" != t.vScrollBar.css("visibility") && (t._arrange(),
                            t._updatecolumnwidths(),
                            t._updatecellwidths(),
                            t._renderrows(t.virtualsizeinfo))
                        }),
                        t.source && t.source._knockoutdatasource && !t._updateFromAdapter && t.autokoupdates && t.source._source._localdata && (t.source.suspendKO = !0,
                        t.source._source._localdata.pop(rowdata),
                        t.source.suspendKO = !1),
                        t.source && t.source._source.localdata && "observableArray" === t.source._source.localdata.name && (t.source._source.localdata._updating || (t.source._source.localdata._updating = !0,
                        t.source._source.localdata.splice(n, 1),
                        t.source._source.localdata._updating = !1)),
                        t.dataview.sortby && "many" !== t.sortmode) {
                            var p = t.getsortinformation();
                            p.sortcolumn && (t.dataview.clearsortdata(),
                            t.dataview.sortby(p.sortcolumn, p.sortdirection ? p.sortdirection.ascending : null))
                        }
                        return t.vScrollInstance.setPosition(a),
                        s
                    };
                    if (this.source.deleterow) {
                        try {
                            this.source.deleterow(t, function(e) {
                                1 != e && null != e || h(s, t)
                            }),
                            null == r && (r = !0)
                        } catch (e) {
                            r = !1
                        }
                    } else
                        r = h(s, t);
                    return r
                }
                return !1
            },
            addrow: function(t, i, r) {
                if (null != i) {
                    this._datachanged = !0,
                    null == r && (r = "last");
                    var s = !1
                      , n = this.that;
                    if (null == t) {
                        var o = this.dataview.filters && this.dataview.filters.length > 0 ? this.dataview.cachedrecords.length : this.dataview.totalrecords;
                        if (e.isArray(i)) {
                            var a = new Array;
                            e.each(i, function(e, t) {
                                var r = n.dataview.getid(n.dataview.source.id, i[e], o + e);
                                a.push(r)
                            }),
                            t = a
                        } else
                            for (t = this.dataview.getid(this.dataview.source.id, i, o); null != this.dataview.recordsbyid["id" + t]; )
                                t++
                    }
                    var l = function(t, i, r, s) {
                        if (t._loading)
                            throw new Error("jqxGrid: " + t.loadingerrormessage);
                        var n = t.vScrollInstance.value
                          , o = !1;
                        if (e.isArray(r) ? (e.each(r, function(e, r) {
                            null != this.dataindex && delete this.dataindex;
                            var n = null;
                            null != i && null != i[e] && (n = i[e]),
                            o = t.dataview.addrow(n, this, s, !1)
                        }),
                        t._cellscache = new Array,
                        t._pagescache = new Array,
                        t.dataview.refresh()) : (null != r && null != r.dataindex && delete r.dataindex,
                        o = t.dataview.addrow(i, r, s)),
                        null != t._updating && 0 != t._updating || (t._render(!0, !0, !1, !1),
                        t.invalidate()),
                        t.source && t.source._knockoutdatasource && !t._updateFromAdapter && t.autokoupdates && t.source._source._localdata && (t.source.suspendKO = !0,
                        t.source._source._localdata.push(r),
                        t.source.suspendKO = !1),
                        t.source && t.source._source.localdata && "observableArray" === t.source._source.localdata.name && !t.source._source.localdata._updating) {
                            t.source._source.localdata._updating = !0;
                            var a = t.getrowboundindexbyid(i);
                            t.source._source.localdata.set(a, r),
                            t.source._source.localdata._updating = !1
                        }
                        return "deferred" != t.scrollmode ? t.vScrollInstance.setPosition(n) : t.vScrollInstance.setPosition(0),
                        o
                    };
                    if (this.source.addrow) {
                        try {
                            null == (s = this.source.addrow(t, i, r, function(e, s) {
                                1 != e && null != e || (null != s && (t = s),
                                l(n, t, i, r))
                            })) && (s = !0)
                        } catch (e) {
                            s = !1
                        }
                        if (0 == s)
                            return !1
                    } else
                        l(this, t, i, r);
                    return s
                }
                return !1
            },
            _findvisiblerow: function(e, t) {
                null == e && (e = parseInt(this.vScrollInstance.value));
                var i = 0;
                null != t && null != t || (t = this.rows.records);
                for (var r = t.length; i <= r; ) {
                    mid = parseInt((i + r) / 2);
                    var s = t[mid];
                    if (null == s)
                        break;
                    if (s.top > e && s.top + s.height > e)
                        r = mid - 1;
                    else {
                        if (!(s.top < e && s.top + s.height < e))
                            return mid;
                        i = mid + 1
                    }
                }
                return -1
            },
            _updatecellwidths: function() {
                var e = this.virtualsizeinfo;
                if (e) {
                    var t = this.that;
                    if (null != t.gridcontent) {
                        null == t.table && (t.table = t.gridcontent.find("#contenttable" + t.element.id));
                        var i = t.groupable && t.groups.length > 0
                          , r = 0
                          , s = e.visiblerecords;
                        if (t.pageable && (t.autoheight || t.autorowheight) && (s = t.dataview.pagesize,
                        t.groupable && (t.dataview.updateview(),
                        s = t.dataview.rows.length)),
                        t.groupable || t.pageable || !t.autoheight && !t.autorowheight || (s = t.dataview.totalrecords),
                        t.rowdetails && (s += t.dataview.pagesize),
                        t.columns.records) {
                            for (var n = t.columns.records.length, o = t.table[0].rows, a = 0; a < s; a++) {
                                var l = o[a];
                                if (!l)
                                    break;
                                for (var d = l.cells, h = 0, c = 0; c < n; c++) {
                                    var u = t.columns.records[c]
                                      , p = u.width;
                                    u.adaptivewidth && (p = u.adaptivewidth);
                                    var f = d[c];
                                    parseInt(f.style.left) != h && (f.style.left = h + "px"),
                                    parseInt(f.style.width) != p && (f.style.width = p + "px"),
                                    u.hidden && u.hideable || u.adaptivehidden ? f.style.display = "none" : h += parseFloat(p)
                                }
                                0 == r && (t.table.width(parseFloat(h) + 2),
                                r = h)
                            }
                            t.showaggregates && t._updateaggregates && t._updateaggregates(),
                            t.showfilterrow && t.filterable && t._updatefilterrowui && t._updatefilterrowui(),
                            t.showeverpresentrow && t._updateaddnewrowui(),
                            t._updatescrollbarsafterrowsprerender(),
                            i && t._renderrows(t.virtualsizeinfo)
                        }
                    }
                }
            },
            _updatescrollbarsafterrowsprerender: function() {
                var e = this.that
                  , t = e.hScrollBar[0].style.visibility
                  , i = 0
                  , r = e.vScrollBar[0].style.visibility;
                "visible" == r && (i = e.scrollbarsize + 3),
                0 == e.scrollbarsize && (i = 0),
                e.scrollbarautoshow && (i = 0);
                var s = e.element.style.width;
                if (s = s.toString().indexOf("%") >= 0 ? e.host.width() : parseInt(s),
                parseInt(e.table[0].style.width) - 2 > s - i) {
                    if ("visible" != t && (e.autowidth || (e.hScrollBar[0].style.visibility = "visible"),
                    e._arrange()),
                    "visible" == r) {
                        if ("deferred" == e.scrollmode || e.virtualmode)
                            e._updatevscrollbarmax();
                        else if (e.virtualsizeinfo) {
                            var n = e.virtualsizeinfo.virtualheight - e._gettableheight();
                            !isNaN(n) && n > 0 && ("hidden" != t ? e.vScrollBar.jqxScrollBar("max", n + e.scrollbarsize + 4) : e.vScrollBar.jqxScrollBar("max", n))
                        }
                    } else
                        i = -2;
                    e.hScrollBar.jqxScrollBar("max", i + e.table.width() - e.host.width())
                } else
                    "hidden" != t && (e.hScrollBar.css("visibility", "hidden"),
                    e._arrange());
                e._renderhorizontalscroll()
            },
            _hascolumnstyle: function() {
                if (void 0 !== this._hascolumnstyles)
                    return this._hascolumnstyles;
                this._hascolumnstyles = !1;
                for (var e = 0; e < this.columns.records.length; e++) {
                    var t = this.columns.records[e];
                    if (t.style.headerBackgroundColor || t.style.headerColor || t.style.headerBackgroundHoveredColor || t.style.headerHoveredColor || t.style.headerBackgroundSelectedColor || t.style.headerSelectedColor || t.style.backgroundColor || t.style.color || t.style.backgroundHoveredColor || t.style.hoveredColor || t.style.backgroundSelectedColor || t.style.selectedColor)
                        return this._hascolumnstyles = !0,
                        !0
                }
                return !1
            },
            _prerenderrows: function(t) {
                var i = this.that;
                if (1 == i.prerenderrequired) {
                    if (i.prerenderrequired = !1,
                    i.editable && i._destroyeditors && i._destroyeditors(),
                    null == i.gridcontent)
                        return;
                    i.gridcontent.find("#contenttable" + i.element.id).remove(),
                    null != i.table && (i.table.remove(),
                    i.table = null),
                    i.table = e('<div id="contenttable' + i.element.id + '" style="overflow: hidden; position: relative;"></div>'),
                    i.gridcontent.addClass(i.toTP("jqx-grid-content")),
                    i.gridcontent.addClass(i.toTP("jqx-widget-content")),
                    i.gridcontent.append(i.table);
                    var r = i.groupable && i.groups.length > 0
                      , s = 0;
                    i.table[0].rows = new Array;
                    var n = i.toTP("jqx-grid-cell");
                    r && (n = " " + i.toTP("jqx-grid-group-cell"));
                    var o = t.visiblerecords;
                    if (i.pageable && (i.autoheight || i.autorowheight) && (o = i.dataview.pagesize,
                    i.groupable && (i.dataview.updateview(),
                    (o = i.dataview.rows.length) < i.dataview.pagesize && (o = i.dataview.pagesize))),
                    i.pageable || !i.autoheight && !i.autorowheight || (o = i.dataview.totalrecords),
                    i.groupable && i.groups.length > 0 && (i.autoheight || i.autorowheight) && !i.pageable && (o = i.dataview.rows.length),
                    i.rowdetails && (i.autoheight || i.autorowheight ? o += i.dataview.pagesize : o += o),
                    !i.columns.records)
                        return;
                    var a = i.columns.records.length;
                    e.jqx.browser.msie && e.jqx.browser.version > 8 && i.table.css("opacity", "0.99"),
                    e.jqx.browser.mozilla,
                    -1 != navigator.userAgent.indexOf("Safari") && i.table.css("opacity", "0.99");
                    var l = e.jqx.browser.msie && e.jqx.browser.version < 8;
                    l && i.host.attr("hideFocus", "true");
                    var d = i.tableZIndex;
                    o * a > d && (d = o * a);
                    i.dataview.records.length,
                    i.isTouchDevice();
                    var h = "";
                    i._hiddencolumns = !1;
                    for (var c = 5 + i.columns.records.length, u = 0; u < o; u++) {
                        var p = '<div role="row" style="position: relative; height:' + i.rowsheight + 'px;" id="row' + u + i.element.id + '">';
                        if (l) {
                            p = '<div role="row" style="position: relative; z-index: ' + d + "; height:" + i.rowsheight + 'px;" id="row' + u + i.element.id + '">';
                            d--
                        }
                        for (var f = 0, m = 0; m < a; m++) {
                            if ((y = (b = i.columns.records[m]).width) < b.minwidth && (y = b.minwidth),
                            y > b.maxwidth && (y = b.maxwidth),
                            i.rtl) {
                                var g = '<div columnindex="' + m + '" role="gridcell" style="left: ' + f + "px; z-index: " + (d - a + 2 * m) + "; width:" + y + "px;";
                                d--
                            } else
                                g = '<div columnindex="' + m + '" role="gridcell" style="left: ' + f + "px; z-index: " + d-- + "; width:" + y + "px;";
                            b.hidden && b.hideable || b.adaptivehidden ? (g += "display: none;",
                            i._hiddencolumns = !0,
                            d++) : f += y,
                            0 === u && 0 === m && (g += '" tabindex="' + c + '"'),
                            g += '" class="' + n + '">',
                            g += this._defaultcellsrenderer("", b),
                            p += g += "</div>"
                        }
                        0 == s && (i.table.width(parseInt(f) + 2),
                        s = f),
                        h += p += "</div>"
                    }
                    i.WinJS ? MSApp.execUnsafeLocalFunction(function() {
                        i.table.html(h)
                    }) : i.table[0].innerHTML = h,
                    i.table[0].rows = new Array;
                    var v = i.table.children();
                    for (u = 0; u < o; u++) {
                        var w = v[u];
                        i.table[0].rows.push(w),
                        w.cells = new Array;
                        var x = e(w).children();
                        for (m = 0; m < a; m++)
                            w.cells.push(x[m])
                    }
                    if (0 == o) {
                        f = 0;
                        if (i.showemptyrow) {
                            p = e('<div style="position: relative;" id="row0' + i.element.id + '"></div>');
                            i.table.append(p),
                            p.height(i.rowsheight),
                            i.table[0].rows[0] = p[0],
                            i.table[0].rows[0].cells = new Array
                        }
                        for (m = 0; m < a; m++) {
                            var b, y = (b = i.columns.records[m]).width;
                            if (i.showemptyrow)
                                (g = e('<div style="position: absolute; height: 100%; left: ' + f + "px; z-index: " + d-- + "; width:" + y + 'px;" class="' + n + '"></div>')).height(i.rowsheight),
                                p.append(g),
                                i.table[0].rows[0].cells[m] = g[0];
                            y < b.minwidth && (y = b.minwidth),
                            y > b.maxwidth && (y = b.maxwidth),
                            b.hidden && b.hideable || b.adaptivehidden || (f += y)
                        }
                        i.table.width(parseInt(f) + 2),
                        s = f
                    }
                    i._updatescrollbarsafterrowsprerender(),
                    i.rendered && i.rendered("rows"),
                    i.toCompile = new Array,
                    i._addoverlayelement()
                }
            },
            _groupsheader: function() {
                return this.groupable && this.showgroupsheader
            },
            _arrange: function() {
                var e = null
                  , t = null;
                this.tableheight = null;
                var i = this.that
                  , r = !1
                  , s = !1;
                if (null != i.width && -1 != i.width.toString().indexOf("px") ? e = i.width : null == i.width || isNaN(i.width) || (e = i.width),
                null != i.width && -1 != i.width.toString().indexOf("%") && (e = i.width,
                r = !0),
                i.scrollbarautoshow && (i.vScrollBar[0].style.display = "none",
                i.hScrollBar[0].style.display = "none",
                i.vScrollBar[0].style.zIndex = i.tableZIndex + i.headerZIndex,
                i.hScrollBar[0].style.zIndex = i.tableZIndex + i.headerZIndex),
                i.autowidth) {
                    for (var n = 0, o = 0; o < i.columns.records.length; o++) {
                        var a = i.columns.records[o].width;
                        n += "auto" == a ? a = i._measureElementWidth(i.columns.records[o].text) : a
                    }
                    "hidden" != i.vScrollBar.css("visibility") && (n += i.scrollbarsize + 4),
                    e = n,
                    i.width = e
                }
                null != i.height && -1 != i.height.toString().indexOf("px") ? t = i.height : null == i.height || isNaN(i.height) || (t = i.height),
                null != i.height && -1 != i.height.toString().indexOf("%") && (t = i.height,
                s = !0);
                var l = function() {
                    var e = 0;
                    return e += i.showheader && null != i.columnsheader ? i.columnsheader.height() + 2 : 0,
                    i.pageable && (e += i.pagerheight),
                    i._groupsheader() && (e += i.groupsheaderheight),
                    i.showtoolbar && (e += i.toolbarheight),
                    i.showstatusbar && (e += i.statusbarheight),
                    i.showeverpresentrow && "bottom" === i.everpresentrowposition && (e += i.everpresentrowheight),
                    "visible" == i.hScrollBar[0].style.visibility && (e += 15),
                    e
                };
                if (i.autoheight && i.virtualsizeinfo)
                    if (i.pageable && i.gotopage) {
                        t = (d = 0) + (i._pageviews[0] ? i._pageviews[0].height : 0),
                        t += l(),
                        i.showemptyrow && 0 == i.dataview.totalrecords && (t += i.rowsheight)
                    } else {
                        var d = i.host.height() - i._gettableheight();
                        i._pageviews.length > 0 ? (t = d + i._pageviews[i._pageviews.length - 1].height + i._pageviews[i._pageviews.length - 1].top,
                        i.vScrollBar[0].style.visibility = "hidden") : (t = l(),
                        i.showemptyrow && (t += i.rowsheight))
                    }
                else
                    i.autoheight && (t = i.dataview.totalrecords * i.rowsheight,
                    i.pageable && i.gotopage && (t = i.pagesize * i.rowsheight),
                    i._loading && (t = 250,
                    i.dataloadelement.height(t)),
                    (t += l()) > 1e4 && (t = 1e4));
                null != e ? (e = parseInt(e),
                r ? i.element.style.width = i.width : i.element.style.width != parseInt(i.width) + "px" && (i.element.style.width = parseInt(i.width) + "px"),
                r && ((e = i.host.width()) <= 2 && (e = 600,
                i.host.width(e)),
                i._oldWidth || (i._oldWidth = e))) : i.host.width(250),
                null != t ? (s || (t = parseInt(t)),
                s ? i.element.style.height = i.height : i.element.style.height != parseInt(t) + "px" && (i.element.style.height = parseInt(t) + "px"),
                s && !i.autoheight && (0 == (t = i.host.height()) && (t = 400,
                i.host.height(t)),
                i._oldHeight || (i._oldHeight = t))) : i.host.height(250),
                i.autoheight && (i.tableheight = null,
                i._gettableheight());
                var h = 0;
                if (i.showtoolbar ? (i.toolbar.width(e),
                i.toolbar.height(i.toolbarheight - 1),
                i.toolbar.css("top", 0),
                h += i.toolbarheight,
                t -= parseInt(i.toolbarheight)) : i.toolbar[0].style.height = "0px",
                i.showstatusbar ? (i.showaggregates ? i.statusbar.width(i.table ? Math.max(e, i.table.width()) : e) : i.statusbar.width(e),
                i.statusbar.height(i.statusbarheight)) : i.statusbar[0].style.height = "0px",
                i.showeverpresentrow && "bottom" === i.everpresentrowposition ? (i.addnewrow.width(e),
                i.addnewrow.height(i.everpresentrowheight)) : i.addnewrow[0].style.height = "0px",
                i._groupsheader()) {
                    i.groupsheader.width(e),
                    i.groupsheader.height(i.groupsheaderheight),
                    i.groupsheader.css("top", h),
                    h += c = i.groupsheader.height() + 1,
                    t > c && (t -= parseInt(c))
                } else {
                    i.groupsheader[0].style.width != e + "px" && (i.groupsheader[0].style.width = parseInt(e) + "px"),
                    i.groupsheader[0].style.height = "0px",
                    i.groupsheader[0].style.top != h + "px" && i.groupsheader.css("top", h);
                    var c, u = h + (c = i.showgroupsheader && i.groupable ? i.groupsheaderheight : 0) + "px";
                    i.content[0].style.top != u && i.content.css("top", h + i.groupsheaderheight)
                }
                var p = i.scrollbarsize;
                isNaN(p) && (p = parseInt(p),
                isNaN(p) ? p = "17px" : p += "px"),
                p = parseInt(p);
                var f = 2
                  , m = 0;
                "visible" == i.vScrollBar[0].style.visibility && (m = p + 4),
                "visible" == i.hScrollBar[0].style.visibility && (f = p + 4 + 2),
                0 == p && (m = 0,
                f = 0);
                var g = 0;
                i.pageable && (g = i.pagerheight,
                f += i.pagerheight),
                i.showstatusbar && (f += i.statusbarheight,
                g += i.statusbarheight),
                i.showeverpresentrow && "bottom" === i.everpresentrowposition && (f += i.everpresentrowheight,
                g += i.everpresentrowheight),
                i.hScrollBar[0].style.height != p + "px" && (i.hScrollBar[0].style.height = parseInt(p) + "px"),
                i.hScrollBar[0].style.top == h + t - 4 - p - g + "px" && "0px" == i.hScrollBar[0].style.left || i.hScrollBar.css({
                    top: h + t - 4 - p - g + "px",
                    left: "0px"
                });
                var v = i.hScrollBar[0].style.width
                  , w = !1
                  , x = !1;
                0 == m ? v != e - 2 + "px" && (i.hScrollBar.width(e - 2),
                w = !0) : v != e - p - 4 + "px" && (i.hScrollBar.width(e - p - 4 + "px"),
                w = !0),
                i.autoheight || (i.vScrollBar[0].style.width != p + "px" && (i.vScrollBar.width(p),
                x = !0),
                i.vScrollBar[0].style.height != parseInt(t) - f + "px" && (i.vScrollBar.height(parseInt(t) - f + "px"),
                x = !0),
                i.vScrollBar[0].style.left == parseInt(e) - parseInt(p) - 4 + "px" && i.vScrollBar[0].style.top == h + "px" || i.vScrollBar.css({
                    left: parseInt(e) - parseInt(p) - 4 + "px",
                    top: h
                })),
                i.rtl && (i.vScrollBar.css({
                    left: "0px",
                    top: h
                }),
                "hidden" != i.vScrollBar.css("visibility") && i.hScrollBar.css({
                    left: p + 2
                }));
                var b = i.vScrollInstance;
                b.disabled = i.disabled,
                i.autoheight || x && b.refresh();
                var y = i.hScrollInstance;
                y.disabled = i.disabled,
                w && y.refresh(),
                i.autowidth && (i.hScrollBar[0].style.visibility = "hidden"),
                i.statusbarheight = parseInt(i.statusbarheight),
                i.toolbarheight = parseInt(i.toolbarheight);
                var _ = function(e) {
                    if ("visible" == e.vScrollBar[0].style.visibility && "visible" == e.hScrollBar[0].style.visibility) {
                        e.bottomRight[0].style.visibility = "visible",
                        e.bottomRight.css({
                            left: 1 + parseInt(e.vScrollBar.css("left")),
                            top: parseInt(e.hScrollBar.css("top"))
                        }),
                        e.rtl && e.bottomRight.css("left", "0px"),
                        e.bottomRight.width(parseInt(p) + 3),
                        e.bottomRight.height(parseInt(p) + 4);
                        var t = e.showeverpresentrow && "bottom" == e.everpresentrowposition ? e.everpresentrowheight : 0;
                        t > 0 && !e.showaggregates && (e.bottomRight.css("z-index", 99),
                        e.bottomRight.height(parseInt(p) + 4 + t),
                        e.bottomRight.css({
                            top: parseInt(e.hScrollBar.css("top")) - t
                        })),
                        e.showaggregates && (e.bottomRight.css("z-index", 99),
                        e.bottomRight.height(parseInt(p) + 4 + e.statusbarheight + t),
                        e.bottomRight.css({
                            top: parseInt(e.hScrollBar.css("top")) - e.statusbarheight - t
                        }))
                    } else
                        e.bottomRight[0].style.visibility = "hidden"
                };
                if (_(this),
                i.content[0].style.width != e - m + "px" && i.content.width(e - m),
                i.content[0].style.height != t - f + 3 + "px" && i.content.height(t - f + 3),
                i.scrollbarautoshow && (i.content[0].style.width != e + "px" && i.content.width(e),
                i.content[0].style.height != t + "px" && i.content.height(t)),
                i.content[0].style.top != h + "px" && i.content.css("top", h),
                i.rtl && (i.content.css("left", m),
                i.scrollbarautoshow && i.content.css("left", "0px"),
                i.table)) {
                    var q = i.table.width();
                    q < e - m && i.content.css("left", e - q)
                }
                if (i.showstatusbar && (i.statusbar.css("top", h + t - i.statusbarheight - (i.pageable ? i.pagerheight : 0)),
                i.showaggregates && ("visible" == i.hScrollBar.css("visibility") && (i.hScrollBar.css({
                    top: h + t - 4 - p - g + i.statusbarheight + "px"
                }),
                i.statusbar.css("top", 1 + h + t - p - 5 - i.statusbarheight - (i.pageable ? i.pagerheight : 0))),
                _(this)),
                i.rtl && ("visible" != i.hScrollBar.css("visibility") ? i.statusbar.css("left", i.content.css("left")) : i.statusbar.css("left", "0px"))),
                i.showeverpresentrow && "bottom" === i.everpresentrowposition && (i.addnewrow.css("top", h + t - (i.showstatusbar ? i.statusbarheight : 0) - (i.pageable ? i.pagerheight : 0) - i.everpresentrowheight),
                i.rtl && ("visible" != i.hScrollBar.css("visibility") ? i.addnewrow.css("left", i.content.css("left")) : i.addnewrow.css("left", "0px"))),
                i.pageable ? (i.pager.width(e),
                i.pager.height(i.pagerheight),
                i.pager.css("top", h + t - i.pagerheight - 1)) : i.pager[0].style.height = "0px",
                null != i.table) {
                    var j = -2;
                    if ("visible" == i.vScrollBar[0].style.visibility && (j = i.scrollbarsize + 3),
                    "visible" == i.hScrollBar[0].style.visibility) {
                        var S = j + i.table.width() - i.host.width();
                        S >= 0 && i.hScrollBar.jqxScrollBar("max", S),
                        "visible" == i.hScrollBar[0].style.visibility && 0 == S && (i.hScrollBar[0].style.visibility = "hidden",
                        i._arrange())
                    }
                }
                e != parseInt(i.dataloadelement[0].style.width) && (i.dataloadelement[0].style.width = i.element.style.width),
                t != parseInt(i.dataloadelement[0].style.height) && (i.dataloadelement[0].style.height = i.element.style.height),
                this.pagergotoinput && (this.pagergotoinput.offset().top !== this.pagergoto.offset().top ? (this.pagergotoinput.css("visibility", "hidden"),
                this.pagergoto.css("visibility", "hidden")) : (this.pagergotoinput.css("visibility", "inherit"),
                this.pagergoto.css("visibility", "inherit"))),
                i._hostwidth = e
            },
            destroy: function() {
                if (delete e.jqx.dataFormat.datescache,
                delete this.gridlocalization,
                e.jqx.utilities.resize(this.host, null, !0),
                ("" != document.referrer || window.frameElement) && null != window.top && window.top != window.self && this.removeHandler(e(window.top.document), "mouseup.grid" + this.element.id),
                this.table && this.table[0]) {
                    for (var t = this.table[0].rows.length, i = 0; i < t; i++) {
                        for (var r = this.table[0].rows[i], s = r.cells.length, n = 0; n < s; n++)
                            e(r.cells[n]).remove(),
                            r.cells[n] = null,
                            delete r.cells[n];
                        r.cells = null,
                        r.cells && delete r.cells,
                        e(this.table[0].rows[i]).remove(),
                        this.table[0].rows[i] = null
                    }
                    try {
                        delete this.table[0].rows
                    } catch (e) {}
                    this.table.remove(),
                    delete this.table
                }
                if (this.columns && this.columns.records) {
                    for (i = 0; i < this.columns.records.length; i++) {
                        var o = this.columns.records[i];
                        o.addnewrowwidget && o.destroyeverpresentrowwidget && o.destroyeverpresentrowwidget(o.addnewrowwidget),
                        o.destroywidget && o.destroywidget && o.destroywidget(o.widget),
                        this._removecolumnhandlers(this.columns.records[i]),
                        o.element && (e(o.element).remove(),
                        e(o.sortasc).remove(),
                        e(o.sortdesc).remove(),
                        e(o.filtericon).remove(),
                        e(o.menu).remove(),
                        o.element = null,
                        o.uielement = null,
                        o.sortasc = null,
                        o.sortdesc = null,
                        o.filtericon = null,
                        o.menu = null,
                        delete o.element,
                        delete o.uielement,
                        delete o.sortasc,
                        delete o.sortdesc,
                        delete o.filtericon,
                        delete o.menu,
                        delete this.columnsrow[0].cells[i])
                    }
                    try {
                        delete this.columnsrow[0].cells
                    } catch (e) {}
                    delete this.columnsrow
                }
                if (e.removeData(document.body, "contextmenu" + this.element.id),
                this.host.jqxDropDownList && this._destroyfilterpanel && this._destroyfilterpanel(),
                this.editable && this._destroyeditors && this._destroyeditors(),
                this.filterable && this._destroyedfilters && this.showfilterrow && this._destroyedfilters(),
                this.host.jqxMenu && this.gridmenu && (this.removeHandler(e(document), "click.menu" + this.element.id),
                this.removeHandler(this.gridmenu, "keydown"),
                this.removeHandler(this.gridmenu, "closed"),
                this.removeHandler(this.gridmenu, "itemclick"),
                this.gridmenu.jqxMenu("destroy"),
                this.gridmenu = null),
                this.pagershowrowscombo && (this.pagershowrowscombo.jqxDropDownList("destroy"),
                this.pagershowrowscombo = null),
                this.pagerrightbutton && (this.removeHandler(this.pagerrightbutton, "mousedown"),
                this.removeHandler(this.pagerrightbutton, "mouseup"),
                this.removeHandler(this.pagerrightbutton, "click"),
                this.pagerrightbutton.jqxButton("destroy"),
                this.pagerrightbutton = null),
                this.pagerleftbutton && (this.removeHandler(this.pagerleftbutton, "mousedown"),
                this.removeHandler(this.pagerleftbutton, "mouseup"),
                this.removeHandler(this.pagerleftbutton, "click"),
                this.pagerleftbutton.jqxButton("destroy"),
                this.removeHandler(e(document), "mouseup.pagerbuttons" + this.element.id),
                this.pagerleftbutton = null),
                this.removeHandler(e(document), "selectstart." + this.element.id),
                this.removeHandler(e(document), "mousedown.resize" + this.element.id),
                this.removeHandler(e(document), "mouseup.resize" + this.element.id),
                this.removeHandler(e(document), "mousemove.resize" + this.element.id),
                this.isTouchDevice()) {
                    var a = e.jqx.mobile.getTouchEventName("touchmove") + ".resize" + this.element.id
                      , l = e.jqx.mobile.getTouchEventName("touchstart") + ".resize" + this.element.id
                      , d = e.jqx.mobile.getTouchEventName("touchend") + ".resize" + this.element.id;
                    this.removeHandler(e(document), a),
                    this.removeHandler(e(document), l),
                    this.removeHandler(e(document), d)
                }
                if (this.removeHandler(e(document), "mousedown.reorder" + this.element.id),
                this.removeHandler(e(document), "mouseup.reorder" + this.element.id),
                this.removeHandler(e(document), "mousemove.reorder" + this.element.id),
                this.isTouchDevice()) {
                    a = e.jqx.mobile.getTouchEventName("touchmove") + ".reorder" + this.element.id,
                    l = e.jqx.mobile.getTouchEventName("touchstart") + ".reorder" + this.element.id,
                    d = e.jqx.mobile.getTouchEventName("touchend") + ".reorder" + this.element.id;
                    this.removeHandler(e(document), a),
                    this.removeHandler(e(document), l),
                    this.removeHandler(e(document), d)
                }
                if (this.removeHandler(e(window), "resize." + this.element.id),
                this.resizeline && this.resizeline.remove(),
                this.resizestartline && this.resizestartline.remove(),
                this.groupable) {
                    a = "mousemove.grouping" + this.element.id,
                    l = "mousedown.grouping" + this.element.id,
                    d = "mouseup.grouping" + this.element.id;
                    this.removeHandler(e(document), a),
                    this.removeHandler(e(document), l),
                    this.removeHandler(e(document), d)
                }
                if (this.columnsreorder) {
                    a = "mousemove.reorder" + this.element.id,
                    l = "mousedown.reorder" + this.element.id,
                    d = "mouseup.reorder" + this.element.id;
                    this.removeHandler(e(document), a),
                    this.removeHandler(e(document), l),
                    this.removeHandler(e(document), d),
                    delete this.columnsbounds
                }
                if (this.content && (this.removeHandler(this.content, "mousedown"),
                this.removeHandler(this.content, "scroll")),
                this._removeHandlers(),
                this.hScrollInstance.destroy(),
                this.vScrollInstance.destroy(),
                this.hScrollBar.remove(),
                this.vScrollBar.remove(),
                this._clearcaches(),
                delete this.hScrollInstance,
                delete this.vScrollInstance,
                delete this.visiblerows,
                delete this.hittestinfo,
                delete this.rows,
                delete this.columns,
                delete this.columnsbydatafield,
                delete this.pagescache,
                delete this.pageviews,
                delete this.cellscache,
                delete this.heights,
                delete this.hiddens,
                delete this.hiddenboundrows,
                delete this.heightboundrows,
                delete this.detailboundrows,
                delete this.details,
                delete this.expandedgroups,
                delete this._rowdetailscache,
                delete this._rowdetailselementscache,
                delete this.columnsmenu,
                this.columnsheader && (this.columnsheader.remove(),
                delete this.columnsheader),
                this.selectionarea && (this.selectionarea.remove(),
                delete this.selectionarea),
                this.menuitemsarray && this.menuitemsarray.length) {
                    var h = this.menuitemsarray.length;
                    for (i = 0; i < h; i++)
                        e(this.menuitemsarray[i]).remove()
                }
                delete this.menuitemsarray,
                this.dataview._clearcaches(),
                this.content.removeClass(),
                this.content.remove(),
                this.content = null,
                delete this.content,
                this.vScrollBar = null,
                this.hScrollBar = null,
                delete this.hScrollBar,
                delete this.hScrollBar,
                this.gridcontent && (this.gridcontent.remove(),
                delete this.gridcontent),
                this.gridmenu && (this.gridmenu = null,
                delete this.gridmenu),
                delete this._mousemovefunc,
                delete this._mousewheelfunc,
                this.dataview.destroy(),
                delete this.dataview,
                this.bottomRight.remove(),
                delete this.bottomRight,
                this.wrapper.remove(),
                delete this.wrapper,
                this.pagerdiv && (this.pagerdiv.remove(),
                delete this.pagerdiv),
                this.pagerpageinput && (this.pagerpageinput.remove(),
                delete this.pagerpageinput),
                this.pagergoto && (this.pagergoto.remove(),
                delete this.pagergoto),
                this.pagershowrows && (this.pagershowrows.remove(),
                delete this.pagershowrows),
                this.pagerfirstbutton && (this.pagerfirstbutton.remove(),
                delete this.pagerfirstbutton),
                this.pagerlastbutton && (this.pagerlastbutton.remove(),
                delete this.pagerlastbutton),
                this.pagerbuttons && (this.pagerbuttons.remove(),
                delete this.pagerbuttons),
                this.pagerdetails && (this.pagerdetails.remove(),
                delete this.pagerdetails),
                this.pagergotoinput && (this.pagergotoinput.remove(),
                delete this.pagergotoinput),
                this.pager.remove(),
                delete this.pager,
                this.groupsheader.remove(),
                delete this.groupsheader,
                this.dataloadelement.remove(),
                delete this.dataloadelement,
                this.toolbar.remove(),
                delete this.toolbar,
                this.statusbar.remove(),
                delete this.statusbar,
                this.host.removeData(),
                this.host.removeClass(),
                this.host.remove(),
                this.host = null,
                delete this.host,
                delete this.element,
                delete this.set,
                delete this.get,
                delete this.that,
                delete this.call
            },
            _initializeColumns: function() {
                var i = this.source ? this.source.datafields : null;
                null == i && this.source && this.source._source && (i = this.source._source.datafields);
                var r = !!i && i.length > 0;
                if (this.autogeneratecolumns) {
                    var s = new Array;
                    if (i)
                        e.each(i, function() {
                            var e = {
                                datafield: this.name,
                                text: this.text || this.name,
                                cellsformat: this.format || ""
                            };
                            s.push(e)
                        });
                    else if (this.source.records.length > 0) {
                        var n = this.source.records[0];
                        for (obj in n)
                            if ("uid" != obj) {
                                var o = {
                                    width: 100,
                                    datafield: obj,
                                    text: obj
                                };
                                s.push(o)
                            }
                    }
                    this.columns = s
                }
                if (this.columns && this.columns.records)
                    for (var a = 0; a < this.columns.records.length; a++)
                        this._removecolumnhandlers(this.columns.records[a]);
                var l = this.that
                  , d = new e.jqx.collection(this.element)
                  , h = 0;
                (this._haspinned = !1,
                this._columns ? this.columns = this._columns : this._columns = this.columns,
                this.groupable && e.each(this.groups, function(e) {
                    var i = new t(l,this);
                    i.visibleindex = h++,
                    i.width = l.groupindentwidth,
                    d.add(i),
                    i.grouped = !0,
                    i.filterable = !1,
                    i.sortable = !1,
                    i.editable = !1,
                    i.resizable = !1,
                    i.draggable = !1
                }),
                this.rowdetails && this.showrowdetailscolumn) && ((o = new t(l,this)).visibleindex = h++,
                o.width = l.groupindentwidth,
                o.pinned = !0,
                o.editable = !1,
                o.filterable = !1,
                o.draggable = !1,
                o.groupable = !1,
                o.resizable = !1,
                d.add(o),
                l._haspinned = !0);
                "checkbox" == this.selectionmode && ((o = new t(l,null)).visibleindex = h++,
                o.width = l.groupindentwidth,
                o.checkboxcolumn = !0,
                o.editable = !1,
                o.columntype = "checkbox",
                o.groupable = !1,
                o.draggable = !1,
                o.filterable = !1,
                o.resizable = !1,
                o.datafield = "_checkboxcolumn",
                d.add(o));
                var c = new Array;
                (e.each(this.columns, function(e) {
                    if (null != l.columns[e]) {
                        var i = new t(l,this);
                        if (i.visibleindex = h++,
                        null != this.dataField && (this.datafield = this.dataField),
                        this.pinned && (l._haspinned = !0),
                        l.showeverpresentrow && ("addButtonColumn" !== this.datafield && "resetButtonColumn" !== this.datafield && "updateButtonColumn" !== this.datafield && "deleteButtonColumn" !== this.datafield || (i.editable = !1,
                        i.groupable = !1,
                        i.draggable = !1,
                        i.filterable = !1,
                        i.resizable = !1,
                        i.menu = !1)),
                        null == this.datafield)
                            l.source && l.source._source && "array" == l.source._source.datatype && (r || (l.source._source.datafields ? l.source._source.datafields.push({
                                name: e.toString()
                            }) : (l.source._source.datafields = new Array,
                            l.source._source.datafields.push({
                                name: e.toString()
                            }))),
                            this.datafield = e.toString(),
                            this.displayfield = e.toString(),
                            i.datafield = this.datafield,
                            i.displayfield = this.displayfield);
                        else {
                            if (c[this.datafield])
                                throw new Error("jqxGrid: Invalid column 'datafield' setting. jqxGrid's columns should be initialized with unique data fields.");
                            c[this.datafield] = !0
                        }
                        d.add(i)
                    }
                }),
                this.adaptive) && ((o = new t(l,null)).visibleindex = h++,
                o.width = l.groupindentwidth,
                o.editable = !1,
                o.columntype = "adaptive",
                o.cellsalign = "center",
                o.groupable = !1,
                o.draggable = !1,
                o.menu = !1,
                o.sortable = !1,
                o.filterable = !1,
                o.resizable = !1,
                o.datafield = "_adaptivecolumn",
                d.add(o));
                this.rtl && d.records.reverse(),
                this.columns = d
            },
            _initializeRows: function() {
                var t = new e.jqx.collection(this.element);
                this.rows && this.rows.clear(),
                this.rows = t
            },
            _raiseEvent: function(t, i) {
                if (null == i && (i = {
                    owner: null
                }),
                !1 !== this._trigger) {
                    var r = this.events[t];
                    if (this._camelCase || (r = r.toLowerCase()),
                    (2 == t || 15 == t) && this.showeverpresentrow && (this.everpresentrowactions.indexOf("delete") >= 0 || this.everpresentrowactions.indexOf("update") >= 0)) {
                        if (this.updateeverpresentrow)
                            var s = this;
                        setTimeout(function() {
                            s.updateeverpresentrow()
                        }, 50)
                    }
                    args = i,
                    args.owner = this;
                    var n = new e.Event(r);
                    n.owner = this,
                    n.args = args;
                    var o = this.host.trigger(n);
                    return i = n.args,
                    o
                }
            },
            wheel: function(e, t) {
                if (t.autoheight && "visible" != t.hScrollBar.css("visibility"))
                    return e.returnValue = !0,
                    !0;
                var i = 0;
                if (e || (e = window.event),
                e.originalEvent && e.originalEvent.wheelDelta && (e.wheelDelta = e.originalEvent.wheelDelta),
                e.wheelDelta ? i = e.wheelDelta / 120 : e.detail && (i = -e.detail / 3),
                i) {
                    var r = t._handleDelta(i);
                    return r && (e.preventDefault && e.preventDefault(),
                    null != e.originalEvent && (e.originalEvent.mouseHandled = !0),
                    null != e.stopPropagation && e.stopPropagation()),
                    !!r && (r = !1,
                    e.returnValue = r,
                    r)
                }
                e.preventDefault && e.preventDefault(),
                e.returnValue = !1
            },
            _handleDelta: function(e) {
                if ("hidden" != this.vScrollBar.css("visibility")) {
                    var t = this.vScrollInstance.value;
                    if (e < 0 ? this.scrollDown() : this.scrollUp(),
                    t != this.vScrollInstance.value)
                        return !0
                } else if ("hidden" != this.hScrollBar.css("visibility")) {
                    t = this.hScrollInstance.value;
                    if (e > 0 ? this.hScrollInstance.value > 2 * this.horizontalscrollbarstep ? this.hScrollInstance.setPosition(this.hScrollInstance.value - 2 * this.horizontalscrollbarstep) : this.hScrollInstance.setPosition(0) : this.hScrollInstance.value < this.hScrollInstance.max ? this.hScrollInstance.setPosition(this.hScrollInstance.value + 2 * this.horizontalscrollbarstep) : this.hScrollInstance.setPosition(this.hScrollInstance.max),
                    t != this.hScrollInstance.value)
                        return !0
                }
                return !1
            },
            scrollDown: function() {
                if ("hidden" != this.vScrollBar.css("visibility")) {
                    var e = this.vScrollInstance;
                    e.value + this.rowsheight <= e.max ? e.setPosition(parseInt(e.value) + this.rowsheight) : e.setPosition(e.max)
                }
            },
            scrollUp: function() {
                if ("hidden" != this.vScrollBar.css("visibility")) {
                    var e = this.vScrollInstance;
                    e.value - this.rowsheight >= e.min ? e.setPosition(parseInt(e.value) - this.rowsheight) : e.setPosition(e.min)
                }
            },
            _removeHandlers: function() {
                var t = this.that;
                t.removeHandler(e(window), "orientationchange.jqxgrid" + t.element.id),
                t.removeHandler(e(window), "orientationchanged.jqxgrid" + t.element.id),
                t.removeHandler(t.vScrollBar, "valueChanged"),
                t.removeHandler(t.hScrollBar, "valueChanged"),
                t.vScrollInstance.valueChanged = null,
                t.hScrollInstance.valueChanged = null;
                var i = "mousedown.jqxgrid";
                t.isTouchDevice() && (i = e.jqx.mobile.getTouchEventName("touchend")),
                t.removeHandler(t.host, "dblclick.jqxgrid"),
                t.removeHandler(t.host, i),
                t.removeHandler(t.content, "mousemove", t._mousemovefunc),
                t.removeHandler(t.host, "mouseleave.jqxgrid"),
                t.removeHandler(t.content, "mouseenter"),
                t.removeHandler(t.content, "mouseleave"),
                t.removeHandler(t.content, "mousedown"),
                t.removeHandler(t.content, "scroll"),
                t.removeHandler(t.content, "selectstart." + t.element.id),
                t.removeHandler(t.host, "dragstart." + t.element.id),
                t.removeHandler(t.host, "keydown.edit" + t.element.id),
                t.removeHandler(e(document), "keydown.edit" + t.element.id),
                t.removeHandler(e(document), "keyup.edit" + t.element.id),
                t._mousemovedocumentfunc && t.removeHandler(e(document), "mousemove.selection" + t.element.id, t._mousemovedocumentfunc),
                t.removeHandler(e(document), "mouseup.selection" + t.element.id),
                t._mousewheelfunc && t.removeHandler(t.host, "mousewheel", t._mousewheelfunc),
                t.editable && t.removeHandler(e(document), "mousedown.gridedit" + t.element.id),
                t.host.off && (t.content.off("mousemove"),
                t.host.off("mousewheel"))
            },
            _addHandlers: function() {
                var t = this.that
                  , i = t.isTouchDevice();
                i || t.addHandler(t.host, "dragstart." + t.element.id, function(e) {
                    return !1
                }),
                t.scrollbarautoshow && (t.addHandler(t.host, "mouseenter.gridscroll" + t.element.id, function(e) {
                    t.vScrollBar.fadeIn("fast"),
                    t.hScrollBar.fadeIn("fast")
                }),
                t.addHandler(t.host, "mouseleave.gridscroll" + t.element.id, function(e) {
                    t.vScrollInstance.isScrolling() || t.hScrollInstance.isScrolling() || (t.vScrollBar.fadeOut("fast"),
                    t.hScrollBar.fadeOut("fast"))
                })),
                t.editable && t.addHandler(e(document), "mousedown.gridedit" + t.element.id, function(e) {
                    if (t.editable && t.begincelledit && t.editcell && !t.vScrollInstance.isScrolling() && !t.vScrollInstance.isScrolling()) {
                        var i = t.host.coord()
                          , r = t.host.width()
                          , s = t.host.height()
                          , n = !1
                          , o = !1;
                        if ((e.pageY < i.top || e.pageY > i.top + s) && (n = !0,
                        o = !0),
                        (e.pageX < i.left || e.pageX > i.left + r) && (n = !0,
                        !0),
                        n) {
                            if (t.editcell && t.editcell.editor)
                                switch (t.editcell.columntype) {
                                case "datetimeinput":
                                    if (t.editcell.editor.jqxDateTimeInput && t.editcell.editor.jqxDateTimeInput("container") && "block" == t.editcell.editor.jqxDateTimeInput("container")[0].style.display) {
                                        var a = t.editcell.editor.jqxDateTimeInput("container").coord().top
                                          , l = t.editcell.editor.jqxDateTimeInput("container").coord().top + t.editcell.editor.jqxDateTimeInput("container").height();
                                        if (!o || !(e.pageY < a || e.pageY > l))
                                            return;
                                        n = !0,
                                        t.editcell.editor.jqxDateTimeInput("close")
                                    }
                                    break;
                                case "combobox":
                                    if (t.editcell.editor.jqxComboBox && t.editcell.editor.jqxComboBox("container") && "block" == t.editcell.editor.jqxComboBox("container")[0].style.display) {
                                        a = t.editcell.editor.jqxComboBox("container").coord().top,
                                        l = t.editcell.editor.jqxComboBox("container").coord().top + t.editcell.editor.jqxComboBox("container").height();
                                        if (!o || !(e.pageY < a || e.pageY > l))
                                            return;
                                        n = !0,
                                        t.editcell.editor.jqxComboBox("close")
                                    }
                                    break;
                                case "dropdownlist":
                                    if (t.editcell.editor.jqxDropDownList && t.editcell.editor.jqxDropDownList("container") && "block" == t.editcell.editor.jqxDropDownList("container")[0].style.display) {
                                        a = t.editcell.editor.jqxDropDownList("container").coord().top,
                                        l = t.editcell.editor.jqxDropDownList("container").coord().top + t.editcell.editor.jqxDropDownList("container").height();
                                        if (!o || !(e.pageY < a || e.pageY > l))
                                            return;
                                        n = !0,
                                        t.editcell.editor.jqxDropDownList("close")
                                    }
                                    break;
                                case "template":
                                case "custom":
                                    for (var d = ["jqxDropDownList", "jqxComboBox", "jqxDropDownButton", "jqxDateTimeInput"], h = function(i) {
                                        var r = t.editcell.editor.data();
                                        if (r[i] && r[i].instance.container && "block" == r[i].instance.container[0].style.display) {
                                            var s = r[i].instance
                                              , a = s.container.coord().top
                                              , l = s.container.coord().top + s.container.height();
                                            return !(!o || !(e.pageY < a || e.pageY > l)) && (n = !0,
                                            s.close(),
                                            !0)
                                        }
                                    }, c = 0; c < d.length; c++) {
                                        if (0 == h(d[c]))
                                            return
                                    }
                                }
                            t.endcelledit(t.editcell.row, t.editcell.column, !1, !0),
                            t._oldselectedcell = null
                        }
                    }
                }),
                t.vScrollInstance.valueChanged = function(e) {
                    t.virtualsizeinfo && (t._closemenu(),
                    "physical" != t.scrollmode ? (t._renderrows(t.virtualsizeinfo),
                    t.currentScrollValue = e.currentValue) : (null != t.currentScrollValue && Math.abs(t.currentScrollValue - e.currentValue),
                    t._renderrows(t.virtualsizeinfo),
                    t.currentScrollValue = e.currentValue),
                    t.pageable || t.groupable || !t.dataview.virtualmode || (t.loadondemandupdate && clearTimeout(t.loadondemandupdate),
                    t.loadondemandupdate = setTimeout(function() {
                        t.loadondemand = !0,
                        t._renderrows(t.virtualsizeinfo)
                    }, 100)),
                    i && (t._lastScroll = new Date))
                }
                ,
                t.hScrollInstance.valueChanged = function(r) {
                    if (t.virtualsizeinfo) {
                        t._closemenu();
                        var s = function() {
                            t._renderhorizontalscroll(),
                            t._renderrows(t.virtualsizeinfo),
                            t.editcell && !t.editrow && t._showcelleditor && t.editcell.editing && (t.hScrollInstance.isScrolling() || t._showcelleditor(t.editcell.row, t.getcolumn(t.editcell.column), t.editcell.element, t.editcell.init))
                        };
                        if (i)
                            s();
                        else {
                            null == t._browser ? t._isIE10() : t._browser;
                            navigator && -1 != navigator.userAgent.indexOf("Safari") && -1 == navigator.userAgent.indexOf("Chrome") ? (t._hScrollTimer && clearTimeout(t._hScrollTimer),
                            t._hScrollTimer = setTimeout(function() {
                                s()
                            }, 1)) : e.jqx.browser.msie ? (t._hScrollTimer && clearTimeout(t._hScrollTimer),
                            t._hScrollTimer = setTimeout(function() {
                                s()
                            }, .01)) : s()
                        }
                        i && (t._lastScroll = new Date)
                    }
                }
                ,
                t._mousewheelfunc = t._mousewheelfunc || function(e) {
                    if (!t.editcell && t.enablemousewheel)
                        return t.wheel(e, t),
                        !1
                }
                ,
                t.removeHandler(t.host, "mousewheel", t._mousewheelfunc),
                t.addHandler(t.host, "mousewheel", t._mousewheelfunc);
                var r = "mousedown.jqxgrid";
                i && (r = e.jqx.mobile.getTouchEventName("touchend")),
                t.addHandler(t.host, r, function(i) {
                    if (t.isTouchDevice()) {
                        if (t._newScroll = new Date,
                        t._newScroll - t._lastScroll < 500)
                            return !1;
                        if (e(i.target).ischildof(t.vScrollBar))
                            return !1;
                        if (e(i.target).ischildof(t.hScrollBar))
                            return !1
                    }
                    t._mousedown = new Date;
                    var r = t._handlemousedown(i, t);
                    return t.isNestedGrid && (t.resizablecolumn || t.columnsreorder || i.stopPropagation()),
                    t._lastmousedown = new Date,
                    r
                }),
                i || (t.addHandler(t.host, "dblclick.jqxgrid", function(i) {
                    if (t.editable && t.begincelledit && "dblclick" == t.editmode)
                        t._handledblclick(i, t);
                    else if (e.jqx.browser.msie && e.jqx.browser.version < 9)
                        t._handlemousedown(i, t);
                    return t.mousecaptured = !1,
                    t._lastmousedown = new Date,
                    !0
                }),
                t._mousemovefunc = function(e) {
                    if (t._handlemousemove)
                        return t._handlemousemove(e, t)
                }
                ,
                t.addHandler(t.content, "mousemove", t._mousemovefunc),
                t._handlemousemoveselection && (t._mousemovedocumentfunc = function(e) {
                    if (t._handlemousemoveselection)
                        return t._handlemousemoveselection(e, t)
                }
                ,
                t.addHandler(e(document), "mousemove.selection" + t.element.id, t._mousemovedocumentfunc)),
                t.addHandler(e(document), "mouseup.selection" + t.element.id, function(e) {
                    t._handlemouseupselection && t._handlemouseupselection(e, t)
                }));
                try {
                    if (("" != document.referrer || window.frameElement) && null != window.top && window.top != window.self) {
                        var s = null;
                        if (window.parent && document.referrer && (s = document.referrer),
                        s && -1 != s.indexOf(document.location.host)) {
                            t.addHandler(e(window.top.document), "mouseup.grid" + t.element.id, function(e) {
                                if (t._handlemouseupselection)
                                    try {
                                        t._handlemouseupselection(e, t)
                                    } catch (e) {}
                            })
                        }
                    }
                } catch (e) {}
                t.focused = !1,
                i || (t.addHandler(t.content, "mouseenter", function(e) {
                    t.focused = !0,
                    t.wrapper && (t.wrapper.attr("tabindex", 1),
                    t.content.attr("tabindex", 2)),
                    t._overlayElement && (t.vScrollInstance.isScrolling() || t.hScrollInstance.isScrolling() ? t._overlayElement[0].style.visibility = "visible" : t._overlayElement[0].style.visibility = "hidden")
                }),
                t.addHandler(t.content, "mouseleave", function(e) {
                    t._handlemousemove && t.enablehover && t._clearhoverstyle(),
                    t._overlayElement && (t._overlayElement[0].style.visibility = "hidden"),
                    t.focused = !1
                }),
                (t.groupable || t.columnsreorder) && t.addHandler(e(document), "selectstart." + t.element.id, function(e) {
                    if (!0 === t.__drag)
                        return !1
                }),
                t.addHandler(t.content, "selectstart." + t.element.id, function(i) {
                    if (t.enablebrowserselection)
                        return !0;
                    if (t.showfilterrow && e(i.target).ischildof(t.filterrow))
                        return !0;
                    if (t.showeverpresentrow) {
                        if (e(i.target).ischildof(t.addnewrow))
                            return !0;
                        if (t.addnewrowtop && e(i.target).ischildof(t.addnewrowtop))
                            return !0
                    }
                    return !!(i.target.className && i.target.className.indexOf("jqx-grid-widget") >= 0) || !!t.editcell && void (i.stopPropagation && i.stopPropagation())
                }),
                t.addHandler(e(document), "keyup.edit" + t.element.id, function(e) {
                    t._keydown = !1
                }),
                t.addHandler(e(document), "keydown.edit" + t.element.id, function(i) {
                    if (t.adaptiveview)
                        return !0;
                    if ((t._keydown = !t.editcell,
                    20 === (s = i.charCode ? i.charCode : i.keyCode ? i.keyCode : 0) && (t._capsLock ? t._capsLock = !1 : t._capsLock = !0),
                    t.handlekeyboardnavigation) && ((t.focused || i.target === t.element || e(i.target).ischildof(t.host)) && 1 == t.handlekeyboardnavigation(i)))
                        return !1;
                    if (t.editable && t.editcell && (13 != s && 27 != s && 9 != s && 32 != s || t._handleeditkeydown && (r = t._handleeditkeydown(i, t))),
                    27 == s && (t.mousecaptured = !1,
                    "visible" == t.selectionarea.css("visibility") && t.selectionarea.css("visibility", "hidden")),
                    e.jqx.browser.msie && e.jqx.browser.version < 12 && t.focused && !t.isNestedGrid) {
                        if (13 == s && 0 == r)
                            return r;
                        var r = !0
                          , s = i.charCode ? i.charCode : i.keyCode ? i.keyCode : 0;
                        if (!t.editcell && t.editable && "programmatic" != t.editmode && t._handleeditkeydown && (r = t._handleeditkeydown(i, t)),
                        r && t.keyboardnavigation && t._handlekeydown)
                            return (r = t._handlekeydown(i, t)) || (i.preventDefault && i.preventDefault(),
                            null != i.stopPropagation && i.stopPropagation()),
                            r
                    }
                    return !0
                }),
                t.addHandler(t.host, "keyup.edit" + t.element.id, function(i) {
                    if (t.adaptiveview)
                        return !0;
                    if (9 === i.keyCode && !e(document.activeElement).ischildof(t.filterrow) && !e(document.activeElement).ischildof(t.pager))
                        switch (t.selectionmode) {
                        case "singlecell":
                        case "multiplecells":
                        case "multiplecellsextended":
                        case "multiplecellsadvanced":
                            null === t.getselectedcell() && t.selectcell(0, t.columns.records[0].displayfield);
                            break;
                        default:
                            -1 === t.getselectedrowindex() && t.selectrow(0)
                        }
                }),
                t.addHandler(t.host, "keydown.edit" + t.element.id, function(i) {
                    var r = !0;
                    if (t.adaptiveview)
                        return !0;
                    if (t.handlekeyboardnavigation && 1 == t.handlekeyboardnavigation(i))
                        return !1;
                    if (t.editable && "programmatic" != t.editmode && t._handleeditkeydown && (r = t._handleeditkeydown(i, t),
                    t.isNestedGrid && i.stopPropagation()),
                    !t.editcell && i.altKey && !e(document.activeElement).ischildof(t.filterrow) && !e(document.activeElement).ischildof(t.pager))
                        if (40 === i.keyCode) {
                            var s = t.getselectedcell();
                            s && t.openmenu(s.column)
                        } else
                            38 === i.keyCode && t._closemenu();
                    return e.jqx.browser.msie && e.jqx.browser.version < 8 ? t.isNestedGrid && r && t.keyboardnavigation && t._handlekeydown && (r = t._handlekeydown(i, t),
                    i.stopPropagation()) : r && t.keyboardnavigation && t._handlekeydown && (r = t._handlekeydown(i, t),
                    t.isNestedGrid && i.stopPropagation()),
                    r || (i.preventDefault && i.preventDefault(),
                    null != i.stopPropagation && i.stopPropagation()),
                    r && t.selectedcells && t.selectedcells.length > 0 && 9 === i.keyCode && i.shiftKey && t.table && t.table[0].rows && t.table[0].rows.length > 0 && (e(document.activeElement).ischildof(t.filterrow) || e(document.activeElement).ischildof(t.pager) || t.table[0].rows[0].cells[0].focus()),
                    r
                }))
            },
            _hittestrow: function(t, i) {
                if (null != this.vScrollInstance && null != this.hScrollInstance) {
                    null == t && (t = 0);
                    var r = this.vScrollInstance
                      , s = this.hScrollInstance
                      , n = r.value;
                    "visible" != this.vScrollBar.css("visibility") && (n = 0);
                    var o = s.value;
                    "visible" != this.hScrollBar.css("visibility") && (o = 0),
                    "deferred" == this.scrollmode && null != this._newmax && n > this._newmax && (n = this._newmax);
                    var a = parseInt(n) + i;
                    parseInt(o);
                    if (null != this.visiblerows && 0 != this.visiblerows.length) {
                        var l = !1
                          , d = this._findvisiblerow(a, this.visiblerows);
                        if (d >= 0) {
                            var h = this.visiblerows[d]
                              , c = this.rowdetails && h.rowdetails
                              , u = !h.rowdetailshidden;
                            if (c) {
                                var p = this.visiblerows[d - 1];
                                if (p == h && (h = p,
                                d--),
                                u) {
                                    var f = e(this.hittestinfo[d].visualrow).position().top + parseInt(this.table.css("top"))
                                      , m = e(this.hittestinfo[d].visualrow).height();
                                    i >= f && i <= f + m || (d++,
                                    h = this.visiblerows[d],
                                    l = !0)
                                }
                            }
                        }
                        return {
                            index: d,
                            row: h,
                            details: l
                        }
                    }
                }
            },
            getcellatposition: function(t, i) {
                var r = this.that
                  , s = this.showheader ? this.columnsheader.height() + 2 : 0
                  , n = this._groupsheader() ? this.groupsheader.height() : 0;
                n += this.showtoolbar ? this.toolbarheight : 0;
                var o = this.host.coord();
                this.hasTransform && (o = e.jqx.utilities.getOffset(this.host));
                var a = t - o.left
                  , l = i - s - o.top - n
                  , d = this._hittestrow(a, l)
                  , h = d.row
                  , c = d.index
                  , u = this.table[0].rows[c];
                if (this.dataview && 0 == this.dataview.records.length) {
                    for (var p = this.table[0].rows, f = 0, m = 0; m < p.length; m++) {
                        if (l >= f && l < f + this.rowsheight) {
                            u = p[m];
                            break
                        }
                        f += this.rowsheight
                    }
                    h = {
                        boundindex: m
                    }
                }
                if (null == u)
                    return !0;
                var g = this.hScrollInstance.value
                  , v = 0;
                for (this.groupable && this.groups.length,
                m = 0; m < u.cells.length; m++) {
                    var w = parseInt(e(this.columnsrow[0].cells[m]).css("left"));
                    t = w - g;
                    if (r.columns.records[m].pinned && (t = w),
                    !r.columns.records[m].hidden && !r.columns.records[m].adaptivehidden)
                        if (t + e(this.columnsrow[0].cells[m]).width() >= a && a >= t) {
                            v = m;
                            break
                        }
                }
                if (null != h) {
                    var x = this._getcolumnat(v);
                    return {
                        row: this.getboundindex(h),
                        column: x.datafield,
                        value: this.getcellvalue(this.getboundindex(h), x.datafield)
                    }
                }
                return null
            },
            _handlemousedown: function(t, i) {
                if (null == t.target)
                    return !0;
                if (i.disabled)
                    return !0;
                if (e(t.target).ischildof(this.columnsheader) || e(t.target).ischildof(this.hScrollBar) || e(t.target).ischildof(this.vScrollBar))
                    return !0;
                if (t.target === i.bottomRight[0])
                    return !0;
                var r, s;
                if (t.which ? r = 3 == t.which : t.button && (r = 2 == t.button),
                t.which ? s = 2 == t.which : t.button && (s = 1 == t.button),
                s)
                    return !0;
                if (this.adaptiveview) {
                    if (e(t.target).ischildof(e(this.adaptiveview)))
                        return !0;
                    if (t.target == this.adaptiveview)
                        return !0
                }
                if (this.showstatusbar) {
                    if (e(t.target).ischildof(this.statusbar))
                        return !0;
                    if (t.target == this.statusbar[0])
                        return !0
                }
                if (this.showtoolbar) {
                    if (e(t.target).ischildof(this.toolbar))
                        return !0;
                    if (t.target == this.toolbar[0])
                        return !0
                }
                if (this.pageable) {
                    if (e(t.target).ischildof(this.pager))
                        return !0;
                    if (t.target == this.pager[0])
                        return !0
                }
                if (!this.columnsheader)
                    return !0;
                if (!this.editcell && this.pageable && e(t.target).ischildof(this.pager))
                    return !0;
                var n = this.showheader ? this.columnsheader.height() + 2 : 0
                  , o = this._groupsheader() ? this.groupsheader.height() : 0;
                o += this.showtoolbar ? this.toolbarheight : 0;
                var a = this.host.coord();
                if (this.hasTransform) {
                    a = e.jqx.utilities.getOffset(this.host);
                    var l = this._getBodyOffset();
                    a.left -= l.left,
                    a.top -= l.top
                }
                var d = parseInt(t.pageX)
                  , h = parseInt(t.pageY);
                if (this.isTouchDevice()) {
                    var c = i.getTouches(t)[0];
                    d = parseInt(c.pageX),
                    h = parseInt(c.pageY),
                    1 == i.touchmode && null != c._pageX && (d = parseInt(c._pageX),
                    h = parseInt(c._pageY))
                }
                var u = d - a.left
                  , p = h - n - a.top - o;
                if (this.pageable && !this.autoheight && this.gotopage && p > this.pager.coord().top - a.top - o - n)
                    return;
                var f = this._hittestrow(u, p);
                if (f && !f.details) {
                    var m = f.row
                      , g = f.index
                      , v = t.target.className
                      , w = this.table[0].rows[g];
                    if (null == w)
                        return i.editable && i.begincelledit && i.editcell && i.endcelledit(i.editcell.row, i.editcell.column, !1, !0),
                        !0;
                    i.mousecaptured = !0,
                    i.mousecaptureposition = {
                        left: t.pageX,
                        top: t.pageY - o,
                        clickedrow: w
                    };
                    var x = this.hScrollInstance
                      , b = x.value;
                    this.rtl && "hidden" != this.hScrollBar.css("visibility") && (b = x.max - x.value);
                    var y = -1
                      , _ = this.groupable ? this.groups.length : 0;
                    this.rtl && ("hidden" != this.vScrollBar[0].style.visibility && (b -= this.scrollbarsize + 4),
                    "hidden" == this.hScrollBar[0].style.visibility && (b = -parseInt(this.content.css("left"))));
                    for (var q = 0; q < w.cells.length; q++) {
                        d = (j = parseInt(e(this.columnsrow[0].cells[q]).css("left"))) - b;
                        if (i.columns.records[q].pinned && !i.rtl && (d = j),
                        null == (S = this._getcolumnat(q)) || !S.hidden)
                            if (null == S || !S.adaptivehidden)
                                if (d + e(this.columnsrow[0].cells[q]).width() >= u && u >= d) {
                                    y = q,
                                    i.mousecaptureposition.clickedcell = q;
                                    break
                                }
                    }
                    if (this.rtl && this._haspinned)
                        for (q = w.cells.length - 1; q >= 0 && i.columns.records[q].pinned; q--) {
                            var j;
                            d = j = e(this.columnsrow[0].cells[q]).coord().left - this.host.coord().left;
                            if ((null == (S = this._getcolumnat(q)) || !S.hidden) && (null == S || !S.adaptivehidden) && d + e(this.columnsrow[0].cells[q]).width() >= u && u >= d) {
                                y = q,
                                i.mousecaptureposition.clickedcell = q;
                                break
                            }
                        }
                    if (null != m && y >= 0) {
                        this._raiseEvent(1, {
                            rowindex: this.getboundindex(m),
                            visibleindex: m.visibleindex,
                            row: m,
                            group: m.group,
                            rightclick: r,
                            originalEvent: t
                        });
                        var S = this._getcolumnat(y)
                          , C = this.getcellvalue(this.getboundindex(m), S.datafield);
                        if (this.editable && this.editcell && (this._currentEditableColumn = y,
                        S.datafield == this.editcell.column && this.getboundindex(m) == this.editcell.row && (this.mousecaptured = !1)),
                        "adaptive" === S.columntype) {
                            var T = document.createElement("div")
                              , I = document.createElement("div")
                              , k = document.createElement("a")
                              , D = document.createElement("a")
                              , P = document.createElement("div")
                              , B = this.getrowdata(this.getboundindex(m));
                            k.href = "#",
                            D.href = "#",
                            T.style.zIndex = 99999,
                            T.style.position = "absolute",
                            T.style.left = "0px",
                            T.style.top = "0px",
                            T.style.width = "100%",
                            T.style.height = "100%",
                            T.className = "jqx-adaptive-view jqx-widget-content",
                            P.style.position = "relative",
                            P.style.top = "100%",
                            P.style.textAlign = "center",
                            P.style.marginTop = "-40px",
                            I.style.position = "absolute",
                            I.style.left = "0px",
                            I.style.top = "0px",
                            I.style.width = "100%",
                            I.style.height = "100%",
                            this.theme && (T.className = "jqx-widget-content jqx-widget-content-" + this.theme);
                            var M = document.createElement("span");
                            M.className = "jqx-icon-close",
                            this.theme && (M.className = "jqx-icon-close jqx-widget-close-" + this.theme),
                            M.style.zIndex = 99,
                            M.style.position = "absolute",
                            M.style.right = "10px",
                            M.style.top = "10px",
                            M.style.width = "16px",
                            M.style.height = "16px",
                            T.appendChild(I),
                            T.appendChild(M),
                            k.innerHTML = this.gridlocalization.okstring,
                            D.innerHTML = this.gridlocalization.cancelstring,
                            k.addEventListener("mousedown", function(e) {
                                for (var t = {}, r = i.adaptiveview.querySelectorAll("input"), s = 0; s < r.length; s++) {
                                    var n = r[s].value;
                                    t[r[s].getAttribute("data-column")] = n
                                }
                                return i.updaterow(B.uid, t),
                                T.parentNode.removeChild(T),
                                i.adaptiveview = null,
                                e.stopPropagation(),
                                !1
                            }),
                            D.addEventListener("mousedown", function() {
                                return T.parentNode.removeChild(T),
                                i.adaptiveview = null,
                                t.stopPropagation(),
                                !1
                            }),
                            this.editable && (P.appendChild(k),
                            P.appendChild(D),
                            T.appendChild(P));
                            var H = "<table class='jqx-adaptive-table'><tr>";
                            for (g = 0,
                            q = 0; q < this.columns.records.length; q++) {
                                if ("adaptive" !== (S = this.columns.records[q]).columntype) {
                                    q > 0 && g % 2 == 0 && (H += "</tr><tr>");
                                    var O = B[S.displayfield];
                                    "" != S.cellsformat && e.jqx.dataFormat && (e.jqx.dataFormat.isDate(O) ? O = e.jqx.dataFormat.formatdate(O, S.cellsformat, this.gridlocalization) : e.jqx.dataFormat.isNumber(O) && (O = e.jqx.dataFormat.formatnumber(O, S.cellsformat, this.gridlocalization)));
                                    var z = this.filterable ? '<div datafield="' + S.datafield + '" class="' + i.toTP("jqx-grid-column-filterbutton") + '" style="position: relative; top: 4px; display: inline-block; width: 16px; height:16px;"></div>' : "";
                                    this.editable ? S.editable ? H += "<td>" + z + S.text + ": <input data-column='" + S.displayfield + "' value='" + O + "'/></td>" : H += "<td>" + z + S.text + ": <input data-column='" + S.displayfield + "' readonly value='" + O + "'/></td>" : H += "<td>" + z + S.text + ": " + O + "</td>",
                                    g++
                                }
                            }
                            return H += "</tr></table>",
                            I.innerHTML = H,
                            M.addEventListener("mousedown", function(e) {
                                T.parentNode.removeChild(T),
                                i.adaptiveview = null
                            }),
                            this.wrapper[0].appendChild(T),
                            this.adaptiveview = T,
                            void e(this.adaptiveview).find(".jqx-grid-column-filterbutton").on("click", function() {
                                var e = this.getAttribute("datafield")
                                  , t = this.offsetTop;
                                i.openmenu(e),
                                setTimeout(function() {
                                    i.gridmenu.css("top", 30 + t),
                                    i.gridmenu.css("left", 25),
                                    i.gridmenu.css("z-index", 99999),
                                    i.gridmenu.parent().css("z-index", 99999)
                                }, 300)
                            })
                        }
                        if (this._raiseEvent(8, {
                            rowindex: this.getboundindex(m),
                            column: S ? S.getcolumnproperties() : null,
                            row: m,
                            visibleindex: m.visibleindex,
                            datafield: S ? S.datafield : null,
                            columnindex: y,
                            value: C,
                            rightclick: r,
                            originalEvent: t
                        }),
                        S.createwidget)
                            return !0;
                        if (this.isTouchDevice())
                            if ("checkbox" == S.columntype && this.editable && this._overlayElement) {
                                if (!this.editcell)
                                    return this._overlayElement.css("visibility", "hidden"),
                                    this.editcell = this.getcell(g, S.datafield),
                                    !0
                            } else if ("button" == S.columntype && this._overlayElement)
                                return S.buttonclick && S.buttonclick(w.cells[y].buttonrow, t),
                                !0;
                        var A = !1;
                        if (null != this._lastmousedown && this._mousedown - this._lastmousedown < 300 && this._clickedrowindex == this.getboundindex(m) && (this._raiseEvent(22, {
                            rowindex: this.getboundindex(m),
                            row: m,
                            visibleindex: m.visibleindex,
                            group: m.group,
                            rightclick: r,
                            originalEvent: t
                        }),
                        this._clickedcolumn == S.datafield && this._raiseEvent(23, {
                            rowindex: this.getboundindex(m),
                            row: m,
                            visibleindex: m.visibleindex,
                            column: S ? S.getcolumnproperties() : null,
                            datafield: S ? S.datafield : null,
                            columnindex: y,
                            value: C,
                            rightclick: r,
                            originalEvent: t
                        }),
                        A = !0,
                        this._clickedrowindex = -1,
                        this._clickedcolumn = null,
                        t.isPropagationStopped && t.isPropagationStopped()))
                            return !1;
                        if (r)
                            return !0;
                        A || (this._clickedrowindex = this.getboundindex(m),
                        this._clickedcolumn = S.datafield);
                        var L = e.jqx.utilities.getBrowser();
                        if ("msie" == L.browser && parseInt(L.version) <= 7 && (0 == y && this.rowdetails && (v = "jqx-grid-group-collapse"),
                        _ > 0 && y <= _ && (v = "jqx-grid-group-collapse")),
                        -1 != v.indexOf("jqx-grid-group-expand") || -1 != v.indexOf("jqx-grid-group-collapse"))
                            this.rtl ? _ > 0 && y > w.cells.length - _ - 1 && this._togglegroupstate ? this._togglegroupstate(m.bounddata, !0) : y == w.cells.length - 1 - _ && this.rowdetails && this.showrowdetailscolumn && (this._togglerowdetails(m.bounddata, !0),
                            this.gridcontent[0].scrollTop = 0,
                            this.gridcontent[0].scrollLeft = 0) : _ > 0 && y < _ && this._togglegroupstate ? this._togglegroupstate(m.bounddata, !0) : y == _ && this.rowdetails && this.showrowdetailscolumn && (this._togglerowdetails(m.bounddata, !0),
                            this.gridcontent[0].scrollTop = 0,
                            this.gridcontent[0].scrollLeft = 0);
                        else if (-1 != m.boundindex) {
                            var E = this.selectedrowindexes.slice(0)
                              , N = !1;
                            if ("none" != i.selectionmode && "checkbox" != i.selectionmode && this._selectrowwithmouse) {
                                "multiplecellsadvanced" != i.selectionmode && "multiplecellsextended" != i.selectionmode && "multiplerowsextended" != i.selectionmode && "multiplerowsadvanced" != i.selectionmode || t.ctrlKey || t.shiftKey || t.metaKey || (i.selectedrowindexes = new Array,
                                i.selectedcells = new Array);
                                var F = !1
                                  , V = this.getboundindex(m);
                                i._oldselectedrow !== V && "none" !== i.selectionmode || (F = !0),
                                -1 == i.selectionmode.indexOf("cell") ? ("singlerow" != i.selectionmode || i.selectedrowindex != V && "singlerow" == i.selectionmode) && (this._applyrowselection(V, !0, !1, null, S.datafield),
                                this._selectrowwithmouse(i, f, E, S.datafield, t.ctrlKey || t.metaKey, t.shiftKey)) : null != S.datafield && (this._selectrowwithmouse(i, f, E, S.datafield, t.ctrlKey || t.metaKey, t.shiftKey),
                                t.shiftKey || this._applycellselection(V, S.datafield, !0, !1)),
                                i._oldselectedcell && i._oldselectedcell.datafield == i.selectedcell.datafield && i._oldselectedcell.rowindex == i.selectedcell.rowindex && (N = !0),
                                i._oldselectedcell = i.selectedcell,
                                i._oldselectedrow = V
                            }
                            if (i.autosavestate && i.savestate && i.savestate(),
                            i.editable && i.begincelledit && "programmatic" != i.editmode) {
                                if (t.isPropagationStopped && t.isPropagationStopped())
                                    return !1;
                                if ("selectedrow" == i.editmode) {
                                    if (F && !i.editcell) {
                                        if ("checkbox" !== S.columntype) {
                                            this._currentEditableColumn = y;
                                            i.beginrowedit(this.getboundindex(m))
                                        }
                                    } else if (i.editcell && !F && "none" != i.selectionmode)
                                        i.endrowedit(i.editcell.row)
                                } else {
                                    V = this.getboundindex(m);
                                    var R = "click" == i.editmode || N && "selectedcell" == i.editmode;
                                    if (-1 == i.selectionmode.indexOf("cell") && "dblclick" != i.editmode && (R = !0),
                                    R && null != m.boundindex && S.editable) {
                                        i.begincelledit(this.getboundindex(m), S.datafield, S.defaulteditorvalue);
                                        -1 != i.selectionmode.indexOf("cell") && i._applycellselection(V, S.datafield, !1, !1)
                                    }
                                    -1 != i.selectionmode.indexOf("cell") && "selectedcell" == i.editmode && !N && i.editcell && i.endcelledit(i.editcell.row, i.editcell.column, !1, !0),
                                    "dblclick" != i.editmode || N || !i.editcell || i.editcell.row == V && S.datafield == i.editcell.column || i.endcelledit(i.editcell.row, i.editcell.column, !1, !0)
                                }
                                return !0
                            }
                        }
                    }
                    return !0
                }
            },
            _columnPropertyChanged: function(e, t, i, r) {},
            _rowPropertyChanged: function(e, t, i, r) {},
            _serializeObject: function(t) {
                if (null == t)
                    return "";
                var i = "";
                return e.each(t, function(e) {
                    e > 0 && (i += ", "),
                    i += "[";
                    var t = 0;
                    for (obj in this)
                        t > 0 && (i += ", "),
                        i += "{" + obj + ":" + this[obj] + "}",
                        t++;
                    i += "]"
                }),
                i
            },
            isbindingcompleted: function() {
                return !this._loading
            },
            propertiesChangedHandler: function(e, t, i) {
                i.width && i.height && 2 == Object.keys(i).length && (e._updatesize(!0, !0),
                e._resizeWindow(),
                e.virtualmode && !e._loading ? e.vScrollInstance.setPosition(0) : setTimeout(function() {
                    e._renderrows(e.virtualsizeinfo)
                }, 100))
            },
            propertyChangedHandler: function(t, i, r, s) {
                if (null != this.isInitialized && 0 != this.isInitialized && !(t.batchUpdate && t.batchUpdate.width && t.batchUpdate.height && 2 == Object.keys(t.batchUpdate).length))
                    switch (i = i.toLowerCase()) {
                    case "editable":
                    case "showcolumnheaderlines":
                    case "showcolumnlines":
                    case "showrowlines":
                        t.refresh();
                        break;
                    case "everpresentrowactionsmode":
                        r != s && (t._removeaddnewrow(),
                        t.render());
                        break;
                    case "everpresentrowactions":
                        t._updateaddnewrowui();
                        break;
                    case "showeverpresentrow":
                    case "everpresentrowposition":
                    case "everpresentrowheight":
                        r != s && (t._removeaddnewrow(),
                        t.render());
                        break;
                    case "rtl":
                        t.content.css("left", ""),
                        t.columns = t._columns,
                        t._filterrowcache = [],
                        t.vScrollBar.jqxScrollBar({
                            rtl: s
                        }),
                        t.hScrollBar.jqxScrollBar({
                            rtl: s
                        }),
                        t._initpager && t._initpager(),
                        t._initgroupsheader && t._initgroupsheader(),
                        t.render();
                        break;
                    case "enablebrowserselection":
                        t.showfilterrow || (t.showstatusbar || t.showtoolbar || t.host.addClass("jqx-disableselect"),
                        t.content.addClass("jqx-disableselect")),
                        t.enablebrowserselection && (t.content.removeClass("jqx-disableselect"),
                        t.host.removeClass("jqx-disableselect"));
                        break;
                    case "columnsheight":
                        (32 != t.columnsheight || t.columngroups) && t._measureElement("column"),
                        t._render(!0, !0, !0, !1, !1);
                        break;
                    case "rowsheight":
                        s != r && (31 != t.rowsheight && t._measureElement("cell"),
                        t.virtualsizeinfo = null,
                        t.rendergridcontent(!0, !1),
                        t.refresh());
                        break;
                    case "scrollMode":
                        t.vScrollInstance.thumbStep = t.rowsheight;
                        break;
                    case "showdefaultloadelement":
                        t._builddataloadelement();
                        break;
                    case "showfiltermenuitems":
                    case "showsortmenuitems":
                    case "showgroupmenuitems":
                    case "filtermode":
                        t._initmenu();
                        break;
                    case "touchmode":
                        r != s && (t._removeHandlers(),
                        t.touchDevice = null,
                        t.vScrollBar.jqxScrollBar({
                            touchMode: s
                        }),
                        t.hScrollBar.jqxScrollBar({
                            touchMode: s
                        }),
                        t._updateTouchScrolling(),
                        t._arrange(),
                        t._updatecolumnwidths(),
                        t._updatecellwidths(),
                        t._addHandlers());
                        break;
                    case "autoshowcolumnsmenubutton":
                        r != s && t._rendercolumnheaders();
                        break;
                    case "rendergridrows":
                        r != s && t.updatebounddata();
                        break;
                    case "editmode":
                        r != s && (t._removeHandlers(),
                        t._addHandlers());
                        break;
                    case "source":
                        t.updatebounddata(),
                        t.virtualmode && !t._loading && (t.loadondemand = !0,
                        t._renderrows(t.virtualsizeinfo));
                        break;
                    case "horizontalscrollbarstep":
                    case "verticalscrollbarstep":
                    case "horizontalscrollbarlargestep":
                    case "verticalscrollbarlargestep":
                        this.vScrollBar.jqxScrollBar({
                            step: this.verticalscrollbarstep,
                            largestep: this.verticalscrollbarlargestep
                        }),
                        this.hScrollBar.jqxScrollBar({
                            step: this.horizontalscrollbarstep,
                            largestep: this.horizontalscrollbarlargestep
                        });
                        break;
                    case "closeablegroups":
                        t._initgroupsheader && t._initgroupsheader();
                        break;
                    case "showgroupsheader":
                        r != s && (t._arrange(),
                        t._initgroupsheader && t._initgroupsheader(),
                        t._renderrows(t.virtualsizeinfo));
                        break;
                    case "theme":
                        s != r && (e.jqx.utilities.setTheme(r, s, t.host),
                        t.gridmenu && t.gridmenu.jqxMenu({
                            theme: s
                        }),
                        t.pageable && t._updatepagertheme(),
                        t.filterable && t._updatefilterrowui(!0),
                        t.showeverpresentrow && t._updateaddnewrowui(!0));
                        break;
                    case "showtoolbar":
                    case "toolbarheight":
                        r != s && (t._arrange(),
                        t.refresh());
                        break;
                    case "showstatusbar":
                        r != s && (t.statusbar && (s ? t.statusbar.show() : t.statusbar.hide()),
                        t._arrange(),
                        t.refresh());
                        break;
                    case "statusbarheight":
                        r != s && (t._arrange(),
                        t.refresh());
                        break;
                    case "filterable":
                    case "showfilterrow":
                        r != s && t.render();
                        break;
                    case "autoshowfiltericon":
                    case "showfiltercolumnbackground":
                    case "showpinnedcolumnbackground":
                    case "showsortcolumnbackground":
                        r != s && t.rendergridcontent();
                        break;
                    case "showrowdetailscolumn":
                        r != s && t.render();
                        break;
                    case "scrollbarsize":
                        r != s && (e.jqx.utilities.scrollBarSize = s,
                        t._arrange());
                        break;
                    case "width":
                    case "height":
                        r != s && (t._updatesize(!0, !0),
                        t._resizeWindow(),
                        t.virtualmode && !t._loading ? t.vScrollInstance.setPosition(0) : setTimeout(function() {
                            t._renderrows(t.virtualsizeinfo)
                        }, 100));
                        break;
                    case "altrows":
                    case "altstart":
                    case "altstep":
                        r != s && t._renderrows(t.virtualsizeinfo);
                        break;
                    case "groupsheaderheight":
                        r != s && (t._arrange(),
                        t._initgroupsheader && t._initgroupsheader());
                        break;
                    case "pagerheight":
                        r != s && t._initpager();
                        break;
                    case "selectedrowindex":
                        t.selectrow(s);
                        break;
                    case "selectionmode":
                        r != s && ("none" == s && (t.selectedrowindexes = new Array,
                        t.selectedcells = new Array,
                        t.selectedrowindex = -1),
                        t._renderrows(t.virtualsizeinfo),
                        "checkbox" == s && t._render(!1, !1, !0, !1, !1));
                        break;
                    case "showheader":
                        s ? t.columnsheader.css("display", "block") : t.columnsheader.css("display", "none");
                        break;
                    case "virtualmode":
                        r != s && (t.dataview.virtualmode = t.virtualmode,
                        t.dataview.refresh(!1),
                        t._render(!1, !1, !1));
                        break;
                    case "columnsmenu":
                        r != s && t.render();
                        break;
                    case "columngroups":
                        t._render(!0, !0, !0, !1, !1);
                        break;
                    case "columns":
                        if (t.columns && t.columns.length > t.headerZIndex && (t.headerZIndex = t.columns.length + 100),
                        t._serializeObject(t._cachedcolumns) !== t._serializeObject(s)) {
                            var n = !1;
                            t.filterable && r && r.records && e.each(r.records, function() {
                                this.filter && (n = !0),
                                t.dataview.removefilter(this.displayfield, this.filter)
                            }),
                            t._columns = null,
                            t._filterrowcache = [],
                            t.render(),
                            n && t.applyfilters(),
                            t._cachedcolumns = t.columns,
                            t.removesort && t.removesort()
                        } else
                            t[i] = r;
                        break;
                    case "autoheight":
                        r != s && t._render(!1, !1, !0);
                        break;
                    case "pagermode":
                    case "pagerbuttonscount":
                        r != s && t._initpager && (t.pagershowrowscombo && (t.pagershowrowscombo.jqxDropDownList("destroy"),
                        t.pagershowrowscombo = null),
                        t.pagerrightbutton && (t.removeHandler(t.pagerrightbutton, "mousedown"),
                        t.removeHandler(t.pagerrightbutton, "mouseup"),
                        t.removeHandler(t.pagerrightbutton, "click"),
                        t.pagerrightbutton.jqxButton("destroy"),
                        t.pagerrightbutton = null),
                        t.pagerleftbutton && (t.removeHandler(t.pagerleftbutton, "mousedown"),
                        t.removeHandler(t.pagerleftbutton, "mouseup"),
                        t.removeHandler(t.pagerleftbutton, "click"),
                        t.pagerleftbutton.jqxButton("destroy"),
                        t.removeHandler(e(document), "mouseup.pagerbuttons" + t.element.id),
                        t.pagerleftbutton = null),
                        t.pagerdiv.remove(),
                        t._initpager());
                        break;
                    case "pagesizeoptions":
                    case "pageable":
                    case "pagesize":
                        if (r != s) {
                            if (t._loading)
                                throw new Error("jqxGrid: " + t.loadingerrormessage);
                            if (!t.host.jqxDropDownList || !t.host.jqxListBox)
                                return void t._testmodules();
                            if (t._initpager) {
                                if ("pageable" != i && "pagermode" != i && "string" == typeof s) {
                                    var o = "The expected value type is: Int.";
                                    if ("pagesize" != i)
                                        o = "The expected value type is: Array of Int values.";
                                    throw new Error("Invalid Value for: " + i + ". " + o)
                                }
                                t.dataview.pageable = t.pageable,
                                t.dataview.pagenum = 0,
                                t.dataview.pagesize = t._getpagesize(),
                                t.virtualmode && t.updatebounddata(),
                                t.dataview.refresh(!0),
                                t._initpager(),
                                "pagesizeoptions" == i && null != s && s.length > 0 && (t.pagesize = parseInt(s[0]),
                                t.dataview.pagesize = parseInt(s[0]),
                                t.prerenderrequired = !0,
                                t._requiresupdate = !0,
                                t.dataview.pagenum = -1,
                                t.gotopage(0))
                            }
                            t._render(!1, !1, !1)
                        }
                        break;
                    case "groups":
                        t._serializeObject(r) !== t._serializeObject(s) && (t.dataview.groups = s,
                        t._refreshdataview(),
                        t._render(!0, !0, !0, !1));
                        break;
                    case "groupable":
                        r != s && (t.dataview.groupable = t.groupable,
                        t.dataview.pagenum = 0,
                        t.dataview.refresh(!1),
                        t._render(!1, !1, !0));
                        break;
                    case "renderstatusbar":
                        null != s && t.renderstatusbar(t.statusbar);
                        break;
                    case "rendertoolbar":
                        null != s && t.rendertoolbar(t.toolbar);
                        break;
                    case "disabled":
                        s ? t.host.addClass(t.toThemeProperty("jqx-fill-state-disabled")) : t.host.removeClass(t.toThemeProperty("jqx-fill-state-disabled")),
                        e.jqx.aria(t, "aria-disabled", t.disabled),
                        t.pageable && (t.pagerrightbutton && (t.pagerrightbutton.jqxButton({
                            disabled: s
                        }),
                        t.pagerleftbutton.jqxButton({
                            disabled: s
                        }),
                        t.pagershowrowscombo.jqxDropDownList({
                            disabled: s
                        }),
                        t.pagergotoinput.attr("disabled", s)),
                        t.pagerfirstbutton && (t.pagerfirstbutton.jqxButton({
                            disabled: s
                        }),
                        t.pagerlastbutton.jqxButton({
                            disabled: s
                        }))),
                        t.vScrollBar.jqxScrollBar({
                            disabled: s
                        }),
                        t.hScrollBar.jqxScrollBar({
                            disabled: s
                        }),
                        t.filterable && t.showfilterrow && t._updatefilterrowui(!0),
                        t.showeverpresentrow && t._updateaddnewrowui(!0)
                    }
            }
        }),
        e.jqx.collection = function(e) {
            return this.records = new Array,
            this.owner = e,
            this.updating = !1,
            this.beginupdate = function() {
                this.updating = !0
            }
            ,
            this.resumeupdate = function() {
                this.updating = !1
            }
            ,
            this._raiseEvent = function(e) {}
            ,
            this.clear = function() {
                this.records = new Array
            }
            ,
            this.replace = function(e, t) {
                this.records[e] = t,
                this.updating || this._raiseEvent({
                    type: "replace",
                    element: t
                })
            }
            ,
            this.isempty = function(e) {
                return null == this.records[e]
            }
            ,
            this.initialize = function(e) {
                e < 1 && (e = 1),
                this.records[e - 1] = -1
            }
            ,
            this.length = function() {
                return this.records.length
            }
            ,
            this.indexOf = function(e) {
                return this.records.indexOf(e)
            }
            ,
            this.add = function(e) {
                return null != e && (this.records[this.records.length] = e,
                this.updating || this._raiseEvent({
                    type: "add",
                    element: e
                }),
                !0)
            }
            ,
            this.insertAt = function(e, t) {
                return null != e && null != e && (null != t && (e >= 0 && (e < this.records.length ? (this.records.splice(e, 0, t),
                this.updating || this._raiseEvent({
                    type: "insert",
                    index: e,
                    element: t
                }),
                !0) : this.add(t))))
            }
            ,
            this.remove = function(e) {
                if (null == e || null == e)
                    return !1;
                var t = this.records.indexOf(e);
                return -1 != t && (this.records.splice(t, 1),
                this.updating || this._raiseEvent({
                    type: "remove",
                    element: e
                }),
                !0)
            }
            ,
            this.removeAt = function(e) {
                if (null == e || null == e)
                    return !1;
                if (e < 0)
                    return !1;
                if (e < this.records.length) {
                    var t = this.records[e];
                    return this.records.splice(e, 1),
                    this.updating || this._raiseEvent({
                        type: "removeAt",
                        index: e,
                        element: t
                    }),
                    !0
                }
                return !1
            }
            ,
            this
        }
        ,
        e.jqx.dataview = function() {
            return this.self = this,
            this.aggregates = !1,
            this.grid = null,
            this.uniqueId = "id",
            this.records = [],
            this.rows = [],
            this.columns = [],
            this.groups = [],
            this.filters = new Array,
            this.updated = null,
            this.update = null,
            this.suspend = !1,
            this.pagesize = 0,
            this.pagenum = 0,
            this.totalrows = 0,
            this.totalrecords = 0,
            this.groupable = !0,
            this.loadedrecords = [],
            this.loadedrootgroups = [],
            this.loadedgroups = [],
            this.loadedgroupsByKey = [],
            this.virtualmode = !0,
            this._cachegrouppages = new Array,
            this.source = null,
            this.changedrecords = new Array,
            this.rowschangecallback = null,
            this.that = this,
            this.destroy = function() {
                delete this.self,
                delete this.grid,
                delete this.uniqueId,
                delete this.records,
                delete this.rows,
                delete this.columns,
                delete this.groups,
                delete this.filters,
                delete this.updated,
                delete this.update,
                delete this.suspend,
                delete this.pagesize,
                delete this.pagenum,
                delete this.totalrows,
                delete this.totalrecords,
                delete this.groupable,
                delete this.loadedrecords,
                delete this.loadedrootgroups,
                delete this.loadedgroups,
                delete this.loadedgroupsByKey,
                delete this.virtualmode,
                delete this._cachegrouppages,
                delete this.source,
                delete this.changedrecords,
                delete this.rowschangecallback,
                delete this.that
            }
            ,
            this.suspendupdate = function() {
                this.suspend = !0
            }
            ,
            this.isupdating = function() {
                return this.suspend
            }
            ,
            this.resumeupdate = function(e) {
                this.suspend = !1,
                null == e && (e = !0),
                this.refresh(e)
            }
            ,
            this.getrecords = function() {
                return this.records
            }
            ,
            this.clearrecords = function() {
                this.recordids = new Array
            }
            ,
            this.databind = function(t, i) {
                var r = !!t._source
                  , s = null;
                this.grid && (this.aggregates = this.grid.showgroupaggregates),
                r ? (s = t,
                t = t._source) : s = new e.jqx.dataAdapter(t,{
                    autoBind: !1
                });
                var n, o = function(i) {
                    if (i.totalrecords = s.totalrecords,
                    i.virtualmode) {
                        var r = {
                            startindex: i.pagenum * i.pagesize,
                            endindex: i.pagenum * i.pagesize + i.pagesize
                        };
                        if (null != t.recordstartindex && (r.startindex = parseInt(t.recordstartindex)),
                        null != t.recordendindex ? r.endindex = parseInt(t.recordendindex) : i.grid.pageable || (r.endindex = r.startindex + 100,
                        i.grid.autoheight && (r.endindex = r.startindex + i.totalrecords)),
                        t.recordendindex || (i.grid.pageable ? r = {
                            startindex: i.pagenum * i.pagesize,
                            endindex: i.pagenum * i.pagesize + i.pagesize
                        } : (r.endindex = r.startindex + 100,
                        i.grid.autoheight && (r.endindex = r.startindex + i.totalrecords))),
                        r.data = s.records,
                        i.grid.rendergridrows && i.totalrecords > 0) {
                            var n = 0;
                            if (t.records = i.grid.rendergridrows(r),
                            t.records.length && (n = t.records.length),
                            t.records && !t.records[r.startindex]) {
                                var o = new Array
                                  , a = r.startindex;
                                e.each(t.records, function() {
                                    o[a] = this,
                                    a++,
                                    n++
                                }),
                                t.records = o
                            }
                            if (0 == n && t.records && e.each(t.records, function() {
                                n++
                            }),
                            n > 0 && n < r.endindex - r.startindex && !i.grid.groupable)
                                for (var l = t.records[0], d = 0; d < r.endindex - r.startindex - n; d++) {
                                    var h = {};
                                    for (obj in l)
                                        h[obj] = "";
                                    t.records.push && t.records.push(h)
                                }
                        }
                        t.records && 0 != i.totalrecords || (t.records = new Array),
                        i.originaldata = t.records,
                        i.records = t.records,
                        i.cachedrecords = t.records
                    } else
                        i.originaldata = s.originaldata,
                        i.records = s.records,
                        i.recordids = s.recordids,
                        i.cachedrecords = s.cachedrecords
                };
                n = this,
                s.recordids = [],
                s.records = new Array,
                s.cachedrecords = new Array,
                s.originaldata = new Array,
                s._options.virtualmode = n.virtualmode,
                s._options.totalrecords = n.totalrecords,
                s._options.originaldata = n.originaldata,
                s._options.recordids = n.recordids,
                s._options.cachedrecords = new Array,
                s._options.pagenum = n.pagenum,
                s._options.pageable = n.pageable,
                null != t.type && (s._options.type = t.type),
                null != t.formatdata && (s._options.formatData = t.formatdata),
                null != t.contenttype && (s._options.contentType = t.contenttype),
                null != t.async && (s._options.async = t.async),
                null != t.updaterow && (s._options.updaterow = t.updaterow),
                null != t.addrow && (s._options.addrow = t.addrow),
                null != t.deleterow && (s._options.deleterow = t.deleterow),
                0 == n.pagesize && (n.pagesize = 10),
                s._options.pagesize = n.pagesize,
                this.source = t,
                void 0 !== i && (uniqueId = i);
                var a = this.that;
                switch (t.datatype) {
                case "local":
                case "array":
                default:
                    if (null == t.localdata && (t.localdata = []),
                    null != t.localdata)
                        s.unbindBindingUpdate(a.grid.element.id),
                        (!a.grid.autobind && a.grid.isInitialized || a.grid.autobind) && s.dataBind(),
                        (j = function(i) {
                            if (null != i && "" != i) {
                                if (s._changedrecords[0]) {
                                    var r = new Array;
                                    e.each(s._changedrecords, function(e) {
                                        var t = this.index
                                          , n = this.record;
                                        switch (a.grid._updateFromAdapter = !0,
                                        i) {
                                        case "update":
                                            var o = a.grid.getrowid(t);
                                            return e == s._changedrecords.length - 1 ? a.grid.updaterow(o, n) : a.grid.updaterow(o, n, !1),
                                            void (a.grid._updateFromAdapter = !1);
                                        case "add":
                                            return a.grid.addrow(null, n),
                                            void (a.grid._updateFromAdapter = !1);
                                        case "remove":
                                            o = a.grid.getrowid(t);
                                            return void r.push(o)
                                        }
                                    }),
                                    r.length > 0 && (a.grid.deleterow(r, !1),
                                    a.grid._updateFromAdapter = !1)
                                }
                                if ("update" == i)
                                    return
                            }
                            var n = a.totalrecords;
                            o(a),
                            null === t.localdata.notifier && "observableArray" == t.localdata.name && (t.localdata.notifier = function(i) {
                                if (!this._updating) {
                                    this._updating = !0;
                                    var r = a.grid.getrowid(i.index);
                                    switch (i.type) {
                                    case "add":
                                        var n = e.extend({}, i.object[i.index])
                                          , o = s.getid(t.id, n, i.index);
                                        0 === i.index ? a.grid.addrow(o, n, "first") : a.grid.addrow(o, n);
                                        break;
                                    case "delete":
                                        a.grid.deleterow(r);
                                        break;
                                    case "update":
                                        if (i.path && i.path.split(".").length > 1) {
                                            var l = i.path.split(".");
                                            a.grid.setcellvalue(i.index, l[l.length - 1], i.newValue)
                                        } else {
                                            n = e.extend({}, i.object[i.index]);
                                            a.grid.updaterow(r, n)
                                        }
                                    }
                                    this._updating = !1
                                }
                            }
                            ),
                            "updateData" == i ? (a.refresh(),
                            a.grid._updateGridData()) : (t.recordstartindex && this.virtualmode ? a.updateview(t.recordstartindex, t.recordstartindex + a.pagesize) : a.refresh(),
                            a.update(n != a.totalrecords))
                        }
                        )(),
                        s.bindBindingUpdate(a.grid.element.id, j);
                    break;
                case "json":
                case "jsonp":
                case "xml":
                case "xhtml":
                case "script":
                case "text":
                case "csv":
                case "tab":
                    if (null != t.localdata)
                        return s.unbindBindingUpdate(a.grid.element.id),
                        (!a.grid.autobind && a.grid.isInitialized || a.grid.autobind) && s.dataBind(),
                        (j = function(e) {
                            var i = a.totalrecords;
                            o(a),
                            "updateData" == e ? (a.refresh(),
                            a.grid._updateGridData()) : (t.recordstartindex && a.virtualmode ? a.updateview(t.recordstartindex, t.recordstartindex + a.pagesize) : a.refresh(),
                            a.update(i != a.totalrecords))
                        }
                        )(),
                        void s.bindBindingUpdate(a.grid.element.id, j);
                    for (var l = [], d = 0, h = {}, c = 0; c < this.filters.length; c++) {
                        var u = this.filters[c].datafield
                          , p = this.filters[c].filter;
                        if (p.getfilters) {
                            var f = p.getfilters();
                            h[u + "operator"] = p.operator;
                            for (var m = 0; m < f.length; m++) {
                                f[m].datafield = u;
                                var g = f[m].value;
                                if ("datefilter" == f[m].type)
                                    if (f[m].value && f[m].value.toLocaleString) {
                                        var v = this.grid.getcolumn(f[m].datafield);
                                        if (v && v.cellsformat) {
                                            var w = this.grid.source.formatDate(f[m].value, v.cellsformat, this.grid.gridlocalization);
                                            h["filtervalue" + d] = w || f[m].value.toLocaleString()
                                        } else
                                            h["filtervalue" + d] = g.toString()
                                    } else
                                        h["filtervalue" + d] = g.toString();
                                else
                                    h["filtervalue" + d] = g.toString(),
                                    f[m].data && (h["filterid" + d] = f[m].data.toString()),
                                    f[m].id && (h["filterid" + d] = f[m].id.toString());
                                h["filtercondition" + d] = f[m].condition,
                                h["filteroperator" + d] = f[m].operator,
                                h["filterdatafield" + d] = u;
                                var x = {
                                    label: g.toString()
                                };
                                f[m].data && (x.value = f[m].data.toString()),
                                f[m].id ? x.value = f[m].id.toString() : x.value = g.toString(),
                                x.condition = f[m].condition,
                                x.operator = 0 == f[m].operator ? "and" : "or",
                                x.field = u,
                                x.type = f[m].type;
                                var b = !1;
                                if (l.length > 0)
                                    for (var y = 0; y < l.length; y++) {
                                        var _ = l[y];
                                        if (_.field == u) {
                                            _.filters.push(x),
                                            b = !0;
                                            break
                                        }
                                    }
                                b || (l.push({
                                    field: u,
                                    filters: []
                                }),
                                l[l.length - 1].filters.push(x)),
                                d++
                            }
                        }
                    }
                    h.filterGroups = l,
                    h.filterscount = d,
                    h.groupscount = a.groups.length;
                    for (c = 0; c < a.groups.length; c++)
                        h["group" + c] = a.groups[c];
                    null == t.recordstartindex && (t.recordstartindex = 0),
                    null != t.recordendindex && 0 != t.recordendindex || (a.grid.height && -1 == a.grid.height.toString().indexOf("%") ? (t.recordendindex = parseInt(a.grid.height) / a.grid.rowsheight,
                    t.recordendindex += 2,
                    t.recordendindex = parseInt(t.recordendindex)) : (t.recordendindex = e(window).height() / a.grid.rowsheight,
                    t.recordendindex = parseInt(t.recordendindex)),
                    this.pageable && (t.recordendindex = this.pagesize)),
                    this.pageable && (t.recordstartindex = this.pagenum * this.pagesize,
                    t.recordendindex = (this.pagenum + 1) * this.pagesize),
                    e.extend(h, {
                        sortdatafield: a.sortfield,
                        sortorder: a.sortfielddirection,
                        pagenum: a.pagenum,
                        pagesize: a.grid.pagesize,
                        recordstartindex: t.recordstartindex,
                        recordendindex: t.recordendindex
                    });
                    var q = s._options.data;
                    s._options.data ? e.extend(s._options.data, h) : (t.data && e.extend(h, t.data),
                    s._options.data = h);
                    var j = function() {
                        var i = function() {
                            var e = a.totalrecords;
                            o(a),
                            t.recordstartindex && a.virtualmode ? a.updateview(t.recordstartindex, t.recordstartindex + a.pagesize) : a.refresh(),
                            a.update(e != a.totalrecords)
                        };
                        if (e.jqx.browser.msie && e.jqx.browser.version < 9)
                            try {
                                i()
                            } catch (e) {}
                        else
                            i()
                    };
                    s.unbindDownloadComplete(a.grid.element.id),
                    s.bindDownloadComplete(a.grid.element.id, j),
                    !a.grid.autobind && a.grid.isInitialized || a.grid.autobind ? s.dataBind() : a.grid.isInitialized || a.grid.autobind || j(),
                    s._options.data = q
                }
            }
            ,
            this.getid = function(t, i, r) {
                if (e(t, i).length > 0)
                    return e(t, i).text();
                if (t && t.toString().length > 0) {
                    var s = e(i).attr(t);
                    if (null != s && s.toString().length > 0)
                        return s
                }
                return r
            }
            ,
            this.getvaluebytype = function(t, i) {
                var r = t;
                if ("date" == i.type) {
                    var s = new Date(t);
                    null == (t = ("NaN" == s.toString() || "Invalid Date" == s.toString()) && e.jqx.dataFormat ? e.jqx.dataFormat.tryparsedate(t) : s) && (t = r)
                } else if ("float" == i.type) {
                    t = parseFloat(t);
                    isNaN(t) && (t = r)
                } else if ("int" == i.type) {
                    t = parseInt(t);
                    isNaN(t) && (t = r)
                } else
                    "bool" == i.type && (null != t && ("false" == t.toLowerCase() ? t = !1 : "true" == t.toLowerCase() && (t = !0)),
                    t = 1 == t || 0 != t && "");
                return t
            }
            ,
            this.setpaging = function(e) {
                null != e.pageSize && (this.pagesize = e.pageSize),
                null != e.pageNum && (this.pagenum = Math.min(e.pageNum, Math.ceil(this.totalrows / this.pagesize))),
                this.refresh()
            }
            ,
            this.getpagingdetails = function() {
                return {
                    pageSize: this.pagesize,
                    pageNum: this.pagenum,
                    totalrows: this.totalrows
                }
            }
            ,
            this._clearcaches = function() {
                this.sortcache = {},
                this.sortdata = null,
                this.changedrecords = new Array,
                this.records = new Array,
                this.rows = new Array,
                this.cacheddata = new Array,
                this.originaldata = new Array,
                this.bounditems = new Array,
                this.loadedrecords = new Array,
                this.loadedrootgroups = new Array,
                this.loadedgroups = new Array,
                this.loadedgroupsByKey = new Array,
                this._cachegrouppages = new Array,
                this.recordsbyid = new Array,
                this.cachedrecords = new Array,
                this.recordids = new Array
            }
            ,
            this.addfilter = function(e, t) {
                for (var i = -1, r = 0; r < this.filters.length; r++)
                    if (this.filters[r].datafield == e) {
                        i = r;
                        break
                    }
                -1 == i ? this.filters[this.filters.length] = {
                    filter: t,
                    datafield: e
                } : this.filters[i] = {
                    filter: t,
                    datafield: e
                }
            }
            ,
            this.removefilter = function(e) {
                for (var t = 0; t < this.filters.length; t++)
                    if (this.filters[t].datafield == e) {
                        this.filters.splice(t, 1);
                        break
                    }
            }
            ,
            this.getItemFromIndex = function(e) {
                return this.records[e]
            }
            ,
            this.updaterow = function(e, t, i) {
                if (!(this.filters && this.filters.length > 0 && !this.virtualmode) && null != t && null != e) {
                    t.uid = e,
                    t[this.source.id] || (t[this.source.id] = t.uid);
                    var r = this.recordsbyid["id" + e];
                    return -1 != (n = this.records.indexOf(r)) && (this.records[n] = t,
                    this.cachedrecords && (this.cachedrecords[n] = t),
                    1 != i && null != i || this.refresh(),
                    this.changedrecords[t.uid] = {
                        Type: "Update",
                        OldData: r,
                        Data: t
                    },
                    !0)
                }
                if (this.filters && this.filters.length > 0) {
                    for (var s = this.cachedrecords, n = (r = null,
                    -1), o = 0; o < s.length; o++)
                        if (s[o].uid == e) {
                            r = s[o],
                            n = o;
                            break
                        }
                    if (r) {
                        var a = this.that;
                        for (var l in t)
                            a.cachedrecords[n][l] = t[l];
                        return 1 != i && null != i || this.refresh(),
                        !0
                    }
                }
                return !1
            }
            ,
            this.addrow = function(t, i, r, s) {
                if (null != i) {
                    if (e.isEmptyObject(i) && this.source && this.source.datafields && e.each(this.source.datafields, function() {
                        var e = "";
                        "number" == this.type && (e = null),
                        "date" == this.type && (e = null),
                        "bool" != this.type && "boolean" != this.type || (e = !1),
                        i[this.name] = e
                    }),
                    !t || this.recordsbyid["id" + t]) {
                        i.uid = this.getid(this.source.id, i, this.totalrecords);
                        for (var n = this.recordsbyid["id" + i.uid]; null != n; ) {
                            var o = Math.floor(1e4 * Math.random()).toString();
                            i.uid = o,
                            n = this.recordsbyid["id" + o]
                        }
                    } else
                        i.uid = t;
                    return i[this.source.id] || null != this.source.id && (i[this.source.id] = i.uid),
                    "last" == r ? this.records.push(i) : "number" == typeof r && isFinite(r) ? this.records.splice(r, 0, i) : this.records.splice(0, 0, i),
                    this.filters && this.filters.length > 0 && ("last" == r ? this.cachedrecords.push(i) : "number" == typeof r && isFinite(r) ? this.cachedrecords.splice(r, 0, i) : this.cachedrecords.splice(0, 0, i)),
                    this.totalrecords++,
                    this.virtualmode && (this.source.totalrecords = this.totalrecords),
                    1 != s && null != s || this.refresh(),
                    this.changedrecords[i.uid] = {
                        Type: "New",
                        Data: i
                    },
                    !0
                }
                return !1
            }
            ,
            this.deleterow = function(e, t) {
                if (null != e) {
                    var i = this.filters && this.filters.length > 0;
                    if (this.recordsbyid["id" + e] && !i) {
                        var r = this.recordsbyid["id" + e]
                          , s = this.records.indexOf(r);
                        if (this.grid && this.grid.sortable && "many" == this.grid.sortmode)
                            for (var n = 0; n < this.records.length; n++)
                                if (this.records[n].boundindex === r.boundindex) {
                                    s = n;
                                    break
                                }
                        return this.changedrecords[e] = {
                            Type: "Delete",
                            Data: this.records[s]
                        },
                        this.records.splice(s, 1),
                        this.totalrecords--,
                        this.virtualmode && (this.source.totalrecords = this.totalrecords),
                        1 != t && null != t || this.refresh(),
                        !0
                    }
                    if (this.filters && this.filters.length > 0) {
                        var o = this.cachedrecords;
                        for (r = null,
                        s = -1,
                        n = 0; n < o.length; n++)
                            if (o[n].uid == e) {
                                r = o[n],
                                s = n;
                                break
                            }
                        if (r)
                            return this.cachedrecords.splice(s, 1),
                            1 != t && null != t || (this.totalrecords = 0,
                            this.records = this.cachedrecords,
                            this.refresh()),
                            !0
                    }
                    return !1
                }
                return !1
            }
            ,
            this.reload = function(t, i, r, s, n, o, a) {
                var l = this.that
                  , d = new Array
                  , h = t
                  , c = i
                  , u = r
                  , p = s
                  , f = c.length
                  , m = 0;
                if (this.columns = [],
                this.bounditems = new Array,
                this.loadedrecords = new Array,
                this.loadedrootgroups = new Array,
                this.loadedgroups = new Array,
                this.loadedgroupsByKey = new Array,
                this._cachegrouppages = new Array,
                this.recordsbyid = {},
                0 == this.totalrecords) {
                    Object.size = function(e) {
                        var t, i = 0;
                        for (t in e)
                            e.hasOwnProperty(t) && i++;
                        return i
                    }
                    ;
                    var g = Object.size(h);
                    this.totalrecords = g,
                    e.each(this.records, function(t) {
                        var i = 0;
                        return e.each(this, function(e, t) {
                            l.columns[i++] = e
                        }),
                        !1
                    })
                }
                if (this.virtualmode) {
                    if (this.pageable)
                        return void this.updateview();
                    o = 0;
                    if (!this.groupable)
                        return void this.updateview();
                    a = this.totalrecords
                } else
                    o = 0,
                    a = this.totalrecords;
                if (this.groupable && this.groups.length > 0 && this.loadgrouprecords) {
                    var v = o;
                    v = this.loadgrouprecords(0, o, a, u, 0, p, c, f, d)
                } else
                    m = this.loadflatrecords(o, a, u, 0, p, c, f, d);
                return f > 0 && c.splice(0, f - 0),
                this.groups.length > 0 && this.groupable ? this.totalrows = v : this.totalrows = m,
                d
            }
            ,
            this.loadflatrecords = function(t, i, r, s, n, o, a, l) {
                var d = this.that
                  , h = t
                  , c = t;
                i = Math.min(i, this.totalrecords);
                for (var u = null != this.sortdata, p = (this.source.id && ("local" == this.source.datatype || "array" == this.source.datatype || this.source.datatype),
                u ? this.sortdata : this.records), f = t; f < i; f++) {
                    var m = {};
                    u ? (m = e.extend({}, p[f].value),
                    id = m[d.uniqueId],
                    m.boundindex = p[f].index,
                    null == m.uid && (m.uid = d.getid(d.source.id, m, m.boundindex)),
                    d.recordsbyid["id" + m.uid] = p[f].value,
                    d.loadedrecords[h] = m,
                    m.uniqueid = d.generatekey(),
                    d.bounditems[m.boundindex] = m) : (m = new Object(p[f]),
                    id = m[d.uniqueId],
                    m.boundindex = h,
                    d.loadedrecords[h] = m,
                    null == m.uid && (m.uid = d.getid(d.source.id, m, h)),
                    d.recordsbyid["id" + m.uid] = p[f],
                    m.uniqueid = d.generatekey(),
                    d.bounditems[this.bounditems.length] = m),
                    (s >= a || id != o[s][d.uniqueId] || n && n[id]) && (l[l.length] = s),
                    o[s] = m,
                    s++,
                    m.visibleindex = c,
                    c++,
                    h++
                }
                if (d.grid.summaryrows) {
                    var g = h;
                    e.each(d.grid.summaryrows, function() {
                        var t = e.extend({}, this);
                        t.boundindex = i++,
                        d.loadedrecords[g] = t,
                        t.uniqueid = d.generatekey(),
                        d.bounditems[d.bounditems.length] = t,
                        o[s] = t,
                        s++,
                        t.visibleindex = c,
                        c++,
                        g++
                    })
                }
                return c
            }
            ,
            this.updateview = function(e, t) {
                var i = this.that
                  , r = this.pagesize * this.pagenum
                  , s = 0
                  , n = new Array
                  , o = this.filters
                  , a = this.updated
                  , l = n.length;
                if (this.pageable) {
                    if (this.virtualmode)
                        if (this.groupable && 0 != this.groups.length) {
                            if (this.groupable && this.groups.length > 0 && this.loadgrouprecords) {
                                if (null != this._cachegrouppages[this.pagenum + "_" + this.pagesize])
                                    return this.rows = this._cachegrouppages[this.pagenum + "_" + this.pagesize],
                                    void (this.totalrows = this.rows.length);
                                var d = this.pagesize * (1 + this.pagenum);
                                return d > this.totalrecords && (d = this.totalrecords),
                                this.loadgrouprecords(0, this.pagesize * this.pagenum, d, o, s, a, n, l, []),
                                this._cachegrouppages[this.pagenum + "_" + this.pagesize] = this.rows,
                                void (this.totalrows = this.rows.length)
                            }
                        } else
                            this.loadflatrecords(this.pagesize * this.pagenum, this.pagesize * (1 + this.pagenum), o, s, a, n, l, []),
                            this.totalrows = n.length
                } else if (this.virtualmode && (!this.groupable || 0 == this.groups.length)) {
                    var h = this.pagesize;
                    0 == h && (h = Math.min(100, this.totalrecords));
                    this.pagenum;
                    if (0 == this.loadedrecords.length && 0,
                    null != e && null != t ? this.loadflatrecords(e, t, o, s, a, n, l, []) : this.loadflatrecords(this.pagesize * this.pagenum, this.pagesize * (1 + this.pagenum), o, s, a, n, l, []),
                    this.totalrows = this.loadedrecords.length,
                    this.rows = n,
                    n.length >= h)
                        return
                }
                if (this.groupable && this.pageable && this.groups.length > 0 && this._updategroupsinpage)
                    n = this._updategroupsinpage(i, o, r, s, l, this.pagesize * this.pagenum, this.pagesize * (1 + this.pagenum));
                else
                    for (var c = this.pagesize * this.pagenum; c < this.pagesize * (1 + this.pagenum); c++) {
                        null != (p = c < this.loadedrecords.length ? this.loadedrecords[c] : null) && ((!this.pagesize || r >= this.pagesize * this.pagenum && r <= this.pagesize * (this.pagenum + 1)) && (n[s] = p,
                        s++),
                        r++)
                    }
                if ((0 == n.length || n.length < this.pagesize) && !this.pageable && this.virtualmode) {
                    s = n.length;
                    var u = n.length;
                    for (c = this.pagesize * this.pagenum; c < this.pagesize * (1 + this.pagenum) - u; c++) {
                        var p;
                        (p = {}).boundindex = c + u,
                        p.visibleindex = c + u,
                        p.uniqueid = i.generatekey(),
                        p.empty = !0,
                        i.bounditems[c + u] = p,
                        n[s] = p,
                        s++
                    }
                }
                this.rows = n
            }
            ,
            this.generatekey = function() {
                var e = function() {
                    return 16 * (1 + Math.random()) | 0
                };
                return "" + e() + e() + "-" + e() + "-" + e() + "-" + e() + "-" + e() + e() + e()
            }
            ,
            this.reloaddata = function() {
                this.reload(this.records, this.rows, this.filter, this.updated, !0)
            }
            ,
            this.refresh = function(t) {
                if (!this.suspend) {
                    null == t && (t = !0);
                    var i = this.rows.length
                      , r = this.totalrows;
                    if (this.filters.length > 0 && !this.virtualmode) {
                        var s = ""
                          , n = this.cachedrecords.length
                          , o = new Array;
                        this.totalrecords = 0;
                        var a = this.cachedrecords;
                        this._dataIndexToBoundIndex = new Array;
                        var l = this.filters.length;
                        if (null != this.source && null != this.source.filter && null != this.source.localdata)
                            null == (o = this.source.filter(this.filters, a, n)) && (o = new Array),
                            this.records = o;
                        else if (null == this.source.filter || null == this.source.filter) {
                            for (var d = 0; d < n; d++) {
                                for (var h = a[d], c = void 0, u = 0; u < l; u++) {
                                    s = this.filters[u].filter;
                                    var p = h[this.filters[u].datafield]
                                      , f = s.evaluate(p);
                                    if (this.grid.filter) {
                                        var m = this.grid.filter(p, h, this.filters[u].datafield, s, f);
                                        void 0 !== m && (f = m)
                                    }
                                    c = null == c ? f : "or" == s.operator ? c || f : c && f
                                }
                                c ? (o[o.length] = e.extend({
                                    dataindex: d
                                }, h),
                                this._dataIndexToBoundIndex[d] = {
                                    boundindex: o.length - 1
                                }) : this._dataIndexToBoundIndex[d] = null
                            }
                            this.records = o
                        }
                        if (this.sortdata) {
                            if (!this.grid || "many" === this.grid.sortmode) {
                                for (var g = this.grid.getsortcolumns(), v = 0; v < g.length; v++) {
                                    var w = (y = g[v]).dataField;
                                    this.grid.sortby(w, y.ascending, null)
                                }
                                return
                            }
                            var x = this.sortfield;
                            if (this.sortcache[x]) {
                                this.sortdata = null;
                                var b = this.sortcache[x].direction;
                                return this.sortcache[x] = null,
                                void this.sortby(this.sortfield, b)
                            }
                        }
                    } else if (0 == this.filters.length && !this.virtualmode && this.cachedrecords) {
                        this.totalrecords = 0;
                        a = this.cachedrecords;
                        if (this.records = a,
                        this.sortdata) {
                            if (!this.grid || "many" === this.grid.sortmode) {
                                for (g = this.grid.getsortcolumns(),
                                v = 0; v < g.length; v++) {
                                    var y;
                                    w = (y = g[v]).dataField;
                                    this.grid.sortby(w, y.ascending, null)
                                }
                                return
                            }
                            x = this.sortfield;
                            if (this.sortcache[x]) {
                                this.sortdata = null;
                                b = this.sortcache[x].direction;
                                return this.sortcache[x] = null,
                                void this.sortby(this.sortfield, b)
                            }
                        }
                    }
                    var _ = this.reload(this.records, this.rows, this.filter, this.updated, t);
                    this.updated = null,
                    null != this.rowschangecallback && (r != totalrows && this.rowschangecallback({
                        type: "PagingChanged",
                        data: getpagingdetails()
                    }),
                    i != rows.length && this.rowschangecallback({
                        type: "RowsCountChanged",
                        data: {
                            previous: i,
                            current: rows.length
                        }
                    }),
                    (_.length > 0 || i != rows.length) && this.rowschangecallback({
                        type: "RowsChanged",
                        data: {
                            previous: i,
                            current: rows.length,
                            diff: _
                        }
                    }))
                }
            }
            ,
            this
        }
    }(jqxBaseFramework)
}
, function(e, t) {
    var i;
    (i = jqxBaseFramework).extend(i.jqx._jqxGrid.prototype, {
        _handledblclick: function(e, t) {
            var r, s;
            if (null != e.target && !(t.disabled || i(e.target).ischildof(this.columnsheader) || (e.which ? r = 3 == e.which : e.button && (r = 2 == e.button),
            r || (e.which ? s = 2 == e.which : e.button && (s = 1 == e.button),
            s)))) {
                var n = this.showheader ? this.columnsheader.height() + 2 : 0
                  , o = this._groupsheader() ? this.groupsheader.height() : 0;
                o += this.showtoolbar ? this.toolbarheight : 0;
                var a = this.host.offset()
                  , l = e.pageX - a.left
                  , d = e.pageY - n - a.top - o
                  , h = this._hittestrow(l, d);
                if (h) {
                    var c = h.row
                      , u = h.index
                      , p = e.target.className
                      , f = this.table[0].rows[u];
                    if (null != f) {
                        t.mousecaptured = !0,
                        t.mousecaptureposition = {
                            left: e.pageX,
                            top: e.pageY - o
                        };
                        for (var m = this.hScrollInstance.value, g = 0, v = (this.groupable && this.groups.length,
                        0); v < f.cells.length; v++) {
                            var w = parseInt(i(this.columnsrow[0].cells[v]).css("left"))
                              , x = w - m;
                            if (t.columns.records[v].pinned && (x = w),
                            (null == (b = this._getcolumnat(v)) || !b.hidden) && x + i(this.columnsrow[0].cells[v]).width() >= l && l >= x) {
                                g = v;
                                break
                            }
                        }
                        if (null != c) {
                            var b = this._getcolumnat(g);
                            -1 == p.indexOf("jqx-grid-group-expand") && -1 == p.indexOf("jqx-grid-group-collapse") && -1 != c.boundindex && t.begincelledit(t.getboundindex(c), b.datafield, b.defaulteditorvalue)
                        }
                    }
                }
            }
        },
        _getpreveditablecolumn: function(e) {
            for (; e > 0; ) {
                e--;
                var t = this.getcolumnat(e);
                if (!t)
                    return null;
                if (t.editable && !t.hidden)
                    return t
            }
            return null
        },
        _getnexteditablecolumn: function(e) {
            for (; e < this.columns.records.length; ) {
                e++;
                var t = this.getcolumnat(e);
                if (!t)
                    return null;
                if (t.editable && !t.hidden)
                    return t
            }
            return null
        },
        _handleeditkeydown: function(e, t) {
            if (t.handlekeyboardnavigation && 1 == t.handlekeyboardnavigation(e))
                return !0;
            var r = e.charCode ? e.charCode : e.keyCode ? e.keyCode : 0;
            if (t.editEvent = e,
            t.showfilterrow && t.filterable && this.filterrow && i(e.target).ischildof(this.filterrow))
                return !0;
            if (e.target.className && e.target.className.indexOf("jqx-grid-widget") >= 0)
                return !0;
            if (t.pageable && i(e.target).ischildof(this.pager))
                return !0;
            if (this.showtoolbar && i(e.target).ischildof(this.toolbar))
                return !0;
            if (this.showeverpresentrow) {
                if (this.addnewrowtop && i(e.target).ischildof(this.addnewrowtop))
                    return !0;
                if (this.addnewrowbottom && i(e.target).ischildof(this.addnewrowbottom))
                    return !0
            }
            if (this.showstatusbar && i(e.target).ischildof(this.statusbar))
                return !0;
            if (this.rowdetails && i(e.target).ischildof(this.content.find("[role='rowgroup']")))
                return !0;
            if (this.editcell) {
                if ("selectedrow" === this.editmode) {
                    if (13 === r)
                        return this.endrowedit(this.editcell.row, !1),
                        !1;
                    if (27 === r)
                        return this.endrowedit(this.editcell.row, !0),
                        !1;
                    if (32 == r && this._currentColumn && "checkbox" == this.getcolumn(this._currentColumn).columntype && (p = this.getcolumn(this._currentColumn)).editable) {
                        var s = !this.getcellvalue(this.editcell.row, p.datafield)
                          , n = this.getrowdata(this.editcell.row)
                          , o = this.editcell.row;
                        n = t.getrowdata(t.editcell.row),
                        this.setcellvalue(this.editcell.row, p.datafield, s, !1);
                        var a = this._focusedColumn
                          , l = this._currentColumn
                          , d = this._currentEditableColumn;
                        if (this.endrowedit(this.editcell.row, !1),
                        this.beginrowedit(o, !1),
                        this._currentColumn = l,
                        this._focusedColumn = a,
                        this._currentEditableColumn = d,
                        this._renderrows(),
                        this.selectcell(o, p.datafield),
                        this._oldselectedcell = this.selectedcell,
                        a) {
                            var h = this;
                            setTimeout(function() {
                                h.selectcell(o, p.datafield),
                                h._oldselectedcell = h.selectedcell,
                                i(h._checkboxCells[p.datafield].checkbox).jqxCheckBox("focus")
                            }, 25)
                        }
                        return !1
                    }
                    if (9 === r) {
                        var c = this.editcell.datafield
                          , u = this._getcolumnindex(c);
                        this._currentEditableColumn ? u = this._currentEditableColumn : this._currentEditableColumn = u;
                        var p = this._getnexteditablecolumn(u);
                        if (e.shiftKey && (p = this._getpreveditablecolumn(u)),
                        p)
                            if (u = this._getcolumnindex(p.datafield),
                            this.editcell[p.datafield])
                                this._currentEditableColumn = u,
                                (f = this.editcell[p.datafield].editor) && (f.data().jqxWidget && f.data().jqxWidget.focus ? f.data().jqxWidget.focus() : (f.focus(),
                                f[0].onkeyup = function() {
                                    0 != t.gridcontent[0].scrollTop && (t.scrolltop(Math.abs(t.gridcontent[0].scrollTop)),
                                    t.gridcontent[0].scrollTop = 0),
                                    0 != t.gridcontent[0].scrollLeft && (t.gridcontent[0].scrollLeft = 0)
                                }
                                )),
                                this._focusedColumn = p.datafield,
                                this._currentColumn = p.datafield,
                                0 != this.gridcontent[0].scrollTop && (this.scrolltop(Math.abs(this.gridcontent[0].scrollTop)),
                                this.gridcontent[0].scrollTop = 0),
                                0 != this.gridcontent[0].scrollLeft && (this.gridcontent[0].scrollLeft = 0);
                            else if ("checkbox" == p.columntype)
                                return this._currentColumn = p.datafield,
                                this._currentEditableColumn = u,
                                this.selectcell(this.editcell.row, p.datafield),
                                this._oldselectedcell = this.selectedcell,
                                this._checkboxCells[p.datafield] && i(this._checkboxCells[p.datafield].checkbox).jqxCheckBox("focus"),
                                !1;
                        return !1
                    }
                    return !0
                }
                if (null == this.editcell.columntype || "textbox" == this.editcell.columntype || "numberinput" == this.editcell.columntype || "combobox" == this.editcell.columntype || "datetimeinput" == this.editcell.columntype) {
                    if (r >= 33 && r <= 40 && "multiplecellsadvanced" == t.selectionmode) {
                        var f = "textbox" == this.editcell.columntype || null == this.editcell.columntype ? this.editcell.editor : this.editcell.editor.find("input")
                          , m = t._selection(f)
                          , g = f.val().length;
                        m.length > 0 && "datetimeinput" != this.editcell.columntype && (t._cancelkeydown = !0),
                        m.start > 0 && 37 == r && (t._cancelkeydown = !0),
                        m.start < g && 39 == r && "datetimeinput" != this.editcell.columntype && (t._cancelkeydown = !0),
                        "datetimeinput" == this.editcell.columntype && 39 == r && m.start + m.length < g && (t._cancelkeydown = !0)
                    }
                } else
                    "dropdownlist" == this.editcell.columntype ? (37 == r || 39 == r && "multiplecellsadvanced" == t.selectionmode) && (t._cancelkeydown = !1) : "multiplecellsadvanced" == this.selectionmode && "textbox" != this.editcell.columntype && "numberinput" != this.editcell.columntype && (t._cancelkeydown = !0);
                if (32 == r && "checkbox" == t.editcell.columntype && (p = t.getcolumn(t.editcell.datafield)).editable)
                    return s = !t.getcellvalue(t.editcell.row, t.editcell.column),
                    (!p.cellbeginedit || 0 != p.cellbeginedit(t.editcell.row, p.datafield, p.columntype, !s)) && (n = t.getrowdata(t.editcell.row),
                    t.setcellvalue(t.editcell.row, t.editcell.column, s, !0),
                    t._raiseEvent(18, {
                        rowindex: t.editcell.row,
                        row: n,
                        datafield: t.editcell.column,
                        oldvalue: !s,
                        value: s,
                        columntype: "checkbox"
                    }),
                    !1);
                if (9 == r) {
                    var v = this.editcell.row
                      , w = c = this.editcell.column
                      , x = (u = t._getcolumnindex(c),
                    !1)
                      , b = t.getrowvisibleindex(v)
                      , y = v;
                    this.editchar = "";
                    var _ = this.editcell.validated;
                    if (this.editcell.validated || (_ = this.endcelledit(this.editcell.row, this.editcell.column, !1, !0, !1)),
                    0 != _) {
                        if (e.shiftKey)
                            if (p = t._getpreveditablecolumn(u))
                                c = p.datafield,
                                x = !0,
                                -1 != t.selectionmode.indexOf("cell") && (t.selectprevcell(v, w),
                                t._oldselectedcell = t.selectedcell,
                                setTimeout(function() {
                                    t.ensurecellvisible(b, c)
                                }, 10));
                            else {
                                var q = t._getlastvisiblecolumn();
                                x = !0,
                                c = q.displayfield,
                                (C = t.getdisplayrows()[b - 1]) && (void 0 === (v = C.dataindex) && (v = C.boundindex),
                                b = t.getrowvisibleindex(v));
                                var j = !0;
                                if (t.pageable) {
                                    var S = Math.floor(b / this.pagesize);
                                    this.dataview.pagenum != S && (j = !1)
                                }
                                j && -1 != t.selectionmode.indexOf("cell") && (t.clearselection(),
                                t.selectcell(v, c),
                                t._oldselectedcell = t.selectedcell,
                                setTimeout(function() {
                                    t.ensurecellvisible(b, c)
                                }, 10))
                            }
                        else if (p = t._getnexteditablecolumn(u))
                            c = p.datafield,
                            x = !0,
                            -1 != t.selectionmode.indexOf("cell") && (t.selectnextcell(v, w),
                            t._oldselectedcell = t.selectedcell,
                            setTimeout(function() {
                                t.ensurecellvisible(b, c)
                            }, 10));
                        else {
                            var C, T = t._getfirstvisiblecolumn();
                            x = !0,
                            c = T.displayfield,
                            (C = t.getdisplayrows()[b + 1]) && (void 0 === (v = C.dataindex) && (v = C.boundindex),
                            b = t.getrowvisibleindex(v)),
                            j = !0,
                            t.pageable && (S = Math.floor(b / this.pagesize),
                            this.dataview.pagenum != S && (j = !1)),
                            -1 != t.selectionmode.indexOf("cell") && j && (t.clearselection(),
                            t.selectcell(v, c),
                            t._oldselectedcell = t.selectedcell,
                            setTimeout(function() {
                                t.ensurecellvisible(b, c)
                            }, 10))
                        }
                        if (!x)
                            return null != this.editcell && (t.endcelledit(v, c, !1),
                            this._renderrows(this.virtualsizeinfo)),
                            !0;
                        if (t.pageable && (S = Math.floor(b / this.pagesize),
                        this.dataview.pagenum != S))
                            return this._renderrows(this.virtualsizeinfo),
                            -1 != t.selectionmode.indexOf("cell") && (t.clearselection(),
                            t.selectcell(y, w),
                            t._oldselectedcell = t.selectedcell),
                            void (S > this.dataview.pagenum && setTimeout(function() {
                                t.pagerpageinput.focus()
                            }, 25));
                        t.begincelledit(v, c),
                        null != this.editcell && "checkbox" == this.editcell.columntype && this._renderrows(this.virtualsizeinfo)
                    }
                    return !1
                }
                if (13 == r) {
                    var I = this.selectedcell;
                    if (I)
                        var k = this.getrowvisibleindex(I.rowindex);
                    if (this.endcelledit(this.editcell.row, this.editcell.column, !1, !0),
                    "multiplecellsadvanced" == this.selectionmode && null != (D = t.getselectedcell()) && t.selectcell && null == this.editcell && D.rowindex + 1 < this.dataview.totalrecords)
                        if (this.sortcolumn != D.datafield) {
                            if (b = this.getrowvisibleindex(D.rowindex),
                            (A = this.dataview.loadedrecords[b + 1]) && (!this.pageable || this.pageable && b + 1 < (this.dataview.pagenum + 1) * this.pagesize)) {
                                this.clearselection(!1),
                                this.selectcell(this.getboundindex(A), D.datafield);
                                var D = this.getselectedcell();
                                this.ensurecellvisible(A.visibleindex, D.datafield)
                            }
                        } else if (null != I && (P = this.dataview.loadedrecords[k + 1]))
                            if (!this.pageable || this.pageable && k + 1 < this.pagesize)
                                this.clearselection(!1),
                                this.selectcell(this.getboundindex(P), D.datafield);
                            else if (this.pageable && k + 1 >= this.pagesize) {
                                this.clearselection(!1);
                                var P = this.dataview.loadedrecords[k];
                                this.selectcell(this.getboundindex(P), D.datafield)
                            }
                    return !1
                }
                if (27 == r)
                    return this.endcelledit(this.editcell.row, this.editcell.column, !0, !0),
                    !1
            } else {
                var B = !1;
                if (113 == r && (B = !0),
                !e.ctrlKey && !e.altKey && !e.metaKey) {
                    if (r >= 48 && r <= 57 && (this.editchar = String.fromCharCode(r),
                    B = !0),
                    189 === r && (B = !0),
                    r >= 65 && r <= 90) {
                        this.editchar = String.fromCharCode(r);
                        var M = !1;
                        e.shiftKey ? M = e.shiftKey : e.modifiers && (M = !!(4 & e.modifiers)),
                        this._capsLock && (M = !M),
                        M || (this.editchar = this.editchar.toLowerCase()),
                        B = !0
                    } else
                        r >= 96 && r <= 105 && (this.editchar = r - 96,
                        this.editchar = this.editchar.toString(),
                        B = !0);
                    var H = i(".jqx-grid").length;
                    B = B && (1 == H || H > 1 && t.focused);
                    var O = i.data(document.body, "jqxgrid.edit");
                    if (void 0 !== O && "" !== O && (13 === r || B) && O != t.element.id)
                        return !0
                }
                if ((13 == r || B) && t.getselectedrowindex) {
                    if (v = t.getselectedrowindex(),
                    "selectedrow" === t.editmode) {
                        if (!(v >= 0)) {
                            if (null != (D = t.getselectedcell())) {
                                var p = t._getcolumnbydatafield(D.datafield);
                                t.beginrowedit(D.rowindex)
                            }
                            return !1
                        }
                        t.beginrowedit(v)
                    }
                    switch (t.selectionmode) {
                    case "singlerow":
                    case "multiplerows":
                    case "multiplerowsextended":
                        if (v >= 0) {
                            c = "";
                            for (var z = 0; z < t.columns.records.length; z++)
                                if ((p = t.getcolumnat(z)).editable) {
                                    c = p.datafield;
                                    break
                                }
                            "selectedrow" === t.editmode ? t.beginrowedit(v) : t.begincelledit(v, c)
                        }
                        break;
                    case "singlecell":
                    case "multiplecells":
                    case "multiplecellsextended":
                        null != (D = t.getselectedcell()) && (p = t._getcolumnbydatafield(D.datafield),
                        "selectedrow" === t.editmode ? t.beginrowedit(D.rowindex) : "checkbox" != p.columntype && t.begincelledit(D.rowindex, D.datafield));
                        break;
                    case "multiplecellsadvanced":
                        var A;
                        if (null != (D = t.getselectedcell()))
                            if (13 == r) {
                                if (t.selectcell && (b = this.getrowvisibleindex(D.rowindex)) + 1 < t.dataview.totalrecords && (A = this.dataview.loadedrecords[b + 1])) {
                                    this.clearselection(!1),
                                    this.selectcell(this.getboundindex(A), D.datafield);
                                    var D = this.getselectedcell();
                                    this.ensurecellvisible(A.visibleindex, D.datafield)
                                }
                            } else
                                "selectedrow" !== t.editmode && t.begincelledit(D.rowindex, D.datafield)
                    }
                    return !1
                }
                if (46 == r) {
                    var L = t.getselectedcells();
                    if (-1 == t.selectionmode.indexOf("cell") && t._getcellsforcopypaste && (L = t._getcellsforcopypaste()),
                    null != L && L.length > 0) {
                        for (var E = 0; E < L.length; E++)
                            if ((D = L[E]).datafield) {
                                p = t.getcolumn(D.datafield);
                                var N = t.getcellvalue(D.rowindex, D.datafield);
                                if ("" !== N && p.editable && t.enablekeyboarddelete) {
                                    var F = null;
                                    if ("checkbox" == p.columntype && (p.threestatecheckbox || (F = !1)),
                                    p.cellbeginedit && 0 == p.cellbeginedit(D.rowindex, p.datafield, p.columntype, F))
                                        return !1;
                                    n = t.getrowdata(D.rowindex),
                                    t._raiseEvent(17, {
                                        rowindex: D.rowindex,
                                        row: n,
                                        datafield: D.datafield,
                                        value: N
                                    }),
                                    E == L.length - 1 ? (t.setcellvalue(D.rowindex, D.datafield, F, !0),
                                    p.displayfield != p.datafield && t.setcellvalue(D.rowindex, p.displayfield, F, !0)) : (t.setcellvalue(D.rowindex, D.datafield, F, !1),
                                    p.displayfield != p.datafield && t.setcellvalue(D.rowindex, p.displayfield, F, !0)),
                                    p.cellendedit && p.cellendedit(D.rowindex, p.datafield, p.columntype, F),
                                    t._raiseEvent(18, {
                                        rowindex: D.rowindex,
                                        row: n,
                                        datafield: D.datafield,
                                        oldvalue: N,
                                        value: F
                                    })
                                }
                            }
                        return this.dataview.updateview(),
                        this._renderrows(this.virtualsizeinfo),
                        !1
                    }
                }
                if (32 == r && null != (D = t.getselectedcell()) && "checkbox" == (p = t.getcolumn(D.datafield)).columntype && p.editable)
                    return s = !t.getcellvalue(D.rowindex, D.datafield),
                    (!p.cellbeginedit || 0 != p.cellbeginedit(D.rowindex, p.datafield, p.columntype, !s)) && (n = t.getrowdata(D.rowindex),
                    t._raiseEvent(17, {
                        rowindex: D.rowindex,
                        row: n,
                        datafield: D.datafield,
                        value: !s,
                        columntype: "checkbox"
                    }),
                    t.setcellvalue(D.rowindex, D.datafield, s, !0),
                    t._raiseEvent(18, {
                        rowindex: D.rowindex,
                        row: n,
                        datafield: D.datafield,
                        oldvalue: !s,
                        value: s,
                        columntype: "checkbox"
                    }),
                    !1)
            }
            return !0
        },
        begincelledit: function(e, t, r, s, n) {
            var o = this.getcolumn(t);
            if (this._cellscache = new Array,
            null != t && "number" != o.columntype && "button" != o.columntype && !o.createwidget) {
                if (this.groupable) {
                    if (this.groups.indexOf(t) >= 0)
                        return;
                    if (this.groups.indexOf(o.displayfield) >= 0)
                        return
                }
                if (null == this.editrow) {
                    if (this.editcell) {
                        if (this.editcell.row == e && this.editcell.column == t)
                            return !0;
                        if ("selectedrow" === this.editmode && this.editcell.row == e)
                            return;
                        if (0 == this.endcelledit(this.editcell.row, this.editcell.column, !1, !0, !1))
                            return
                    }
                    var a = "checkbox" == o.columntype || "button" == o.columntype || o.createwidget;
                    if (this.host.removeClass("jqx-disableselect"),
                    this.content.removeClass("jqx-disableselect"),
                    o.editable) {
                        if (o.cellbeginedit) {
                            var l = this.getcell(e, t);
                            if (0 == o.cellbeginedit(e, t, o.columntype, null != l ? l.value : null))
                                return
                        }
                        var d = this.getrowvisibleindex(e);
                        if (this.editcell = this.getcell(e, t),
                        this.editcell && (this.editcell.visiblerowindex = d,
                        !this.editcell.editing)) {
                            if (a || (this.editcell.editing = !0),
                            this.editcell.columntype = o.columntype,
                            this.editcell.defaultvalue = r,
                            null != o.defaultvalue && (this.editcell.defaultvalue = o.defaultvalue),
                            this.editcell.init = !0,
                            "checkbox" != o.columntype && "selectedrow" != this.editmode) {
                                var h = this.getrowdata(e);
                                this._raiseEvent(17, {
                                    rowindex: e,
                                    row: h,
                                    datafield: o.datafield,
                                    value: this.editcell.value,
                                    columntype: o.columntype
                                })
                            }
                            if (i.data(document.body, "jqxgrid.edit", this.element.id),
                            !a) {
                                var c = this.getrowvisibleindex(e);
                                !1 === s || this.autorowheight || 0 !== this.groups.length || this.ensurecellvisible(c, o.datafield),
                                !1 !== n && this._renderrows(this.virtualsizeinfo)
                            }
                            if (this.editcell)
                                return this.editcell.init = !1,
                                !0
                        }
                    } else {
                        if (!this.editcell)
                            return;
                        this.editcell.editor = null,
                        this.editcell.editing = !1,
                        !1 !== n && this._renderrows(this.virtualsizeinfo),
                        this.editcell = null
                    }
                }
            }
        },
        getScrollTop: function() {
            if (this._py)
                return pageYOffset;
            if (this._py = "undefined" != typeof pageYOffset,
            this._py)
                return pageYOffset;
            var e = document.body
              , t = document.documentElement;
            return (t = t.clientHeight ? t : e).scrollTop
        },
        getScrollLeft: function() {
            if ("undefined" != typeof pageXOffset)
                return pageXOffset;
            var e = document.body
              , t = document.documentElement;
            return (t = t.clientHeight ? t : e).scrollLeft
        },
        endcelledit: function(e, t, r, s, n) {
            if (null != e && null != t || (this.editcell && (e = this.editcell.row,
            t = this.editcell.column),
            null == r && (r = !0)),
            this.editcell) {
                var o = this.getcolumn(t)
                  , a = this;
                if ("selectedrow" !== a.editmode) {
                    var l = function() {
                        if (0 != n) {
                            if (a.isTouchDevice())
                                return;
                            if (!a.isNestedGrid) {
                                var e = a.getScrollTop()
                                  , t = a.getScrollLeft();
                                try {
                                    a.element.focus(),
                                    a.content.focus(),
                                    e != a.getScrollTop() && window.scrollTo(t, e),
                                    setTimeout(function() {
                                        a.element.focus(),
                                        a.content.focus(),
                                        e != a.getScrollTop() && window.scrollTo(t, e)
                                    }, 10)
                                } catch (e) {}
                            }
                        }
                    };
                    if ("checkbox" == o.columntype || "button" == o.columntype || o.createwidget)
                        return this.editcell && (this.editcell.editor = null,
                        this.editcell.editing = !1,
                        this.editcell = null),
                        !0;
                    var d = this._geteditorvalue(o)
                      , h = function(i) {
                        if (i._hidecelleditor(),
                        o.cellendedit && o.cellendedit(e, t, o.columntype, i.editcell.value, d),
                        i.editchar = null,
                        o.displayfield != o.datafield) {
                            var r = i.getcellvalue(i.editcell.row, o.displayfield)
                              , n = i.editcell.value;
                            oldvalue = {
                                value: n,
                                label: r
                            }
                        } else
                            oldvalue = i.editcell.value;
                        var a = i.getrowdata(e);
                        i._raiseEvent(18, {
                            rowindex: e,
                            row: a,
                            datafield: t,
                            displayfield: o.displayfield,
                            oldvalue: d,
                            value: d,
                            columntype: o.columntype
                        }),
                        i.editcell.editor = null,
                        i.editcell.editing = !1,
                        i.editcell = null,
                        (s || null == s) && i._renderrows(i.virtualsizeinfo),
                        l(),
                        i.enablebrowserselection || (i.host.addClass("jqx-disableselect"),
                        i.content.addClass("jqx-disableselect"))
                    };
                    if (r)
                        return h(this),
                        !1;
                    if (this.validationpopup && (this.validationpopup.hide(),
                    this.validationpopuparrow.hide()),
                    o.cellvaluechanging) {
                        var c = o.cellvaluechanging(e, t, o.columntype, this.editcell.value, d);
                        null != c && (d = c)
                    }
                    if (o.validation) {
                        var u = this.getcell(e, t);
                        try {
                            var p = o.validation(u, d)
                              , f = this.gridlocalization.validationstring;
                            if (null != p.message && (f = p.message),
                            !("boolean" == typeof p ? p : p.result))
                                return null != p.showmessage && 1 != p.showmessage || this._showvalidationpopup(e, t, f),
                                this.editcell.validated = !1,
                                !1
                        } catch (i) {
                            return this._showvalidationpopup(e, t, this.gridlocalization.validationstring),
                            this.editcell.validated = !1,
                            !1
                        }
                    }
                    if (o.displayfield != o.datafield) {
                        var m = this.getcellvalue(this.editcell.row, o.displayfield)
                          , g = this.editcell.value;
                        oldvalue = {
                            value: g,
                            label: m
                        }
                    } else
                        oldvalue = this.editcell.value;
                    var v = this.getrowdata(e);
                    return o.cellendedit && 0 == o.cellendedit(e, t, o.columntype, this.editcell.value, d) ? (this._raiseEvent(18, {
                        rowindex: e,
                        row: v,
                        datafield: t,
                        displayfield: o.displayfield,
                        oldvalue: oldvalue,
                        value: oldvalue,
                        columntype: o.columntype
                    }),
                    h(this),
                    !1) : (this._raiseEvent(18, {
                        rowindex: e,
                        row: v,
                        datafield: t,
                        displayfield: o.displayfield,
                        oldvalue: oldvalue,
                        value: d,
                        columntype: o.columntype
                    }),
                    this._hidecelleditor(!1),
                    null != this.editcell && (this.editcell.editor = null,
                    this.editcell.editing = !1),
                    this.editcell = null,
                    this.editchar = null,
                    this.setcellvalue(e, t, d, s),
                    this.enablebrowserselection || (this.host.addClass("jqx-disableselect"),
                    this.content.addClass("jqx-disableselect")),
                    i.jqx.browser.msie || l(),
                    i.data(document.body, "jqxgrid.edit", ""),
                    !0)
                }
                this.endrowedit(e, r)
            }
        },
        beginrowedit: function(e) {
            var t = this;
            if (null != e) {
                t._oldselectedrow = e,
                this._cellscache = new Array;
                var r = !1;
                if ("selectedrow" != this.editmode && (r = !0),
                r) {
                    var s = this.editmode;
                    this.editmode = "selectedrow"
                }
                var n = null;
                this._currentEditableColumn && (n = this.getcolumnat(this._currentEditableColumn).datafield),
                i.each(this.columns.records, function(i, r) {
                    if (t.editable && this.editable) {
                        if ("checkbox" === this.columntype || "custom" === this.columntype || "widget" === this.columntype || "template" === this.columntype || "button" === this.columntype)
                            return !0;
                        n || (n = this.datafield);
                        var s = t.getcell(e, this.datafield);
                        t.begincelledit(e, this.datafield, null, !1, !1);
                        var o = t.getrowdata(e);
                        t._raiseEvent(17, {
                            rowindex: e,
                            row: o,
                            datafield: this.datafield,
                            value: s.value,
                            columntype: this.columntype
                        })
                    }
                }),
                t.editcell && (t.editcell.init = !0),
                this._renderrows(this.virtualsizeinfo),
                r && (this.editmode = s),
                n && t.editcell && setTimeout(function() {
                    if (t.editcell && t.editcell[n]) {
                        var e = t.editcell[n].editor;
                        e && (e.data().jqxWidget && e.data().jqxWidget.focus ? e.data().jqxWidget.focus() : e.focus())
                    }
                }, 25)
            }
        },
        endrowedit: function(e, t) {
            var r = this;
            if (this._currentEditableColumn = 0,
            this._focusedColumn = null,
            this._currentColumn = null,
            this._checkboxCells = [],
            !this.editcell)
                return !1;
            if (null == this.editcell.editor && "checkbox" !== this.editcell.columntype)
                return !1;
            var s = !1;
            if ("selectedrow" != this.editmode && (s = !0),
            s) {
                var n = this.editmode;
                this.editmode = "selectedrow"
            }
            var o = !1
              , a = {};
            this.validationpopup && (this.validationpopup.hide(),
            this.validationpopuparrow.hide());
            for (var l = 0; l < this.columns.records.length; l++)
                if ((y = this.columns.records[l]).editable && !y.hidden && "checkbox" != y.columntype && !y.createwidget) {
                    var d = this._geteditorvalue(y)
                      , h = function(t) {
                        t._hidecelleditor();
                        var i = t.getcellvalue(t.editcell.row, y.displayfield);
                        if (y.cellendedit && y.cellendedit(e, p, y.columntype, i, d),
                        t.editchar = null,
                        y.displayfield != y.datafield) {
                            var r = t.getcellvalue(t.editcell.row, y.displayfield);
                            c = {
                                value: i,
                                label: r
                            }
                        } else
                            c = i;
                        var s = t.getrowdata(e);
                        t._raiseEvent(18, {
                            rowindex: e,
                            row: s,
                            datafield: p,
                            displayfield: y.displayfield,
                            oldvalue: i,
                            value: i,
                            columntype: y.columntype
                        }),
                        t.editcell.editing = !1
                    };
                    if (t)
                        h(this);
                    else {
                        if (y.cellvaluechanging) {
                            var c = this.getcellvalue(this.editcell.row, y.displayfield)
                              , u = y.cellvaluechanging(e, p, y.columntype, c, d);
                            null != u && (d = u)
                        }
                        var p = y.datafield;
                        if (y.validation) {
                            var f = this.getcell(e, y.datafield);
                            try {
                                var m = y.validation(f, d)
                                  , g = this.gridlocalization.validationstring;
                                if (null != m.message && (g = m.message),
                                !(j = "boolean" == typeof m ? m : m.result)) {
                                    null != m.showmessage && 1 != m.showmessage || this._showvalidationpopup(e, p, g),
                                    o = !0,
                                    this.editcell[y.datafield].validated = !1;
                                    continue
                                }
                            } catch (t) {
                                this._showvalidationpopup(e, p, this.gridlocalization.validationstring),
                                this.editcell[y.datafield].validated = !1,
                                o = !0;
                                continue
                            }
                        }
                        if (y.displayfield != y.datafield) {
                            var v = this.getcellvalue(this.editcell.row, y.displayfield)
                              , w = this.editcell.value;
                            c = {
                                value: w,
                                label: v
                            }
                        } else
                            c = this.getcellvalue(this.editcell.row, y.displayfield);
                        a[y.datafield] = {
                            newvalue: d,
                            oldvalue: c
                        }
                    }
                }
            var x = {}
              , b = {};
            if (!o) {
                for (this._hidecelleditor(!1),
                l = 0; l < this.columns.records.length; l++) {
                    var y;
                    if (p = (y = this.columns.records[l]).datafield,
                    !y.hidden && y.editable) {
                        var _ = this.getrowdata(e);
                        if (!y.createwidget)
                            if ("checkbox" != y.columntype) {
                                if (a[y.datafield]) {
                                    if (d = a[y.datafield].newvalue,
                                    c = a[y.datafield].oldvalue,
                                    y.cellendedit && 0 == y.cellendedit(e, p, y.columntype, c, d)) {
                                        this._raiseEvent(18, {
                                            rowindex: e,
                                            row: _,
                                            datafield: p,
                                            displayfield: y.displayfield,
                                            oldvalue: c,
                                            value: c,
                                            columntype: y.columntype
                                        }),
                                        h(this);
                                        continue
                                    }
                                    this.source.updaterow || this._raiseEvent(18, {
                                        rowindex: e,
                                        row: _,
                                        datafield: y.datafield,
                                        displayfield: y.displayfield,
                                        oldvalue: c,
                                        value: d,
                                        columntype: y.columntype
                                    }),
                                    x[y.datafield] = d,
                                    b[y.datafield] = c
                                }
                            } else {
                                var d = this.getcellvalue(e, y.displayfield);
                                this._raiseEvent(18, {
                                    rowindex: e,
                                    row: _,
                                    datafield: y.datafield,
                                    displayfield: y.displayfield,
                                    oldvalue: d,
                                    value: d,
                                    columntype: y.columntype
                                })
                            }
                    }
                }
                var q = this.getrowid(e);
                if (_ = this.getrowdata(e),
                i.each(x, function(e, t) {
                    if (t && null != t.label) {
                        var i = r.getcolumn(e);
                        _[i.displayfield] = t.label,
                        _[i.datafield] = t.value
                    } else
                        _[e] = t
                }),
                this.enablebrowserselection || (this.host.addClass("jqx-disableselect"),
                this.content.addClass("jqx-disableselect")),
                i.data(document.body, "jqxgrid.edit", ""),
                this.editcell = null,
                this.editchar = null,
                this.source.updaterow && !t) {
                    r = this;
                    var j = function(t) {
                        var s = r.source.updaterow;
                        r.source.updaterow = null,
                        0 == t ? (i.each(b, function(e, t) {
                            if (t && null != t.label) {
                                var i = r.getcolumn(e);
                                _[i.displayfield] = t.label,
                                _[i.datafield] = t.value
                            } else
                                _[e] = t
                        }),
                        r.updaterow(q, _)) : r.updaterow(q, _);
                        for (var n = 0; n < r.columns.records.length; n++) {
                            var o = r.columns.records[n];
                            o.datafield,
                            r._raiseEvent(18, {
                                rowindex: e,
                                datafield: o.datafield,
                                row: _,
                                displayfield: o.displayfield,
                                oldvalue: b[o.datafield],
                                value: _[o.displayfield],
                                columntype: o.columntype
                            })
                        }
                        r.source.updaterow = s
                    };
                    try {
                        this.source.updaterow(q, _, j)
                    } catch (e) {
                        return
                    }
                } else
                    t || this.updaterow(q, _),
                    this._renderrows(this.virtualsizeinfo)
            }
            return s && (this.editmode = n),
            o
        },
        _selection: function(e) {
            if ("selectionStart"in e[0]) {
                var t = e[0]
                  , i = t.selectionEnd - t.selectionStart;
                return {
                    start: t.selectionStart,
                    end: t.selectionEnd,
                    length: i,
                    text: t.value
                }
            }
            var r = document.selection.createRange();
            if (null == r)
                return {
                    start: 0,
                    end: t.value.length,
                    length: 0
                };
            var s = e[0].createTextRange()
              , n = s.duplicate();
            return s.moveToBookmark(r.getBookmark()),
            n.setEndPoint("EndToStart", s),
            i = r.text.length,
            {
                start: n.text.length,
                end: n.text.length + r.text.length,
                length: i,
                text: r.text
            }
        },
        _setSelection: function(e, t, i) {
            if ("selectionStart"in i[0])
                i[0].focus(),
                i[0].setSelectionRange(e, t);
            else {
                var r = i[0].createTextRange();
                r.collapse(!0),
                r.moveEnd("character", t),
                r.moveStart("character", e),
                r.select()
            }
        },
        findRecordIndex: function(e, t, i) {
            if (i = i,
            t)
                for (var r = i.length, s = 0; s < r; s++)
                    if (e == i[s].label)
                        return s;
            return -1
        },
        _destroyeditors: function() {
            var e = this;
            this.columns.records && (i.each(this.columns.records, function(t, r) {
                var s = i.trim(this.datafield).split(" ").join("");
                switch (this.columntype) {
                case "dropdownlist":
                    var n = e.editors["dropdownlist_" + s];
                    n && (n.jqxDropDownList("destroy"),
                    e.editors["dropdownlist_" + s] = null);
                    break;
                case "combobox":
                    var o = e.editors["combobox_" + s];
                    o && (o.jqxComboBox("destroy"),
                    e.editors["combobox_" + s] = null);
                    break;
                case "datetimeinput":
                    var a = e.editors["datetimeinput_" + this.datafield];
                    a && (a.jqxDateTimeInput("destroy"),
                    e.editors["datetimeinput_" + s] = null);
                    break;
                case "numberinput":
                    var l = e.editors["numberinput_" + s];
                    l && (l.jqxNumberInput("destroy"),
                    e.editors["numberinput_" + s] = null);
                    break;
                case "custom":
                case "template":
                    if (e.destroyeditor && e.editors["templateeditor_" + s] && (e.destroyeditor(e.editors["templateeditor_" + s]),
                    e.editors["templateeditor_" + s] = null),
                    e.destroyeditor)
                        for (var d = e.getrows.length(), h = 0; h < d; h++)
                            e.editors["customeditor_" + s + "_" + h] && (e.destroyeditor(e.editors["customeditor_" + s + "_" + h], h),
                            e.editors["customeditor_" + s + "_" + h] = null);
                    break;
                case "textbox":
                default:
                    var c = e.editors["textboxeditor_" + s];
                    c && (e.removeHandler(c, "keydown"),
                    e.editors["textbox_" + s] = null)
                }
            }),
            e.editors = new Array)
        },
        _showcelleditor: function(e, t, r, s, n) {
            if (null != r && null != this.editcell)
                if ("checkbox" == t.columntype && t.editable)
                    "selectedrow" == this.editmode && (this._checkboxCells || (this._checkboxCells = []),
                    this._checkboxCells[t.datafield] = r);
                else {
                    null == n && (n = !0),
                    "selectedrow" == this.editmode && (this.editchar = "",
                    n = !1);
                    var o = t.datafield
                      , a = i(r)
                      , l = this
                      , d = this.editcell.editor
                      , h = this.getcellvalue(e, o)
                      , c = this.getcelltext(e, o)
                      , u = this.hScrollInstance.value
                      , p = parseInt(u);
                    if (this.columns.records.indexOf(t),
                    this.editcell.element = r,
                    0 == this.editcell.validated) {
                        var f = "";
                        this.validationpopup && (f = this.validationpopup.text()),
                        this._showvalidationpopup(e, o, f)
                    }
                    var m = function(e) {
                        l.hScrollInstance.isScrolling() || l.vScrollInstance.isScrolling() || n && (l.isTouchDevice() || (e && e.focus(),
                        0 != l.gridcontent[0].scrollTop && (l.scrolltop(Math.abs(l.gridcontent[0].scrollTop)),
                        l.gridcontent[0].scrollTop = 0),
                        0 != l.gridcontent[0].scrollLeft && (l.gridcontent[0].scrollLeft = 0)))
                    };
                    switch (t.columntype) {
                    case "dropdownlist":
                        if (this.host.jqxDropDownList) {
                            r.innerHTML = "";
                            var g = i.trim(t.datafield).split(" ").join("")
                              , v = i.trim(t.displayfield).split(" ").join("");
                            -1 != g.indexOf(".") && (g = g.replace(".", "")),
                            -1 != v.indexOf(".") && (v = v.replace(".", ""));
                            var w = this.editors["dropdownlist_" + g];
                            if ((d = null == w ? i("<div style='border: none; border-radius: 0px; -moz-border-radius: 0px; -webkit-border-radius: 0px; z-index: 799; top: 0px; left: 0px; position: absolute;' id='dropdownlisteditor'></div>") : w).css("top", i(r).parent().position().top),
                            this.oldhscroll ? d.css("left", -p + parseInt(i(r).position().left)) : d.css("left", parseInt(i(r).position().left)),
                            t.pinned && d.css("left", p + parseInt(i(r).position().left)),
                            null == w) {
                                d.prependTo(this.table),
                                d[0].id = "dropdownlisteditor" + this.element.id + g;
                                var x = null;
                                if (this.source._source) {
                                    var b = {
                                        localdata: JSON.parse(JSON.stringify(this.source.records)),
                                        datatype: this.source.datatype,
                                        async: !1
                                    };
                                    x = new i.jqx.dataAdapter(b,{
                                        autoBind: !1,
                                        async: !1,
                                        uniqueDataFields: [v],
                                        autoSort: !0,
                                        autoSortField: v
                                    })
                                } else
                                    x = new i.jqx.dataAdapter(this.source,{
                                        autoBind: !1,
                                        uniqueDataFields: [v],
                                        async: !1,
                                        autoSort: !0,
                                        autoSortField: v
                                    });
                                var y = !t.createeditor;
                                d.jqxDropDownList({
                                    hint: !1,
                                    enableBrowserBoundsDetection: !0,
                                    keyboardSelection: !1,
                                    source: x,
                                    rtl: this.rtl,
                                    autoDropDownHeight: y,
                                    theme: this.theme,
                                    width: a.width(),
                                    height: a.height(),
                                    displayMember: v,
                                    valueMember: o
                                }),
                                this.editors["dropdownlist_" + g] = d,
                                t.createeditor && t.createeditor(e, h, d)
                            }
                            t._requirewidthupdate && d.jqxDropDownList({
                                width: a.width()
                            });
                            var _ = d.jqxDropDownList("listBox").visibleItems;
                            t.createeditor || (_.length < 8 ? d.jqxDropDownList("autoDropDownHeight", !0) : d.jqxDropDownList("autoDropDownHeight", !1)),
                            h = this.getcellvalue(e, v);
                            var q = this.findRecordIndex(h, v, _);
                            if (s && ("" != h ? d.jqxDropDownList("selectIndex", q, !0) : d.jqxDropDownList("selectIndex", -1)),
                            !this.editcell)
                                return;
                            null != this.editcell.defaultvalue && d.jqxDropDownList("selectIndex", this.editcell.defaultvalue, !0),
                            n && d.jqxDropDownList("focus")
                        }
                        break;
                    case "combobox":
                        if (this.host.jqxComboBox) {
                            r.innerHTML = "",
                            g = i.trim(t.datafield).split(" ").join(""),
                            v = i.trim(t.displayfield).split(" ").join(""),
                            -1 != g.indexOf(".") && (g = g.replace(".", "")),
                            -1 != v.indexOf(".") && (v = v.replace(".", ""));
                            var j = this.editors["combobox_" + g];
                            if ((d = null == j ? i("<div style='border: none; border-radius: 0px; -moz-border-radius: 0px; -webkit-border-radius: 0px; z-index: 799; top: 0px; left: 0px; position: absolute;' id='comboboxeditor'></div>") : j).css("top", i(r).parent().position().top),
                            this.oldhscroll ? d.css("left", -p + parseInt(i(r).position().left)) : d.css("left", parseInt(i(r).position().left)),
                            t.pinned && d.css("left", p + parseInt(i(r).position().left)),
                            null == j && (d.prependTo(this.table),
                            d[0].id = "comboboxeditor" + this.element.id + g,
                            x = null,
                            this.source._source ? (b = {
                                localdata: JSON.parse(JSON.stringify(this.source.records)),
                                datatype: this.source.datatype,
                                async: !1
                            },
                            x = new i.jqx.dataAdapter(b,{
                                autoBind: !1,
                                async: !1,
                                uniqueDataFields: [v],
                                autoSort: !0,
                                autoSortField: v
                            })) : x = new i.jqx.dataAdapter(this.source,{
                                autoBind: !1,
                                uniqueDataFields: [v],
                                async: !1,
                                autoSort: !0,
                                autoSortField: v
                            }),
                            y = !t.createeditor,
                            d.jqxComboBox({
                                hint: !1,
                                enableBrowserBoundsDetection: !0,
                                keyboardSelection: !1,
                                source: x,
                                rtl: this.rtl,
                                autoDropDownHeight: y,
                                theme: this.theme,
                                width: a.width(),
                                height: a.height(),
                                displayMember: v,
                                valueMember: o
                            }),
                            d.removeAttr("tabindex"),
                            d.find("div").removeAttr("tabindex"),
                            this.editors["combobox_" + g] = d,
                            t.createeditor && t.createeditor(e, h, d)),
                            t._requirewidthupdate && d.jqxComboBox({
                                width: a.width() - 2
                            }),
                            _ = d.jqxComboBox("listBox").visibleItems,
                            t.createeditor || (_.length < 8 ? d.jqxComboBox("autoDropDownHeight", !0) : d.jqxComboBox("autoDropDownHeight", !1)),
                            h = this.getcellvalue(e, v),
                            q = this.findRecordIndex(h, v, _),
                            s && ("" != h ? (d.jqxComboBox("selectIndex", q, !0),
                            d.jqxComboBox("val", h)) : (d.jqxComboBox("selectIndex", -1),
                            d.jqxComboBox("val", h))),
                            !this.editcell)
                                return;
                            null != this.editcell.defaultvalue && d.jqxComboBox("selectIndex", this.editcell.defaultvalue, !0),
                            this.editchar && this.editchar.length > 0 && d.jqxComboBox("input").val(this.editchar),
                            n && setTimeout(function() {
                                if (m(d.jqxComboBox("input")),
                                d)
                                    if (d.jqxComboBox("_setSelection", 0, 0),
                                    l.editchar)
                                        d.jqxComboBox("_setSelection", 1, 1),
                                        l.editchar = null;
                                    else if (d.jqxComboBox("input")) {
                                        var e = d.jqxComboBox("input").val();
                                        d.jqxComboBox("_setSelection", 0, e.length)
                                    }
                            }, 10)
                        }
                        break;
                    case "datetimeinput":
                        if (this.host.jqxDateTimeInput) {
                            r.innerHTML = "",
                            -1 != (g = i.trim(t.datafield).split(" ").join("")).indexOf(".") && (g = g.replace(".", ""));
                            var S = this.editors["datetimeinput_" + g];
                            if ((d = null == S ? i("<div style='border: none; border-radius: 0px; -moz-border-radius: 0px; -webkit-border-radius: 0px; z-index: 799; top: 0px; left: 0px; position: absolute;' id='datetimeeditor'></div>") : S).show(),
                            d.css("top", i(r).parent().position().top),
                            this.oldhscroll ? d.css("left", -p + parseInt(i(r).position().left)) : d.css("left", parseInt(i(r).position().left)),
                            t.pinned && d.css("left", p + parseInt(i(r).position().left)),
                            null == S) {
                                d.prependTo(this.table),
                                d[0].id = "datetimeeditor" + this.element.id + g;
                                var C = {
                                    calendar: this.gridlocalization
                                };
                                d.jqxDateTimeInput({
                                    hint: !1,
                                    firstDayOfWeek: this.gridlocalization.firstDay,
                                    enableBrowserBoundsDetection: !0,
                                    localization: C,
                                    _editor: !0,
                                    theme: this.theme,
                                    rtl: this.rtl,
                                    width: a.width(),
                                    height: a.height(),
                                    formatString: t.cellsformat
                                }),
                                this.editors["datetimeinput_" + g] = d,
                                t.createeditor && t.createeditor(e, h, d)
                            }
                            if (t._requirewidthupdate && d.jqxDateTimeInput({
                                width: a.width()
                            }),
                            s) {
                                if ("" != h && null != h) {
                                    var T = new Date(h);
                                    "Invalid Date" == T && this.source.getvaluebytype && (T = this.source.getvaluebytype(h, {
                                        name: t.datafield,
                                        type: "date"
                                    })),
                                    d.jqxDateTimeInput("setDate", T)
                                } else
                                    d.jqxDateTimeInput("setDate", null);
                                null != this.editcell.defaultvalue && d.jqxDateTimeInput("setDate", this.editcell.defaultvalue)
                            }
                            if (n) {
                                var I = this.editEvent;
                                setTimeout(function() {
                                    m(d.jqxDateTimeInput("dateTimeInput")),
                                    setTimeout(function() {
                                        if (d.jqxDateTimeInput("_selectGroup", 0),
                                        l.editchar && l.editchar.length > 0) {
                                            var e = parseInt(l.editchar);
                                            if (!isNaN(e) && I) {
                                                var t = I.charCode ? I.charCode : I.keyCode ? I.keyCode : 0;
                                                d.jqxDateTimeInput("_handleKeyPress", I, t)
                                            }
                                        }
                                    }, 25)
                                }, 10)
                            }
                        }
                        break;
                    case "numberinput":
                        if (this.host.jqxNumberInput) {
                            r.innerHTML = "",
                            -1 != (g = i.trim(t.datafield).split(" ").join("")).indexOf(".") && (g = g.replace(".", ""));
                            var k = this.editors["numberinput_" + g];
                            if ((d = null == k ? i("<div style='border:none; border-radius: 0px; -moz-border-radius: 0px; -webkit-border-radius: 0px; z-index: 799; top: 0px; left: 0px; position: absolute;' id='numbereditor'></div>") : k).show(),
                            d.css("top", i(r).parent().position().top),
                            this.oldhscroll ? d.css("left", -p + parseInt(i(r).position().left)) : d.css("left", parseInt(i(r).position().left)),
                            t.pinned && d.css("left", p + parseInt(i(r).position().left)),
                            null == k) {
                                d.prependTo(this.table),
                                d[0].id = "numbereditor" + this.element.id + g;
                                var D = ""
                                  , P = "left"
                                  , B = 2;
                                t.cellsformat ? -1 != t.cellsformat.indexOf("c") ? (D = this.gridlocalization.currencysymbol,
                                P = "before" == (P = this.gridlocalization.currencysymbolposition) ? "left" : "right",
                                t.cellsformat.length > 1 && (B = parseInt(t.cellsformat.substring(1), 10))) : -1 != t.cellsformat.indexOf("p") && (D = this.gridlocalization.percentsymbol,
                                P = "right",
                                t.cellsformat.length > 1 && (B = parseInt(t.cellsformat.substring(1), 10))) : B = 0,
                                d.jqxNumberInput({
                                    decimalSeparator: this.gridlocalization.decimalseparator,
                                    decimalDigits: B,
                                    inputMode: "simple",
                                    theme: this.theme,
                                    rtl: this.rtl,
                                    width: a.width(),
                                    height: a.height(),
                                    spinButtons: !0,
                                    symbol: D,
                                    symbolPosition: P
                                }),
                                this.editors["numberinput_" + g] = d,
                                t.createeditor && t.createeditor(e, h, d)
                            }
                            if (t._requirewidthupdate && d.jqxNumberInput({
                                width: a.width()
                            }),
                            s) {
                                if ("" != h && null != h) {
                                    var M = h;
                                    d.jqxNumberInput("setDecimal", M)
                                } else
                                    d.jqxNumberInput("setDecimal", 0);
                                if (null != this.editcell.defaultvalue && d.jqxNumberInput("setDecimal", this.editcell.defaultvalue),
                                this.editchar && this.editchar.length > 0) {
                                    var H = parseInt(this.editchar);
                                    isNaN(H) || d.jqxNumberInput("setDecimal", H)
                                }
                                n && setTimeout(function() {
                                    if (m(d.jqxNumberInput("numberInput")),
                                    d.jqxNumberInput("_setSelectionStart", 0),
                                    l.editchar)
                                        t.cellsformat.length > 0 && t.cellsformat.indexOf("c") >= 0 ? d.jqxNumberInput("_setSelectionStart", 2) : d.jqxNumberInput("_setSelectionStart", 1),
                                        l.editchar = null;
                                    else {
                                        if (d.jqxNumberInput("spinButtons")) {
                                            var e = d.jqxNumberInput("numberInput").val();
                                            l._setSelection(d.jqxNumberInput("numberInput")[0], e.length, e.length)
                                        } else
                                            e = d.jqxNumberInput("numberInput").val(),
                                            l._setSelection(d.jqxNumberInput("numberInput")[0], 0, e.length);
                                        d.jqxNumberInput("selectAll")
                                    }
                                }, 10)
                            }
                        }
                        break;
                    case "custom":
                        r.innerHTML = "",
                        -1 != (g = i.trim(t.datafield).split(" ").join("")).indexOf(".") && (g = g.replace(".", ""));
                        var O = this.editors["customeditor_" + g + "_" + e];
                        if ((d = null == O ? i("<div style='overflow: hidden; border-radius: 0px; -moz-border-radius: 0px; -webkit-border-radius: 0px; z-index: 799; top: 0px; left: 0px; position: absolute;' id='customeditor'></div>") : O).show(),
                        d.css("top", i(r).parent().position().top),
                        this.oldhscroll ? d.css("left", -p + parseInt(i(r).position().left)) : d.css("left", parseInt(i(r).position().left)),
                        t.pinned && d.css("left", p + parseInt(i(r).position().left)),
                        null == O) {
                            d.prependTo(this.table),
                            d[0].id = "customeditor" + this.element.id + g + "_" + e,
                            this.editors["customeditor_" + g + "_" + e] = d;
                            var z = a.width() - 1
                              , A = a.height() - 1;
                            d.width(z),
                            d.height(A),
                            t.createeditor && t.createeditor(e, h, d, c, z, A, this.editchar)
                        }
                        t._requirewidthupdate && d.width(a.width());
                        break;
                    case "template":
                        r.innerHTML = "",
                        -1 != (g = i.trim(t.datafield).split(" ").join("")).indexOf(".") && (g = g.replace(".", ""));
                        var L = this.editors["templateeditor_" + g];
                        (d = null == L ? i("<div style='overflow: hidden; border-radius: 0px; -moz-border-radius: 0px; -webkit-border-radius: 0px; z-index: 799; top: 0px; left: 0px; position: absolute;' id='templateeditor'></div>") : L).show(),
                        d.css("top", i(r).parent().position().top),
                        this.oldhscroll ? d.css("left", -p + parseInt(i(r).position().left)) : d.css("left", parseInt(i(r).position().left)),
                        t.pinned && d.css("left", p + parseInt(i(r).position().left)),
                        null == L && (d.prependTo(this.table),
                        d[0].id = "templateeditor" + this.element.id + g,
                        this.editors["templateeditor_" + g] = d,
                        z = a.width() - 1,
                        A = a.height() - 1,
                        d.width(z),
                        d.height(A),
                        t.createeditor && t.createeditor(e, h, d, c, z, A, this.editchar)),
                        t._requirewidthupdate && d.width(a.width());
                        break;
                    case "textbox":
                    default:
                        r.innerHTML = "",
                        (d = this.editors["textboxeditor_" + t.datafield] || i("<input autocomplete='off' style='padding-left: 4px; padding-right:4px; border: none; border-color: transparent;' autocorrect='off' autocapitalize='off' spellcheck='false' type='textbox' id='textboxeditor'/>"))[0].id = "textboxeditor" + this.element.id + t.datafield,
                        d.appendTo(a),
                        this.rtl && d.css("direction", "rtl"),
                        (s || "" == d[0].className) && (d.addClass(this.toThemeProperty("jqx-input")),
                        d.addClass(this.toThemeProperty("jqx-widget-content")),
                        this.editchar && this.editchar.length > 0 ? d.val(this.editchar) : ("" != t.cellsformat && (h = this.getcelltext(e, o)),
                        null == h && (h = ""),
                        d.val(h)),
                        null != this.editcell.defaultvalue && d.val(this.editcell.defaultvalue),
                        d.width(a.width() + 1),
                        d.height(a.height() + 1),
                        t.createeditor && t.createeditor(e, h, d),
                        "" != t.cellsformat && (-1 == t.cellsformat.indexOf("p") && -1 == t.cellsformat.indexOf("c") && -1 == t.cellsformat.indexOf("n") && -1 == t.cellsformat.indexOf("f") || this.editors["textboxeditor_" + t.datafield] || d.keydown(function(e) {
                            var i = e.charCode ? e.charCode : e.keyCode ? e.keyCode : 0
                              , r = String.fromCharCode(i)
                              , s = parseInt(r);
                            if (isNaN(s))
                                return !0;
                            if (l._selection(d).length > 0)
                                return !0;
                            var n = ""
                              , o = d.val();
                            if (t.cellsformat.length > 1) {
                                var a = parseInt(t.cellsformat.substring(1));
                                isNaN(a) && (a = 0)
                            } else
                                a = 0;
                            if (a > 0 && -1 != o.indexOf(l.gridlocalization.decimalseparator) && l._selection(d).start > o.indexOf(l.gridlocalization.decimalseparator))
                                return !0;
                            for (var h = 0; h < o.length - a; h++) {
                                var c = o.substring(h, h + 1);
                                null != c.match(/^[0-9]+$/) && (n += c)
                            }
                            return !(n.length >= 11) && void 0
                        }))),
                        this.editors["textboxeditor_" + t.datafield] = d,
                        s && n && setTimeout(function() {
                            m(d),
                            l.editchar ? (l._setSelection(d[0], 1, 1),
                            l.editchar = null) : l._setSelection(d[0], 0, d.val().length)
                        }, 25)
                    }
                    d && (d.addClass("jqx-grid-cell-edit"),
                    d[0].style.zIndex = 1 + parseInt(r.style.zIndex),
                    i.jqx.browser.msie && i.jqx.browser.version < 8 && (d[0].style.zIndex = 1 + this.columns.records.length + r.style.zIndex),
                    d.css("display", "block"),
                    this.editcell.editor = d,
                    this.editcell[o] ? this.editcell[o].editor = d : (this.editcell[o] = {},
                    this.editcell[o].editor = d)),
                    s && t.initeditor && t.initeditor(e, h, d, c, this.editchar),
                    l.isTouchDevice() || setTimeout(function() {
                        l.content && (l.content[0].scrollTop = 0,
                        l.content[0].scrollLeft = 0),
                        l.gridcontent && (l.gridcontent[0].scrollLeft = 0,
                        l.gridcontent[0].scrollTop = 0)
                    }, 10)
                }
        },
        _setSelection: function(e, t, i) {
            try {
                if ("selectionStart"in e)
                    e.setSelectionRange(t, i);
                else {
                    var r = e.createTextRange();
                    r.collapse(!0),
                    r.moveEnd("character", i),
                    r.moveStart("character", t),
                    r.select()
                }
            } catch (e) {}
        },
        _hideeditors: function() {
            if (null != this.editcells) {
                var e = this;
                for (var t in this.editcells)
                    e.editcell = e.editcells[t],
                    e._hidecelleditor()
            }
        },
        _hidecelleditor: function(e) {
            if (this.editcell)
                if ("selectedrow" !== this.editmode) {
                    if ("checkbox" != this.editcell.columntype) {
                        if (this.editcell.editor)
                            switch (this.editcell.editor.hide(),
                            this.editcell.columntype) {
                            case "dropdownlist":
                                this.editcell.editor.jqxDropDownList({
                                    closeDelay: 0
                                }),
                                this.editcell.editor.jqxDropDownList("hideListBox"),
                                this.editcell.editor.jqxDropDownList({
                                    closeDelay: 300
                                });
                                break;
                            case "combobox":
                                this.editcell.editor.jqxComboBox({
                                    closeDelay: 0
                                }),
                                this.editcell.editor.jqxComboBox("hideListBox"),
                                this.editcell.editor.jqxComboBox({
                                    closeDelay: 300
                                });
                                break;
                            case "datetimeinput":
                                var t = this.editcell.editor;
                                t.jqxDateTimeInput("isOpened") && (t.jqxDateTimeInput({
                                    closeDelay: 0
                                }),
                                t.jqxDateTimeInput("hideCalendar"),
                                t.jqxDateTimeInput({
                                    closeDelay: 300
                                }))
                            }
                        this.validationpopup && (this.validationpopup.hide(),
                        this.validationpopuparrow.hide()),
                        this.isNestedGrid || 0 != e && this.element.focus()
                    }
                } else {
                    for (var i = 0; i < this.columns.records.length; i++) {
                        var r = this.columns.records[i];
                        if (this.editcell[r.datafield] && this.editcell[r.datafield].editor) {
                            this.editcell[r.datafield].editor.hide();
                            var s = this.editcell[r.datafield].editor;
                            switch (r.columntype) {
                            case "dropdownlist":
                                s.jqxDropDownList({
                                    closeDelay: 0
                                }),
                                s.jqxDropDownList("hideListBox"),
                                s.jqxDropDownList({
                                    closeDelay: 300
                                });
                                break;
                            case "combobox":
                                s.jqxComboBox({
                                    closeDelay: 0
                                }),
                                s.jqxComboBox("hideListBox"),
                                s.jqxComboBox({
                                    closeDelay: 300
                                });
                                break;
                            case "datetimeinput":
                                s.jqxDateTimeInput("isOpened") && (s.jqxDateTimeInput({
                                    closeDelay: 0
                                }),
                                s.jqxDateTimeInput("hideCalendar"),
                                s.jqxDateTimeInput({
                                    closeDelay: 300
                                }))
                            }
                        }
                    }
                    this.validationpopup && (this.validationpopup.hide(),
                    this.validationpopuparrow.hide())
                }
        },
        _geteditorvalue: function(e) {
            var t = new String;
            if (!this.editcell)
                return null;
            var r = this.editcell.editor;
            if ("selectedrow" == this.editmode && this.editcell[e.datafield] && (r = this.editcell[e.datafield].editor),
            r) {
                switch (e.columntype) {
                case "textbox":
                default:
                    if (t = r.val(),
                    "" != e.cellsformat) {
                        var s = "string"
                          , n = this.source.datafields || (this.source._source ? this.source._source.datafields : null);
                        if (n) {
                            var o = "";
                            i.each(n, function() {
                                if (this.name == e.displayfield)
                                    return this.type && (o = this.type),
                                    !1
                            }),
                            o && (s = o)
                        }
                        var a = "date" === s || "time" === s;
                        if ("number" === s || "float" === s || "int" === s || "integer" === s || "string" === s && (-1 != e.cellsformat.indexOf("p") || -1 != e.cellsformat.indexOf("c") || -1 != e.cellsformat.indexOf("n") || -1 != e.cellsformat.indexOf("f"))) {
                            if ("" === t && e.nullable)
                                return "";
                            t.indexOf && t.indexOf(this.gridlocalization.currencysymbol) > -1 && (t = t.replace(this.gridlocalization.currencysymbol, ""));
                            var l = t;
                            if (l = new Number(l),
                            !isNaN(l))
                                return l;
                            (t = (t = function(e, t, i) {
                                var r = e;
                                if (t == i)
                                    return e;
                                for (var s = r.indexOf(t); -1 != s; )
                                    s = (r = r.replace(t, i)).indexOf(t);
                                return r
                            }(t, this.gridlocalization.thousandsseparator, "")).replace(this.gridlocalization.decimalseparator, ".")).indexOf(this.gridlocalization.percentsymbol) > -1 && (t = t.replace(this.gridlocalization.percentsymbol, ""));
                            for (var d = "", h = 0; h < t.length; h++) {
                                var c = t.substring(h, h + 1);
                                "-" === c && (d += "-"),
                                "." === c && (d += "."),
                                null != c.match(/^[0-9]+$/) && (d += c)
                            }
                            t = (t = d).replace(/ /g, ""),
                            t = new Number(t),
                            isNaN(t) && (t = "")
                        }
                        if (a || "string" === s && (-1 != e.cellsformat.indexOf("H") || -1 != e.cellsformat.indexOf("m") || -1 != e.cellsformat.indexOf("M") || -1 != e.cellsformat.indexOf("y") || -1 != e.cellsformat.indexOf("h") || -1 != e.cellsformat.indexOf("d"))) {
                            if ("" === t && e.nullable)
                                return "";
                            var u = t;
                            i.jqx.dataFormat && (t = i.jqx.dataFormat.tryparsedate(u, this.gridlocalization)),
                            "Invalid Date" != t && null != t || (t = "")
                        }
                    }
                    e.displayfield != e.datafield && (t = {
                        label: t,
                        value: t
                    });
                    break;
                case "checkbox":
                    r.jqxCheckBox && (t = r.jqxCheckBox("checked"));
                    break;
                case "datetimeinput":
                    if (r.jqxDateTimeInput) {
                        if (r.jqxDateTimeInput({
                            isEditing: !1
                        }),
                        "none" !== r.jqxDateTimeInput("container").css("display") && r.jqxDateTimeInput("close"),
                        r.jqxDateTimeInput("_validateValue"),
                        null == (t = r.jqxDateTimeInput("getDate")))
                            return null;
                        t = new Date(t.toString()),
                        e.displayfield != e.datafield && (t = {
                            label: t,
                            value: t
                        })
                    }
                    break;
                case "dropdownlist":
                    if (r.jqxDropDownList) {
                        var p = r.jqxDropDownList("selectedIndex")
                          , f = r.jqxDropDownList("listBox").getVisibleItem(p);
                        null == (t = e.displayfield != e.datafield ? f ? {
                            label: f.label,
                            value: f.value
                        } : "" : f ? f.label : "") && (t = "")
                    }
                    break;
                case "combobox":
                    r.jqxComboBox && (t = r.jqxComboBox("val"),
                    e.displayfield != e.datafield && null != (f = r.jqxComboBox("getSelectedItem")) && (t = {
                        label: f.label,
                        value: f.value
                    }),
                    null == t && (t = ""));
                    break;
                case "numberinput":
                    if (r.jqxNumberInput) {
                        this.touchdevice && r.jqxNumberInput("_doTouchHandling");
                        var m = r.jqxNumberInput("getDecimal");
                        t = new Number(m),
                        t = parseFloat(t),
                        isNaN(t) && (t = 0),
                        null === m && (t = null),
                        e.displayfield != e.datafield && (t = {
                            label: t,
                            value: t
                        })
                    }
                }
                e.geteditorvalue && (t = "selectedrow" == this.editmode ? e.geteditorvalue(this.editcell.row, this.getcellvalue(this.editcell.row, e.datafield), r) : e.geteditorvalue(this.editcell.row, this.editcell.value, r))
            }
            return t
        },
        hidevalidationpopups: function() {
            this.popups && (i.each(this.popups, function() {
                this.validation.remove(),
                this.validationrow.remove()
            }),
            this.popups = new Array),
            this.validationpopup && (this.validationpopuparrow.hide(),
            this.validationpopup.hide())
        },
        showvalidationpopup: function(e, t, r) {
            null == r && (r = this.gridlocalization.validationstring);
            var s = i("<div style='z-index: 99999; top: 0px; left: 0px; position: absolute;'></div>")
              , n = i("<div style='width: 20px; height: 20px; z-index: 999999; top: 0px; left: 0px; position: absolute;'></div>");
            s.html(r),
            n.addClass(this.toThemeProperty("jqx-grid-validation-arrow-up")),
            s.addClass(this.toThemeProperty("jqx-grid-validation")),
            s.addClass(this.toThemeProperty("jqx-rc-all")),
            s.prependTo(this.table),
            n.prependTo(this.table);
            for (var o = this.hScrollInstance.value, a = parseInt(o), l = this.getcolumn(t).uielement, d = null, h = 0; h < this.hittestinfo.length; h++)
                e === this.hittestinfo[h].row.visibleindex && (d = this.hittestinfo[h]);
            if (!d) {
                this.ensurerowvisible(e);
                var c = this;
                return s.remove(),
                n.remove(),
                void setTimeout(function() {
                    for (var i = null, s = 0; s < c.hittestinfo.length; s++)
                        e === c.hittestinfo[s].row.visibleindex && (i = c.hittestinfo[s]);
                    i && c.showvalidationpopup(e, t, r)
                }, 25)
            }
            var u = i(d.visualrow);
            s.css("top", parseInt(u.position().top) + 30 + "px");
            var p = parseInt(s.css("top"));
            n.css("top", p - 12),
            n.removeClass(),
            n.addClass(this.toThemeProperty("jqx-grid-validation-arrow-up"));
            var f = !1;
            p >= this._gettableheight() - this.rowsheight && (n.removeClass(this.toThemeProperty("jqx-grid-validation-arrow-up")),
            n.addClass(this.toThemeProperty("jqx-grid-validation-arrow-down")),
            (p = parseInt(u.position().top) - this.rowsheight) < 0 && (p = 0,
            this.validationpopuparrow.removeClass(this.toThemeProperty("jqx-grid-validation-arrow-down")),
            f = !0),
            s.css("top", p + "px"),
            n.css("top", p + s.outerHeight() - 9));
            var m = -a + parseInt(i(l).position().left);
            n.css("left", a + m + 30);
            var g = s.width();
            g + m > this.host.width() - 20 && (m -= g + m - this.host.width() + 40),
            f ? s.css("left", a + parseInt(i(l).position().left) - s.outerWidth()) : s.css("left", a + m),
            s.show(),
            n.show(),
            this.popups || (this.popups = new Array),
            this.popups[this.popups.length] = {
                validation: s,
                validationrow: n
            }
        },
        _showvalidationpopup: function(e, t, r) {
            var s = this.editcell
              , n = this.editcell.editor;
            if ("selectedrow" == this.editmode && (s = this.editcell[t]) && s.editor && (n = s.editor,
            s.element = n),
            n && !(this.validationpopup && i.jqx.isHidden(this.validationpopup) && (this.validationpopup.remove && (this.validationpopup.remove(),
            this.validationpopuparrow.remove()),
            this.validationpopup = null,
            this.validationpopuparrow = null,
            void 0 === t && void 0 === r && this.editors && 0 === this.editors.length))) {
                if (this.validationpopup)
                    this.validationpopup.html(r);
                else {
                    var o = i("<div style='z-index: 99999; top: 0px; left: 0px; position: absolute;'></div>")
                      , a = i("<div style='width: 20px; height: 20px; z-index: 999999; top: 0px; left: 0px; position: absolute;'></div>");
                    o.html(r),
                    a.addClass(this.toThemeProperty("jqx-grid-validation-arrow-up")),
                    o.addClass(this.toThemeProperty("jqx-grid-validation")),
                    o.addClass(this.toThemeProperty("jqx-rc-all")),
                    o.prependTo(this.table),
                    a.prependTo(this.table),
                    this.validationpopup = o,
                    this.validationpopuparrow = a
                }
                var l = this.hScrollInstance.value
                  , d = parseInt(l);
                "selectedrow" == this.editmode ? this.visiblerows && this.visiblerows[this.editcell.visiblerowindex] ? this.validationpopup.css("top", this.visiblerows[this.editcell.visiblerowindex].top + (this.rowsheight + 5) + "px") : this.validationpopup.css("top", parseInt(i(s.editor).position().top) + (this.rowsheight + 5) + "px") : this.validationpopup.css("top", parseInt(i(s.element).parent().position().top) + (this.rowsheight + 5) + "px");
                var h = parseInt(this.validationpopup.css("top"));
                this.validationpopuparrow.css("top", h - 11),
                this.validationpopuparrow.removeClass(),
                this.validationpopuparrow.addClass(this.toThemeProperty("jqx-grid-validation-arrow-up"));
                var c = !1;
                h >= this._gettableheight() && (this.validationpopuparrow.removeClass(this.toThemeProperty("jqx-grid-validation-arrow-up")),
                this.validationpopuparrow.addClass(this.toThemeProperty("jqx-grid-validation-arrow-down")),
                h = parseInt(i(s.element).parent().position().top) - this.rowsheight - 5,
                "selectedrow" == this.editmode && (h = this.visiblerows && this.visiblerows[this.editcell.visiblerowindex] ? this.visiblerows[this.editcell.visiblerowindex].top - this.rowsheight - 5 : parseInt(i(s.editor).position().top) - this.rowsheight - 5),
                h < 0 && (h = 0,
                this.validationpopuparrow.removeClass(this.toThemeProperty("jqx-grid-validation-arrow-down")),
                c = !0),
                this.validationpopup.css("top", h + "px"),
                this.validationpopuparrow.css("top", h + this.validationpopup.outerHeight() - 9));
                var u = -d + parseInt(i(s.element).position().left);
                this.validationpopuparrow.css("left", d + u + 30);
                var p = this.validationpopup.width();
                p + u > this.host.width() - 20 && (u -= p + u - this.host.width() + 40),
                c ? this.validationpopup.css("left", d + parseInt(i(s.element).position().left) - this.validationpopup.outerWidth()) : this.validationpopup.css("left", d + u),
                "none" == this.editcell.editor.css("display") ? (this.validationpopup.hide(),
                this.validationpopuparrow.hide()) : (this.validationpopup.show(),
                this.validationpopuparrow.show())
            }
        }
    })
}
, function(e, t) {
    var i;
    (i = jqxBaseFramework).extend(i.jqx._jqxGrid.prototype, {
        _initpager: function() {
            var e = this.that
              , t = this.gridlocalization.pagergotopagestring
              , r = (this.gridlocalization.pagerrangestring,
            this.gridlocalization.pagershowrowsstring)
              , s = (this.pagerheight - 28) / 2;
            if (this.pagerdiv = this.pagerdiv || i('<div style="line-height: 26px; width: 100%; height: 100%; position: relative;"></div>'),
            !this.pageable)
                return this.pagerdiv.remove(),
                void this.vScrollBar.jqxScrollBar({
                    thumbSize: 0
                });
            if (this.pagerrenderer) {
                this.pagerdiv.children().remove();
                var n = this.pagerrenderer();
                null != n && this.pagerdiv.append(i(n)),
                this.pager.append(this.pagerdiv)
            } else {
                if (this.pagerdiv.css("top", s),
                this.pager.append(this.pagerdiv),
                this.pagergotoinput = this.pagergotoinput || i('<div style="margin-right: 12px; height: 28px; float: right;"><input style="height:100%; box-sizing: border-box; text-align: right; width: 36px;" type="text"/></div>'),
                this.pagergoto = this.pagergoto || i('<div style="float: right; margin-right: 7px;"></div>'),
                this.pagerrightbutton = this.pagerrightbutton || i('<div type="button" style="padding: 0px; margin-right: 3px; height:26px; width: 26px; float: right;"></div>'),
                this.pagerleftbutton = this.pagerleftbutton || i('<div type="button" style="padding: 0px; margin-right: 3px; height:26px; width: 26px; float: right;"></div>'),
                this.pagerdetails = this.pagerdetails || i('<div style="margin-right: 7px; float: right;"></div>'),
                this.pagershowrows = this.pagershowrows || i('<div style="margin-right: 7px; float: right;"></div>'),
                this.pagerbuttons = i('<div style="margin-right: 3px; float: right;"></div>'),
                this.pagershowrowscombo && this.pagershowrowscombo.jqxDropDownList && (this.pagershowrowscombo.remove(),
                this.pagershowrowscombo = null),
                this.pagergotoinput.attr("disabled", this.disabled),
                this.pagerfirstbutton = i('<div type="button" style="padding: 0px; margin-left: 3px; margin-right: 3px; width: 26px; float: right;"></div>'),
                this.pagerlastbutton = i('<div type="button" style="padding: 0px; margin-right: 3px; width: 26px; float: right;"></div>'),
                this.pagershowrowscombo = this.pagershowrowscombo || i('<div id="gridpagerlist" style="margin-right: 7px; float: right;"></div>'),
                this.pagerdiv.children().remove(),
                this.pagershowrowscombo[0].id = "gridpagerlist" + this.element.id,
                this.removeHandler(this.pagerrightbutton, "mousedown"),
                this.removeHandler(this.pagerrightbutton, "mouseup"),
                this.removeHandler(this.pagerrightbutton, "click"),
                this.removeHandler(this.pagerleftbutton, "mousedown"),
                this.removeHandler(this.pagerleftbutton, "mouseup"),
                this.removeHandler(this.pagerleftbutton, "click"),
                this.removeHandler(this.pagerfirstbutton, "mousedown"),
                this.removeHandler(this.pagerfirstbutton, "mouseup"),
                this.removeHandler(this.pagerfirstbutton, "click"),
                this.removeHandler(this.pagerlastbutton, "mousedown"),
                this.removeHandler(this.pagerlastbutton, "mouseup"),
                this.removeHandler(this.pagerlastbutton, "click"),
                this.pagerleftbutton.attr("title", this.gridlocalization.pagerpreviousbuttonstring),
                this.pagerrightbutton.attr("title", this.gridlocalization.pagernextbuttonstring),
                "simple" == this.pagermode) {
                    i.jqx.browser.msie && i.jqx.browser.version < 8 && (this.pagerbuttons.css("overflow", "visible"),
                    this.pagerbuttons.css("padding", "3px")),
                    this.pagerfirstbutton.attr("title", this.gridlocalization.pagerfirstbuttonstring),
                    this.pagerlastbutton.attr("title", this.gridlocalization.pagerlastbuttonstring);
                    var o = i("<div style='margin-left: 6px; width: 15px; height: 26px;'></div>");
                    o.addClass(this.toThemeProperty("jqx-icon-arrow-first")),
                    this.pagerfirstbutton.wrapInner(o);
                    var a = i("<div style='margin-left: 6px; width: 15px; height: 26px;'></div>");
                    a.addClass(this.toThemeProperty("jqx-icon-arrow-last")),
                    this.pagerlastbutton.wrapInner(a),
                    this.rtl ? (this.pagerdiv.append(this.pagerlastbutton),
                    this.pagerdiv.append(this.pagerrightbutton),
                    this.pagerdiv.append(this.pagerbuttons),
                    this.pagerdiv.append(this.pagerleftbutton),
                    this.pagerdiv.append(this.pagerfirstbutton)) : (this.pagerdiv.append(this.pagerfirstbutton),
                    this.pagerdiv.append(this.pagerleftbutton),
                    this.pagerdiv.append(this.pagerbuttons),
                    this.pagerdiv.append(this.pagerrightbutton),
                    this.pagerdiv.append(this.pagerlastbutton)),
                    this.pagerlastbutton.jqxButton({
                        cursor: "pointer",
                        disabled: this.disabled,
                        theme: this.theme
                    }),
                    this.pagerfirstbutton.jqxButton({
                        cursor: "pointer",
                        disabled: this.disabled,
                        theme: this.theme
                    });
                    var l = this.rtl ? "right" : "left";
                    this.pagerbuttons.css("float", l),
                    this.pagerlastbutton.css("float", l),
                    this.pagerfirstbutton.css("float", l),
                    this.pagerrightbutton.css("float", l),
                    this.pagerleftbutton.css("float", l),
                    this.pagerdetails.css("float", this.rtl ? "left" : "right"),
                    this.rtl ? (this.pagerdetails.css("margin-left", "7px"),
                    this.pagerdetails.css("margin-right", "0px")) : (this.pagerdetails.css("margin-left", "0px"),
                    this.pagerdetails.css("margin-right", "7px")),
                    this.pagergotoinput.hide(),
                    this.pagershowrowscombo.hide(),
                    this.pagergoto.hide(),
                    this.pagershowrows.hide()
                } else
                    this.pagergotoinput.show(),
                    this.pagershowrowscombo.show(),
                    this.pagergoto.show(),
                    this.pagershowrows.show(),
                    this.rtl || (this.pagerdiv.append(this.pagerrightbutton),
                    this.pagerdiv.append(this.pagerleftbutton));
                this.pagerrightbutton.jqxButton({
                    cursor: "pointer",
                    disabled: this.disabled,
                    theme: this.theme
                }),
                this.pagerleftbutton.jqxButton({
                    cursor: "pointer",
                    disabled: this.disabled,
                    theme: this.theme
                }),
                this.pagerleftbutton.find(".jqx-icon-arrow-left").remove(),
                this.pagerrightbutton.find(".jqx-icon-arrow-right").remove();
                var d = i("<div style='margin-left: 6px; width: 15px; height: 26px;'></div>");
                d.addClass(this.toThemeProperty("jqx-icon-arrow-left")),
                this.pagerleftbutton.wrapInner(d);
                var h = i("<div style='margin-left: 6px; width: 15px; height: 26px;'></div>");
                h.addClass(this.toThemeProperty("jqx-icon-arrow-right")),
                this.pagerrightbutton.wrapInner(h),
                this.pagerdiv.append(this.pagerdetails),
                "simple" != this.pagermode && (this.rtl ? (this.pagerdiv.append(this.pagergoto),
                this.pagerdiv.append(this.pagergotoinput),
                this.pagerdiv.append(this.pagershowrows),
                this.pagerdiv.append(this.pagershowrowscombo),
                this.pagerdiv.append(this.pagerdetails),
                this.pagerdiv.append(this.pagerrightbutton),
                this.pagerdiv.append(this.pagerleftbutton)) : (this.pagerdiv.append(this.pagershowrowscombo),
                this.pagerdiv.append(this.pagershowrows),
                this.pagerdiv.append(this.pagergotoinput),
                this.pagerdiv.append(this.pagergoto)));
                var c = this.pagesizeoptions;
                if (!this.pagershowrowscombo.jqxDropDownList)
                    throw new Error("jqxGrid: jqxdropdownlist.js is not loaded.");
                this.pagershowrowscombo.jqxDropDownList({
                    rtl: this.rtl,
                    disabled: this.disabled,
                    source: c,
                    enableBrowserBoundsDetection: !0,
                    keyboardSelection: !1,
                    autoDropDownHeight: !0,
                    width: "auto",
                    height: 28,
                    theme: this.theme
                });
                for (var u = 0, p = 0; p < c.length; p++)
                    this.pagesize >= c[p] && (u = p);
                this.pagershowrows[0].innerHTML = r,
                this.pagergoto[0].innerHTML = t,
                this.updatepagerdetails(),
                this.pagershowrowscombo.jqxDropDownList({
                    selectedIndex: u
                }),
                this.pagerpageinput = this.pagergotoinput.find("input"),
                this.pagerpageinput.addClass(this.toThemeProperty("jqx-input")),
                this.pagerpageinput.addClass(this.toThemeProperty("jqx-widget-content")),
                this.rtl && this.pagerpageinput.css("direction", "rtl");
                var f = 6 + (this.columns.records ? this.columns.records.length : this.columns.length);
                this.pagerpageinput.attr("tabindex", f++),
                this.pagershowrowscombo.attr("tabindex", f++),
                this.pagerleftbutton.attr("tabindex", f++),
                this.pagerrightbutton.attr("tabindex", f++),
                e = this.that,
                this.removeHandler(this.pagershowrowscombo, "select"),
                this.addHandler(this.pagershowrowscombo, "select", function(t) {
                    if (t.args) {
                        e.vScrollInstance && e.vScrollInstance.setPosition(0),
                        null != e.editcell && e.endcelledit && e.endcelledit(e.editcell.row, e.editcell.column, !0, !1);
                        var i = t.args.index
                          , r = e.dataview.pagenum * e.dataview.pagesize
                          , s = c[i]
                          , n = e.pagesize;
                        e.pagesize = parseInt(s),
                        isNaN(e.pagesize) && (e.pagesize = 10),
                        e.dataview.pagesize = e.pagesize;
                        var o = Math.floor(r / e.dataview.pagesize);
                        e.prerenderrequired = !0,
                        e._requiresupdate = !0,
                        e._raiseEvent(10, {
                            pagenum: o,
                            oldpagesize: n,
                            pagesize: e.dataview.pagesize
                        }),
                        e.gotopage(o),
                        e.autoheight && e._updatesizeonwindowresize && (e._updatesize(!0),
                        setTimeout(function() {
                            e._updatesize(!0)
                        }, 500)),
                        setTimeout(function() {
                            e.pagershowrowscombo.focus()
                        }, 25)
                    }
                });
                var m = this.pagergotoinput.find("input");
                m.addClass(this.toThemeProperty("jqx-grid-pager-input")),
                m.addClass(this.toThemeProperty("jqx-rc-all")),
                this.removeHandler(m, "keydown"),
                this.removeHandler(m, "change"),
                this.addHandler(m, "keydown", function(t) {
                    if (t.keyCode >= 65 && t.keyCode <= 90)
                        return !1;
                    if ("13" == t.keyCode) {
                        var i = m.val();
                        return i = parseInt(i),
                        isNaN(i) || (e.gotopage(i - 1),
                        setTimeout(function() {
                            m.focus()
                        }, 25)),
                        !1
                    }
                }),
                this.addHandler(m, "change", function() {
                    var t = m.val();
                    t = parseInt(t),
                    isNaN(t) || (e.gotopage(t - 1),
                    setTimeout(function() {
                        m.focus()
                    }, 25))
                }),
                this.addHandler(this.pagerrightbutton, "mouseenter", function() {
                    h.addClass(e.toThemeProperty("jqx-icon-arrow-right-hover"))
                }),
                this.addHandler(this.pagerleftbutton, "mouseenter", function() {
                    d.addClass(e.toThemeProperty("jqx-icon-arrow-left-hover"))
                }),
                this.addHandler(this.pagerrightbutton, "mouseleave", function() {
                    h.removeClass(e.toThemeProperty("jqx-icon-arrow-right-hover"))
                }),
                this.addHandler(this.pagerleftbutton, "mouseleave", function() {
                    d.removeClass(e.toThemeProperty("jqx-icon-arrow-left-hover"))
                }),
                this.addHandler(this.pagerrightbutton, "mousedown", function() {
                    h.addClass(e.toThemeProperty("jqx-icon-arrow-right-selected"))
                }),
                this.addHandler(this.pagerrightbutton, "mouseup", function() {
                    h.removeClass(e.toThemeProperty("jqx-icon-arrow-right-selected"))
                }),
                this.addHandler(this.pagerleftbutton, "mousedown", function() {
                    d.addClass(e.toThemeProperty("jqx-icon-arrow-left-selected"))
                }),
                this.addHandler(this.pagerleftbutton, "mouseup", function() {
                    d.removeClass(e.toThemeProperty("jqx-icon-arrow-left-selected"))
                }),
                this.addHandler(i(document), "mouseup.pagerbuttons" + this.element.id, function() {
                    h.removeClass(e.toThemeProperty("jqx-icon-arrow-right-selected")),
                    d.removeClass(e.toThemeProperty("jqx-icon-arrow-left-selected"))
                }),
                this.addHandler(this.pagerrightbutton, "click", function() {
                    e.pagerrightbutton.jqxButton("disabled") || (e.rtl ? e.gotoprevpage() : e.gotonextpage())
                }),
                this.addHandler(this.pagerleftbutton, "click", function() {
                    e.pagerleftbutton.jqxButton("disabled") || (e.rtl ? e.gotonextpage() : e.gotoprevpage())
                }),
                this.addHandler(this.pagerrightbutton, "keydown", function(t) {
                    13 === t.keyCode && (e.pagerrightbutton.jqxButton("disabled") || (e.rtl ? e.gotoprevpage() : e.gotonextpage(),
                    setTimeout(function() {
                        e.pagerrightbutton.focus()
                    }, 25)))
                }),
                this.addHandler(this.pagerleftbutton, "keydown", function(t) {
                    13 === t.keyCode && (e.pagerleftbutton.jqxButton("disabled") || (e.rtl ? e.gotonextpage() : e.gotoprevpage(),
                    setTimeout(function() {
                        e.pagerleftbutton.focus()
                    }, 25)))
                });
                var g = this;
                if ("simple" === this.pagermode) {
                    var v = this.pagerfirstbutton
                      , w = this.pagerlastbutton;
                    this.addHandler(w, "mouseenter", function() {
                        a.addClass(g.toThemeProperty("jqx-icon-arrow-last-hover"))
                    }),
                    this.addHandler(v, "mouseenter", function() {
                        o.addClass(g.toThemeProperty("jqx-icon-arrow-first-hover"))
                    }),
                    this.addHandler(w, "mouseleave", function() {
                        a.removeClass(g.toThemeProperty("jqx-icon-arrow-last-hover"))
                    }),
                    this.addHandler(v, "mouseleave", function() {
                        o.removeClass(g.toThemeProperty("jqx-icon-arrow-first-hover"))
                    }),
                    this.addHandler(w, "mousedown", function() {
                        a.addClass(g.toThemeProperty("jqx-icon-arrow-last-selected"))
                    }),
                    this.addHandler(v, "mousedown", function() {
                        o.addClass(g.toThemeProperty("jqx-icon-arrow-first-selected"))
                    }),
                    this.addHandler(w, "mouseup", function() {
                        a.removeClass(g.toThemeProperty("jqx-icon-arrow-last-selected"))
                    }),
                    this.addHandler(v, "mouseup", function() {
                        o.removeClass(g.toThemeProperty("jqx-icon-arrow-first-selected"))
                    }),
                    this.addHandler(i(document), "mouseup.pagerbuttons" + name + this.element.id, function() {
                        h.removeClass(g.toThemeProperty("jqx-icon-arrow-right-selected")),
                        d.removeClass(g.toThemeProperty("jqx-icon-arrow-left-selected")),
                        a && (a.removeClass(g.toThemeProperty("jqx-icon-arrow-last-selected")),
                        o.removeClass(g.toThemeProperty("jqx-icon-arrow-first-selected")))
                    }),
                    this.addHandler(v, "click", function() {
                        if (!v.jqxButton("disabled"))
                            if (g.rtl) {
                                var e = g.dataview.totalrecords
                                  , t = Math.ceil(e / g.pagesize);
                                g.gotopage(t - 1)
                            } else
                                g.gotopage(0)
                    }),
                    this.addHandler(w, "click", function() {
                        if (!w.jqxButton("disabled"))
                            if (g.rtl)
                                g.gotopage(0);
                            else {
                                var e = g.dataview.totalrecords
                                  , t = Math.ceil(e / g.pagesize);
                                g.gotopage(t - 1)
                            }
                    })
                }
            }
            this.vScrollBar.jqxScrollBar("refresh"),
            this._arrange()
        },
        _updatepagertheme: function() {
            if (null != this.pagershowrowscombo) {
                this.pagershowrowscombo.jqxDropDownList({
                    theme: this.theme
                }),
                this.pagerrightbutton.jqxButton({
                    theme: this.theme
                }),
                this.pagerleftbutton.jqxButton({
                    theme: this.theme
                }),
                this.pagerpageinput.removeClass();
                var e = this.pagergotoinput.find("input");
                e.removeClass(),
                e.addClass(this.toThemeProperty("jqx-grid-pager-input")),
                e.addClass(this.toThemeProperty("jqx-rc-all")),
                this.pagerpageinput.addClass(this.toThemeProperty("jqx-input")),
                this.pagerpageinput.addClass(this.toThemeProperty("jqx-widget-content")),
                this.pagerleftbutton.find(".jqx-icon-arrow-left").remove(),
                this.pagerrightbutton.find(".jqx-icon-arrow-right").remove();
                var t = i("<div style='margin-left: 6px; width: 15px; height: 15px;'></div>");
                t.addClass(this.toThemeProperty("jqx-icon-arrow-left")),
                this.pagerleftbutton.wrapInner(t);
                var r = i("<div style='margin-left: 6px; width: 15px; height: 15px;'></div>");
                if (r.addClass(this.toThemeProperty("jqx-icon-arrow-right")),
                this.pagerrightbutton.wrapInner(r),
                "simple" == this.pagermode) {
                    i.jqx.browser.msie && i.jqx.browser.version < 8 && (this.pagerbuttons.css("overflow", "visible"),
                    this.pagerbuttons.css("padding", "3px")),
                    this.pagerfirstbutton.attr("title", this.gridlocalization.pagerfirstbuttonstring),
                    this.pagerlastbutton.attr("title", this.gridlocalization.pagerlastbuttonstring);
                    var s = i("<div style='margin-left: 6px; width: 15px; height: 15px;'></div>");
                    s.addClass(this.toThemeProperty("jqx-icon-arrow-first")),
                    this.pagerfirstbutton.wrapInner(s);
                    var n = i("<div style='margin-left: 6px; width: 15px; height: 15px;'></div>");
                    n.addClass(this.toThemeProperty("jqx-icon-arrow-last")),
                    this.pagerlastbutton.wrapInner(n),
                    this.pagerdiv.append(this.pagerfirstbutton),
                    this.pagerdiv.append(this.pagerleftbutton),
                    this.pagerdiv.append(this.pagerbuttons),
                    this.pagerdiv.append(this.pagerrightbutton),
                    this.pagerdiv.append(this.pagerlastbutton),
                    this.pagerlastbutton.jqxButton({
                        cursor: "pointer",
                        disabled: this.disabled,
                        theme: this.theme
                    }),
                    this.pagerfirstbutton.jqxButton({
                        cursor: "pointer",
                        disabled: this.disabled,
                        theme: this.theme
                    }),
                    this.pagerbuttons.css("float", "left"),
                    this.pagerlastbutton.css("float", "left"),
                    this.pagerfirstbutton.css("float", "left"),
                    this.pagerrightbutton.css("float", "left"),
                    this.pagerleftbutton.css("float", "left"),
                    this.pagergotoinput.hide(),
                    this.pagershowrowscombo.hide(),
                    this.pagergoto.hide(),
                    this.pagershowrows.hide()
                } else
                    this.pagergotoinput.show(),
                    this.pagershowrowscombo.show(),
                    this.pagergoto.show(),
                    this.pagershowrows.show();
                var o = function(e, t) {
                    e.removeHandler(t, "mouseenter"),
                    e.removeHandler(t, "mouseleave"),
                    e.removeHandler(t, "mousedown"),
                    e.removeHandler(t, "mouseup")
                };
                o(this, this.pagerrightbutton),
                o(this, this.pagerleftbutton);
                var a = this.that;
                this.addHandler(this.pagerrightbutton, "mouseenter", function() {
                    r.addClass(a.toThemeProperty("jqx-icon-arrow-right-hover"))
                }),
                this.addHandler(this.pagerleftbutton, "mouseenter", function() {
                    t.addClass(a.toThemeProperty("jqx-icon-arrow-left-hover"))
                }),
                this.addHandler(this.pagerrightbutton, "mouseleave", function() {
                    r.removeClass(a.toThemeProperty("jqx-icon-arrow-right-hover"))
                }),
                this.addHandler(this.pagerleftbutton, "mouseleave", function() {
                    t.removeClass(a.toThemeProperty("jqx-icon-arrow-left-hover"))
                }),
                this.addHandler(this.pagerrightbutton, "mousedown", function() {
                    r.addClass(a.toThemeProperty("jqx-icon-arrow-right-selected"))
                }),
                this.addHandler(this.pagerrightbutton, "mouseup", function() {
                    r.removeClass(a.toThemeProperty("jqx-icon-arrow-right-selected"))
                }),
                this.addHandler(this.pagerleftbutton, "mousedown", function() {
                    t.addClass(a.toThemeProperty("jqx-icon-arrow-left-selected"))
                }),
                this.addHandler(this.pagerleftbutton, "mouseup", function() {
                    t.removeClass(a.toThemeProperty("jqx-icon-arrow-left-selected"))
                })
            }
        },
        gotopage: function(e) {
            if (null != e && null != e || (e = 0),
            -1 == e && (e = 0),
            !(e < 0)) {
                var t = this.dataview.totalrecords;
                this.summaryrows && (t += this.summaryrows.length);
                var i = this.pagenum;
                this._raiseEvent(25, {
                    oldpagenum: this.dataview.pagenum,
                    pagenum: e,
                    pagesize: this.dataview.pagesize
                });
                var r = Math.ceil(t / this.pagesize);
                if (e >= r && (0 == this.dataview.totalrecords && (this.dataview.pagenum = 0,
                this.updatepagerdetails()),
                e > 0 && (e = r - 1),
                e < 0 && (e = 0)),
                (this.dataview.pagenum != e || this._requiresupdate) && this.pageable) {
                    if (this.source.pager && this.source.pager(e, this.dataview.pagesize, this.dataview.pagenum),
                    this.dataview.pagenum = e,
                    this.virtualmode) {
                        if (this.hiddens = new Array,
                        this.expandedgroups = new Array,
                        this.rendergridrows) {
                            var s = e * this.dataview.pagesize
                              , n = s + this.dataview.pagesize;
                            if (null != s && null != n)
                                return this.pagerrightbutton && (this.pagerrightbutton.jqxButton({
                                    disabled: !0
                                }),
                                this.pagerleftbutton.jqxButton({
                                    disabled: !0
                                }),
                                this.pagershowrowscombo.jqxDropDownList({
                                    disabled: !0
                                })),
                                this.pagerfirstbutton && (this.pagerfirstbutton.jqxButton({
                                    disabled: !0
                                }),
                                this.pagerlastbutton.jqxButton({
                                    disabled: !0
                                })),
                                this.updatebounddata("pagechanged"),
                                this._raiseEvent(9, {
                                    pagenum: e,
                                    oldpagenum: i,
                                    pagesize: this.dataview.pagesize
                                }),
                                this.updatepagerdetails(),
                                void (this.autosavestate && this.savestate && this.savestate())
                        }
                    } else
                        this.dataview.updateview();
                    if (this._loadrows(),
                    this._updatepageviews(),
                    this.tableheight = null,
                    this._updatecolumnwidths(),
                    this._updatecellwidths(),
                    this._renderrows(this.virtualsizeinfo),
                    this.updatepagerdetails(),
                    this.autoheight || this.autorowheight) {
                        var o = this.host.height() - this._gettableheight();
                        height = o + this._pageviews[0].height,
                        height != this.host.height() && (this._arrange(),
                        this._updatepageviews(),
                        this.autorowheight && this._renderrows(this.virtualsizeinfo))
                    }
                    null != this.editcell && this.endcelledit && this.endcelledit(this.editcell.row, this.editcell.column, !1, !1),
                    this.focus(),
                    this._raiseEvent(9, {
                        pagenum: e,
                        oldpagenum: i,
                        pagesize: this.dataview.pagesize
                    }),
                    this.autosavestate && this.savestate && this.savestate()
                }
            }
        },
        gotoprevpage: function() {
            if (this.dataview.pagenum > 0)
                this.gotopage(this.dataview.pagenum - 1);
            else if ("simple" != this.pagermode) {
                var e = this.dataview.totalrecords;
                this.summaryrows && (e += this.summaryrows.length);
                var t = Math.ceil(e / this.pagesize);
                this.gotopage(t - 1)
            }
        },
        gotonextpage: function() {
            var e = this.dataview.totalrecords;
            this.summaryrows && (e += this.summaryrows.length);
            var t = Math.ceil(e / this.pagesize);
            this.dataview.pagenum < t - 1 ? this.gotopage(this.dataview.pagenum + 1) : "simple" != this.pagermode && this.gotopage(0)
        },
        updatepagerdetails: function() {
            if (null != this.pagerdetails && this.pagerdetails.length > 0) {
                var e = this.dataview.pagenum * this.pagesize
                  , t = (this.dataview.pagenum + 1) * this.pagesize;
                t >= this.dataview.totalrecords && (t = this.dataview.totalrecords);
                var r = this.dataview.totalrecords;
                this.summaryrows && (r += this.summaryrows.length,
                (this.dataview.pagenum + 1) * this.pagesize > this.dataview.totalrecords && (t = r)),
                e++;
                var s = Math.ceil(r / this.dataview.pagesize);
                if (s >= 1 && s--,
                s++,
                "simple" !== this.pagermode)
                    this.pagergotoinput.find("input").val(this.dataview.pagenum + 1);
                else {
                    var n = ""
                      , o = this.pagerbuttonscount;
                    0 != o && o || (o = 5);
                    var a = 0;
                    for (this.rtl && (a = o - 1); this.rtl && a >= 0 || !this.rtl && a < o; ) {
                        var l = 1 + a
                          , d = this.dataview.pagenum / o;
                        l += Math.floor(d) * o;
                        var h = this.toTP("jqx-grid-pager-number");
                        if (h += " " + this.toTP("jqx-rc-all"),
                        l > s)
                            break;
                        if (this.rtl || 0 == a && l > o && (n += "<a class='" + h + "' tabindex=-1 href='javascript:;' data-page='" + (-1 + l) + "'>...</a>"),
                        this.dataview.pagenum === l - 1 && (h += " " + this.toTP("jqx-fill-state-pressed")),
                        this.rtl)
                            a === o - 1 && (h = this.toTP("jqx-grid-pager-number"),
                            h += " " + this.toTP("jqx-rc-all"),
                            s >= 1 + l && (n += "<a class='" + h + "' tabindex=-1 href='javascript:;' data-page='" + (1 + l) + "'>...</a>")),
                            this.dataview.pagenum === l - 1 && (h += " " + this.toTP("jqx-fill-state-pressed")),
                            n += "<a class='" + h + "' tabindex=-1 href='javascript:;' data-page='" + l + "'>" + l + "</a>";
                        else if (n += "<a class='" + h + "' tabindex=-1 href='javascript:;' data-page='" + l + "'>" + l + "</a>",
                        a === o - 1) {
                            var h = this.toTP("jqx-grid-pager-number");
                            h += " " + this.toTP("jqx-rc-all"),
                            s >= 1 + l && (n += "<a class='" + h + "' tabindex=-1 href='javascript:;' data-page='" + (1 + l) + "'>...</a>")
                        }
                        this.rtl && (h = this.toTP("jqx-grid-pager-number"),
                        h += " " + this.toTP("jqx-rc-all"),
                        0 == a && l > o && (n += "<a class='" + h + "' tabindex=-1 href='javascript:;' data-page='" + (-1 + l) + "'>...</a>")),
                        this.rtl ? a-- : a++
                    }
                    var c = this.pagerbuttons.find("a");
                    this.removeHandler(c, "click"),
                    this.removeHandler(c, "mouseenter"),
                    this.removeHandler(c, "mouseleave"),
                    this.pagerbuttons[0].innerHTML = n;
                    var u = this;
                    c = this.pagerbuttons.find("a"),
                    u.addHandler(c, "click", function(e) {
                        var t = i(e.target).attr("data-page");
                        return u.gotopage(parseInt(t) - 1),
                        !1
                    }),
                    u.addHandler(c, "mouseenter", function(e) {
                        i(e.target).addClass(u.toTP("jqx-fill-state-hover"))
                    }),
                    u.addHandler(c, "mouseleave", function(e) {
                        i(e.target).removeClass(u.toTP("jqx-fill-state-hover"))
                    })
                }
                this.pagergotoinput.attr("title", "1 - " + s),
                0 == t && t < e && (e = 0),
                this.rtl ? this.pagerdetails[0].innerHTML = r + this.gridlocalization.pagerrangestring + t + "-" + e : this.pagerdetails[0].innerHTML = e + "-" + t + this.gridlocalization.pagerrangestring + r,
                e > t && this.gotoprevpage()
            }
        },
        _updatepagedview: function(e, t, i) {
            var r = this.that;
            this.dataview.rows.length != this.dataview.pagesize && this.dataview.updateview();
            for (var s = this.dataview.rows.length, n = 0; n < s; n++) {
                var o = this.dataview.rows[n].visibleindex
                  , a = {
                    index: o,
                    height: this.heights[o],
                    hidden: this.hiddens[o],
                    details: this.details[o]
                };
                if (null == this.heights[o] && (this.heights[o] = this.rowsheight,
                a.height = this.rowsheight),
                null == this.hiddens[o] && (this.hiddens[o] = !1,
                a.hidden = !1),
                null == this.details[o] && (this.details[o] = null),
                a.height != r.rowsheight && (t -= r.rowsheight,
                t += a.height),
                a.hidden)
                    t -= a.height;
                else {
                    i += a.height;
                    var l = 0;
                    this.rowdetails && a.details && a.details.rowdetails && !a.details.rowdetailshidden && (i += l = a.details.rowdetailsheight,
                    t += l)
                }
            }
            return this._pageviews[0] = {
                top: 0,
                height: i
            },
            t
        }
    })
}
, function(e, t) {
    var i;
    (i = jqxBaseFramework).extend(i.jqx._jqxGrid.prototype, {
        selectallrows: function() {
            this._trigger = !1;
            var e = this.virtualmode ? this.dataview.totalrecords : this.dataview.loadedrecords.length;
            this.selectedrowindexes = new Array;
            for (var t = this.dataview.loadedrecords, i = 0; i < e; i++) {
                var r = t[i];
                if (r) {
                    var s = this.getboundindex(r);
                    null != s && (this.selectedrowindexes[i] = s)
                } else
                    this.selectedrowindexes[i] = i
            }
            "checkbox" != this.selectionmode || this._checkboxcolumnupdating || this._checkboxcolumn && this._checkboxcolumn.checkboxelement.jqxCheckBox({
                checked: !0
            }),
            this._renderrows(this.virtualsizeinfo),
            this._trigger = !0,
            "checkbox" == this.selectionmode && this._raiseEvent(2, {
                rowindex: this.selectedrowindexes
            })
        },
        unselectallrows: function() {
            this._trigger = !1,
            this.virtualmode ? this.dataview.totalrecords : this.dataview.loadedrecords.length,
            this.selectedrowindexes = new Array,
            "checkbox" != this.selectionmode || this._checkboxcolumnupdating || this._checkboxcolumn && this._checkboxcolumn.checkboxelement.jqxCheckBox({
                checked: !1
            }),
            this._renderrows(this.virtualsizeinfo),
            this._trigger = !0,
            "checkbox" == this.selectionmode && this._raiseEvent(2, {
                rowindex: this.selectedrowindexes
            })
        },
        selectrow: function(e, t) {
            "none" !== this.selectionmode && (this._applyrowselection(e, !0, t),
            !1 !== t && this._updatecheckboxselection())
        },
        _updatecheckboxselection: function() {
            if ("checkbox" == this.selectionmode) {
                var e = this.getrows();
                if (e && this._checkboxcolumn) {
                    if (0 === e.length)
                        return void this._checkboxcolumn.checkboxelement.jqxCheckBox({
                            checked: !1
                        });
                    var t = e.length;
                    this.groupable && (t = this.dataview.loadedrecords.length),
                    this.virtualmode && (t = this.source._source.totalrecords);
                    var i = this.selectedrowindexes.length;
                    i === t ? this._checkboxcolumn.checkboxelement.jqxCheckBox({
                        checked: !0
                    }) : 0 === i ? this._checkboxcolumn.checkboxelement.jqxCheckBox({
                        checked: !1
                    }) : this._checkboxcolumn.checkboxelement.jqxCheckBox({
                        checked: null
                    })
                }
            }
        },
        unselectrow: function(e, t) {
            this._applyrowselection(e, !1, t),
            !1 !== t && this._updatecheckboxselection()
        },
        selectcell: function(e, t) {
            this._applycellselection(e, t, !0)
        },
        unselectcell: function(e, t) {
            this._applycellselection(e, t, !1)
        },
        clearselection: function(e, t) {
            if (this._trigger = !1,
            this.selectedrowindex = -1,
            this._oldselectedcell = null,
            !1 !== t)
                for (var i = 0; i < this.selectedrowindexes.length; i++)
                    this._raiseEvent(3, {
                        rowindex: this.selectedrowindexes[i]
                    });
            for (this.selectedrowindexes = new Array,
            this.selectedcells = new Array,
            this.selectedcell = null,
            "checkbox" != this.selectionmode || this._checkboxcolumnupdating || this._checkboxcolumn.checkboxelement.jqxCheckBox({
                checked: !1
            }),
            i = 0; i < this.columns.records.length; i++)
                this.columns.records[i].selected = !1,
                this.columns.records[i]._applyStyle();
            !1 !== e ? (this._renderrows(this.virtualsizeinfo),
            this._trigger = !0,
            "checkbox" == this.selectionmode && this._raiseEvent(3, {
                rowindex: this.selectedrowindexes
            })) : this._trigger = !0
        },
        getselectedrowindex: function() {
            if (-1 == this.selectedrowindex || null == this.selectedrowindex)
                for (var e = 0; e < this.selectedrowindexes.length; e++)
                    return this.selectedrowindexes[e];
            return this.selectedrowindex
        },
        getselectedrowindexes: function() {
            return this.selectedrowindexes
        },
        getselectedcell: function() {
            if (!this.selectedcell)
                return null;
            var e = this.selectedcell;
            return e.row = this.selectedcell.rowindex,
            e.column = this.selectedcell.datafield,
            e.value = this.getcellvalue(e.row, e.column),
            e
        },
        getselectedcells: function() {
            var e = new Array;
            for (obj in this.selectedcells)
                e[e.length] = this.selectedcells[obj];
            return e
        },
        _getcellsforcopypaste: function() {
            var e = new Array;
            if (-1 == this.selectionmode.indexOf("cell"))
                for (var t = this.selectedrowindexes, i = 0; i < t.length; i++)
                    for (var r = t[i], s = 0; s < this.columns.records.length; s++)
                        if ("_checkboxcolumn" !== this.columns.records[s].datafield) {
                            this.columns.records[s].datafield;
                            var n = {
                                rowindex: r,
                                datafield: this.columns.records[s].datafield
                            };
                            e.push(n)
                        }
            return e
        },
        deleteselection: function() {
            var e = this
              , t = e.getselectedcells();
            if (-1 == this.selectionmode.indexOf("cell") && (t = this._getcellsforcopypaste()),
            null != t && t.length > 0) {
                for (var i = 0; i < t.length; i++) {
                    var r = t[i]
                      , s = e.getcolumn(r.datafield)
                      , n = e.getcellvalue(r.rowindex, r.datafield);
                    if (s && "" !== n) {
                        var o = null;
                        "checkbox" == s.columntype && (s.threestatecheckbox || (o = !1)),
                        e._raiseEvent(17, {
                            rowindex: r.rowindex,
                            datafield: r.datafield,
                            value: n
                        }),
                        i == t.length - 1 ? (e.setcellvalue(r.rowindex, r.datafield, o, !0),
                        s.displayfield != s.datafield && e.setcellvalue(r.rowindex, s.displayfield, o, !0)) : (e.setcellvalue(r.rowindex, r.datafield, o, !1),
                        s.displayfield != s.datafield && e.setcellvalue(r.rowindex, s.displayfield, o, !0)),
                        e._raiseEvent(18, {
                            rowindex: r.rowindex,
                            datafield: r.datafield,
                            oldvalue: n,
                            value: o
                        })
                    }
                }
                this.dataview.updateview(),
                this._renderrows(this.virtualsizeinfo)
            }
        },
        copyselection: function() {
            var e = ""
              , t = this;
            this.clipboardselection = {},
            this.logicalclipboardselection = {},
            this._clipboardselection = [];
            var r = t.getselectedcells();
            -1 == this.selectionmode.indexOf("cell") && (r = this._getcellsforcopypaste());
            var s = new Array;
            if (null != r && r.length > 0) {
                for (var n = 999999999999999, o = -1, a = 0; a < r.length; a++) {
                    var l = r[a]
                      , d = t.getcolumn(l.datafield);
                    if (null != d && d.clipboard && (!d.hidden || this.copytoclipboardhiddencolumns)) {
                        -1 == s.indexOf(d.text) && s.push(d.text);
                        var h = t.getcelltext(l.rowindex, d.displayfield)
                          , c = this.getrowdisplayindex(l.rowindex);
                        this.clipboardselection[c] || (this.clipboardselection[c] = {}),
                        this.clipboardselection[c][d.displayfield] = h,
                        this.logicalclipboardselection[c] || (this.logicalclipboardselection[c] = {}),
                        this.logicalclipboardselection[c][d.displayfield] = h,
                        d.displayfield != d.datafield && (this.logicalclipboardselection[c][d.datafield] = t.getcellvalue(l.rowindex, d.datafield)),
                        n = Math.min(n, c),
                        o = Math.max(o, c)
                    }
                }
                for (var u = new Array, p = n; p <= o; p++)
                    if (this.logicalclipboardselection[p]) {
                        var f = i.extend({}, this.logicalclipboardselection[p]);
                        u.push(f)
                    }
                if (this.logicalclipboardselection = u,
                this.copytoclipboardwithheaders) {
                    for (var m = 0; m < s.length; m++)
                        m > 0 && (e += "\t"),
                        e += s[m];
                    e += "\r\n"
                }
                for (p = n; p <= o; p++) {
                    var g = 0;
                    this._clipboardselection[this._clipboardselection.length] = new Array,
                    null != this.clipboardselection[p] && (i.each(this.clipboardselection[p], function(i, r) {
                        g > 0 && (e += "\t");
                        var s = r;
                        null == r && (s = ""),
                        t._clipboardselection[t._clipboardselection.length - 1][g] = s,
                        g++,
                        e += s
                    }),
                    p < o && (e += "\r\n"))
                }
            }
            return this.clipboardselectedtext = e,
            e
        },
        pasteselection: function() {
            var e = this.getselectedcells();
            if (this._oldselectedcell = null,
            -1 == this.selectionmode.indexOf("cell") && (e = this._getcellsforcopypaste()),
            null != e && e.length > 0) {
                var t = e[0].rowindex
                  , i = this.getrowdisplayindex(t)
                  , r = e[0].datafield
                  , s = this._getcolumnindex(r);
                this.selectedrowindexes = new Array,
                this.selectedcells = new Array,
                e.length;
                var n = 0
                  , o = new Array;
                this.copytoclipboardwithheaders && this._clipboardselection.splice(0, 1);
                for (var a = 0; a < this._clipboardselection.length; a++) {
                    n += this._clipboardselection[a].length,
                    o[a] = new Array;
                    for (var l = 0; l < this._clipboardselection[a].length; l++) {
                        var d = this._clipboardselection[a][l];
                        o[a].push(d)
                    }
                }
                if (n < e.length) {
                    var h = new Array;
                    for (a = 0; a < e.length; a++)
                        h[(x = e[a]).rowindex] || (h[x.rowindex] = new Array),
                        h[x.rowindex].push(x);
                    var c = 0
                      , u = 0;
                    for (a = 0; a < h.length; a++)
                        if (h[a]) {
                            for (l = 0; l < h[a].length; l++) {
                                var p = (x = h[a][l]).rowindex;
                                if ("_checkboxcolumn" !== (w = this.getcolumn(x.datafield)).datafield && !w.hidden) {
                                    if (d = "",
                                    null == o[c][u] && (u = 0),
                                    d = o[c][u],
                                    u++,
                                    w.cellsformat && (-1 != w.cellsformat.indexOf("p") || -1 != w.cellsformat.indexOf("c") || -1 != w.cellsformat.indexOf("n") || -1 != w.cellsformat.indexOf("f"))) {
                                        d.indexOf(this.gridlocalization.currencysymbol) > -1 && (d = d.replace(this.gridlocalization.currencysymbol, "")),
                                        (d = (d = function(e, t, i) {
                                            var r = e;
                                            if (t == i)
                                                return e;
                                            for (var s = r.indexOf(t); -1 != s; )
                                                s = (r = r.replace(t, i)).indexOf(t);
                                            return r
                                        }(d, this.gridlocalization.thousandsseparator, "")).replace(this.gridlocalization.decimalseparator, ".")).indexOf(this.gridlocalization.percentsymbol) > -1 && (d = d.replace(this.gridlocalization.percentsymbol, ""));
                                        for (var f = "", m = 0; m < d.length; m++)
                                            "-" === (b = d.substring(m, m + 1)) && (f += "-"),
                                            "." === b && (f += "."),
                                            null != b.match(/^[0-9]+$/) && (f += b);
                                        d = (d = f).replace(/ /g, ""),
                                        d = new Number(d),
                                        isNaN(d) && (d = "")
                                    }
                                    this._raiseEvent(17, {
                                        rowindex: p,
                                        datafield: x.datafield,
                                        value: d
                                    }),
                                    this.setcellvalue(p, w.displayfield, d, !1),
                                    w.displayfield != w.datafield && this.logicalclipboardselection && this.logicalclipboardselection[p] && null != (y = this.logicalclipboardselection[p][w.datafield]) && this.setcellvalue(p, w.datafield, y, !1),
                                    this._raiseEvent(18, {
                                        rowindex: p,
                                        datafield: x.datafield,
                                        oldvalue: this.getcellvalue(x.rowindex, x.datafield),
                                        value: d
                                    }),
                                    this._applycellselection(p, x.datafield, !0, !1)
                                }
                            }
                            u = 0,
                            o[++c] || (c = 0)
                        }
                } else {
                    if (!this._clipboardselection)
                        return;
                    for (var g = 0; g < this._clipboardselection.length; g++)
                        for (var v = 0; v < this._clipboardselection[g].length; v++) {
                            var w;
                            if ((w = this.getcolumnat(s + v)) && "_checkboxcolumn" !== w.datafield && !w.hidden) {
                                p = this.getrowboundindex(i + g);
                                var x = this.getcell(p, w.datafield);
                                if (d = null,
                                null != (d = this._clipboardselection[g][v])) {
                                    if (w.cellsformat && (-1 != w.cellsformat.indexOf("p") || -1 != w.cellsformat.indexOf("c") || -1 != w.cellsformat.indexOf("n") || -1 != w.cellsformat.indexOf("f"))) {
                                        for (d.indexOf(this.gridlocalization.currencysymbol) > -1 && (d = d.replace(this.gridlocalization.currencysymbol, "")),
                                        (d = (d = function(e, t, i) {
                                            var r = e;
                                            if (t == i)
                                                return e;
                                            for (var s = r.indexOf(t); -1 != s; )
                                                s = (r = r.replace(t, i)).indexOf(t);
                                            return r
                                        }(d, this.gridlocalization.thousandsseparator, "")).replace(this.gridlocalization.decimalseparator, ".")).indexOf(this.gridlocalization.percentsymbol) > -1 && (d = d.replace(this.gridlocalization.percentsymbol, "")),
                                        f = "",
                                        m = 0; m < d.length; m++) {
                                            var b;
                                            "-" === (b = d.substring(m, m + 1)) && (f += "-"),
                                            "." === b && (f += "."),
                                            null != b.match(/^[0-9]+$/) && (f += b)
                                        }
                                        d = (d = f).replace(/ /g, ""),
                                        d = new Number(d),
                                        isNaN(d) && (d = "")
                                    }
                                    var y;
                                    this._raiseEvent(17, {
                                        rowindex: p,
                                        datafield: x.datafield,
                                        value: d
                                    }),
                                    this.setcellvalue(p, w.displayfield, d, !1),
                                    w.displayfield != w.datafield && this.logicalclipboardselection && null != (y = this.logicalclipboardselection[g][w.datafield]) && this.setcellvalue(p, w.datafield, y, !1),
                                    this._raiseEvent(18, {
                                        rowindex: p,
                                        datafield: x.datafield,
                                        oldvalue: this.getcellvalue(x.rowindex, x.datafield),
                                        value: d
                                    }),
                                    this._applycellselection(p, x.datafield, !0, !1)
                                }
                            }
                        }
                }
                "checkbox" == this.selectionmode && this._updatecheckboxselection(),
                this.dataview.updateview(),
                this._renderrows(this.virtualsizeinfo)
            }
            this.clipboardend && this.clipboardend("paste")
        },
        _applyrowselection: function(e, t, i, r, s) {
            if (null == e)
                return !1;
            var n = this.selectedrowindex;
            if ("singlerow" == this.selectionmode && (t ? this._raiseEvent(2, {
                rowindex: e,
                row: this.getrowdata(e)
            }) : this._raiseEvent(3, {
                rowindex: e,
                row: this.getrowdata(e)
            }),
            this._raiseEvent(3, {
                rowindex: n
            }),
            this.selectedrowindexes = new Array,
            this.selectedcells = new Array),
            1 == r && (this.selectedrowindexes = new Array),
            this.dataview.filters.length > 0) {
                var o = this.getrowdata(e);
                o && void 0 !== o.dataindex ? e = o.dataindex : o && void 0 === o.dataindex && null != o.uid && (e = this.getrowboundindexbyid(o.uid))
            }
            var a = this.selectedrowindexes.indexOf(e);
            if (t)
                this.selectedrowindex = e,
                -1 == a ? (this.selectedrowindexes.push(e),
                "singlerow" != this.selectionmode && this._raiseEvent(2, {
                    rowindex: e,
                    row: this.getrowdata(e)
                })) : "multiplerows" == this.selectionmode && (this.selectedrowindexes.splice(a, 1),
                this._raiseEvent(3, {
                    rowindex: this.selectedrowindex,
                    row: this.getrowdata(e)
                }),
                this.selectedrowindex = this.selectedrowindexes.length > 0 ? this.selectedrowindexes[this.selectedrowindexes.length - 1] : -1);
            else if (a >= 0 || "singlerow" == this.selectionmode || "multiplerowsextended" == this.selectionmode || "multiplerowsadvanced" == this.selectionmode) {
                var l = this.selectedrowindexes[a];
                this.selectedrowindexes.splice(a, 1),
                this._raiseEvent(3, {
                    rowindex: l,
                    row: this.getrowdata(e)
                }),
                this.selectedrowindex = -1
            }
            return (null == i || i) && this._rendervisualrows(),
            !0
        },
        _applycellselection: function(e, t, i, r) {
            if (null == e)
                return !1;
            if (null == t)
                return !1;
            var s;
            this.selectedrowindex,
            "singlecell" == this.selectionmode && (null != (s = this.selectedcell) && this._raiseEvent(16, {
                rowindex: s.rowindex,
                datafield: s.datafield
            }),
            this.selectedcells = new Array),
            "multiplecellsextended" != this.selectionmode && "multiplecellsadvanced" != this.selectionmode || null != (s = this.selectedcell) && this._raiseEvent(16, {
                rowindex: s.rowindex,
                datafield: s.datafield
            });
            var n = e + "_" + t;
            if (this.dataview.filters.length > 0) {
                var o = this.getrowdata(e);
                o && void 0 !== o.dataindex ? n = (e = o.dataindex) + "_" + t : o && void 0 === o.dataindex && o.uid && (n = (e = this.getrowboundindexbyid(o.uid)) + "_" + t)
            }
            var a = {
                rowindex: e,
                datafield: t
            };
            return i ? (this.selectedcell = a,
            this.selectedcells[n] ? "multiplecells" != this.selectionmode && "multiplecellsextended" != this.selectionmode && "multiplecellsadvanced" != this.selectionmode || (delete this.selectedcells[n],
            this.selectedcells.length > 0 && this.selectedcells.length--,
            this._raiseEvent(16, a)) : (this.selectedcells[n] = a,
            this.selectedcells.length++,
            this._raiseEvent(15, a))) : (delete this.selectedcells[n],
            this.selectedcells.length > 0 && this.selectedcells.length--,
            this._raiseEvent(16, a)),
            (null == r || r) && this._rendervisualrows(),
            !0
        },
        _getcellindex: function(e) {
            var t = -1;
            return i.each(this.selectedcells, function() {
                if (t++,
                this[e])
                    return !1
            }),
            t
        },
        _clearhoverstyle: function() {
            if (null != this.hoveredrow && -1 != this.hoveredrow && !this.vScrollInstance.isScrolling() && !this.hScrollInstance.isScrolling()) {
                var e = this.table.find(".jqx-grid-cell-hover");
                e.length > 0 && (e.removeClass(this.toTP("jqx-grid-cell-hover")),
                e.removeClass(this.toTP("jqx-fill-state-hover")));
                for (var t = 0; t < e.length; t++) {
                    var i = e[t].getAttribute("columnindex");
                    if (i) {
                        var r = this.columns.records[parseInt(i)];
                        r && r._applyCellStyle(e[t])
                    }
                }
                this.hoveredrow = -1
            }
        },
        _clearselectstyle: function() {
            for (var e = this.table[0].rows.length, t = this.table[0].rows, r = this.toTP("jqx-grid-cell-selected"), s = this.toTP("jqx-fill-state-pressed"), n = this.toTP("jqx-grid-cell-hover"), o = this.toTP("jqx-fill-state-hover"), a = 0; a < e; a++)
                for (var l = t[a], d = l.cells.length, h = l.cells, c = 0; c < d; c++) {
                    var u = h[c]
                      , p = i(u);
                    -1 != u.className.indexOf("jqx-grid-cell-selected") && (p.removeClass(r),
                    p.removeClass(s)),
                    -1 != u.className.indexOf("jqx-grid-cell-hover") && (p.removeClass(n),
                    p.removeClass(o));
                    var f = u.getAttribute("columnindex");
                    if (f) {
                        var m = this.columns.records[parseInt(f)];
                        m && m._applyCellStyle(u)
                    }
                }
        },
        _selectpath: function(e, t) {
            var i = this._lastClickedCell ? Math.min(this._lastClickedCell.row, e) : 0
              , r = this._lastClickedCell ? Math.max(this._lastClickedCell.row, e) : 0;
            if (i <= r) {
                var s = this._getcolumnindex(this._lastClickedCell.column)
                  , n = this._getcolumnindex(t)
                  , o = Math.min(s, n)
                  , a = Math.max(s, n);
                this.selectedcells = new Array;
                for (var l = this.dataview.loadedrecords, d = i; d <= r; d++)
                    for (var h = o; h <= a; h++)
                        e = l[d],
                        this._applycellselection(this.getboundindex(e), this._getcolumnat(h).datafield, !0, !1);
                this._rendervisualrows()
            }
        },
        _selectrowpath: function(e) {
            if ("multiplerowsextended" == this.selectionmode) {
                var t = this._lastClickedCell ? Math.min(this._lastClickedCell.row, e) : 0
                  , i = this._lastClickedCell ? Math.max(this._lastClickedCell.row, e) : 0
                  , r = this.dataview.loadedrecords;
                if (t <= i) {
                    this.selectedrowindexes = new Array;
                    for (var s = t; s <= i; s++) {
                        e = r[s];
                        var n = this.getrowboundindex(s);
                        this._applyrowselection(n, !0, !1)
                    }
                    this._rendervisualrows()
                }
            }
        },
        _selectrowwithmouse: function(e, t, i, r, s, n) {
            if (null != (y = t.row)) {
                var o = t.index;
                if (null != this.hittestinfo[o]) {
                    for (var a = 0; a < this.columns.records.length; a++) {
                        var l = this.columns.records[a];
                        l.selected = !1,
                        l.element && l.element.removeAttribute("selected"),
                        l._applyStyle()
                    }
                    var d = this.hittestinfo[o].visualrow;
                    if (!this.hittestinfo[o].details && (d.cells[0].className,
                    !y.group)) {
                        if ("multiplerows" == this.selectionmode || "multiplecells" == this.selectionmode || "checkbox" == this.selectionmode || -1 != this.selectionmode.indexOf("multiple") && (1 == n || 1 == s)) {
                            var h = this.getboundindex(y);
                            if (this.dataview.filters.length > 0) {
                                var c = this.getrowdata(h);
                                c && null == (h = c.dataindex) && (h = this.getboundindex(y))
                            }
                            var u = -1 != i.indexOf(h)
                              , p = this.getboundindex(y) + "_" + r;
                            if (-1 != this.selectionmode.indexOf("cell")) {
                                var f = null != this.selectedcells[p];
                                if (null != this.selectedcells[p] && f ? this._selectcellwithstyle(e, !1, o, r, d) : this._selectcellwithstyle(e, !0, o, r, d),
                                n && null == this._lastClickedCell) {
                                    var m = this.getselectedcells();
                                    m && m.length > 0 && (this._lastClickedCell = {
                                        row: m[0].rowindex,
                                        column: m[0].datafield
                                    })
                                }
                                n && this._lastClickedCell && (this._selectpath(y.visibleindex, r),
                                this.mousecaptured = !1,
                                "visible" == this.selectionarea.css("visibility") && this.selectionarea.css("visibility", "hidden"))
                            } else {
                                if (u ? s ? this._applyrowselection(this.getboundindex(y), !1) : this._selectrowwithstyle(e, d, !1, r) : this._selectrowwithstyle(e, d, !0, r),
                                n && null == this._lastClickedCell) {
                                    var g = this.getselectedrowindexes();
                                    g && g.length > 0 && (this._lastClickedCell = {
                                        row: g[0],
                                        column: r
                                    })
                                }
                                if (n && this._lastClickedCell) {
                                    this.selectedrowindexes = new Array;
                                    for (var v = this._lastClickedCell ? Math.min(this._lastClickedCell.row, y.visibleindex) : 0, w = this._lastClickedCell ? Math.max(this._lastClickedCell.row, y.visibleindex) : 0, x = this.dataview.loadedrecords, b = v; b <= w; b++) {
                                        var y;
                                        (y = x[b]) && this._applyrowselection(this.getboundindex(y), !0, !1, !1)
                                    }
                                    this._rendervisualrows()
                                }
                            }
                        } else
                            this._clearselectstyle(),
                            this._selectrowwithstyle(e, d, !0, r),
                            -1 != this.selectionmode.indexOf("cell") && this._selectcellwithstyle(e, !0, o, r, d);
                        n || (this._lastClickedCell = {
                            row: y.visibleindex,
                            column: r
                        })
                    }
                }
            }
        },
        _selectcellwithstyle: function(e, t, r, s, n) {
            var o = i(n.cells[e._getcolumnindex(s)]);
            o.removeClass(this.toTP("jqx-grid-cell-hover")),
            o.removeClass(this.toTP("jqx-fill-state-hover")),
            t ? (o.addClass(this.toTP("jqx-grid-cell-selected")),
            o.addClass(this.toTP("jqx-fill-state-pressed"))) : (o.removeClass(this.toTP("jqx-grid-cell-selected")),
            o.removeClass(this.toTP("jqx-fill-state-pressed"))),
            this.getcolumn(s)._applyCellStyle(o)
        },
        _selectrowwithstyle: function(e, t, r, s) {
            var n = t.cells.length
              , o = 0;
            e.rowdetails && e.showrowdetailscolumn ? this.rtl ? (n -= 1,
            n -= this.groups.length) : o = 1 + this.groups.length : this.groupable && (this.rtl ? n -= this.groups.length : o = this.groups.length);
            for (var a = o; a < n; a++) {
                var l = t.cells[a];
                if (r ? (i(l).removeClass(this.toTP("jqx-grid-cell-hover")),
                i(l).removeClass(this.toTP("jqx-fill-state-hover")),
                -1 == e.selectionmode.indexOf("cell") && (i(l).addClass(this.toTP("jqx-grid-cell-selected")),
                i(l).addClass(this.toTP("jqx-fill-state-pressed")))) : (i(l).removeClass(this.toTP("jqx-grid-cell-hover")),
                i(l).removeClass(this.toTP("jqx-grid-cell-selected")),
                i(l).removeClass(this.toTP("jqx-fill-state-hover")),
                i(l).removeClass(this.toTP("jqx-fill-state-pressed"))),
                s = l.getAttribute("columnindex")) {
                    var d = this.columns.records[parseInt(s)];
                    d && d._applyCellStyle(l)
                }
            }
        },
        _handlemousemoveselection: function(e, t) {
            if (t.hScrollInstance.isScrolling() || t.vScrollInstance.isScrolling())
                return !1;
            if (("multiplerowsextended" == t.selectionmode || "multiplecellsextended" == t.selectionmode || "multiplecellsadvanced" == t.selectionmode) && t.mousecaptured) {
                if (t.multipleselectionbegins && !1 === t.multipleselectionbegins(e))
                    return !0;
                var r = this.showheader ? this.columnsheader.height() + 2 : 0
                  , s = this._groupsheader() ? this.groupsheader.height() : 0;
                s += this.showtoolbar ? this.toolbar.height() : 0;
                var n = this.host.coord();
                if (this.hasTransform) {
                    n = i.jqx.utilities.getOffset(this.host);
                    var o = this._getBodyOffset();
                    n.left -= o.left,
                    n.top -= o.top
                }
                "0px" === this.host.css("border-top-width") && (s -= 2);
                var a = e.pageX
                  , l = e.pageY - s;
                if (Math.abs(this.mousecaptureposition.left - a) > 3 || Math.abs(this.mousecaptureposition.top - l) > 3) {
                    parseInt(this.columnsheader.coord().top),
                    this.hasTransform && i.jqx.utilities.getOffset(this.columnsheader).top,
                    a < n.left && (a = n.left),
                    a > n.left + this.host.width() && (a = n.left + this.host.width());
                    var d = n.top + r;
                    l < d && (l = d + 5);
                    var h = parseInt(Math.min(t.mousecaptureposition.left, a))
                      , c = -5 + parseInt(Math.min(t.mousecaptureposition.top, l))
                      , u = parseFloat(Math.abs(t.mousecaptureposition.left - a))
                      , p = parseInt(Math.abs(t.mousecaptureposition.top - l));
                    if (h -= n.left,
                    c -= n.top,
                    this.selectionarea.css("visibility", "visible"),
                    "multiplecellsadvanced" == t.selectionmode) {
                        var f = (a = h) + u
                          , m = t.hScrollInstance
                          , g = m.value;
                        this.rtl && ("hidden" != this.hScrollBar.css("visibility") && (g = m.max - m.value),
                        this.vScrollBar[0].style.visibility);
                        var v = t.table[0].rows[0]
                          , w = 0
                          , x = t.mousecaptureposition.clickedcell
                          , b = x
                          , y = !1
                          , _ = 0
                          , q = v.cells.length;
                        t.mousecaptureposition.left <= e.pageX && (_ = x);
                        for (var j = !1, S = _; S < q; S++) {
                            var C = parseFloat(i(this.columnsrow[0].cells[S]).css("left"))
                              , T = C - g;
                            if (!t.columns.records[S].pinned || t.columns.records[S].hidden) {
                                if (j) {
                                    y = !0,
                                    b--;
                                    break
                                }
                                var I = this._getcolumnat(S);
                                if (!(null != I && I.hidden || t.groupable && t.groups.length > 0 && S < t.groups.length))
                                    if (k = T + i(this.columnsrow[0].cells[S]).width(),
                                    t.mousecaptureposition.left > e.pageX) {
                                        if (k >= a && a >= T) {
                                            b = S,
                                            y = !0;
                                            break
                                        }
                                    } else if (k >= f && f >= T) {
                                        b = S,
                                        y = !0;
                                        break
                                    }
                            } else {
                                S == x && (j = !0);
                                var k = C + i(this.columnsrow[0].cells[S]).width();
                                if (t.mousecaptureposition.left > e.pageX) {
                                    if (k >= a && a >= T) {
                                        b = S,
                                        y = !0;
                                        break
                                    }
                                } else if (k >= f && f >= T) {
                                    b = S,
                                    y = !0;
                                    break
                                }
                            }
                        }
                        y || (t.mousecaptureposition.left > e.pageX ? i.each(this.columns.records, function(e, i) {
                            return !!(t.groupable && t.groups.length > 0 && e < t.groups.length) || (this.pinned || this.hidden ? void 0 : (b = e,
                            !1))
                        }) : (!t.groupable || t.groupable && !t.groups.length > 0) && (b = v.cells.length - 1));
                        var D = x;
                        x = Math.min(x, b),
                        b = Math.max(D, b),
                        c += 5,
                        c += s,
                        t.table[0].rows.indexOf(t.mousecaptureposition.clickedrow);
                        var P = 0
                          , B = -1
                          , M = -1
                          , H = 0;
                        for (S = 0; S < t.table[0].rows.length; S++) {
                            var O = i(t.table[0].rows[S]);
                            0 == S && (H = O.coord().top);
                            var z = O.height()
                              , A = H - n.top;
                            if (-1 == B && A + z >= c) {
                                for (var L = !1, E = 0; E < t.groups.length; E++)
                                    if (-1 != (N = O[0].cells[E].className).indexOf("jqx-grid-group-collapse") || -1 != N.indexOf("jqx-grid-group-expand")) {
                                        L = !0;
                                        break
                                    }
                                if (L)
                                    continue;
                                B = S
                            }
                            if (H += z,
                            t.groupable && t.groups.length > 0) {
                                for (L = !1,
                                E = 0; E < t.groups.length; E++) {
                                    var N;
                                    if (-1 != (N = O[0].cells[E].className).indexOf("jqx-grid-group-collapse") || -1 != N.indexOf("jqx-grid-group-expand")) {
                                        L = !0;
                                        break
                                    }
                                }
                                if (L)
                                    continue;
                                w = 0;
                                for (var F = t.groups.length; F < O[0].cells.length; F++) {
                                    var V = O[0].cells[F];
                                    "" == i(V).html() && w++
                                }
                                if (w == O[0].cells.length - t.groups.length)
                                    continue
                            }
                            if (-1 != B && (P += z),
                            A + z > c + p) {
                                M = S;
                                break
                            }
                        }
                        if (-1 != B) {
                            c = i(t.table[0].rows[B]).coord().top - n.top - s - 2;
                            var R = 0;
                            this.filterable && this.showfilterrow && (R = this.filterrowheight),
                            parseFloat(t.table[0].style.top) < 0 && c < this.rowsheight + R && (c -= parseFloat(t.table[0].style.top),
                            P += parseFloat(t.table[0].style.top)),
                            p = P;
                            var W = i(this.columnsrow[0].cells[x])
                              , G = i(this.columnsrow[0].cells[b]);
                            if (h = parseFloat(W.css("left")),
                            u = parseFloat(G.css("left")) - parseFloat(h) + G.width() - 2,
                            h -= g,
                            j && (h += g),
                            t.editcell && t.editable && t.endcelledit && (x != b || B != M)) {
                                if (0 == t.editcell.validated)
                                    return;
                                t.endcelledit(t.editcell.row, t.editcell.column, !0, !0)
                            }
                        }
                    }
                    this.selectionarea.width(u),
                    this.selectionarea.height(p),
                    this.selectionarea.css("left", h),
                    this.selectionarea.css("top", c)
                }
            }
        },
        _handlemouseupselection: function(e, t) {
            if (this.selectionarea) {
                if ("visible" != this.selectionarea[0].style.visibility)
                    return t.mousecaptured = !1,
                    !0;
                if (t.mousecaptured && ("multiplerowsextended" == t.selectionmode || "multiplerowsadvanced" == t.selectionmode || "multiplecellsextended" == t.selectionmode || "multiplecellsadvanced" == t.selectionmode) && (t.mousecaptured = !1,
                "visible" == this.selectionarea.css("visibility"))) {
                    this.selectionarea.css("visibility", "hidden");
                    var r = this.showheader ? this.columnsheader.height() + 2 : 0
                      , s = this._groupsheader() ? this.groupsheader.height() : 0;
                    "0px" === this.host.css("border-top-width") && (s -= 2),
                    s += this.showtoolbar ? this.toolbar.height() : 0;
                    var n = this.selectionarea.coord()
                      , o = this.host.coord();
                    this.hasTransform && (o = i.jqx.utilities.getOffset(this.host),
                    n = i.jqx.utilities.getOffset(this.selectionarea)),
                    "0px" === this.host.css("border-top-width") && (s -= 2);
                    var a = n.left - o.left
                      , l = n.top - r - o.top - s
                      , d = l
                      , h = a + this.selectionarea.width()
                      , c = a
                      , u = new Array
                      , p = new Array;
                    if ("multiplerowsextended" == t.selectionmode) {
                        for (; l < d + this.selectionarea.height(); ) {
                            var f = (b = this._hittestrow(a, l)).row;
                            -1 != (y = b.index) && (p[y] || (p[y] = !0,
                            u[u.length] = b)),
                            l += 20
                        }
                        d = 0,
                        i.each(u, function() {
                            var i = this.row;
                            "none" != t.selectionmode && t._selectrowwithmouse && (e.ctrlKey || e.metaKey ? t._applyrowselection(t.getboundindex(i), !0, !1, !1) : 0 == d ? t._applyrowselection(t.getboundindex(i), !0, !1, !0) : t._applyrowselection(t.getboundindex(i), !0, !1, !1),
                            d++)
                        })
                    } else {
                        "multiplecellsadvanced" == t.selectionmode && (l += 2);
                        var m = t.hScrollInstance
                          , g = m.value;
                        this.rtl && ("hidden" != this.hScrollBar.css("visibility") && (g = m.max - m.value),
                        "hidden" != this.vScrollBar[0].style.visibility && (g -= this.scrollbarsize + 4));
                        var v = t.table[0].rows[0]
                          , w = t.selectionarea.height();
                        !e.ctrlKey && !e.metaKey && w > 0 && (t.selectedcells = new Array);
                        for (var x = w; l < d + x; ) {
                            var b;
                            if (b = t._hittestrow(a, l)) {
                                var y;
                                if (f = b.row,
                                -1 != (y = b.index) && !p[y]) {
                                    p[y] = !0;
                                    for (var _ = 0; _ < v.cells.length; _++) {
                                        var q = parseFloat(i(t.columnsrow[0].cells[_]).css("left")) - g
                                          , j = q + i(t.columnsrow[0].cells[_]).width();
                                        (c >= q && c <= j || h >= q && h <= j || q >= c && q <= h) && t._applycellselection(t.getboundindex(f), t._getcolumnat(_).datafield, !0, !1)
                                    }
                                }
                                l += 5
                            } else
                                l += 5
                        }
                    }
                    t.autosavestate && t.savestate && t.savestate(),
                    t._renderrows(t.virtualsizeinfo)
                }
            }
        },
        selectprevcell: function(e, t) {
            var i = this._getcolumnindex(t)
              , r = (this.columns.records.length,
            this._getprevvisiblecolumn(i));
            null != r && (this.clearselection(),
            this.selectcell(e, r.datafield))
        },
        selectnextcell: function(e, t) {
            var i = this._getcolumnindex(t)
              , r = (this.columns.records.length,
            this._getnextvisiblecolumn(i));
            null != r && (this.clearselection(),
            this.selectcell(e, r.datafield))
        },
        _getfirstvisiblecolumn: function() {
            for (var e = this.columns.records.length, t = 0; t < e; t++) {
                var i = this.columns.records[t];
                if (!i.hidden && null != i.datafield)
                    return i
            }
            return null
        },
        _getlastvisiblecolumn: function() {
            for (var e = this.columns.records.length - 1; e >= 0; e--) {
                var t = this.columns.records[e];
                if (!t.hidden && null != t.datafield)
                    return t
            }
            return null
        },
        _handlekeydown: function(e, t) {
            if (t.groupable && t.groups.length,
            t.disabled)
                return !1;
            var r = e.charCode ? e.charCode : e.keyCode ? e.keyCode : 0;
            if (t.editcell && "multiplecellsadvanced" != t.selectionmode)
                return !0;
            if (t.editcell && "multiplecellsadvanced" == t.selectionmode) {
                if (!(r >= 33 && r <= 40))
                    return !0;
                if (e.altKey)
                    return t._cancelkeydown = !1,
                    !0;
                if (null != t._cancelkeydown && 0 != t._cancelkeydown)
                    return t._cancelkeydown = !1,
                    !0;
                if ("selectedrow" === t.editmode)
                    return !0;
                if (t.endcelledit(t.editcell.row, t.editcell.column, !1, !0),
                t._cancelkeydown = !1,
                t.editcell && !t.editcell.validated)
                    return t._rendervisualrows(),
                    t.endcelledit(t.editcell.row, t.editcell.column, !1, !0),
                    !1
            }
            if ("none" == t.selectionmode)
                return !0;
            if (t.showfilterrow && t.filterable && this.filterrow && i(e.target).ischildof(t.filterrow))
                return !0;
            if (t.showeverpresentrow) {
                if (t.addnewrowtop && i(e.target).ischildof(t.addnewrowtop))
                    return !0;
                if (t.addnewrowbottom && i(e.target).ischildof(t.addnewrowbottom))
                    return !0
            }
            if (e.target.className && e.target.className.indexOf("jqx-grid-widget") >= 0)
                return !0;
            if (t.pageable && i(e.target).ischildof(this.pager))
                return !0;
            if (this.showtoolbar && i(e.target).ischildof(this.toolbar))
                return !0;
            if (this.showstatusbar && i(e.target).ischildof(this.statusbar))
                return !0;
            var s = !1;
            if (e.altKey)
                return !0;
            if ((e.ctrlKey || e.metaKey) && this.clipboard) {
                var n = String.fromCharCode(r).toLowerCase();
                if (this.clipboardbegin) {
                    var o = null;
                    if ("c" == n ? o = this.clipboardbegin("copy", this.copyselection()) : "x" == n ? o = this.clipboardbegin("cut", this.copyselection()) : "v" == n && (o = this.clipboardbegin("paste")),
                    !1 === o)
                        return !1
                }
                if ("c" == n || "x" == n) {
                    var a = this.copyselection();
                    if ("c" == n && this.clipboardend && this.clipboardend("copy"),
                    "x" == n && this.clipboardend && this.clipboardend("cut"),
                    window.clipboardData)
                        window.clipboardData.setData("Text", a);
                    else {
                        var l = i('<textarea style="position: absolute; left: -1000px; top: -1000px;"/>');
                        l.val(a),
                        i("body").append(l),
                        l.select(),
                        setTimeout(function() {
                            document.designMode = "off",
                            l.select(),
                            l.remove(),
                            t.focus()
                        }, 100)
                    }
                    if ("c" == n && i.jqx.browser.msie)
                        return !1;
                    if ("c" == n)
                        return !0
                } else if ("v" == n) {
                    var d = i('<textarea style="position: absolute; left: -1000px; top: -1000px;"/>');
                    i("body").append(d),
                    d.select();
                    var h = this;
                    return setTimeout(function() {
                        if (h._clipboardselection = new Array,
                        0 == (e = d.val()).length && window.clipboardData) {
                            d.val(window.clipboardData.getData("Text"));
                            var e = d.val()
                        }
                        for (var t = e.split("\n"), i = 0; i < t.length; i++)
                            if (t[i].split("\t").length > 0) {
                                var r = t[i].split("\t");
                                if (1 == r.length && i == t.length - 1 && "" == r[0])
                                    continue;
                                r.length > 0 && h._clipboardselection.push(r)
                            }
                        h.pasteselection(),
                        d.remove(),
                        h.focus()
                    }, 100),
                    !0
                }
                if ("x" == n)
                    return this.deleteselection(),
                    this.host.focus(),
                    !1
            }
            var c = Math.round(t._gettableheight())
              , u = Math.round(c / t.rowsheight)
              , p = t.getdatainformation();
            switch (t.selectionmode) {
            case "singlecell":
            case "multiplecells":
            case "multiplecellsextended":
            case "multiplecellsadvanced":
                var f = t.getselectedcell();
                if (null === f && t.selectcell(0, t.columns.records[0].displayfield),
                null != f) {
                    var m = this.getrowvisibleindex(f.rowindex)
                      , g = f.datafield
                      , v = t._getcolumnindex(g)
                      , w = (t.columns.records.length,
                    function(i, r, n, o) {
                        var a = function(i, r) {
                            var a, l = t.dataview.loadedrecords[i];
                            if (t.groupable && t.groups.length > 0) {
                                var d = i;
                                "up" == o && d++,
                                "down" == o && d--,
                                l = t.getdisplayrows()[d];
                                for (var h = 1, c = !0; c && h < 300 && (c = !1,
                                "down" == o ? l = t.getdisplayrows()[d + h] : "up" == o && (l = t.getdisplayrows()[d - h]),
                                l); ) {
                                    l && l.group && (c = !0);
                                    for (var u = l.parentItem; u; )
                                        !u || (a = u).group && (t.expandedgroups[a.uniqueid] ? t.expandedgroups[a.uniqueid].expanded : void 0) || (c = !0),
                                        u = u.parentItem;
                                    if (!c)
                                        break;
                                    h++
                                }
                                if (300 == h && (l = null),
                                t.pageable) {
                                    var p = !1;
                                    if (l) {
                                        for (var f = 0; f < t.dataview.rows.length; f++)
                                            t.dataview.rows[f].boundindex == l.boundindex && (p = !0);
                                        p || (l = null)
                                    }
                                }
                            } else if (t.pageable && (p = !1,
                            l)) {
                                for (f = 0; f < t.dataview.rows.length; f++)
                                    t.dataview.rows[f].boundindex == l.boundindex && (p = !0);
                                p || (t.pagerpageinput && 9 === e.keyCode && l.boundindex > t.dataview.rows[t.dataview.rows.length - 1].boundindex && (t.pagerpageinput.focus(),
                                e.preventDefault()),
                                t.ensurerowvisible(l))
                            }
                            if (null != l && null != r) {
                                (n || null == n) && t.clearselection();
                                var m = t.getboundindex(l);
                                return t.selectcell(m, r),
                                t._oldselectedcell = t.selectedcell,
                                s = !0,
                                t.groupable ? t.ensurecellvisible(m, r) : t.ensurecellvisible(i, r),
                                !0
                            }
                            return !1
                        };
                        if (a(i, r) || t.groupable || (t.ensurecellvisible(i, r),
                        a(i, r),
                        t.virtualmode && t.host.focus()),
                        !(t.groupable && t.groups.length > 0))
                            if (e.shiftKey && 9 != e.keyCode) {
                                if (("multiplecellsextended" == t.selectionmode || "multiplecellsadvanced" == t.selectionmode) && t._lastClickedCell) {
                                    t._selectpath(i, r);
                                    var l = t.dataview.loadedrecords[i]
                                      , d = t.getboundindex(l);
                                    return void (t.selectedcell = {
                                        rowindex: d,
                                        datafield: r
                                    })
                                }
                            } else
                                e.shiftKey || (t._lastClickedCell = {
                                    row: i,
                                    column: r
                                })
                    }
                    )
                      , x = e.shiftKey && "singlecell" != t.selectionmode && "multiplecells" != t.selectionmode
                      , b = function() {
                        if (t.pageable) {
                            var e = t.dataview.pagenum * t.dataview.pagesize;
                            w(e, g, !x)
                        } else
                            w(0, g, !x)
                    }
                      , y = function() {
                        var e = p.rowscount - 1;
                        t.pageable && (e = t.dataview.pagenum * t.dataview.pagesize + t.dataview.rows.length - 1),
                        w(e, g, !x)
                    }
                      , _ = 9 == r && !e.shiftKey
                      , q = 9 == r && e.shiftKey;
                    if (t.rtl) {
                        var j = _;
                        _ = q,
                        q = j
                    }
                    if ((_ || q) && (x = !1),
                    (_ || q) && document.activeElement && document.activeElement.className && document.activeElement.className.indexOf("jqx-grid-cell-add-new-row") >= 0)
                        return !0;
                    if ((B = e.ctrlKey || e.metaKey) && 37 == r)
                        null != (I = t._getfirstvisiblecolumn(v)) && w(m, I.datafield);
                    else if (B && 39 == r) {
                        var S = t._getlastvisiblecolumn(v);
                        null != S && w(m, S.datafield)
                    } else if (39 == r || _) {
                        var C = t._getnextvisiblecolumn(v);
                        if (null != C)
                            w(m, C.datafield, !x);
                        else if (_) {
                            var T = t._getfirstvisiblecolumn();
                            r = 40,
                            g = T.displayfield
                        } else
                            s = !0
                    } else {
                        var I;
                        if (37 == r || q)
                            if (null != (I = t._getprevvisiblecolumn(v)))
                                w(m, I.datafield, !x);
                            else if (q) {
                                var k = t._getlastvisiblecolumn();
                                r = 38,
                                g = k.displayfield
                            } else
                                s = !0;
                        else
                            36 == r ? b() : 35 == r ? y() : 33 == r ? m - u >= 0 ? (w(D = m - u, g, !x),
                            t.pageable && t.virtualmode && (t.gotoprevpage(),
                            setTimeout(function() {
                                w(D, g, !x)
                            }, 25))) : b() : 34 == r && (p.rowscount > m + u ? (w(D = m + u, g, !x),
                            t.pageable && t.virtualmode && (t.gotonextpage(),
                            setTimeout(function() {
                                w(D, g, !x)
                            }, 25))) : y())
                    }
                    38 == r && (B ? b() : m > 0 ? w(m - 1, g, !x, "up") : s = !1),
                    40 == r && (B ? y() : p.rowscount > m + 1 || t.groupable && t.groups.length > 0 ? w(m + 1, g, !x, "down") : s = !0)
                }
                break;
            case "singlerow":
            case "multiplerows":
            case "multiplerowsextended":
            case "multiplerowsadvanced":
                if (null == (m = t.getselectedrowindex()) || -1 == m)
                    return !0;
                m = this.getrowvisibleindex(m);
                var D, P = function(i, n, o) {
                    var a = function(e) {
                        var i, r = t.dataview.loadedrecords[e];
                        if (t.groupable && t.groups.length > 0) {
                            "up" == o && e++,
                            "down" == o && e--,
                            r = t.getdisplayrows()[e];
                            for (var a = 1, l = !0; l && a < 300 && (l = !1,
                            "down" == o ? r = t.getdisplayrows()[e + a] : "up" == o && (r = t.getdisplayrows()[e - a]),
                            r); ) {
                                r && r.group && (l = !0);
                                for (var d = r.parentItem; d; )
                                    !d || (i = d).group && (t.expandedgroups[i.uniqueid] ? t.expandedgroups[i.uniqueid].expanded : void 0) || (l = !0),
                                    d = d.parentItem;
                                if (!l)
                                    break;
                                a++
                            }
                            if (300 == a && (r = null),
                            t.pageable) {
                                var h = !1;
                                if (r) {
                                    for (var c = 0; c < t.dataview.rows.length; c++)
                                        t.dataview.rows[c].boundindex == r.boundindex && (h = !0);
                                    h || (r = null)
                                }
                            }
                        }
                        if (null != r) {
                            var u = t.getboundindex(r)
                              , p = t.selectedrowindex;
                            if ((n || null == n) && t.clearselection(),
                            t.selectedrowindex = p,
                            t.selectrow(u, !1),
                            t.groupable)
                                var f = t.ensurerowvisible(u);
                            else
                                f = t.ensurerowvisible(e);
                            return (!f || t.autoheight || t.groupable) && t._rendervisualrows(),
                            s = !0,
                            !0
                        }
                        return !1
                    };
                    if (a(i) || t.groupable || (t.ensurerowvisible(i),
                    a(i),
                    t.virtualmode && setTimeout(function() {
                        a(i)
                    }, 25),
                    t.virtualmode && t.host.focus()),
                    !(t.groupable && t.groups.length > 0))
                        if (e.shiftKey && 9 != r) {
                            if ("multiplerowsextended" == t.selectionmode && t._lastClickedCell)
                                return t._selectrowpath(i),
                                void (t.selectedrowindex = t.getrowboundindex(i))
                        } else
                            e.shiftKey || (t._lastClickedCell = {
                                row: i
                            },
                            t.selectedrowindex = t.getrowboundindex(i))
                }, B = (x = e.shiftKey && "singlerow" != t.selectionmode && "multiplerows" != t.selectionmode,
                b = function() {
                    if (t.pageable) {
                        var e = t.dataview.pagenum * t.dataview.pagesize;
                        P(e, !x)
                    } else
                        P(0, !x)
                }
                ,
                y = function() {
                    var e = p.rowscount - 1;
                    t.pageable && (e = t.dataview.pagenum * t.dataview.pagesize + t.dataview.rows.length - 1),
                    P(e, !x)
                }
                ,
                e.ctrlKey || e.metaKey);
                36 == r || B && 38 == r ? b() : 35 == r || B && 40 == r ? y() : 33 == r ? m - u >= 0 ? (P(D = m - u, !x, "up"),
                t.pageable && t.virtualmode && (t.gotoprevpage(),
                setTimeout(function() {
                    P(D, !x)
                }, 25))) : b() : 34 == r ? p.rowscount > m + u ? (P(D = m + u, !x, "down"),
                t.pageable && t.virtualmode && (t.gotonextpage(),
                setTimeout(function() {
                    P(D, !x)
                }, 25))) : y() : 38 == r ? m > 0 ? P(m - 1, !x, "up") : s = !0 : 40 == r && (p.rowscount > m + 1 || t.groupable && t.groups.length > 0 ? P(m + 1, !x, "down") : s = !0)
            }
            return !s || (t.autosavestate && t.savestate && t.savestate(),
            !1)
        },
        _handlemousemove: function(e, t) {
            if (!t.vScrollInstance.isScrolling() && !t.hScrollInstance.isScrolling()) {
                var r, s, n, o, a;
                if (t.enablehover || "multiplerows" == t.selectionmode) {
                    if (r = this.showheader ? this.columnsheader.height() + 2 : 0,
                    s = this._groupsheader() ? this.groupsheader.height() : 0,
                    s += this.showtoolbar ? this.toolbarheight : 0,
                    n = this.host.coord(),
                    this.hasTransform) {
                        n = i.jqx.utilities.getOffset(this.host);
                        var l = this._getBodyOffset();
                        n.left -= l.left,
                        n.top -= l.top
                    }
                    o = e.pageX - n.left,
                    a = e.pageY - r - n.top - s
                }
                if ("multiplerowsextended" != t.selectionmode && "multiplecellsextended" != t.selectionmode && "multiplecellsadvanced" != t.selectionmode || 1 != t.mousecaptured) {
                    if (!t.enablehover)
                        return !0;
                    if (!t.disabled && !this.vScrollInstance.isScrolling() && !this.hScrollInstance.isScrolling()) {
                        var d = this._hittestrow(o, a);
                        if (d) {
                            var h = d.row
                              , c = d.index;
                            if ((-1 == this.hoveredrow || -1 == c || this.hoveredrow != c || -1 != this.selectionmode.indexOf("cell") || "checkbox" == this.selectionmode) && (this._clearhoverstyle(),
                            -1 != c && null != h)) {
                                var u = this.hittestinfo[c].visualrow;
                                if (null != u && !(this.hittestinfo[c].details || e.clientX > i(u).width() + i(u).coord().left)) {
                                    var p = 0
                                      , f = u.cells.length;
                                    if (t.rowdetails && t.showrowdetailscolumn ? this.rtl ? (f -= 1,
                                    f -= this.groups.length) : p = 1 + this.groups.length : this.groupable && (this.rtl ? f -= this.groups.length : p = this.groups.length),
                                    0 != u.cells.length) {
                                        var m = u.cells[p].className;
                                        if (!(h.group || this.selectionmode.indexOf("row") >= 0 && -1 != m.indexOf("jqx-grid-cell-selected")))
                                            if (this.hoveredrow = c,
                                            -1 == this.selectionmode.indexOf("cell") && "checkbox" != this.selectionmode)
                                                for (x = p; x < f; x++)
                                                    _ = u.cells[x],
                                                    i(_).addClass(this.toTP("jqx-grid-cell-hover")),
                                                    i(_).addClass(this.toTP("jqx-fill-state-hover")),
                                                    this.cellhover && this.cellhover(_, e.pageX, e.pageY),
                                                    (y = this._getcolumnat(x))._applyCellStyle(_);
                                            else {
                                                var g = -1
                                                  , v = this.hScrollInstance
                                                  , w = v.value;
                                                this.rtl && "hidden" != this.hScrollBar.css("visibility") && (w = v.max - v.value);
                                                for (var x = p; x < f; x++) {
                                                    var b = parseInt(i(this.columnsrow[0].cells[x]).css("left")) - w;
                                                    if (this.columns.records[x].pinned && !this.rtl && (b = parseInt(i(this.columnsrow[0].cells[x]).css("left"))),
                                                    b + i(this.columnsrow[0].cells[x]).width() >= o && o >= b) {
                                                        g = x;
                                                        break
                                                    }
                                                }
                                                if (-1 != g) {
                                                    var y, _ = u.cells[g];
                                                    if (this.cellhover && this.cellhover(_, e.pageX, e.pageY),
                                                    -1 == _.className.indexOf("jqx-grid-cell-selected") && this.editcell && (y = this._getcolumnat(g)) && this.editcell.row == c && this.editcell.column == y.datafield)
                                                        return;
                                                    i(_).addClass(this.toTP("jqx-grid-cell-hover")),
                                                    i(_).addClass(this.toTP("jqx-fill-state-hover")),
                                                    (y = this._getcolumnat(g))._applyCellStyle(_)
                                                }
                                            }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    })
}
, function(e, t) {
    var i;
    (i = jqxBaseFramework).extend(i.jqx._jqxGrid.prototype, {
        _updatefilterrowui: function(e) {
            var t = this.columns.records.length
              , r = 0
              , s = this;
            if (this.filterrow) {
                for (var n = 0; n < t; n++) {
                    var o = this.columns.records[n]
                      , a = parseInt(o.width);
                    a < o.minwidth && (a = o.minwidth),
                    a > o.maxwidth && (a = o.maxwidth);
                    var l = i(this.filterrow[0].cells[n]);
                    l.css("left", r);
                    var d = !0;
                    if (l.width() == a && (d = !1),
                    e && (d = !0),
                    l.width(a),
                    l[0].left = r,
                    o.element && (l[0].style.width = o.element.style.width,
                    l[0].style.left = o.element.style.left),
                    o.hidden && o.hideable ? l.css("display", "none") : r += a,
                    d)
                        if (o.createfilterwidget && "custom" == o.filtertype)
                            o.createfilterwidget(o, l);
                        else if (o.filterable) {
                            var h = function(e, t) {
                                var r = i(t.children()[0]);
                                r[0].style.width = a - 8 + "px",
                                i.jqx.browser.msie && (r[0].style.width = a - 16 + "px"),
                                r.attr("disabled", e.disabled)
                            };
                            switch (o.filtertype) {
                            case "number":
                            case "input":
                                i(l.children()[0]).width(a),
                                l.find("input")[0].style.width = a - 30 + "px",
                                i.jqx.browser.msie && (l.find("input")[0].style.width = a - 36 + "px"),
                                l.find("input").attr("disabled", s.disabled),
                                i(l.find(".jqx-dropdownlist-state-normal")).jqxDropDownList({
                                    theme: s.theme,
                                    disabled: s.disabled
                                });
                                break;
                            case "date":
                            case "range":
                                this.host.jqxDateTimeInput ? i(l.children()[0]).jqxDateTimeInput({
                                    theme: s.theme,
                                    disabled: s.disabled,
                                    width: a - 10
                                }) : h(this, l);
                                break;
                            case "textbox":
                            case "default":
                                h(this, l);
                                break;
                            case "list":
                            case "checkedlist":
                                this.host.jqxDropDownList ? i(l.children()[0]).jqxDropDownList({
                                    theme: s.theme,
                                    disabled: s.disabled,
                                    width: a - 10
                                }) : h(this, l);
                                break;
                            case "bool":
                            case "boolean":
                                this.host.jqxCheckBox ? i(l.children()[0]).jqxCheckBox({
                                    theme: s.theme,
                                    disabled: s.disabled
                                }) : h(this, l)
                            }
                        }
                }
                var c = i(this.filterrow.children()[0]);
                c.width(parseInt(r) + 2),
                c.height(this.filterrowheight)
            }
        },
        clearfilterrow: function(e) {
            if (this._disablefilterrow = !0,
            this.columns.records) {
                for (var t = this.columns.records.length, r = 0; r < t; r++) {
                    var s = this.columns.records[r]
                      , n = i(this.filterrow[0].cells[r]);
                    if (("string" != typeof e || s.displayfield == e) && s.filterable) {
                        var o = function(e, t) {
                            var r = i(t.children()[0]);
                            r.val(""),
                            r[0] && (e["_oldWriteText" + r[0].id] = "")
                        };
                        switch (s.filtertype) {
                        case "number":
                        case "input":
                            if (n.find("input").val(""),
                            this.host.jqxDropDownList) {
                                var a = i(i(i(n).children()[0]).children()[1]);
                                a.jqxDropDownList("clearSelection");
                                var l = 0;
                                if (0 == l) {
                                    this._getfiltersbytype("number" == s.filtertype ? "number" : "string");
                                    var d = (new i.jqx.filter).getoperatorsbyfiltertype("number" == s.filtertype ? "numberfilter" : "stringfilter");
                                    null != s.filtercondition ? -1 == (l = d.indexOf(s.filtercondition.toUpperCase())) && (l = "number" == s.filtertype ? 0 : 2) : l = "number" == s.filtertype ? 0 : 2
                                }
                                a.jqxDropDownList({
                                    selectedIndex: l
                                }),
                                a.jqxDropDownList("ensureVisible", l)
                            }
                            break;
                        case "date":
                        case "range":
                            this.host.jqxDateTimeInput ? i(n.children()[0]).jqxDateTimeInput("setDate", null) : o(this, n);
                            break;
                        case "textbox":
                        case "default":
                            o(this, n);
                            break;
                        case "list":
                            this.host.jqxDropDownList ? i(n.children()[0]).jqxDropDownList("clearSelection") : o(this, n);
                            break;
                        case "checkedlist":
                            this.host.jqxDropDownList ? i(n.children()[0]).jqxDropDownList("checkAll", !1) : o(this, n);
                            break;
                        case "bool":
                        case "boolean":
                            this.host.jqxCheckBox ? i(n.children()[0]).jqxCheckBox({
                                checked: null
                            }) : o(this, n)
                        }
                    }
                }
                this._disablefilterrow = !1
            }
        },
        _applyfilterfromfilterrow: function() {
            if (1 != this._disablefilterrow && !this.disabled) {
                for (var e = this.columns.records.length, t = this.that, r = 0; r < e; r++) {
                    var s = new i.jqx.filter
                      , n = this.columns.records[r];
                    if (n.filterable && null !== n.datafield) {
                        var o = t._getcolumntypebydatafield(n)
                          , a = t._getfiltertype(o)
                          , l = !0
                          , d = (n.filtertype,
                        function(e, i, r) {
                            var s = !0;
                            if (e._filterwidget) {
                                var n = e._filterwidget.val();
                                if ("" != n) {
                                    var o = "equal";
                                    if ("stringfilter" == i && (o = "contains"),
                                    "numericfilter" == i && "," == t.gridlocalization.decimalseparator && n.indexOf(t.gridlocalization.decimalseparator) >= 0 && (n = n.replace(t.gridlocalization.decimalseparator, ".")),
                                    "stringfilter" != i) {
                                        var a = 0;
                                        if (-1 != n.indexOf(">") && (o = "greater_than",
                                        a = 1),
                                        -1 != n.indexOf("<") && (o = "less_than",
                                        a = 1),
                                        -1 != n.indexOf("=") && ("greater_than" == o ? (o = "greater_than_or_equal",
                                        a = 2) : "less_than" == o ? (o = "less_than_or_equal",
                                        a = 2) : (o = "equal",
                                        a = 1)),
                                        0 != a && (n = n.substring(a)).length < 1)
                                            return !1
                                    }
                                    if (null != e.filtercondition && (o = e.filtercondition),
                                    "datefilter" == i)
                                        var l = r.createfilter(i, n, o, null, e.cellsformat, t.gridlocalization);
                                    else
                                        l = r.createfilter(i, n, o);
                                    r.addfilter(1, l)
                                } else
                                    s = !1
                            }
                            return s
                        }
                        );
                        switch (n.filtertype) {
                        case "range":
                        case "date":
                            if (n._filterwidget.jqxDateTimeInput)
                                if ("range" == n.filtertype)
                                    if (null != (m = n._filterwidget.jqxDateTimeInput("getRange")) && null != m.from && null != m.to) {
                                        var h = "GREATER_THAN_OR_EQUAL";
                                        (f = new Date(0)).setHours(0),
                                        f.setMinutes(0),
                                        f.setFullYear(m.from.getFullYear(), m.from.getMonth(), m.from.getDate());
                                        var c = new Date(0);
                                        c.setHours(0),
                                        c.setMinutes(0),
                                        c.setFullYear(m.to.getFullYear(), m.to.getMonth(), m.to.getDate()),
                                        c.setHours(m.to.getHours()),
                                        c.setMinutes(m.to.getMinutes()),
                                        c.setSeconds(m.to.getSeconds());
                                        var u = s.createfilter(a, f, h);
                                        s.addfilter(0, u);
                                        var p = s.createfilter(a, c, "LESS_THAN_OR_EQUAL");
                                        s.addfilter(0, p)
                                    } else
                                        l = !1;
                                else if (null != (m = n._filterwidget.jqxDateTimeInput("getDate"))) {
                                    var f;
                                    (f = new Date(0)).setHours(0),
                                    f.setMinutes(0),
                                    f.setFullYear(m.getFullYear(), m.getMonth(), m.getDate()),
                                    n._filterwidget.jqxDateTimeInput("showTimeButton") && (f.setHours(m.getHours()),
                                    f.setMinutes(m.getMinutes())),
                                    h = "EQUAL",
                                    null != n.filtercondition && (h = n.filtercondition),
                                    u = s.createfilter(a, f, h),
                                    showTimeButton && (u = s.createfilter(a, f, h, null, n.cellsformat)),
                                    s.addfilter(0, u)
                                } else
                                    l = !1;
                            else
                                l = d(n, a, s);
                            break;
                        case "input":
                            if (n._filterwidget) {
                                var m = n._filterwidget.find("input").val()
                                  , g = n._filterwidget.find(".filter").jqxDropDownList("selectedIndex")
                                  , v = s.getoperatorsbyfiltertype(a)[g];
                                t.updatefilterconditions && (null != (b = t.updatefilterconditions(a, s.getoperatorsbyfiltertype(a))) && s.setoperatorsbyfiltertype(a, b),
                                v = s.getoperatorsbyfiltertype(a)[g]);
                                var w = "NULL" == v || "NOT_NULL" == v
                                  , x = "EMPTY" == v || "NOT_EMPTY" == v;
                                null != m && m.length > 0 || w || x ? (u = s.createfilter(a, m, v, null, n.cellsformat, t.gridlocalization),
                                s.addfilter(0, u)) : l = !1
                            } else
                                l = !1;
                            break;
                        case "number":
                            if (n._filterwidget) {
                                var b;
                                if (m = n._filterwidget.find("input").val(),
                                "," == t.gridlocalization.decimalseparator && m.indexOf(t.gridlocalization.decimalseparator) >= 0 && (m = m.replace(t.gridlocalization.decimalseparator, ".")),
                                g = n._filterwidget.find(".filter").jqxDropDownList("selectedIndex"),
                                v = s.getoperatorsbyfiltertype(a)[g],
                                t.updatefilterconditions)
                                    null != (b = t.updatefilterconditions(a, s.getoperatorsbyfiltertype(a))) && s.setoperatorsbyfiltertype(a, b),
                                    v = s.getoperatorsbyfiltertype(a)[g];
                                w = "NULL" == v || "NOT_NULL" == v,
                                x = "EMPTY" == v || "NOT_EMPTY" == v,
                                null != m && m.length > 0 || w || x ? (u = s.createfilter(a, new Number(m), v, null, n.cellsformat, t.gridlocalization),
                                s.addfilter(0, u)) : l = !1
                            } else
                                l = !1;
                            break;
                        case "textbox":
                        case "default":
                            l = d(n, a, s);
                            break;
                        case "bool":
                        case "boolean":
                            if (n._filterwidget.jqxCheckBox)
                                if (null != (m = n._filterwidget.jqxCheckBox("checked"))) {
                                    h = "equal";
                                    var y = s.createfilter(a, m, h);
                                    s.addfilter(1, y)
                                } else
                                    l = !1;
                            else
                                l = d(n, a, s);
                            break;
                        case "list":
                            if ((j = n._filterwidget.jqxDropDownList("listBox")).selectedIndex > 0) {
                                var _ = j.getItem(j.selectedIndex)
                                  , q = (m = _.label,
                                _.value);
                                h = "equal",
                                "" === m && (h = "NULL"),
                                y = s.createfilter(a, m, h),
                                s.addfilter(1, y),
                                q !== m && (y.data = q)
                            } else
                                l = !1;
                            break;
                        case "checkedlist":
                            if (n._filterwidget.jqxDropDownList) {
                                var j, S = (j = n._filterwidget.jqxDropDownList("listBox")).getCheckedItems();
                                if (0 == S.length) {
                                    for (var C = 1; C < j.items.length; C++)
                                        m = j.items[C].label,
                                        q = j.items[C].value,
                                        h = "not_equal",
                                        "" === m && (h = "NULL"),
                                        y = s.createfilter(a, m, h),
                                        q !== m && (y.data = q),
                                        s.addfilter(0, y);
                                    l = !0
                                } else if (S.length != j.items.length)
                                    for (C = 0; C < S.length; C++)
                                        m = S[C].label,
                                        q = S[C].value,
                                        h = "equal",
                                        "" === m && (h = "NULL"),
                                        y = s.createfilter(a, m, h),
                                        q !== m && (y.data = q),
                                        s.addfilter(1, y);
                                else
                                    l = !1
                            } else
                                l = d(n, a, s)
                        }
                        this._loading || (l ? this.addfilter(n.displayfield, s, !1) : this.removefilter(n.displayfield, !1))
                    }
                }
                this._loading || this.applyfilters("filterrow")
            }
        },
        _updatefilterrow: function() {
            var e = i('<div style="position: relative;" id="row00' + this.element.id + '"></div>')
              , t = 0
              , r = this.columns.records.length
              , s = this.toThemeProperty("jqx-grid-cell");
            s += " " + this.toThemeProperty("jqx-grid-cell-pinned"),
            s += " " + this.toThemeProperty("jqx-grid-cell-filter-row");
            var n = r + 10
              , o = new Array
              , a = this.that;
            this.filterrow[0].cells = o,
            e.height(this.filterrowheight),
            this.filterrow.children().detach(),
            this.filterrow.append(e),
            this._filterrowcache || (this._filterrowcache = new Array),
            this._initcolumntypes();
            for (var l = !1, d = new Array, h = document.createDocumentFragment(), c = 0; c < r; c++) {
                var u = this.columns.records[c]
                  , p = u.width;
                p < u.minwidth && (p = u.minwidth),
                p > u.maxwidth && (p = u.maxwidth);
                var f = document.createElement("div");
                f.style.overflow = "hidden",
                f.style.position = "absolute",
                f.style.height = "100%",
                f.className = s,
                f = i(f),
                h.appendChild(f[0]),
                f[0].style.left = t + "px",
                this.rtl ? (f.css("z-index", n++),
                f.css("border-left-width", "1px")) : f.css("z-index", n--),
                "auto" == p && (p = 0),
                f[0].style.width = parseFloat(p) + "px",
                f[0].left = t,
                u.hidden && u.hideable ? f.css("display", "none") : t += p,
                o[o.length] = f[0];
                var m = !0;
                if (this.rtl)
                    this.groupable && (g = this.showrowdetailscolumn && this.rowdetails ? 1 : 0,
                    this.groups.length + g + c > r - 1 && (m = !1)),
                    this.showrowdetailscolumn && this.rowdetails && c == r - 1 && (m = !1);
                else {
                    if (this.groupable) {
                        var g = this.showrowdetailscolumn && this.rowdetails ? 1 : 0;
                        this.groups.length + g > c && (m = !1)
                    }
                    this.showrowdetailscolumn && this.rowdetails && 0 == c && (m = !1)
                }
                m && ("custom" == u.filtertype && u.createfilterwidget ? u.createfilterwidget(u, f, function() {
                    a._applyfilterfromfilterrow()
                }) : u.filterable && (this._filterrowcache[u.datafield] ? (l = !0,
                f.append(this._filterrowcache[u.datafield]),
                u._filterwidget = this._filterrowcache[u.datafield]) : (this._addfilterwidget(u, f, p),
                d[u.datafield] = u._filterwidget)))
            }
            e[0].appendChild(h),
            this._filterrowcache = d,
            i.jqx.browser.msie && i.jqx.browser.version < 8 && e.css("z-index", n--),
            e.width(parseFloat(t) + 2),
            this.filterrow.addClass(s),
            this.filterrow.css("border-top-width", "1px"),
            this.filterrow.css("border-right-width", "0px"),
            l && this._updatefilterrowui(!0)
        },
        _addfilterwidget: function(e, t, r) {
            for (var s = this.that, n = "", o = "", a = 0; a < s.dataview.filters.length; a++) {
                var l = s.dataview.filters[a];
                if (l.datafield && l.datafield == e.datafield) {
                    a = l.filter.getfilters()[0],
                    n = a.value,
                    "range" === e.filtertype && (n = {
                        from: n,
                        to: l.filter.getfilters()[1].value
                    }),
                    o = a.condition,
                    e.filtercondition = o;
                    break
                }
            }
            var d, h, c, u = function(t, s) {
                var o = i('<input autocomplete="off" type="textarea"/>');
                o.attr("tabindex", 5 + e.visibleindex),
                o[0].id = i.jqx.utilities.createId(),
                o.addClass(t.toThemeProperty("jqx-widget")),
                o.addClass(t.toThemeProperty("jqx-filter-input jqx-input jqx-input-widget")),
                o.addClass(t.toThemeProperty("jqx-rc-all")),
                o.addClass(t.toThemeProperty("jqx-widget-content")),
                t.rtl && o.css("direction", "rtl"),
                t.disabled && o.attr("disabled", !0),
                o.attr("disabled", !1),
                o.appendTo(s),
                o.css("margin", "4px"),
                o.width(r - 8),
                o.height(t.filterrowheight - 9),
                e.createfilterwidget && e.createfilterwidget(e, s, o),
                e._filterwidget = o,
                o.focus(function() {
                    return t.content[0].scrollLeft = 0,
                    setTimeout(function() {
                        t.content[0].scrollLeft = 0
                    }, 10),
                    t.focusedfilter = o,
                    o.addClass(t.toThemeProperty("jqx-fill-state-focus")),
                    !1
                }),
                o.blur(function() {
                    o.removeClass(t.toThemeProperty("jqx-fill-state-focus"))
                }),
                o.keydown(function(i) {
                    "13" == i.keyCode && t._applyfilterfromfilterrow(),
                    o[0]._writeTimer && clearTimeout(o[0]._writeTimer),
                    o[0]._writeTimer = setTimeout(function() {
                        t._loading || (t["_oldWriteText" + o[0].id] || (t["_oldWriteText" + o[0].id] = ""),
                        t["_oldWriteText" + o[0].id].length > 0 && t["_oldWriteText" + o[0].id] != o.val() ? (t._applyfilterfromfilterrow(),
                        t["_oldWriteText" + o[0].id] = o.val()) : 0 == t["_oldWriteText" + o[0].id].length && (t._applyfilterfromfilterrow(),
                        t["_oldWriteText" + o[0].id] = o.val()))
                    }, e.filterdelay),
                    t.focusedfilter = o
                }),
                t.host.removeClass("jqx-disableselect"),
                t.content.removeClass("jqx-disableselect"),
                o.val(n)
            };
            switch (null != e.datatype && ("number" == e.filtertype && ("string" != e.datatype && "date" != e.datatype && "bool" != e.datatype || (e.filtertype = "textbox")),
            "date" == e.filtertype && ("string" != e.datatype && "number" != e.datatype && "bool" != e.datatype || (e.filtertype = "textbox")),
            "bool" == e.filtertype && ("string" != e.datatype && "number" != e.datatype && "date" != e.datatype || (e.filtertype = "textbox"))),
            e.filtertype) {
            case "number":
            case "input":
                var p = i("<div></div>");
                p.width(t.width()),
                p.height(this.filterrowheight),
                t.append(p),
                r = t.width() - 21,
                d = p,
                h = r,
                c = i('<input style="float: left;" autocomplete="off" type="textarea"/>'),
                s.rtl && (c.css("float", "right"),
                c.css("direction", "rtl")),
                c.attr("tabindex", 5 + e.visibleindex),
                c[0].id = i.jqx.utilities.createId(),
                c.addClass(s.toThemeProperty("jqx-widget jqx-input jqx-rc-all jqx-input-widget jqx-filter-input jqx-widget-content")),
                c.appendTo(d),
                c.width(h - 10),
                s.disabled && c.attr("disabled", !0),
                c.attr("disabled", !1),
                c[0].style.height = s.filterrowheight - 9 + "px",
                c.css("margin", "4px"),
                c.css("margin-right", "3px"),
                c.focus(function() {
                    s.focusedfilter = c,
                    c.addClass(s.toThemeProperty("jqx-fill-state-focus"))
                }),
                c.blur(function() {
                    c.removeClass(s.toThemeProperty("jqx-fill-state-focus"))
                }),
                c.keydown(function(t) {
                    "13" == t.keyCode && s._applyfilterfromfilterrow(),
                    "9" != t.keyCode && (c[0]._writeTimer && clearTimeout(c[0]._writeTimer),
                    c[0]._writeTimer = setTimeout(function() {
                        s._loading || s["_oldWriteText" + c[0].id] != c.val() && (s._applyfilterfromfilterrow(),
                        s["_oldWriteText" + c[0].id] = c.val())
                    }, e.filterdelay),
                    s.focusedfilter = c)
                }),
                c.val(n);
                var f = s._getfiltersbytype("number" == e.filtertype ? "number" : "string");
                (_ = i("<div class='filter' style='float: left;'></div>")).css("margin-top", "4px"),
                _.appendTo(p),
                s.rtl && _.css("float", "right");
                var m = 0;
                null != e.filtercondition && -1 != (g = (a = new i.jqx.filter).getoperatorsbyfiltertype("number" == e.filtertype ? "numericfilter" : "stringfilter").indexOf(e.filtercondition.toUpperCase())) && (m = g);
                var g, v = 180;
                "input" == e.filtertype && (v = 240,
                0 == m && -1 != (g = f.indexOf("contains") || 2) && null == e.filtercondition && (m = g)),
                _.jqxDropDownList({
                    disabled: s.disabled,
                    touchMode: s.touchmode,
                    rtl: s.rtl,
                    dropDownHorizontalAlignment: "right",
                    enableBrowserBoundsDetection: !0,
                    selectedIndex: m,
                    width: 20,
                    height: 27,
                    dropDownHeight: 150,
                    dropDownWidth: v,
                    source: f,
                    theme: s.theme
                }),
                _.jqxDropDownList({
                    selectionRenderer: function(e) {
                        return ""
                    }
                }),
                _.attr("tabindex", 5 + e.visibleindex),
                _.jqxDropDownList("setContent", ""),
                _.find(".jqx-dropdownlist-content").hide(),
                e.createfilterwidget && e.createfilterwidget(e, t, p),
                e._filterwidget = p;
                var w = null;
                this.addHandler(_, "select", function() {
                    var t = _.jqxDropDownList("getSelectedItem").label;
                    e._filterwidget.find("input").val().length > 0 && !s.refreshingfilter && s._applyfilterfromfilterrow(),
                    ("input" != e.filtertype || s.refreshingfilter) && (0 != e._filterwidget.find("input").val().length || s.refreshingfilter || "null" != w && "not null" != w && "null" != t && "not null" != t) || s._applyfilterfromfilterrow(),
                    w = t
                });
                break;
            case "textbox":
            case "default":
            default:
                u(this, t);
                break;
            case "none":
                break;
            case "date":
            case "range":
                if (this.host.jqxDateTimeInput) {
                    var x = i("<div></div>");
                    x.css("margin", "4px"),
                    x.css("margin-left", "5px"),
                    x.appendTo(t);
                    var b = {
                        calendar: this.gridlocalization,
                        todayString: this.gridlocalization.todaystring,
                        clearString: this.gridlocalization.clearstring
                    };
                    x.jqxDateTimeInput({
                        firstDayOfWeek: this.gridlocalization.firstDay,
                        readonly: !0,
                        disabled: s.disabled,
                        localization: b,
                        rtl: s.rtl,
                        showFooter: !0,
                        formatString: e.cellsformat,
                        selectionMode: e.filtertype,
                        value: null,
                        theme: this.theme,
                        width: r - 9,
                        height: this.filterrowheight - 9
                    }),
                    e.createfilterwidget && e.createfilterwidget(e, t, x),
                    n && n.from ? x.jqxDateTimeInput("setRange", n.from, n.to) : n && n.toString().length > 1 && x.val(n),
                    x.find("input").attr("tabindex", 5 + e.visibleindex),
                    e._filterwidget = x,
                    this.addHandler(x, "valueChanged", function(e) {
                        s.refreshingfilter || (s._applyfilterfromfilterrow(),
                        s.focusedfilter = null)
                    })
                } else
                    u(this, t);
                break;
            case "list":
            case "checkedlist":
                if (this.host.jqxDropDownList) {
                    var y, _, q = this._getfilterdataadapter(e);
                    (_ = i("<div></div>")).css("margin", "4px"),
                    _.css("margin-left", "5px");
                    var j = e.datafield
                      , S = "checkedlist" == e.filtertype;
                    v = r < 150 ? 220 : "auto",
                    q.dataBind();
                    var C = q.records.length < 8;
                    y = C,
                    _.appendTo(t),
                    _.jqxDropDownList({
                        hint: !1,
                        placeHolder: s.gridlocalization.filterchoosestring,
                        disabled: s.disabled,
                        touchMode: s.touchmode,
                        rtl: s.rtl,
                        checkboxes: S,
                        dropDownWidth: v,
                        source: q.records,
                        autoDropDownHeight: C,
                        theme: this.theme,
                        width: r - 9,
                        height: this.filterrowheight - 9,
                        displayMember: e.displayfield,
                        valueMember: j
                    }),
                    _.attr("tabindex", 5 + e.visibleindex),
                    _.attr("default-placeholder", !0),
                    e.createfilterwidget && e.createfilterwidget(e, t, _);
                    var T = _.jqxDropDownList("listBox");
                    if (S) {
                        _.jqxDropDownList({
                            selectionRenderer: function() {
                                return '<span class="' + s.toThemeProperty("jqx-item") + '" style="top: 4px; position: relative; color: inherit; border: none; background-color: transparent;">' + s.gridlocalization.filterselectstring + "</span>"
                            }
                        });
                        var I = i('<span style="top: 2px; position: relative; color: inherit; border: none; background-color: transparent;">' + s.gridlocalization.filterselectstring + "</span>");
                        if (I.addClass(this.toThemeProperty("jqx-item")),
                        null != T) {
                            y || T.host.height(200),
                            T.insertAt(s.gridlocalization.filterselectallstring, 0),
                            _.jqxDropDownList("setContent", I);
                            var k = !0;
                            new Array,
                            T.checkAll(!1),
                            s.addHandler(T.host, "checkChange", function(e) {
                                if (_[0]._selectionChanged = !0,
                                k)
                                    if (e.args.label != s.gridlocalization.filterselectallstring) {
                                        k = !1,
                                        T.host.jqxListBox("checkIndex", 0, !0, !1);
                                        var t = T.host.jqxListBox("getCheckedItems")
                                          , i = T.host.jqxListBox("getItems");
                                        1 == t.length ? T.host.jqxListBox("uncheckIndex", 0, !0, !1) : i.length != t.length && T.host.jqxListBox("indeterminateIndex", 0, !0, !1),
                                        k = !0
                                    } else
                                        k = !1,
                                        e.args.checked ? T.host.jqxListBox("checkAll", !1) : T.host.jqxListBox("uncheckAll", !1),
                                        k = !0
                            })
                        }
                    } else
                        T.insertAt({
                            label: this.gridlocalization.filterchoosestring,
                            value: ""
                        }, 0),
                        _.jqxDropDownList({
                            selectedIndex: 0
                        });
                    e._filterwidget = _,
                    _.jqxDropDownList("dropdownlistWrapper"),
                    "list" == e.filtertype ? this.addHandler(_, "select", function(e) {
                        s.refreshingfilter || e.args && "none" != e.args.type && (s._applyfilterfromfilterrow(),
                        s.focusedfilter = null)
                    }) : this.addHandler(_, "close", function(e) {
                        _[0]._selectionChanged && (s._applyfilterfromfilterrow(),
                        s.focusedfilter = null,
                        _[0]._selectionChanged = !1)
                    })
                } else
                    u(this, t);
                break;
            case "bool":
            case "boolean":
                if (this.host.jqxCheckBox) {
                    var D = i('<div tabIndex=0 style="opacity: 0.99; position: absolute; top: 50%; left: 50%; margin-top: -9px; margin-left: -12px;"></div>');
                    D.appendTo(t),
                    D.jqxCheckBox({
                        disabled: s.disabled,
                        enableContainerClick: !1,
                        animationShowDelay: 0,
                        animationHideDelay: 0,
                        hasThreeStates: !0,
                        theme: this.theme,
                        checked: null
                    }),
                    D.attr("tabindex", 5 + e.visibleindex),
                    e.createfilterwidget && e.createfilterwidget(e, t, D),
                    !0 === n || "true" == n ? D.jqxCheckBox({
                        checked: !0
                    }) : !1 !== n && "false" != n || D.jqxCheckBox({
                        checked: !1
                    }),
                    e._filterwidget = D,
                    this.addHandler(D, "change", function(e) {
                        s.refreshingfilter || e.args && (s.focusedfilter = null,
                        s._applyfilterfromfilterrow())
                    })
                } else
                    u(this, t)
            }
        },
        _getfilterdataadapter: function(e) {
            if (this.source._source) {
                var t = {
                    localdata: i.extend(!0, {}, this.source.records),
                    datatype: this.source.datatype,
                    async: !1
                }
                  , r = this;
                dataadapter = new i.jqx.dataAdapter(t,{
                    autoBind: !1,
                    autoSort: !0,
                    autoSortField: e.displayfield,
                    async: !1,
                    uniqueDataFields: [e.displayfield],
                    beforeLoadComplete: function(t) {
                        var i = new Array;
                        if (e.cellsformat) {
                            for (var s = r._getcolumntypebydatafield(e), n = 0; n < t.length; n++) {
                                i.push(t[n]);
                                var o = t[n][e.displayfield];
                                t[n][e.displayfield + "JQValue"] = o,
                                "date" === s ? t[n][e.displayfield] = null != o ? dataadapter.formatDate(o, e.cellsformat, r.gridlocalization) : "" : "number" !== s && "float" !== s && "int" !== s || (t[n][e.displayfield] = null != o ? dataadapter.formatNumber(o, e.cellsformat, r.gridlocalization) : "")
                            }
                            return i
                        }
                        return t
                    }
                })
            } else
                dataadapter = new i.jqx.dataAdapter(this.source,{
                    autoBind: !1,
                    uniqueDataFields: [e.displayfield],
                    autoSort: !0,
                    autoSortField: e.displayfield,
                    async: !1
                });
            if (e.filteritems && e.filteritems.length > 0)
                t = {
                    localdata: e.filteritems,
                    datatype: this.source.datatype,
                    async: !1
                },
                dataadapter = new i.jqx.dataAdapter(t,{
                    autoBind: !1,
                    async: !1
                });
            else if (e.filteritems) {
                if (e.filteritems._source)
                    return e.filteritems._options.autoBind = !1,
                    e.filteritems._options.async = !1,
                    e.filteritems;
                if (i.isFunction(e.filteritems))
                    return e.filteritems()
            }
            return dataadapter
        },
        refreshfilterrow: function() {
            if (this.showfilterrow) {
                this.refreshingfilter = !0,
                this._updatefilterrowui(),
                this._updatelistfilters(!0, !0);
                for (var e = this.that, t = this.columns.records.length, r = 0; r < t; r++) {
                    var s = this.columns.records[r];
                    if (s.filterable && s.filter) {
                        var n = s.filter.getfilters();
                        if (n.length > 0) {
                            var o = n[0].value
                              , a = s._filterwidget
                              , l = s._filterwidget.parent();
                            if (null != a)
                                switch (s.filtertype) {
                                case "number":
                                    if (l.find("input").val(o),
                                    this.host.jqxDropDownList) {
                                        var d = s.filter.getoperatorsbyfiltertype("numericfilter");
                                        a.find(".filter").jqxDropDownList("selectIndex", d.indexOf(n[0].condition))
                                    }
                                    break;
                                case "input":
                                    l.find("input").val(o),
                                    this.host.jqxDropDownList && (d = s.filter.getoperatorsbyfiltertype("stringfilter"),
                                    a.find(".filter").jqxDropDownList("selectIndex", d.indexOf(n[0].condition)));
                                    break;
                                case "date":
                                case "range":
                                    if (this.host.jqxDateTimeInput) {
                                        if (null != (o = s.filter.getfilterat(0).filtervalue)) {
                                            if (s.filter.getfilterat(1))
                                                var h = s.filter.getfilterat(1).filtervalue;
                                            else
                                                h = o;
                                            "range" == s.filtertype ? i(l.children()[0]).jqxDateTimeInput("setRange", new Date(o), new Date(h)) : i(l.children()[0]).jqxDateTimeInput("setDate", new Date(o))
                                        }
                                    } else
                                        a.val(o);
                                    break;
                                case "textbox":
                                case "default":
                                    a.val(o),
                                    e["_oldWriteText" + a[0].id] = o;
                                    break;
                                case "bool":
                                case "boolean":
                                    this.host.jqxCheckBox ? i(l.children()[0]).jqxCheckBox({
                                        checked: o
                                    }) : a.val(o)
                                }
                        }
                    }
                }
                this.refreshingfilter = !1
            }
        },
        _destroyedfilters: function() {
            this.that;
            for (var e = this.columns.records.length, t = 0; t < e; t++) {
                var r = this.columns.records[t];
                if (r.filterable) {
                    var s = r._filterwidget;
                    if ("list" == r.filtertype || "checkedlist" == r.filtertype)
                        this.removeHandler(s, "select"),
                        this.removeHandler(s, "close"),
                        s.jqxDropDownList("destroy");
                    else if ("date" == r.filtertype || "range" == r.filtertype)
                        this.removeHandler(s, "valueChanged"),
                        s.jqxDateTimeInput("destroy");
                    else if ("bool" == r.filtertype)
                        this.removeHandler(s, "change"),
                        s.jqxCheckBox("destroy");
                    else if ("number" == r.filtertype || "input" === r.filtertype) {
                        var n = s.find(".jqx-input");
                        this.removeHandler(n, "keydown"),
                        i(s.children()[1]).jqxDropDownList("destroy")
                    } else
                        this.removeHandler(s, "keydown");
                    s.remove()
                }
            }
        },
        _updatelistfilters: function(e, t) {
            for (var r = this.that, s = this.columns.records.length, n = 0; n < s; n++) {
                var o = this.columns.records[n];
                if (o.filterable && ("list" == o.filtertype || "checkedlist" == o.filtertype)) {
                    var a = o._filterwidget;
                    if (e) {
                        var l = this._getfilterdataadapter(o);
                        a.jqxDropDownList({
                            source: l
                        });
                        var d = !0;
                        if ((u = a.jqxDropDownList("getItems")).length != l.records.length + 1 && (d = !1),
                        d)
                            for (var h = 1; h < u.length; h++)
                                if (u[h].label != l.records[h - 1][o.displayfield]) {
                                    d = !1;
                                    break
                                }
                        if (d && !t)
                            continue
                    } else if (null == o.filter) {
                        a.jqxDropDownList("renderSelection");
                        continue
                    }
                    var c = "checkedlist" == o.filtertype
                      , u = a.jqxDropDownList("getItems")
                      , p = a.jqxDropDownList("listBox");
                    if (a.jqxDropDownList("dataBind"),
                    c) {
                        a.jqxDropDownList({
                            selectionRenderer: function() {
                                return r.gridlocalization.filterselectstring
                            }
                        }),
                        null == p.getItem(this.gridlocalization.filterselectallstring) && p.insertAt(this.gridlocalization.filterselectallstring, 0);
                        var f = i('<span style="top: 2px; position: relative; color: inherit; border: none; background-color: transparent;">' + this.gridlocalization.filterselectstring + "</span>");
                        if (f.addClass(this.toThemeProperty("jqx-item")),
                        a.jqxDropDownList("setContent", f),
                        p.checkAll(!1),
                        o.filter) {
                            var m = o.filter.getfilters();
                            for (h = 0; h < p.items.length; h++) {
                                var g = p.items[h].label
                                  , v = void 0;
                                i.each(m, function() {
                                    var e;
                                    "NOT_EQUAL" == this.condition ? e = g != this.value : "EQUAL" == this.condition && (e = g == this.value),
                                    v = null == v && void 0 !== e ? e : "EQUAL" == this.condition ? v || e : v && e
                                }),
                                v ? p.checkIndex(h, !1, !1) : p.uncheckIndex(h, !1, !1)
                            }
                            p._updateCheckedItems();
                            var w = p.getCheckedItems().length;
                            p.items.length != w && w > 0 && p.host.jqxListBox("indeterminateIndex", 0, !0, !1)
                        }
                    } else if (null == p.getItem(this.gridlocalization.filterchoosestring) && p.insertAt({
                        label: this.gridlocalization.filterchoosestring,
                        value: ""
                    }, 0),
                    a.jqxDropDownList({
                        selectedIndex: 0
                    }),
                    o.filter) {
                        m = o.filter.getfilters();
                        var x = -1;
                        for (h = 0; h < p.items.length; h++)
                            g = p.items[h].label,
                            i.each(m, function() {
                                return "NOT_EQUAL" == this.condition || (g == this.value ? (x = h,
                                !1) : void 0)
                            });
                        -1 != x && p.selectIndex(x)
                    }
                    u.length < 8 ? a.jqxDropDownList("autoDropDownHeight", !0) : a.jqxDropDownList("autoDropDownHeight", !1)
                }
            }
        },
        _renderfiltercolumn: function() {
            var e = this.that;
            if (this.filterable) {
                if (!this.columns.records)
                    return;
                i.each(this.columns.records, function(t, r) {
                    var s = !1;
                    e.autoshowfiltericon ? this.filter ? (i(this.filtericon).show(),
                    s = !0) : i(this.filtericon).hide() : this.filterable && (i(this.filtericon).show(),
                    s = !0),
                    this.element.removeAttribute("filter"),
                    s && this.element.setAttribute("filter", !0),
                    "right" != this.align || this.renderer || this.element && (this.element.firstChild.firstChild.style.marginRight = s ? "18px" : "2px")
                })
            }
        },
        _initcolumntypes: function() {
            if (this.columns && this.columns.records) {
                var e = this.source._source.datafields;
                if (e)
                    for (var t = 0; t < this.columns.records.length; t++) {
                        var r = this.columns.records[t];
                        if (!r.datatype) {
                            var s = "";
                            i.each(e, function() {
                                if (this.name == r.displayfield)
                                    return this.type && (s = this.type),
                                    !1
                            }),
                            r.datatype = "" != s ? s : ""
                        }
                    }
            }
        },
        _getcolumntypebydatafield: function(e) {
            var t = this.that
              , r = "string"
              , s = t.source.datafields || (t.source._source ? t.source._source.datafields : null);
            if (s) {
                var n = "";
                if (i.each(s, function() {
                    if (this.name == e.displayfield)
                        return this.type && (n = this.type),
                        !1
                }),
                n)
                    return n
            }
            if (null != e) {
                if (null == this.dataview.cachedrecords)
                    return r;
                var o = null;
                if (this.virtualmode)
                    i.each(this.dataview.cachedrecords, function() {
                        return o = this[e.displayfield],
                        !1
                    });
                else {
                    if (0 == this.dataview.cachedrecords.length)
                        return r;
                    if (null != (o = this.dataview.cachedrecords[0][e.displayfield]) && "" == o.toString())
                        return "string"
                }
                if (null != o)
                    if ("boolean" == typeof o)
                        r = "boolean";
                    else if (i.jqx.dataFormat.isNumber(o))
                        r = "number";
                    else {
                        var a = new Date(o);
                        if ("NaN" == a.toString() || "Invalid Date" == a.toString())
                            if (i.jqx.dataFormat) {
                                if (null != (a = i.jqx.dataFormat.tryparsedate(o))) {
                                    if (a && a.getFullYear() && 1970 == a.getFullYear() && 0 == a.getMonth() && 1 == a.getDate()) {
                                        var l = new Number(o);
                                        return isNaN(l) ? "string" : "number"
                                    }
                                    return "date"
                                }
                                r = "string"
                            } else
                                r = "string";
                        else
                            r = "date"
                    }
            }
            return r
        },
        _getfiltersbytype: function(e) {
            var t = this.that
              , i = "";
            switch (e) {
            case "number":
            case "float":
            case "int":
                i = t.gridlocalization.filternumericcomparisonoperators;
                break;
            case "date":
                i = t.gridlocalization.filterdatecomparisonoperators;
                break;
            case "boolean":
            case "bool":
                i = t.gridlocalization.filterbooleancomparisonoperators;
                break;
            case "string":
            default:
                i = t.gridlocalization.filterstringcomparisonoperators
            }
            return i
        },
        _getfiltertype: function(e) {
            var t = "stringfilter";
            switch (e) {
            case "number":
            case "int":
            case "float":
            case "decimal":
                t = "numericfilter";
                break;
            case "boolean":
            case "bool":
                t = "booleanfilter";
                break;
            case "date":
            case "time":
            case "range":
                t = "datefilter";
                break;
            case "string":
            case "input":
                t = "stringfilter"
            }
            return t
        },
        _buildfilter: function(e, t, r) {
            var s = i(t).find(".filter1")
              , n = i(t).find(".filter2")
              , o = i(t).find(".filter3")
              , a = i(t).find(".filtertext1" + e.element.id)
              , l = i(t).find(".filtertext2" + e.element.id)
              , d = a.val()
              , h = l.val()
              , c = e._getcolumntypebydatafield(r)
              , u = (e._getfiltersbytype(c),
            new i.jqx.filter)
              , p = e._getfiltertype(c);
            if ("default" === e.filtermode && "list" !== r.filtertype && "checkedlist" !== r.filtertype) {
                var f = s.jqxDropDownList("selectedIndex")
                  , m = n.jqxDropDownList("selectedIndex")
                  , g = o.jqxDropDownList("selectedIndex")
                  , v = null
                  , w = null;
                if (e.updatefilterconditions) {
                    var x = e.updatefilterconditions(p, u.getoperatorsbyfiltertype(p));
                    null != x && u.setoperatorsbyfiltertype(p, x)
                }
                var b = !1
                  , y = u.getoperatorsbyfiltertype(p)[f]
                  , _ = (o = u.getoperatorsbyfiltertype(p)[g],
                "NULL" == y || "NOT_NULL" == y)
                  , q = "EMPTY" == y || "NOT_EMPTY" == y;
                null == y && (y = u.getoperatorsbyfiltertype(p)[0]),
                null == o && (o = u.getoperatorsbyfiltertype(p)[0]),
                (d.length > 0 || _ || q) && (v = u.createfilter(p, d, y, null, r.cellsformat, e.gridlocalization),
                u.addfilter(m, v),
                b = !0);
                var j = "NULL" == o || "NOT_NULL" == o
                  , S = "EMPTY" == o || "NOT_EMPTY" == o;
                if ((h.length > 0 || j || S) && (w = u.createfilter(p, h, o, null, r.cellsformat, e.gridlocalization),
                u.addfilter(m, w),
                b = !0),
                b) {
                    var C = r.displayfield;
                    this.addfilter(C, u, !0)
                } else
                    this._clearfilter(e, t, r)
            } else if ("excel" === e.filtermode || "list" === r.filtertype || "checkedlist" === r.filtertype) {
                var T = !1
                  , I = s.data().jqxListBox.instance
                  , k = "excel" === this.filtermode || "checkedlist" === r.filtertype
                  , D = I.getCheckedItems();
                if (k || (D = I.getSelectedItems()),
                0 == D.length) {
                    for (var P = 1; P < I.items.length; P++) {
                        void 0 === (H = I.items[P].value) && (H = "");
                        var B = "not_equal";
                        if (H && H.indexOf && (H.indexOf("|") >= 0 || H.indexOf(" AND ") >= 0 || H.indexOf(" OR ") >= 0 || H.indexOf(" and ") >= 0 || H.indexOf(" or ") >= 0) && (H = (H = (H = (H = (H = H.replace("|", "")).replace("AND", "")).replace("OR", "")).replace("and", "")).replace("or", ""),
                        B = "equal"),
                        "datefilter" == p)
                            var M = u.createfilter(p, H, B, null, r.cellsformat, e.gridlocalization);
                        else
                            M = u.createfilter(p, H, B, null);
                        u.addfilter(0, M)
                    }
                    T = !0
                } else if (D.length != I.items.length) {
                    for (T = !0,
                    P = 0; P < D.length; P++)
                        if (e.gridlocalization.filterselectallstring !== D[P].value) {
                            var H;
                            void 0 === (H = D[P].value) && (H = ""),
                            B = "equal",
                            M = "datefilter" == p ? u.createfilter(p, H, B, null, r.cellsformat, e.gridlocalization) : u.createfilter(p, H, B, null),
                            u.addfilter(1, M)
                        }
                } else
                    T = !1;
                T ? (C = r.displayfield,
                this.addfilter(C, u, !0)) : (C = r.displayfield,
                this.removefilter(C, !0))
            }
        },
        _clearfilter: function(e, t, i) {
            var r = i.displayfield;
            this.removefilter(r, !0)
        },
        addfilter: function(e, t, i) {
            if (this._loading)
                throw new Error("jqxGrid: " + this.loadingerrormessage);
            var r = this.getcolumn(e)
              , s = this._getcolumn(e);
            null != r && null != r && (r.filter = t,
            s.filter = t,
            this.dataview.addfilter(e, t),
            1 == i && null != i && this.applyfilters("add"))
        },
        removefilter: function(e, t) {
            if (this._loading)
                throw new Error("jqxGrid: " + this.loadingerrormessage);
            var i = this.getcolumn(e)
              , r = this._getcolumn(e);
            null != i && null != i && null != i.filter && (this.dataview.removefilter(e, i.filter),
            i.filter = null,
            r.filter = null,
            this.showfilterrow && this.clearfilterrow(e),
            1 != t && !1 === t || this.applyfilters("remove"))
        },
        applyfilters: function(e) {
            if (this.dataview.filters.length >= 0 && (this.virtualmode || !this.source.localdata) && null != this.source && this.source.filter) {
                var t = -1;
                this.pageable ? (t = this.dataview.pagenum,
                this.dataview.pagenum = 0) : (this.vScrollInstance.setPosition(0),
                this.loadondemand = !0,
                this._renderrows(this.virtualsizeinfo)),
                this.pageable && this.virtualmode && (this.dataview.pagenum = 0),
                this.source.filter(this.dataview.filters, this.dataview.records, this.dataview.records.length),
                this.pageable && !this.virtualmode && (this.dataview.pagenum = t)
            }
            if (this._cellscache = new Array,
            this.dataview.clearsortdata && this.dataview.clearsortdata(),
            this.virtualmode)
                return this.pageable && (this.dataview.updateview(),
                this.gotopage && this.gotopage(0)),
                this.rendergridcontent(!1, !1),
                this.showfilterrow && "string" != typeof e && i.isEmptyObject(e) && this.refreshfilterrow(),
                this._postrender("filter"),
                void this._raiseEvent(13, {
                    filters: this.dataview.filters
                });
            if (this.selectedrowindexes,
            this.that,
            this.dataview.refresh(),
            this.dataview.clearsortdata && this.sortcolumn && this.sortdirection) {
                var r = this.sortdirection.ascending ? "asc" : "desc";
                this._loading ? this.sortby(this.sortcolumn, r, null, !1, !1) : this.sortby(this.sortcolumn, r, null, !1)
            }
            this.pageable && (this.dataview.updateview(),
            this.gotopage && (this.gotopage(0),
            this.updatepagerdetails())),
            this._updaterowsproperties(),
            !this.groupable || this.groupable && 0 == this.groups.length ? (this._rowdetailscache = new Array,
            this.virtualsizeinfo = null,
            this._pagescache = new Array,
            this.columns && this.columns.records && this.columns.records.length > 0 && !this.columns.records[0].filtericon && (this.prerenderrequired = !0),
            this.rendergridcontent(!0, !1),
            this._updatecolumnwidths(),
            this._updatecellwidths(),
            this._renderrows(this.virtualsizeinfo),
            this.showaggregates && this._updatecolumnsaggregates && this._updatecolumnsaggregates(),
            this._postrender("filter")) : (this.collapseallgroups(),
            this._rowdetailscache = new Array,
            this._render(!0, !0, !1, !1, !1),
            this.showfilterrow && this._updatefocusedfilter(),
            this._updatecolumnwidths(),
            this._updatecellwidths(),
            this._renderrows(this.virtualsizeinfo),
            this._postrender("filter")),
            this.showfilterrow && "string" != typeof e && i.isEmptyObject(e) && this.refreshfilterrow(),
            this._raiseEvent(13, {
                filters: this.dataview.filters
            })
        },
        getfilterinformation: function() {
            for (var e = new Array, t = 0; t < this.dataview.filters.length; t++) {
                var i = this.getcolumn(this.dataview.filters[t].datafield);
                e[t] = {
                    filter: this.dataview.filters[t].filter,
                    datafield: i.datafield,
                    displayfield: i.displayfield,
                    filtercolumn: i.datafield,
                    filtercolumntext: i.text
                }
            }
            return e
        },
        clearfilters: function(e) {
            var t = this.that;
            if (this.showfilterrow && this.clearfilterrow(),
            this.columns.records) {
                var r = 1 == e || !1 !== e;
                i.each(this.columns.records, function() {
                    t.removefilter(this.displayfield, !r)
                })
            }
            !1 !== e && (1 != e && !1 === e || this.applyfilters("clear"))
        },
        _destroyfilterpanel: function() {
            var e = i(i.find("#filterclearbutton" + this.element.id))
              , t = i(i.find("#filterbutton" + this.element.id))
              , r = i(i.find("#filter1" + this.element.id))
              , s = i(i.find("#filter2" + this.element.id))
              , n = i(i.find("#filter3" + this.element.id))
              , o = i(i.find(".filtertext1" + this.element.id))
              , a = i(i.find(".filtertext2" + this.element.id));
            o.length > 0 && a.length > 0 && (o.removeClass(),
            a.removeClass(),
            o.remove(),
            a.remove()),
            e.length > 0 && (e.jqxButton("destroy"),
            t.jqxButton("destroy"),
            this.removeHandler(e, "click"),
            this.removeHandler(t, "click")),
            r.length > 0 && r.jqxDropDownList("destroy"),
            s.length > 0 && s.jqxDropDownList("destroy"),
            n.length > 0 && n.jqxDropDownList("destroy"),
            r = i(i.find("#filter1" + this.element.id + "ex")),
            s = i(i.find("#filter2" + this.element.id + "ex")),
            n = i(i.find("#filter3" + this.element.id + "ex")),
            r.length > 0 && r.jqxDropDownList("destroy"),
            s.length > 0 && s.jqxDropDownList("destroy"),
            n.length > 0 && n.jqxDropDownList("destroy")
        },
        _updatefilterpanel: function(e, t, r) {
            null != e && null != e || (e = this);
            var s = e._getcolumntypebydatafield(r)
              , n = e._getfiltersbytype(s);
            if (!e.host.jqxDropDownList)
                throw new Error("jqxGrid: Missing reference to jqxdropdownlist.js.");
            e.filterpanel.detach(),
            e.excelfilterpanel.detach(),
            r.filterpanel && r.filterpanel.detach(),
            i(t).children().detach();
            var o = i(e.menuitemsarray[6]);
            if (i(o).css("height", "190px"),
            r.createfilterpanel && !r.filterpanel) {
                var a = i("<div class='filter' style='margin-left: 7px;'></div>");
                i(t).append(a),
                r.createfilterpanel(r.displayfield, a),
                r.filterpanel = a
            }
            "list" === r.filtertype || "checkedlist" === r.filtertype ? i(t).append(e.excelfilterpanel) : "custom" !== r.filtertype ? i(t).append(e.filterpanel) : r.filterpanel && i(t).append(r.filterpanel);
            var l = i(t)
              , d = l.find("#filterclearbutton" + e.element.id)
              , h = l.find("#filterbutton" + e.element.id)
              , c = l.find(".filter1")
              , u = l.find(".filter2")
              , p = l.find(".filter3")
              , f = l.find(".filtertext1" + e.element.id)
              , m = l.find(".filtertext2" + e.element.id);
            if (this._hasdatefilter && "list" !== r.filtertype && "checkedlist" !== r.filtertype && "custom" !== r.filtertype) {
                var g = f.parent()
                  , v = m.parent();
                if (g.children().remove(),
                v.children().remove(),
                "date" == r.filtertype) {
                    e._showwhere.text(e.gridlocalization.filtershowrowdatestring);
                    var w = i("<div class='filtertext1" + e.element.id + "' style=''></div>");
                    g.append(w),
                    (x = function(t) {
                        var i = {
                            calendar: e.gridlocalization,
                            todayString: e.gridlocalization.todaystring,
                            clearString: e.gridlocalization.clearstring
                        };
                        t.jqxDateTimeInput({
                            disabled: e.disabled,
                            firstDayOfWeek: e.gridlocalization.firstDay,
                            localization: i,
                            rtl: e.rtl,
                            width: e._filterpanelwidth - 10,
                            height: 24,
                            value: null,
                            formatString: r.cellsformat,
                            theme: e.theme
                        })
                    }
                    )(w),
                    w = i("<div class='filtertext2" + e.element.id + "' style=''></div>"),
                    v.append(w),
                    x(w)
                } else {
                    var x;
                    e._showwhere.text(e.gridlocalization.filtershowrowstring),
                    w = i("<input class='filtertext1" + e.element.id + "' style='box-sizing: content-box; height: 16px; padding: 3px;' type='text'></input>"),
                    g.append(w),
                    (x = function(t) {
                        t.addClass(e.toThemeProperty("jqx-input")),
                        t.addClass(e.toThemeProperty("jqx-filter-input jqx-widget-content")),
                        t.addClass(e.toThemeProperty("jqx-rc-all")),
                        t.width(e._filterpanelwidth - 18)
                    }
                    )(w),
                    w = i("<input class='filtertext2" + e.element.id + "' style='box-sizing: content-box; height: 16px; padding: 3px;' type='text'></input>"),
                    v.append(w),
                    x(w)
                }
                f = l.find(".filtertext1" + e.element.id),
                m = l.find(".filtertext2" + e.element.id)
            }
            if ("date" != r.filtertype ? (f.val(""),
            m.val("")) : (f.val(null),
            m.val(null)),
            this.removeHandler(h, "click"),
            this.addHandler(h, "click", function() {
                e._buildfilter(e, t, r),
                e._closemenu()
            }),
            this.removeHandler(d, "click"),
            this.addHandler(d, "click", function() {
                e._clearfilter(e, t, r),
                e._closemenu()
            }),
            this.removeHandler(h, "keydown"),
            this.addHandler(h, "keydown", function(i) {
                13 === i.keyCode && (e._buildfilter(e, t, r),
                e._closemenu())
            }),
            this.removeHandler(d, "keydown"),
            this.addHandler(d, "keydown", function(i) {
                13 === i.keyCode && (e._clearfilter(e, t, r),
                e._closemenu())
            }),
            this.removeHandler(f, "keydown"),
            this.addHandler(f, "keydown", function(t) {
                13 === t.keyCode && h.trigger("click"),
                27 === t.keyCode && e._closemenu()
            }),
            this.removeHandler(m, "keydown"),
            this.addHandler(m, "keydown", function(t) {
                13 === t.keyCode && h.trigger("click"),
                27 === t.keyCode && e._closemenu()
            }),
            "default" === this.filtermode && "list" !== r.filtertype && "checkedlist" !== r.filtertype && "custom" !== r.filtertype) {
                if (c.jqxDropDownList("source") != n && (c.jqxDropDownList({
                    enableBrowserBoundsDetection: !1,
                    source: n
                }),
                p.jqxDropDownList({
                    enableBrowserBoundsDetection: !1,
                    source: n
                })),
                "boolean" == s || "bool" == s)
                    c.jqxDropDownList({
                        autoDropDownHeight: !0,
                        selectedIndex: 0
                    }),
                    p.jqxDropDownList({
                        autoDropDownHeight: !0,
                        selectedIndex: 0
                    });
                else {
                    var b = !1;
                    n && n.length && n.length < 5 && (b = !0),
                    c.jqxDropDownList({
                        autoDropDownHeight: b,
                        selectedIndex: 2
                    }),
                    p.jqxDropDownList({
                        autoDropDownHeight: b,
                        selectedIndex: 2
                    })
                }
                u.jqxDropDownList({
                    selectedIndex: 0
                });
                var y = r.filter
                  , _ = new i.jqx.filter
                  , q = "";
                switch (s) {
                case "number":
                case "int":
                case "float":
                case "decimal":
                    q = "numericfilter",
                    j = _.getoperatorsbyfiltertype("numericfilter");
                    break;
                case "boolean":
                case "bool":
                    q = "booleanfilter",
                    j = _.getoperatorsbyfiltertype("booleanfilter");
                    break;
                case "date":
                case "time":
                    q = "datefilter",
                    j = _.getoperatorsbyfiltertype("datefilter");
                    break;
                case "string":
                    q = "stringfilter",
                    j = _.getoperatorsbyfiltertype("stringfilter")
                }
                if (null != y) {
                    if (g = y.getfilterat(0),
                    v = y.getfilterat(1),
                    y.getoperatorat(0),
                    e.updatefilterconditions) {
                        var j = []
                          , S = e.updatefilterconditions(q, j);
                        if (null != S) {
                            for (var C = 0; C < S.length; C++)
                                S[C] = S[C].toUpperCase();
                            y.setoperatorsbyfiltertype(q, S),
                            j = S
                        }
                    }
                    var T = "default";
                    if (null != g) {
                        var I = j.indexOf(g.comparisonoperator)
                          , k = g.filtervalue;
                        f.val(k),
                        c.jqxDropDownList({
                            selectedIndex: I,
                            animationType: T
                        })
                    }
                    if (null != v) {
                        var D = j.indexOf(v.comparisonoperator)
                          , P = v.filtervalue;
                        m.val(P),
                        p.jqxDropDownList({
                            selectedIndex: D,
                            animationType: T
                        })
                    }
                    null == y.getoperatorat(0) ? u.jqxDropDownList({
                        selectedIndex: 0,
                        animationType: T
                    }) : "and" == y.getoperatorat(0) || 0 == y.getoperatorat(0) ? u.jqxDropDownList({
                        selectedIndex: 0
                    }) : u.jqxDropDownList({
                        selectedIndex: 1
                    })
                }
                e.updatefilterpanel && e.updatefilterpanel(c, p, u, f, m, h, d, y, q, j),
                (!this._hasdatefilter || this._hasdatefilter && "date" != r.filtertype) && (this.touchdevice || (f.focus(),
                setTimeout(function() {
                    f.focus()
                }, 10)))
            } else if ("excel" === this.filtermode || "list" === r.filtertype || "checkedlist" === r.filtertype) {
                var B = e._getfilterdataadapter(r)
                  , M = (q = e._getfiltertype(s),
                "excel" === this.filtermode || "checkedlist" === r.filtertype);
                if ("date" == r.filtertype && e._showwhere.text(e.gridlocalization.filtershowrowstring),
                c.jqxListBox("focus"),
                this.removeHandler(c, "keyup"),
                this.addHandler(c, "keyup", function(t) {
                    13 === t.keyCode && h.trigger("click"),
                    27 === t.keyCode && e._closemenu()
                }),
                r.cellsformat ? c.jqxListBox({
                    checkboxes: M,
                    displayMember: r.displayfield,
                    valueMember: r.displayfield + "JQValue",
                    source: B
                }) : c.jqxListBox({
                    checkboxes: M,
                    displayMember: r.displayfield,
                    valueMember: r.displayfield,
                    source: B
                }),
                M) {
                    if (c.jqxListBox("insertAt", e.gridlocalization.filterselectallstring, 0),
                    (L = c.data().jqxListBox.instance).checkAll(!1),
                    r.filter) {
                        L.uncheckAll(!1);
                        for (var H = r.filter.getfilters(), O = 0; O < L.items.length; O++) {
                            var z = L.items[O].value;
                            i.each(H, function() {
                                if ("NOT_EQUAL" == this.condition) {
                                    if (z != this.value)
                                        return L.uncheckIndex(O, !1, !1),
                                        !1;
                                    if (null != z && null != this.value && z.toString() != this.value.toString())
                                        return L.uncheckIndex(O, !1, !1),
                                        !1
                                } else if ("EQUAL" == this.condition) {
                                    if (z == this.value)
                                        return L.checkIndex(O, !1, !1),
                                        !1;
                                    if (null != z && null != this.value && z.toString() == this.value.toString())
                                        return L.checkIndex(O, !1, !1),
                                        !1
                                }
                            })
                        }
                        L._updateCheckedItems();
                        var A = L.getCheckedItems().length;
                        L.items.length != A && A > 0 && L.host.jqxListBox("indeterminateIndex", 0, !0, !1),
                        A === L.items.length - 1 && L.host.jqxListBox("checkIndex", 0, !0, !1)
                    }
                } else if (r.filter) {
                    var L;
                    for ((L = c.data().jqxListBox.instance).clearSelection(),
                    H = r.filter.getfilters(),
                    O = 0; O < L.items.length; O++)
                        z = L.items[O].value,
                        i.each(H, function() {
                            if ("NOT_EQUAL" == this.condition) {
                                if (z != this.value)
                                    return L.unselectIndex(O, !1, !1),
                                    !1
                            } else if ("EQUAL" == this.condition && z == this.value)
                                return L.selectIndex(O, !0, !1),
                                !1
                        });
                    L._renderItems()
                }
            }
        },
        _initfilterpanel: function(e, t, r, s, n) {
            null != e && null != e || (e = this),
            t[0].innerHTML = "";
            var o = i("<div class='filter' style='position: absolute; bottom: 3px; margin-left: 3px;'></div>");
            t.append(o);
            var a = i("<div class='filter showwhere' style='height: 18px; margin-top: 3px; margin-bottom: 3px;'></div>");
            a.text(e.gridlocalization.filtershowrowstring),
            this._showwhere = a;
            var l = n ? "ex" : ""
              , d = i("<div class='filter filter1' id='filter1" + e.element.id + l + "'></div>")
              , h = i("<div class='filter filter2' id='filter2" + e.element.id + l + "' style='margin-top: 3px; margin-bottom: 3px;'></div>")
              , c = i("<div class='filter filter3' id='filter3" + e.element.id + l + "'></div>")
              , u = e._getcolumntypebydatafield(r);
            if (!d.jqxDropDownList)
                throw new Error("jqxGrid: jqxdropdownlist.js is not loaded.");
            var p = e._getfiltersbytype(u);
            if (this._hasdatefilter = !1,
            this._filterpanelwidth = s,
            this.columns && this.columns.records) {
                for (var f = 0; f < this.columns.records.length; f++)
                    if ("date" == this.columns.records[f].filtertype) {
                        this._hasdatefilter = !0;
                        break
                    }
            } else if (this.columns && !this.columns.records)
                for (f = 0; f < this.columns.length; f++)
                    if ("date" == this.columns[f].filtertype) {
                        this._hasdatefilter = !0;
                        break
                    }
            var m = i("<div style='margin-top:3px;' class='filter'><input class='filtertext1" + e.element.id + "' style='padding: 3px; height: 17px; margin-top: 3px; margin-bottom: 3px;' type='text'></input></div>")
              , g = m.find("input");
            g.addClass(this.toThemeProperty("jqx-input")),
            g.addClass(this.toThemeProperty("jqx-filter-input jqx-widget-content")),
            g.addClass(this.toThemeProperty("jqx-rc-all")),
            g.width(s - 18);
            var v = i("<div style='margin-top:3px;' class='filter'><input class='filtertext2" + e.element.id + "' style='padding: 3px; height: 17px; margin-top: 3px;' type='text'></input></div>")
              , w = v.find("input");
            w.addClass(this.toThemeProperty("jqx-input")),
            w.addClass(this.toThemeProperty("jqx-filter-input jqx-widget-content")),
            w.addClass(this.toThemeProperty("jqx-rc-all")),
            w.width(s - 18),
            e.rtl && (g.css("direction", "rtl"),
            w.css("direction", "rtl"));
            var x = i("<div class='filter' style='height: 25px; text-align:center; margin-top: 12px; margin-left:-2px;'></div>")
              , b = i('<span tabIndex=0 id="filterbutton' + e.element.id + '" class="filterbutton" style="padding: 4px 12px;">' + e.gridlocalization.filterstring + "</span>");
            x.append(b);
            var y = i('<span tabIndex=0 id="filterclearbutton' + e.element.id + '" class="filterclearbutton" style="position: relative; left: 1px; padding: 4px 12px; margin-left: 7px;">' + e.gridlocalization.filterclearstring + "</span>");
            x.append(y),
            b.jqxButton({
                height: 20,
                theme: e.theme
            }),
            y.jqxButton({
                height: 20,
                theme: e.theme
            });
            var _ = function(t) {
                if (t) {
                    if (-1 != t.text().indexOf("case sensitive")) {
                        var i = t.text();
                        i = i.replace("case sensitive", "match case"),
                        t.text(i)
                    }
                    return t.css("font-family", e.host.css("font-family")),
                    t.css("font-size", e.host.css("font-size")),
                    t.css("top", "2px"),
                    t.css("position", "relative"),
                    t
                }
                return ""
            };
            if ("default" !== this.filtermode || n) {
                if ("excel" === this.filtermode || n) {
                    o.append(a),
                    o.append(d),
                    d.attr("tabindex", 0),
                    d.jqxListBox({
                        rtl: e.rtl,
                        _checkForHiddenParent: !1,
                        checkboxes: !0,
                        selectedIndex: 2,
                        width: s - 10,
                        height: 130,
                        theme: e.theme
                    });
                    var q = !0;
                    e.addHandler(d, "checkChange", function(t) {
                        if (q)
                            if (t.args.label != e.gridlocalization.filterselectallstring) {
                                q = !1,
                                d.jqxListBox("checkIndex", 0, !0, !1);
                                var i = d.jqxListBox("getCheckedItems")
                                  , r = d.jqxListBox("getItems");
                                1 == i.length ? d.jqxListBox("uncheckIndex", 0, !0, !1) : r.length != i.length && d.jqxListBox("indeterminateIndex", 0, !0, !1),
                                q = !0
                            } else
                                q = !1,
                                t.args.checked ? d.jqxListBox("checkAll", !1) : d.jqxListBox("uncheckAll", !1),
                                q = !0
                    })
                }
            } else {
                o.append(a),
                o.append(d),
                d.jqxDropDownList({
                    _checkForHiddenParent: !1,
                    autoItemsHeight: !0,
                    rtl: e.rtl,
                    enableBrowserBoundsDetection: !1,
                    selectedIndex: 2,
                    width: s - 10,
                    height: 24,
                    dropDownHeight: 150,
                    dropDownWidth: s - 10,
                    selectionRenderer: _,
                    source: p,
                    theme: e.theme
                }),
                o.append(m);
                var j = new Array;
                j[0] = e.gridlocalization.filterandconditionstring,
                j[1] = e.gridlocalization.filterorconditionstring,
                h.jqxDropDownList({
                    _checkForHiddenParent: !1,
                    rtl: e.rtl,
                    enableBrowserBoundsDetection: !1,
                    autoDropDownHeight: !0,
                    selectedIndex: 0,
                    width: 60,
                    height: 24,
                    source: j,
                    selectionRenderer: _,
                    theme: e.theme
                }),
                o.append(h),
                c.jqxDropDownList({
                    _checkForHiddenParent: !1,
                    autoItemsHeight: !0,
                    rtl: e.rtl,
                    enableBrowserBoundsDetection: !1,
                    selectedIndex: 2,
                    width: s - 10,
                    height: 24,
                    dropDownHeight: 150,
                    dropDownWidth: s - 10,
                    selectionRenderer: _,
                    source: p,
                    theme: e.theme
                }),
                o.append(c),
                o.append(v)
            }
            o.append(x),
            e.updatefilterpanel && e.updatefilterpanel(d, c, h, m, v, b, y, null, null, p)
        }
    }),
    function(e) {
        e.extend(e.jqx._jqxGrid.prototype, {
            _updatefilterrowui: function(t) {
                var i = this.columns.records.length
                  , r = 0
                  , s = this;
                if (this.filterrow) {
                    for (var n = 0; n < i; n++) {
                        var o = this.columns.records[n]
                          , a = parseInt(o.width);
                        a < o.minwidth && (a = o.minwidth),
                        a > o.maxwidth && (a = o.maxwidth);
                        var l = e(this.filterrow[0].cells[n]);
                        l.css("left", r);
                        var d = !0;
                        if (l.width() == a && (d = !1),
                        t && (d = !0),
                        l.width(a),
                        l[0].left = r,
                        o.element && (l[0].style.width = o.element.style.width,
                        l[0].style.left = o.element.style.left),
                        o.hidden && o.hideable ? l.css("display", "none") : r += a,
                        d)
                            if (o.createfilterwidget && "custom" == o.filtertype)
                                o.createfilterwidget(o, l);
                            else if (o.filterable) {
                                var h = function(t, i) {
                                    var r = e(i.children()[0]);
                                    r[0].style.width = a - 8 + "px",
                                    e.jqx.browser.msie && (r[0].style.width = a - 16 + "px"),
                                    r.attr("disabled", t.disabled)
                                };
                                switch (o.filtertype) {
                                case "number":
                                case "input":
                                    e(l.children()[0]).width(a),
                                    l.find("input")[0].style.width = a - 30 + "px",
                                    e.jqx.browser.msie && (l.find("input")[0].style.width = a - 36 + "px"),
                                    l.find("input").attr("disabled", s.disabled),
                                    e(l.find(".jqx-dropdownlist-state-normal")).jqxDropDownList({
                                        theme: s.theme,
                                        disabled: s.disabled
                                    });
                                    break;
                                case "date":
                                case "range":
                                    this.host.jqxDateTimeInput ? e(l.children()[0]).jqxDateTimeInput({
                                        theme: s.theme,
                                        disabled: s.disabled,
                                        width: a - 10
                                    }) : h(this, l);
                                    break;
                                case "textbox":
                                case "default":
                                    h(this, l);
                                    break;
                                case "list":
                                case "checkedlist":
                                    this.host.jqxDropDownList ? e(l.children()[0]).jqxDropDownList({
                                        theme: s.theme,
                                        disabled: s.disabled,
                                        width: a - 10
                                    }) : h(this, l);
                                    break;
                                case "bool":
                                case "boolean":
                                    this.host.jqxCheckBox ? e(l.children()[0]).jqxCheckBox({
                                        theme: s.theme,
                                        disabled: s.disabled
                                    }) : h(this, l)
                                }
                            }
                    }
                    var c = e(this.filterrow.children()[0]);
                    c.width(parseInt(r) + 2),
                    c.height(this.filterrowheight)
                }
            },
            clearfilterrow: function(t) {
                if (this._disablefilterrow = !0,
                this.columns.records) {
                    for (var i = this.columns.records.length, r = 0; r < i; r++) {
                        var s = this.columns.records[r]
                          , n = e(this.filterrow[0].cells[r]);
                        if (("string" != typeof t || s.displayfield == t) && s.filterable) {
                            var o = function(t, i) {
                                var r = e(i.children()[0]);
                                r.val(""),
                                r[0] && (t["_oldWriteText" + r[0].id] = "")
                            };
                            switch (s.filtertype) {
                            case "number":
                            case "input":
                                if (n.find("input").val(""),
                                this.host.jqxDropDownList) {
                                    var a = e(e(e(n).children()[0]).children()[1]);
                                    a.jqxDropDownList("clearSelection");
                                    var l = 0;
                                    if (0 == l) {
                                        this._getfiltersbytype("number" == s.filtertype ? "number" : "string");
                                        var d = (new e.jqx.filter).getoperatorsbyfiltertype("number" == s.filtertype ? "numberfilter" : "stringfilter");
                                        null != s.filtercondition ? -1 == (l = d.indexOf(s.filtercondition.toUpperCase())) && (l = "number" == s.filtertype ? 0 : 2) : l = "number" == s.filtertype ? 0 : 2
                                    }
                                    a.jqxDropDownList({
                                        selectedIndex: l
                                    }),
                                    a.jqxDropDownList("ensureVisible", l)
                                }
                                break;
                            case "date":
                            case "range":
                                this.host.jqxDateTimeInput ? e(n.children()[0]).jqxDateTimeInput("setDate", null) : o(this, n);
                                break;
                            case "textbox":
                            case "default":
                                o(this, n);
                                break;
                            case "list":
                                this.host.jqxDropDownList ? e(n.children()[0]).jqxDropDownList("clearSelection") : o(this, n);
                                break;
                            case "checkedlist":
                                this.host.jqxDropDownList ? e(n.children()[0]).jqxDropDownList("checkAll", !1) : o(this, n);
                                break;
                            case "bool":
                            case "boolean":
                                this.host.jqxCheckBox ? e(n.children()[0]).jqxCheckBox({
                                    checked: null
                                }) : o(this, n)
                            }
                        }
                    }
                    this._disablefilterrow = !1
                }
            },
            _applyfilterfromfilterrow: function() {
                if (1 != this._disablefilterrow && !this.disabled) {
                    for (var t = this.columns.records.length, i = this.that, r = 0; r < t; r++) {
                        var s = new e.jqx.filter
                          , n = this.columns.records[r];
                        if (n.filterable && null !== n.datafield) {
                            var o = i._getcolumntypebydatafield(n)
                              , a = i._getfiltertype(o)
                              , l = !0
                              , d = (n.filtertype,
                            function(e, t, r) {
                                var s = !0;
                                if (e._filterwidget) {
                                    var n = e._filterwidget.val();
                                    if ("" != n) {
                                        var o = "equal";
                                        if ("stringfilter" == t)
                                            o = "contains";
                                        if ("numericfilter" == t && "," == i.gridlocalization.decimalseparator && n.indexOf(i.gridlocalization.decimalseparator) >= 0 && (n = n.replace(i.gridlocalization.decimalseparator, ".")),
                                        "stringfilter" != t) {
                                            var a = 0;
                                            if (-1 != n.indexOf(">") && (o = "greater_than",
                                            a = 1),
                                            -1 != n.indexOf("<") && (o = "less_than",
                                            a = 1),
                                            -1 != n.indexOf("=") && ("greater_than" == o ? (o = "greater_than_or_equal",
                                            a = 2) : "less_than" == o ? (o = "less_than_or_equal",
                                            a = 2) : (o = "equal",
                                            a = 1)),
                                            0 != a && (n = n.substring(a)).length < 1)
                                                return !1
                                        }
                                        if (null != e.filtercondition && (o = e.filtercondition),
                                        "datefilter" == t)
                                            var l = r.createfilter(t, n, o, null, e.cellsformat, i.gridlocalization);
                                        else
                                            l = r.createfilter(t, n, o);
                                        r.addfilter(1, l)
                                    } else
                                        s = !1
                                }
                                return s
                            }
                            );
                            switch (n.filtertype) {
                            case "range":
                            case "date":
                                if (n._filterwidget.jqxDateTimeInput)
                                    if ("range" == n.filtertype)
                                        if (null != (g = n._filterwidget.jqxDateTimeInput("getRange")) && null != g.from && null != g.to) {
                                            var h = "GREATER_THAN_OR_EQUAL";
                                            (f = new Date(0)).setHours(0),
                                            f.setMinutes(0),
                                            f.setFullYear(g.from.getFullYear(), g.from.getMonth(), g.from.getDate());
                                            var c = new Date(0);
                                            c.setHours(0),
                                            c.setMinutes(0),
                                            c.setFullYear(g.to.getFullYear(), g.to.getMonth(), g.to.getDate()),
                                            c.setHours(g.to.getHours()),
                                            c.setMinutes(g.to.getMinutes()),
                                            c.setSeconds(g.to.getSeconds());
                                            var u = s.createfilter(a, f, h);
                                            s.addfilter(0, u);
                                            var p = s.createfilter(a, c, "LESS_THAN_OR_EQUAL");
                                            s.addfilter(0, p)
                                        } else
                                            l = !1;
                                    else if (null != (g = n._filterwidget.jqxDateTimeInput("getDate"))) {
                                        var f;
                                        (f = new Date(0)).setHours(0),
                                        f.setMinutes(0),
                                        f.setFullYear(g.getFullYear(), g.getMonth(), g.getDate());
                                        var m = n._filterwidget.jqxDateTimeInput("showTimeButton");
                                        m && (f.setHours(g.getHours()),
                                        f.setMinutes(g.getMinutes()));
                                        h = "EQUAL";
                                        null != n.filtercondition && (h = n.filtercondition);
                                        u = s.createfilter(a, f, h);
                                        m && (u = s.createfilter(a, f, h, null, n.cellsformat)),
                                        s.addfilter(0, u)
                                    } else
                                        l = !1;
                                else
                                    l = d(n, a, s);
                                break;
                            case "input":
                                if (n._filterwidget) {
                                    var g = n._filterwidget.find("input").val()
                                      , v = n._filterwidget.find(".filter").jqxDropDownList("selectedIndex")
                                      , w = s.getoperatorsbyfiltertype(a)[v];
                                    if (i.updatefilterconditions) {
                                        null != (y = i.updatefilterconditions(a, s.getoperatorsbyfiltertype(a))) && s.setoperatorsbyfiltertype(a, y);
                                        w = s.getoperatorsbyfiltertype(a)[v]
                                    }
                                    var x = "NULL" == w || "NOT_NULL" == w
                                      , b = "EMPTY" == w || "NOT_EMPTY" == w;
                                    null != g && g.length > 0 || x || b ? (u = s.createfilter(a, g, w, null, n.cellsformat, i.gridlocalization),
                                    s.addfilter(0, u)) : l = !1
                                } else
                                    l = !1;
                                break;
                            case "number":
                                if (n._filterwidget) {
                                    g = n._filterwidget.find("input").val();
                                    "," == i.gridlocalization.decimalseparator && g.indexOf(i.gridlocalization.decimalseparator) >= 0 && (g = g.replace(i.gridlocalization.decimalseparator, "."));
                                    v = n._filterwidget.find(".filter").jqxDropDownList("selectedIndex"),
                                    w = s.getoperatorsbyfiltertype(a)[v];
                                    if (i.updatefilterconditions) {
                                        var y;
                                        null != (y = i.updatefilterconditions(a, s.getoperatorsbyfiltertype(a))) && s.setoperatorsbyfiltertype(a, y);
                                        w = s.getoperatorsbyfiltertype(a)[v]
                                    }
                                    x = "NULL" == w || "NOT_NULL" == w,
                                    b = "EMPTY" == w || "NOT_EMPTY" == w;
                                    null != g && g.length > 0 || x || b ? (u = s.createfilter(a, new Number(g), w, null, n.cellsformat, i.gridlocalization),
                                    s.addfilter(0, u)) : l = !1
                                } else
                                    l = !1;
                                break;
                            case "textbox":
                            case "default":
                                l = d(n, a, s);
                                break;
                            case "bool":
                            case "boolean":
                                if (n._filterwidget.jqxCheckBox)
                                    if (null != (g = n._filterwidget.jqxCheckBox("checked"))) {
                                        h = "equal";
                                        var _ = s.createfilter(a, g, h);
                                        s.addfilter(1, _)
                                    } else
                                        l = !1;
                                else
                                    l = d(n, a, s);
                                break;
                            case "list":
                                if ((S = n._filterwidget.jqxDropDownList("listBox")).selectedIndex > 0) {
                                    var q = S.getItem(S.selectedIndex)
                                      , j = (g = q.label,
                                    q.value);
                                    h = "equal";
                                    "" === g && (h = "NULL");
                                    _ = s.createfilter(a, g, h);
                                    s.addfilter(1, _),
                                    j !== g && (_.data = j)
                                } else
                                    l = !1;
                                break;
                            case "checkedlist":
                                if (n._filterwidget.jqxDropDownList) {
                                    var S, C = (S = n._filterwidget.jqxDropDownList("listBox")).getCheckedItems();
                                    if (0 == C.length) {
                                        for (var T = 1; T < S.items.length; T++) {
                                            g = S.items[T].label,
                                            j = S.items[T].value,
                                            h = "not_equal";
                                            "" === g && (h = "NULL");
                                            _ = s.createfilter(a, g, h);
                                            j !== g && (_.data = j),
                                            s.addfilter(0, _)
                                        }
                                        l = !0
                                    } else if (C.length != S.items.length)
                                        for (T = 0; T < C.length; T++) {
                                            g = C[T].label,
                                            j = C[T].value,
                                            h = "equal";
                                            "" === g && (h = "NULL");
                                            _ = s.createfilter(a, g, h);
                                            j !== g && (_.data = j),
                                            s.addfilter(1, _)
                                        }
                                    else
                                        l = !1
                                } else
                                    l = d(n, a, s)
                            }
                            this._loading || (l ? this.addfilter(n.displayfield, s, !1) : this.removefilter(n.displayfield, !1))
                        }
                    }
                    this._loading || this.applyfilters("filterrow")
                }
            },
            _updatefilterrow: function() {
                var t = e('<div style="position: relative;" id="row00' + this.element.id + '"></div>')
                  , i = 0
                  , r = this.columns.records.length
                  , s = this.toThemeProperty("jqx-grid-cell");
                s += " " + this.toThemeProperty("jqx-grid-cell-pinned"),
                s += " " + this.toThemeProperty("jqx-grid-cell-filter-row");
                var n = r + 10
                  , o = new Array
                  , a = this.that;
                this.filterrow[0].cells = o,
                t.height(this.filterrowheight),
                this.filterrow.children().detach(),
                this.filterrow.append(t),
                this._filterrowcache || (this._filterrowcache = new Array),
                this._initcolumntypes();
                for (var l = !1, d = new Array, h = document.createDocumentFragment(), c = 0; c < r; c++) {
                    var u = this.columns.records[c]
                      , p = u.width;
                    p < u.minwidth && (p = u.minwidth),
                    p > u.maxwidth && (p = u.maxwidth);
                    var f = document.createElement("div");
                    f.style.overflow = "hidden",
                    f.style.position = "absolute",
                    f.style.height = "100%",
                    f.className = s,
                    f = e(f),
                    h.appendChild(f[0]),
                    f[0].style.left = i + "px",
                    this.rtl ? (f.css("z-index", n++),
                    f.css("border-left-width", "1px")) : f.css("z-index", n--),
                    "auto" == p && (p = 0),
                    f[0].style.width = parseFloat(p) + "px",
                    f[0].left = i,
                    u.hidden && u.hideable ? f.css("display", "none") : i += p,
                    o[o.length] = f[0];
                    var m = !0;
                    if (this.rtl) {
                        if (this.groupable) {
                            g = this.showrowdetailscolumn && this.rowdetails ? 1 : 0;
                            this.groups.length + g + c > r - 1 && (m = !1)
                        }
                        this.showrowdetailscolumn && this.rowdetails && c == r - 1 && (m = !1)
                    } else {
                        if (this.groupable) {
                            var g = this.showrowdetailscolumn && this.rowdetails ? 1 : 0;
                            this.groups.length + g > c && (m = !1)
                        }
                        this.showrowdetailscolumn && this.rowdetails && 0 == c && (m = !1)
                    }
                    if (m)
                        if ("custom" == u.filtertype && u.createfilterwidget) {
                            u.createfilterwidget(u, f, function() {
                                a._applyfilterfromfilterrow()
                            })
                        } else
                            u.filterable && (this._filterrowcache[u.datafield] ? (l = !0,
                            f.append(this._filterrowcache[u.datafield]),
                            u._filterwidget = this._filterrowcache[u.datafield]) : (this._addfilterwidget(u, f, p),
                            d[u.datafield] = u._filterwidget))
                }
                t[0].appendChild(h),
                this._filterrowcache = d,
                e.jqx.browser.msie && e.jqx.browser.version < 8 && t.css("z-index", n--),
                t.width(parseFloat(i) + 2),
                this.filterrow.addClass(s),
                this.filterrow.css("border-top-width", "1px"),
                this.filterrow.css("border-right-width", "0px"),
                l && this._updatefilterrowui(!0)
            },
            _addfilterwidget: function(t, i, r) {
                for (var s = this.that, n = "", o = "", a = 0; a < s.dataview.filters.length; a++) {
                    var l = s.dataview.filters[a];
                    if (l.datafield && l.datafield == t.datafield) {
                        a = l.filter.getfilters()[0];
                        n = a.value,
                        "range" === t.filtertype && (n = {
                            from: n,
                            to: l.filter.getfilters()[1].value
                        }),
                        o = a.condition,
                        t.filtercondition = o;
                        break
                    }
                }
                var d, h, c, u = function(i, s) {
                    var o = e('<input autocomplete="off" type="textarea"/>');
                    o.attr("tabindex", 5 + t.visibleindex),
                    o[0].id = e.jqx.utilities.createId(),
                    o.addClass(i.toThemeProperty("jqx-widget")),
                    o.addClass(i.toThemeProperty("jqx-filter-input jqx-input jqx-input-widget")),
                    o.addClass(i.toThemeProperty("jqx-rc-all")),
                    o.addClass(i.toThemeProperty("jqx-widget-content")),
                    i.rtl && o.css("direction", "rtl"),
                    i.disabled && o.attr("disabled", !0),
                    o.attr("disabled", !1),
                    o.appendTo(s),
                    o.css("margin", "4px"),
                    o.width(r - 8),
                    o.height(i.filterrowheight - 9),
                    t.createfilterwidget && t.createfilterwidget(t, s, o),
                    t._filterwidget = o,
                    o.focus(function() {
                        return i.content[0].scrollLeft = 0,
                        setTimeout(function() {
                            i.content[0].scrollLeft = 0
                        }, 10),
                        i.focusedfilter = o,
                        o.addClass(i.toThemeProperty("jqx-fill-state-focus")),
                        !1
                    }),
                    o.blur(function() {
                        o.removeClass(i.toThemeProperty("jqx-fill-state-focus"))
                    }),
                    o.keydown(function(e) {
                        "13" == e.keyCode && i._applyfilterfromfilterrow(),
                        o[0]._writeTimer && clearTimeout(o[0]._writeTimer),
                        o[0]._writeTimer = setTimeout(function() {
                            i._loading || (i["_oldWriteText" + o[0].id] || (i["_oldWriteText" + o[0].id] = ""),
                            i["_oldWriteText" + o[0].id].length > 0 && i["_oldWriteText" + o[0].id] != o.val() ? (i._applyfilterfromfilterrow(),
                            i["_oldWriteText" + o[0].id] = o.val()) : 0 == i["_oldWriteText" + o[0].id].length && (i._applyfilterfromfilterrow(),
                            i["_oldWriteText" + o[0].id] = o.val()))
                        }, t.filterdelay),
                        i.focusedfilter = o
                    }),
                    i.host.removeClass("jqx-disableselect"),
                    i.content.removeClass("jqx-disableselect"),
                    o.val(n)
                };
                switch (null != t.datatype && ("number" == t.filtertype && ("string" != t.datatype && "date" != t.datatype && "bool" != t.datatype || (t.filtertype = "textbox")),
                "date" == t.filtertype && ("string" != t.datatype && "number" != t.datatype && "bool" != t.datatype || (t.filtertype = "textbox")),
                "bool" == t.filtertype && ("string" != t.datatype && "number" != t.datatype && "date" != t.datatype || (t.filtertype = "textbox"))),
                t.filtertype) {
                case "number":
                case "input":
                    var p = e("<div></div>");
                    p.width(i.width()),
                    p.height(this.filterrowheight),
                    i.append(p);
                    r = i.width() - 21;
                    d = p,
                    h = r,
                    c = e('<input style="float: left;" autocomplete="off" type="textarea"/>'),
                    s.rtl && (c.css("float", "right"),
                    c.css("direction", "rtl")),
                    c.attr("tabindex", 5 + t.visibleindex),
                    c[0].id = e.jqx.utilities.createId(),
                    c.addClass(s.toThemeProperty("jqx-widget jqx-input jqx-rc-all jqx-input-widget jqx-filter-input jqx-widget-content")),
                    c.appendTo(d),
                    c.width(h - 10),
                    s.disabled && c.attr("disabled", !0),
                    c.attr("disabled", !1),
                    c[0].style.height = s.filterrowheight - 9 + "px",
                    c.css("margin", "4px"),
                    c.css("margin-right", "3px"),
                    c.focus(function() {
                        s.focusedfilter = c,
                        c.addClass(s.toThemeProperty("jqx-fill-state-focus"))
                    }),
                    c.blur(function() {
                        c.removeClass(s.toThemeProperty("jqx-fill-state-focus"))
                    }),
                    c.keydown(function(e) {
                        "13" == e.keyCode && s._applyfilterfromfilterrow(),
                        "9" != e.keyCode && (c[0]._writeTimer && clearTimeout(c[0]._writeTimer),
                        c[0]._writeTimer = setTimeout(function() {
                            s._loading || s["_oldWriteText" + c[0].id] != c.val() && (s._applyfilterfromfilterrow(),
                            s["_oldWriteText" + c[0].id] = c.val())
                        }, t.filterdelay),
                        s.focusedfilter = c)
                    }),
                    c.val(n);
                    var f = s._getfiltersbytype("number" == t.filtertype ? "number" : "string");
                    (_ = e("<div class='filter' style='float: left;'></div>")).css("margin-top", "4px"),
                    _.appendTo(p),
                    s.rtl && _.css("float", "right");
                    var m = 0;
                    if (null != t.filtercondition)
                        -1 != (g = (a = new e.jqx.filter).getoperatorsbyfiltertype("number" == t.filtertype ? "numericfilter" : "stringfilter").indexOf(t.filtercondition.toUpperCase())) && (m = g);
                    var g, v = 180;
                    if ("input" == t.filtertype)
                        if (v = 240,
                        0 == m)
                            -1 != (g = f.indexOf("contains") || 2) && null == t.filtercondition && (m = g);
                    _.jqxDropDownList({
                        disabled: s.disabled,
                        touchMode: s.touchmode,
                        rtl: s.rtl,
                        dropDownHorizontalAlignment: "right",
                        enableBrowserBoundsDetection: !0,
                        selectedIndex: m,
                        width: 20,
                        height: 27,
                        dropDownHeight: 150,
                        dropDownWidth: v,
                        source: f,
                        theme: s.theme
                    }),
                    _.jqxDropDownList({
                        selectionRenderer: function(e) {
                            return ""
                        }
                    }),
                    _.attr("tabindex", 5 + t.visibleindex),
                    _.jqxDropDownList("setContent", ""),
                    _.find(".jqx-dropdownlist-content").hide(),
                    t.createfilterwidget && t.createfilterwidget(t, i, p),
                    t._filterwidget = p;
                    var w = null;
                    this.addHandler(_, "select", function() {
                        var e = _.jqxDropDownList("getSelectedItem").label;
                        t._filterwidget.find("input").val().length > 0 && !s.refreshingfilter && s._applyfilterfromfilterrow(),
                        ("input" != t.filtertype || s.refreshingfilter) && (0 != t._filterwidget.find("input").val().length || s.refreshingfilter || "null" != w && "not null" != w && "null" != e && "not null" != e) || s._applyfilterfromfilterrow(),
                        w = e
                    });
                    break;
                case "textbox":
                case "default":
                default:
                    u(this, i);
                    break;
                case "none":
                    break;
                case "date":
                case "range":
                    if (this.host.jqxDateTimeInput) {
                        var x = e("<div></div>");
                        x.css("margin", "4px"),
                        x.css("margin-left", "5px"),
                        x.appendTo(i);
                        var b = {
                            calendar: this.gridlocalization,
                            todayString: this.gridlocalization.todaystring,
                            clearString: this.gridlocalization.clearstring
                        };
                        x.jqxDateTimeInput({
                            firstDayOfWeek: this.gridlocalization.firstDay,
                            readonly: !0,
                            disabled: s.disabled,
                            localization: b,
                            rtl: s.rtl,
                            showFooter: !0,
                            formatString: t.cellsformat,
                            selectionMode: t.filtertype,
                            value: null,
                            theme: this.theme,
                            width: r - 9,
                            height: this.filterrowheight - 9
                        }),
                        t.createfilterwidget && t.createfilterwidget(t, i, x),
                        n && n.from ? x.jqxDateTimeInput("setRange", n.from, n.to) : n && n.toString().length > 1 && x.val(n),
                        x.find("input").attr("tabindex", 5 + t.visibleindex),
                        t._filterwidget = x,
                        this.addHandler(x, "valueChanged", function(e) {
                            s.refreshingfilter || (s._applyfilterfromfilterrow(),
                            s.focusedfilter = null)
                        })
                    } else
                        u(this, i);
                    break;
                case "list":
                case "checkedlist":
                    if (this.host.jqxDropDownList) {
                        var y, _, q = this._getfilterdataadapter(t);
                        (_ = e("<div></div>")).css("margin", "4px"),
                        _.css("margin-left", "5px");
                        var j = t.datafield
                          , S = "checkedlist" == t.filtertype;
                        v = r < 150 ? 220 : "auto";
                        q.dataBind();
                        var C = q.records.length < 8;
                        y = C,
                        _.appendTo(i),
                        _.jqxDropDownList({
                            hint: !1,
                            placeHolder: s.gridlocalization.filterchoosestring,
                            disabled: s.disabled,
                            touchMode: s.touchmode,
                            rtl: s.rtl,
                            checkboxes: S,
                            dropDownWidth: v,
                            source: q.records,
                            autoDropDownHeight: C,
                            theme: this.theme,
                            width: r - 9,
                            height: this.filterrowheight - 9,
                            displayMember: t.displayfield,
                            valueMember: j
                        }),
                        _.attr("tabindex", 5 + t.visibleindex),
                        _.attr("default-placeholder", !0),
                        t.createfilterwidget && t.createfilterwidget(t, i, _);
                        var T = _.jqxDropDownList("listBox");
                        if (S) {
                            _.jqxDropDownList({
                                selectionRenderer: function() {
                                    return '<span class="' + s.toThemeProperty("jqx-item") + '" style="top: 4px; position: relative; color: inherit; border: none; background-color: transparent;">' + s.gridlocalization.filterselectstring + "</span>"
                                }
                            });
                            var I = e('<span style="top: 2px; position: relative; color: inherit; border: none; background-color: transparent;">' + s.gridlocalization.filterselectstring + "</span>");
                            if (I.addClass(this.toThemeProperty("jqx-item")),
                            null != T) {
                                y || T.host.height(200),
                                T.insertAt(s.gridlocalization.filterselectallstring, 0),
                                _.jqxDropDownList("setContent", I);
                                var k = !0;
                                new Array;
                                T.checkAll(!1),
                                s.addHandler(T.host, "checkChange", function(e) {
                                    if (_[0]._selectionChanged = !0,
                                    k)
                                        if (e.args.label != s.gridlocalization.filterselectallstring) {
                                            k = !1,
                                            T.host.jqxListBox("checkIndex", 0, !0, !1);
                                            var t = T.host.jqxListBox("getCheckedItems")
                                              , i = T.host.jqxListBox("getItems");
                                            1 == t.length ? T.host.jqxListBox("uncheckIndex", 0, !0, !1) : i.length != t.length && T.host.jqxListBox("indeterminateIndex", 0, !0, !1),
                                            k = !0
                                        } else
                                            k = !1,
                                            e.args.checked ? T.host.jqxListBox("checkAll", !1) : T.host.jqxListBox("uncheckAll", !1),
                                            k = !0
                                })
                            }
                        } else
                            T.insertAt({
                                label: this.gridlocalization.filterchoosestring,
                                value: ""
                            }, 0),
                            _.jqxDropDownList({
                                selectedIndex: 0
                            });
                        t._filterwidget = _;
                        _.jqxDropDownList("dropdownlistWrapper");
                        "list" == t.filtertype ? this.addHandler(_, "select", function(e) {
                            s.refreshingfilter || e.args && "none" != e.args.type && (s._applyfilterfromfilterrow(),
                            s.focusedfilter = null)
                        }) : this.addHandler(_, "close", function(e) {
                            _[0]._selectionChanged && (s._applyfilterfromfilterrow(),
                            s.focusedfilter = null,
                            _[0]._selectionChanged = !1)
                        })
                    } else
                        u(this, i);
                    break;
                case "bool":
                case "boolean":
                    if (this.host.jqxCheckBox) {
                        var D = e('<div tabIndex=0 style="opacity: 0.99; position: absolute; top: 50%; left: 50%; margin-top: -9px; margin-left: -12px;"></div>');
                        D.appendTo(i),
                        D.jqxCheckBox({
                            disabled: s.disabled,
                            enableContainerClick: !1,
                            animationShowDelay: 0,
                            animationHideDelay: 0,
                            hasThreeStates: !0,
                            theme: this.theme,
                            checked: null
                        }),
                        D.attr("tabindex", 5 + t.visibleindex),
                        t.createfilterwidget && t.createfilterwidget(t, i, D),
                        !0 === n || "true" == n ? D.jqxCheckBox({
                            checked: !0
                        }) : !1 !== n && "false" != n || D.jqxCheckBox({
                            checked: !1
                        }),
                        t._filterwidget = D,
                        this.addHandler(D, "change", function(e) {
                            s.refreshingfilter || e.args && (s.focusedfilter = null,
                            s._applyfilterfromfilterrow())
                        })
                    } else
                        u(this, i)
                }
            },
            _getfilterdataadapter: function(t) {
                if (!!this.source._source) {
                    var i = {
                        localdata: e.extend(!0, {}, this.source.records),
                        datatype: this.source.datatype,
                        async: !1
                    }
                      , r = this;
                    dataadapter = new e.jqx.dataAdapter(i,{
                        autoBind: !1,
                        autoSort: !0,
                        autoSortField: t.displayfield,
                        async: !1,
                        uniqueDataFields: [t.displayfield],
                        beforeLoadComplete: function(e) {
                            var i = new Array;
                            if (t.cellsformat) {
                                for (var s = r._getcolumntypebydatafield(t), n = 0; n < e.length; n++) {
                                    i.push(e[n]);
                                    var o = e[n][t.displayfield];
                                    e[n][t.displayfield + "JQValue"] = o,
                                    "date" === s ? e[n][t.displayfield] = null != o ? dataadapter.formatDate(o, t.cellsformat, r.gridlocalization) : "" : "number" !== s && "float" !== s && "int" !== s || (e[n][t.displayfield] = null != o ? dataadapter.formatNumber(o, t.cellsformat, r.gridlocalization) : "")
                                }
                                return i
                            }
                            return e
                        }
                    })
                } else
                    dataadapter = new e.jqx.dataAdapter(this.source,{
                        autoBind: !1,
                        uniqueDataFields: [t.displayfield],
                        autoSort: !0,
                        autoSortField: t.displayfield,
                        async: !1
                    });
                if (t.filteritems && t.filteritems.length > 0) {
                    i = {
                        localdata: t.filteritems,
                        datatype: this.source.datatype,
                        async: !1
                    };
                    dataadapter = new e.jqx.dataAdapter(i,{
                        autoBind: !1,
                        async: !1
                    })
                } else if (t.filteritems) {
                    if (t.filteritems._source)
                        return t.filteritems._options.autoBind = !1,
                        t.filteritems._options.async = !1,
                        t.filteritems;
                    if (e.isFunction(t.filteritems))
                        return t.filteritems()
                }
                return dataadapter
            },
            refreshfilterrow: function() {
                if (this.showfilterrow) {
                    this.refreshingfilter = !0,
                    this._updatefilterrowui(),
                    this._updatelistfilters(!0, !0);
                    for (var t = this.that, i = this.columns.records.length, r = 0; r < i; r++) {
                        var s = this.columns.records[r];
                        if (s.filterable && s.filter) {
                            var n = s.filter.getfilters();
                            if (n.length > 0) {
                                var o = n[0].value
                                  , a = s._filterwidget
                                  , l = s._filterwidget.parent();
                                if (null != a)
                                    switch (s.filtertype) {
                                    case "number":
                                        if (l.find("input").val(o),
                                        this.host.jqxDropDownList) {
                                            var d = s.filter.getoperatorsbyfiltertype("numericfilter");
                                            a.find(".filter").jqxDropDownList("selectIndex", d.indexOf(n[0].condition))
                                        }
                                        break;
                                    case "input":
                                        if (l.find("input").val(o),
                                        this.host.jqxDropDownList) {
                                            d = s.filter.getoperatorsbyfiltertype("stringfilter");
                                            a.find(".filter").jqxDropDownList("selectIndex", d.indexOf(n[0].condition))
                                        }
                                        break;
                                    case "date":
                                    case "range":
                                        if (this.host.jqxDateTimeInput) {
                                            if (null != (o = s.filter.getfilterat(0).filtervalue)) {
                                                if (s.filter.getfilterat(1))
                                                    var h = s.filter.getfilterat(1).filtervalue;
                                                else
                                                    h = o;
                                                "range" == s.filtertype ? e(l.children()[0]).jqxDateTimeInput("setRange", new Date(o), new Date(h)) : e(l.children()[0]).jqxDateTimeInput("setDate", new Date(o))
                                            }
                                        } else
                                            a.val(o);
                                        break;
                                    case "textbox":
                                    case "default":
                                        a.val(o),
                                        t["_oldWriteText" + a[0].id] = o;
                                        break;
                                    case "bool":
                                    case "boolean":
                                        this.host.jqxCheckBox ? e(l.children()[0]).jqxCheckBox({
                                            checked: o
                                        }) : a.val(o)
                                    }
                            }
                        }
                    }
                    this.refreshingfilter = !1
                }
            },
            _destroyedfilters: function() {
                this.that;
                for (var t = this.columns.records.length, i = 0; i < t; i++) {
                    var r = this.columns.records[i];
                    if (r.filterable) {
                        var s = r._filterwidget;
                        if ("list" == r.filtertype || "checkedlist" == r.filtertype)
                            this.removeHandler(s, "select"),
                            this.removeHandler(s, "close"),
                            s.jqxDropDownList("destroy");
                        else if ("date" == r.filtertype || "range" == r.filtertype)
                            this.removeHandler(s, "valueChanged"),
                            s.jqxDateTimeInput("destroy");
                        else if ("bool" == r.filtertype)
                            this.removeHandler(s, "change"),
                            s.jqxCheckBox("destroy");
                        else if ("number" == r.filtertype || "input" === r.filtertype) {
                            var n = s.find(".jqx-input");
                            this.removeHandler(n, "keydown"),
                            e(s.children()[1]).jqxDropDownList("destroy")
                        } else
                            this.removeHandler(s, "keydown");
                        s.remove()
                    }
                }
            },
            _updatelistfilters: function(t, i) {
                for (var r = this.that, s = this.columns.records.length, n = 0; n < s; n++) {
                    var o = this.columns.records[n];
                    if (o.filterable && ("list" == o.filtertype || "checkedlist" == o.filtertype)) {
                        var a = o._filterwidget;
                        if (t) {
                            var l = this._getfilterdataadapter(o);
                            a.jqxDropDownList({
                                source: l
                            });
                            var d = !0;
                            if ((u = a.jqxDropDownList("getItems")).length != l.records.length + 1 && (d = !1),
                            d)
                                for (var h = 1; h < u.length; h++)
                                    if (u[h].label != l.records[h - 1][o.displayfield]) {
                                        d = !1;
                                        break
                                    }
                            if (d && !i)
                                continue
                        } else if (null == o.filter) {
                            a.jqxDropDownList("renderSelection");
                            continue
                        }
                        var c = "checkedlist" == o.filtertype
                          , u = a.jqxDropDownList("getItems")
                          , p = a.jqxDropDownList("listBox");
                        if (a.jqxDropDownList("dataBind"),
                        c) {
                            a.jqxDropDownList({
                                selectionRenderer: function() {
                                    return r.gridlocalization.filterselectstring
                                }
                            }),
                            null == p.getItem(this.gridlocalization.filterselectallstring) && p.insertAt(this.gridlocalization.filterselectallstring, 0);
                            var f = e('<span style="top: 2px; position: relative; color: inherit; border: none; background-color: transparent;">' + this.gridlocalization.filterselectstring + "</span>");
                            if (f.addClass(this.toThemeProperty("jqx-item")),
                            a.jqxDropDownList("setContent", f),
                            p.checkAll(!1),
                            o.filter) {
                                var m = o.filter.getfilters();
                                for (h = 0; h < p.items.length; h++) {
                                    var g = p.items[h].label
                                      , v = void 0;
                                    e.each(m, function() {
                                        var e;
                                        "NOT_EQUAL" == this.condition ? e = g != this.value : "EQUAL" == this.condition && (e = g == this.value),
                                        v = null == v && void 0 !== e ? e : "EQUAL" == this.condition ? v || e : v && e
                                    }),
                                    v ? p.checkIndex(h, !1, !1) : p.uncheckIndex(h, !1, !1)
                                }
                                p._updateCheckedItems();
                                var w = p.getCheckedItems().length;
                                p.items.length != w && w > 0 && p.host.jqxListBox("indeterminateIndex", 0, !0, !1)
                            }
                        } else if (null == p.getItem(this.gridlocalization.filterchoosestring) && p.items[0].label !== this.gridlocalization.filterchoosestring && p.insertAt({
                            label: this.gridlocalization.filterchoosestring,
                            value: ""
                        }, 0),
                        a.jqxDropDownList({
                            selectedIndex: 0
                        }),
                        o.filter) {
                            m = o.filter.getfilters();
                            var x = -1;
                            for (h = 0; h < p.items.length; h++) {
                                g = p.items[h].label;
                                e.each(m, function() {
                                    return "NOT_EQUAL" == this.condition || (g == this.value ? (x = h,
                                    !1) : void 0)
                                })
                            }
                            -1 != x && p.selectIndex(x)
                        }
                        u.length < 8 ? a.jqxDropDownList("autoDropDownHeight", !0) : a.jqxDropDownList("autoDropDownHeight", !1)
                    }
                }
            },
            _renderfiltercolumn: function() {
                var t = this.that;
                if (this.filterable) {
                    if (!this.columns.records)
                        return;
                    e.each(this.columns.records, function(i, r) {
                        var s = !1;
                        t.autoshowfiltericon ? this.filter ? (e(this.filtericon).show(),
                        s = !0) : e(this.filtericon).hide() : this.filterable && (e(this.filtericon).show(),
                        s = !0),
                        this.element.removeAttribute("filter"),
                        s && this.element.setAttribute("filter", !0),
                        "right" != this.align || this.renderer || this.element && (this.element.firstChild.firstChild.style.marginRight = s ? "18px" : "2px")
                    })
                }
            },
            _initcolumntypes: function() {
                if (this.columns && this.columns.records) {
                    var t = this.source._source.datafields;
                    if (t)
                        for (var i = 0; i < this.columns.records.length; i++) {
                            var r = this.columns.records[i];
                            if (!r.datatype) {
                                var s = "";
                                e.each(t, function() {
                                    if (this.name == r.displayfield)
                                        return this.type && (s = this.type),
                                        !1
                                }),
                                r.datatype = "" != s ? s : ""
                            }
                        }
                }
            },
            _getcolumntypebydatafield: function(t) {
                var i = this.that
                  , r = "string"
                  , s = i.source.datafields || (i.source._source ? i.source._source.datafields : null);
                if (s) {
                    var n = "";
                    if (e.each(s, function() {
                        if (this.name == t.displayfield)
                            return this.type && (n = this.type),
                            !1
                    }),
                    n)
                        return n
                }
                if (null != t) {
                    if (null == this.dataview.cachedrecords)
                        return r;
                    var o = null;
                    if (this.virtualmode)
                        e.each(this.dataview.cachedrecords, function() {
                            return o = this[t.displayfield],
                            !1
                        });
                    else {
                        if (0 == this.dataview.cachedrecords.length)
                            return r;
                        if (null != (o = this.dataview.cachedrecords[0][t.displayfield]) && "" == o.toString())
                            return "string"
                    }
                    if (null != o)
                        if ("boolean" == typeof o)
                            r = "boolean";
                        else if (e.jqx.dataFormat.isNumber(o))
                            r = "number";
                        else {
                            var a = new Date(o);
                            if ("NaN" == a.toString() || "Invalid Date" == a.toString())
                                if (e.jqx.dataFormat) {
                                    if (null != (a = e.jqx.dataFormat.tryparsedate(o))) {
                                        if (a && a.getFullYear() && 1970 == a.getFullYear() && 0 == a.getMonth() && 1 == a.getDate()) {
                                            var l = new Number(o);
                                            return isNaN(l) ? "string" : "number"
                                        }
                                        return "date"
                                    }
                                    r = "string"
                                } else
                                    r = "string";
                            else
                                r = "date"
                        }
                }
                return r
            },
            _getfiltersbytype: function(e) {
                var t = this.that
                  , i = "";
                switch (e) {
                case "number":
                case "float":
                case "int":
                    i = t.gridlocalization.filternumericcomparisonoperators;
                    break;
                case "date":
                    i = t.gridlocalization.filterdatecomparisonoperators;
                    break;
                case "boolean":
                case "bool":
                    i = t.gridlocalization.filterbooleancomparisonoperators;
                    break;
                case "string":
                default:
                    i = t.gridlocalization.filterstringcomparisonoperators
                }
                return i
            },
            _getfiltertype: function(e) {
                var t = "stringfilter";
                switch (e) {
                case "number":
                case "int":
                case "float":
                case "decimal":
                    t = "numericfilter";
                    break;
                case "boolean":
                case "bool":
                    t = "booleanfilter";
                    break;
                case "date":
                case "time":
                case "range":
                    t = "datefilter";
                    break;
                case "string":
                case "input":
                    t = "stringfilter"
                }
                return t
            },
            _buildfilter: function(t, i, r) {
                var s = e(i).find(".filter1")
                  , n = e(i).find(".filter2")
                  , o = e(i).find(".filter3")
                  , a = e(i).find(".filtertext1" + t.element.id)
                  , l = e(i).find(".filtertext2" + t.element.id)
                  , d = a.val()
                  , h = l.val()
                  , c = t._getcolumntypebydatafield(r)
                  , u = (t._getfiltersbytype(c),
                new e.jqx.filter)
                  , p = t._getfiltertype(c);
                if ("default" === t.filtermode && "list" !== r.filtertype && "checkedlist" !== r.filtertype) {
                    var f = s.jqxDropDownList("selectedIndex")
                      , m = n.jqxDropDownList("selectedIndex")
                      , g = o.jqxDropDownList("selectedIndex")
                      , v = null
                      , w = null;
                    if (t.updatefilterconditions) {
                        var x = t.updatefilterconditions(p, u.getoperatorsbyfiltertype(p));
                        null != x && u.setoperatorsbyfiltertype(p, x)
                    }
                    var b = !1
                      , y = u.getoperatorsbyfiltertype(p)[f]
                      , _ = (o = u.getoperatorsbyfiltertype(p)[g],
                    "NULL" == y || "NOT_NULL" == y)
                      , q = "EMPTY" == y || "NOT_EMPTY" == y;
                    null == y && (y = u.getoperatorsbyfiltertype(p)[0]),
                    null == o && (o = u.getoperatorsbyfiltertype(p)[0]),
                    (d.length > 0 || _ || q) && (v = u.createfilter(p, d, y, null, r.cellsformat, t.gridlocalization),
                    u.addfilter(m, v),
                    b = !0);
                    var j = "NULL" == o || "NOT_NULL" == o
                      , S = "EMPTY" == o || "NOT_EMPTY" == o;
                    if ((h.length > 0 || j || S) && (w = u.createfilter(p, h, o, null, r.cellsformat, t.gridlocalization),
                    u.addfilter(m, w),
                    b = !0),
                    b) {
                        var C = r.displayfield;
                        this.addfilter(C, u, !0)
                    } else
                        this._clearfilter(t, i, r)
                } else if ("excel" === t.filtermode || "list" === r.filtertype || "checkedlist" === r.filtertype) {
                    var T = !1
                      , I = s.data().jqxListBox.instance
                      , k = "excel" === this.filtermode || "checkedlist" === r.filtertype
                      , D = I.getCheckedItems();
                    if (!k)
                        D = I.getSelectedItems();
                    if (0 == D.length) {
                        for (var P = 1; P < I.items.length; P++) {
                            void 0 === (H = I.items[P].value) && (H = "");
                            var B = "not_equal";
                            if (H && H.indexOf && (H.indexOf("|") >= 0 || H.indexOf(" AND ") >= 0 || H.indexOf(" OR ") >= 0 || H.indexOf(" and ") >= 0 || H.indexOf(" or ") >= 0)) {
                                H = (H = (H = (H = (H = H.replace("|", "")).replace("AND", "")).replace("OR", "")).replace("and", "")).replace("or", "");
                                B = "equal"
                            }
                            if ("datefilter" == p)
                                var M = u.createfilter(p, H, B, null, r.cellsformat, t.gridlocalization);
                            else
                                M = u.createfilter(p, H, B, null);
                            u.addfilter(0, M)
                        }
                        T = !0
                    } else if (D.length != I.items.length) {
                        T = !0;
                        for (P = 0; P < D.length; P++)
                            if (t.gridlocalization.filterselectallstring !== D[P].value) {
                                var H;
                                void 0 === (H = D[P].value) && (H = "");
                                B = "equal";
                                if ("datefilter" == p)
                                    M = u.createfilter(p, H, B, null, r.cellsformat, t.gridlocalization);
                                else
                                    M = u.createfilter(p, H, B, null);
                                u.addfilter(1, M)
                            }
                    } else
                        T = !1;
                    if (T) {
                        C = r.displayfield;
                        this.addfilter(C, u, !0)
                    } else {
                        C = r.displayfield;
                        this.removefilter(C, !0)
                    }
                }
            },
            _clearfilter: function(e, t, i) {
                var r = i.displayfield;
                this.removefilter(r, !0)
            },
            addfilter: function(e, t, i) {
                if (this._loading)
                    throw new Error("jqxGrid: " + this.loadingerrormessage);
                var r = this.getcolumn(e)
                  , s = this._getcolumn(e);
                null != r && null != r && (r.filter = t,
                s.filter = t,
                this.dataview.addfilter(e, t),
                1 == i && null != i && this.applyfilters("add"))
            },
            removefilter: function(e, t) {
                if (this._loading)
                    throw new Error("jqxGrid: " + this.loadingerrormessage);
                var i = this.getcolumn(e)
                  , r = this._getcolumn(e);
                null != i && null != i && null != i.filter && (this.dataview.removefilter(e, i.filter),
                i.filter = null,
                r.filter = null,
                this.showfilterrow && this.clearfilterrow(e),
                1 != t && !1 === t || this.applyfilters("remove"))
            },
            applyfilters: function(t) {
                if (this.dataview.filters.length >= 0 && (this.virtualmode || !this.source.localdata) && null != this.source && this.source.filter) {
                    var i = -1;
                    this.pageable ? (i = this.dataview.pagenum,
                    this.dataview.pagenum = 0) : (this.vScrollInstance.setPosition(0),
                    this.loadondemand = !0,
                    this._renderrows(this.virtualsizeinfo)),
                    this.pageable && this.virtualmode && (this.dataview.pagenum = 0),
                    this.source.filter(this.dataview.filters, this.dataview.records, this.dataview.records.length),
                    this.pageable && !this.virtualmode && (this.dataview.pagenum = i)
                }
                if (this._cellscache = new Array,
                this.dataview.clearsortdata && this.dataview.clearsortdata(),
                this.virtualmode)
                    return this.pageable && (this.dataview.updateview(),
                    this.gotopage && this.gotopage(0)),
                    this.rendergridcontent(!1, !1),
                    this.showfilterrow && "string" != typeof t && e.isEmptyObject(t) && this.refreshfilterrow(),
                    this._postrender("filter"),
                    void this._raiseEvent(13, {
                        filters: this.dataview.filters
                    });
                this.selectedrowindexes,
                this.that;
                if (this.dataview.refresh(),
                this.dataview.clearsortdata && this.sortcolumn && this.sortdirection) {
                    var r = this.sortdirection.ascending ? "asc" : "desc";
                    this._loading ? this.sortby(this.sortcolumn, r, null, !1, !1) : this.sortby(this.sortcolumn, r, null, !1)
                }
                this.pageable && (this.dataview.updateview(),
                this.gotopage && (this.gotopage(0),
                this.updatepagerdetails())),
                this._updaterowsproperties(),
                !this.groupable || this.groupable && 0 == this.groups.length ? (this._rowdetailscache = new Array,
                this.virtualsizeinfo = null,
                this._pagescache = new Array,
                this.columns && this.columns.records && this.columns.records.length > 0 && !this.columns.records[0].filtericon && (this.prerenderrequired = !0),
                this.rendergridcontent(!0, !1),
                this._updatecolumnwidths(),
                this._updatecellwidths(),
                this._renderrows(this.virtualsizeinfo),
                this.showaggregates && this._updatecolumnsaggregates && this._updatecolumnsaggregates(),
                this._postrender("filter")) : (this.collapseallgroups(),
                this._rowdetailscache = new Array,
                this._render(!0, !0, !1, !1, !1),
                this.showfilterrow && this._updatefocusedfilter(),
                this._updatecolumnwidths(),
                this._updatecellwidths(),
                this._renderrows(this.virtualsizeinfo),
                this._postrender("group")),
                this.showfilterrow && "string" != typeof t && e.isEmptyObject(t) && this.refreshfilterrow(),
                this._raiseEvent(13, {
                    filters: this.dataview.filters
                })
            },
            getfilterinformation: function() {
                for (var e = new Array, t = 0; t < this.dataview.filters.length; t++) {
                    var i = this.getcolumn(this.dataview.filters[t].datafield);
                    e[t] = {
                        filter: this.dataview.filters[t].filter,
                        datafield: i.datafield,
                        displayfield: i.displayfield,
                        filtercolumn: i.datafield,
                        filtercolumntext: i.text
                    }
                }
                return e
            },
            clearfilters: function(t) {
                var i = this.that;
                if (this.showfilterrow && this.clearfilterrow(),
                this.columns.records) {
                    var r = 1 == t || !1 !== t;
                    e.each(this.columns.records, function() {
                        i.removefilter(this.displayfield, !r)
                    })
                }
                !1 !== t && (1 != t && !1 === t || this.applyfilters("clear"))
            },
            _destroyfilterpanel: function() {
                var t = e(e.find("#filterclearbutton" + this.element.id))
                  , i = e(e.find("#filterbutton" + this.element.id))
                  , r = e(e.find("#filter1" + this.element.id))
                  , s = e(e.find("#filter2" + this.element.id))
                  , n = e(e.find("#filter3" + this.element.id))
                  , o = e(e.find(".filtertext1" + this.element.id))
                  , a = e(e.find(".filtertext2" + this.element.id));
                o.length > 0 && a.length > 0 && (o.removeClass(),
                a.removeClass(),
                o.remove(),
                a.remove()),
                t.length > 0 && (t.jqxButton("destroy"),
                i.jqxButton("destroy"),
                this.removeHandler(t, "click"),
                this.removeHandler(i, "click")),
                r.length > 0 && r.jqxDropDownList("destroy"),
                s.length > 0 && s.jqxDropDownList("destroy"),
                n.length > 0 && n.jqxDropDownList("destroy");
                r = e(e.find("#filter1" + this.element.id + "ex")),
                s = e(e.find("#filter2" + this.element.id + "ex")),
                n = e(e.find("#filter3" + this.element.id + "ex"));
                r.length > 0 && r.jqxDropDownList("destroy"),
                s.length > 0 && s.jqxDropDownList("destroy"),
                n.length > 0 && n.jqxDropDownList("destroy")
            },
            _updatefilterpanel: function(t, i, r) {
                null != t && null != t || (t = this);
                var s = t._getcolumntypebydatafield(r)
                  , n = t._getfiltersbytype(s);
                if (!t.host.jqxDropDownList)
                    throw new Error("jqxGrid: Missing reference to jqxdropdownlist.js.");
                t.filterpanel.detach(),
                t.excelfilterpanel.detach(),
                r.filterpanel && r.filterpanel.detach(),
                e(i).children().detach();
                var o = e(t.menuitemsarray[6]);
                if (e(o).css("height", "190px"),
                r.createfilterpanel && !r.filterpanel) {
                    var a = e("<div class='filter' style='margin-left: 7px;'></div>");
                    e(i).append(a),
                    r.createfilterpanel(r.displayfield, a),
                    r.filterpanel = a
                }
                "list" === r.filtertype || "checkedlist" === r.filtertype ? e(i).append(t.excelfilterpanel) : "custom" !== r.filtertype ? e(i).append(t.filterpanel) : r.filterpanel && e(i).append(r.filterpanel),
                this._showwhere = e(i).find(".filter.showwhere");
                var l = e(i)
                  , d = l.find("#filterclearbutton" + t.element.id)
                  , h = l.find("#filterbutton" + t.element.id)
                  , c = l.find(".filter1")
                  , u = l.find(".filter2")
                  , p = l.find(".filter3")
                  , f = l.find(".filtertext1" + t.element.id)
                  , m = l.find(".filtertext2" + t.element.id);
                if (this._hasdatefilter && "list" !== r.filtertype && "checkedlist" !== r.filtertype && "custom" !== r.filtertype) {
                    var g = f.parent()
                      , v = m.parent();
                    if ("date" == r.filtertype) {
                        f.jqxDateTimeInput("destroy"),
                        m.jqxDateTimeInput("destroy"),
                        g.children().remove(),
                        v.children().remove(),
                        t._showwhere.text(t.gridlocalization.filtershowrowdatestring);
                        var w = e("<div class='filtertext1" + t.element.id + "' style=''></div>");
                        g.append(w),
                        (x = function(e) {
                            var i = {
                                calendar: t.gridlocalization,
                                todayString: t.gridlocalization.todaystring,
                                clearString: t.gridlocalization.clearstring
                            };
                            e.jqxDateTimeInput({
                                disabled: t.disabled,
                                firstDayOfWeek: t.gridlocalization.firstDay,
                                localization: i,
                                rtl: t.rtl,
                                width: t._filterpanelwidth - 10,
                                height: 24,
                                value: null,
                                formatString: r.cellsformat,
                                theme: t.theme
                            })
                        }
                        )(w);
                        w = e("<div class='filtertext2" + t.element.id + "' style=''></div>");
                        v.append(w),
                        x(w)
                    } else {
                        g.children().remove(),
                        v.children().remove(),
                        t._showwhere.text(t.gridlocalization.filtershowrowstring);
                        var x;
                        w = e("<input class='filtertext1" + t.element.id + "' style='box-sizing: content-box; height: 16px; padding: 3px;' type='text'></input>");
                        g.append(w),
                        (x = function(e) {
                            e.addClass(t.toThemeProperty("jqx-input")),
                            e.addClass(t.toThemeProperty("jqx-filter-input jqx-widget-content")),
                            e.addClass(t.toThemeProperty("jqx-rc-all")),
                            e.width(t._filterpanelwidth - 18)
                        }
                        )(w);
                        w = e("<input class='filtertext2" + t.element.id + "' style='box-sizing: content-box; height: 16px; padding: 3px;' type='text'></input>");
                        v.append(w),
                        x(w)
                    }
                    f = l.find(".filtertext1" + t.element.id),
                    m = l.find(".filtertext2" + t.element.id)
                }
                if ("date" != r.filtertype ? (f.val(""),
                m.val("")) : (f.val(null),
                m.val(null)),
                this.removeHandler(h, "click"),
                this.addHandler(h, "click", function() {
                    t._buildfilter(t, i, r),
                    t._closemenu()
                }),
                this.removeHandler(d, "click"),
                this.addHandler(d, "click", function() {
                    t._clearfilter(t, i, r),
                    t._closemenu()
                }),
                this.removeHandler(h, "keydown"),
                this.addHandler(h, "keydown", function(e) {
                    13 === e.keyCode && (t._buildfilter(t, i, r),
                    t._closemenu())
                }),
                this.removeHandler(d, "keydown"),
                this.addHandler(d, "keydown", function(e) {
                    13 === e.keyCode && (t._clearfilter(t, i, r),
                    t._closemenu())
                }),
                this.removeHandler(f, "keydown"),
                this.addHandler(f, "keydown", function(e) {
                    13 === e.keyCode && h.trigger("click"),
                    27 === e.keyCode && t._closemenu()
                }),
                this.removeHandler(m, "keydown"),
                this.addHandler(m, "keydown", function(e) {
                    13 === e.keyCode && h.trigger("click"),
                    27 === e.keyCode && t._closemenu()
                }),
                "default" === this.filtermode && "list" !== r.filtertype && "checkedlist" !== r.filtertype && "custom" !== r.filtertype) {
                    if (c.jqxDropDownList("source") != n && (c.jqxDropDownList({
                        enableBrowserBoundsDetection: !1,
                        source: n
                    }),
                    p.jqxDropDownList({
                        enableBrowserBoundsDetection: !1,
                        source: n
                    })),
                    "boolean" == s || "bool" == s)
                        c.jqxDropDownList({
                            autoDropDownHeight: !0,
                            selectedIndex: 0
                        }),
                        p.jqxDropDownList({
                            autoDropDownHeight: !0,
                            selectedIndex: 0
                        });
                    else {
                        var b = !1;
                        n && n.length && n.length < 5 && (b = !0),
                        c.jqxDropDownList({
                            autoDropDownHeight: b,
                            selectedIndex: 2
                        }),
                        p.jqxDropDownList({
                            autoDropDownHeight: b,
                            selectedIndex: 2
                        })
                    }
                    u.jqxDropDownList({
                        selectedIndex: 0
                    });
                    var y = r.filter
                      , _ = new e.jqx.filter
                      , q = "";
                    switch (s) {
                    case "number":
                    case "int":
                    case "float":
                    case "decimal":
                        q = "numericfilter",
                        j = _.getoperatorsbyfiltertype("numericfilter");
                        break;
                    case "boolean":
                    case "bool":
                        q = "booleanfilter",
                        j = _.getoperatorsbyfiltertype("booleanfilter");
                        break;
                    case "date":
                    case "time":
                        q = "datefilter",
                        j = _.getoperatorsbyfiltertype("datefilter");
                        break;
                    case "string":
                        q = "stringfilter",
                        j = _.getoperatorsbyfiltertype("stringfilter")
                    }
                    if (null != y) {
                        g = y.getfilterat(0),
                        v = y.getfilterat(1),
                        y.getoperatorat(0);
                        if (t.updatefilterconditions) {
                            var j = []
                              , S = t.updatefilterconditions(q, j);
                            if (null != S) {
                                for (var C = 0; C < S.length; C++)
                                    S[C] = S[C].toUpperCase();
                                y.setoperatorsbyfiltertype(q, S),
                                j = S
                            }
                        }
                        var T = "default";
                        if (null != g) {
                            var I = j.indexOf(g.comparisonoperator)
                              , k = g.filtervalue;
                            f.val(k),
                            c.jqxDropDownList({
                                selectedIndex: I,
                                animationType: T
                            })
                        }
                        if (null != v) {
                            var D = j.indexOf(v.comparisonoperator)
                              , P = v.filtervalue;
                            m.val(P),
                            p.jqxDropDownList({
                                selectedIndex: D,
                                animationType: T
                            })
                        }
                        null == y.getoperatorat(0) ? u.jqxDropDownList({
                            selectedIndex: 0,
                            animationType: T
                        }) : "and" == y.getoperatorat(0) || 0 == y.getoperatorat(0) ? u.jqxDropDownList({
                            selectedIndex: 0
                        }) : u.jqxDropDownList({
                            selectedIndex: 1
                        })
                    }
                    t.updatefilterpanel && t.updatefilterpanel(c, p, u, f, m, h, d, y, q, j),
                    (!this._hasdatefilter || this._hasdatefilter && "date" != r.filtertype) && (this.touchdevice || (f.focus(),
                    setTimeout(function() {
                        f.focus()
                    }, 10)))
                } else if ("excel" === this.filtermode || "list" === r.filtertype || "checkedlist" === r.filtertype) {
                    var B = t._getfilterdataadapter(r)
                      , M = (q = t._getfiltertype(s),
                    "excel" === this.filtermode || "checkedlist" === r.filtertype);
                    if (c.jqxListBox("focus"),
                    this.removeHandler(c, "keyup"),
                    this.addHandler(c, "keyup", function(e) {
                        13 === e.keyCode && h.trigger("click"),
                        27 === e.keyCode && t._closemenu()
                    }),
                    r.cellsformat ? c.jqxListBox({
                        checkboxes: M,
                        displayMember: r.displayfield,
                        valueMember: r.displayfield + "JQValue",
                        source: B
                    }) : c.jqxListBox({
                        checkboxes: M,
                        displayMember: r.displayfield,
                        valueMember: r.displayfield,
                        source: B
                    }),
                    M) {
                        c.jqxListBox("insertAt", t.gridlocalization.filterselectallstring, 0),
                        (L = c.data().jqxListBox.instance).checkAll(!1);
                        if (r.filter) {
                            L.uncheckAll(!1);
                            for (var H = r.filter.getfilters(), O = 0; O < L.items.length; O++) {
                                var z = L.items[O].value;
                                e.each(H, function() {
                                    if ("NOT_EQUAL" == this.condition) {
                                        if (z != this.value)
                                            return L.uncheckIndex(O, !1, !1),
                                            !1;
                                        if (null != z && null != this.value && z.toString() != this.value.toString())
                                            return L.uncheckIndex(O, !1, !1),
                                            !1
                                    } else if ("EQUAL" == this.condition) {
                                        if (z == this.value)
                                            return L.checkIndex(O, !1, !1),
                                            !1;
                                        if (null != z && null != this.value && z.toString() == this.value.toString())
                                            return L.checkIndex(O, !1, !1),
                                            !1
                                    }
                                })
                            }
                            L._updateCheckedItems();
                            var A = L.getCheckedItems().length;
                            L.items.length != A && A > 0 && L.host.jqxListBox("indeterminateIndex", 0, !0, !1),
                            A === L.items.length - 1 && L.host.jqxListBox("checkIndex", 0, !0, !1)
                        }
                    } else if (r.filter) {
                        var L;
                        (L = c.data().jqxListBox.instance).clearSelection();
                        for (H = r.filter.getfilters(),
                        O = 0; O < L.items.length; O++) {
                            z = L.items[O].value;
                            e.each(H, function() {
                                if ("NOT_EQUAL" == this.condition) {
                                    if (z != this.value)
                                        return L.unselectIndex(O, !1, !1),
                                        !1
                                } else if ("EQUAL" == this.condition && z == this.value)
                                    return L.selectIndex(O, !0, !1),
                                    !1
                            })
                        }
                        L._renderItems()
                    }
                }
            },
            _initfilterpanel: function(t, i, r, s, n) {
                null != t && null != t || (t = this),
                i[0].innerHTML = "";
                var o = e("<div class='filter' style='position: absolute; bottom: 3px; margin-left: 3px;'></div>");
                i.append(o);
                var a = e("<div class='filter showwhere' style='height: 18px; margin-top: 3px; margin-bottom: 3px;'></div>");
                a.text(t.gridlocalization.filtershowrowstring),
                this._showwhere = a;
                var l = n ? "ex" : ""
                  , d = e("<div class='filter filter1' id='filter1" + t.element.id + l + "'></div>")
                  , h = e("<div class='filter filter2' id='filter2" + t.element.id + l + "' style='margin-top: 3px; margin-bottom: 3px;'></div>")
                  , c = e("<div class='filter filter3' id='filter3" + t.element.id + l + "'></div>")
                  , u = t._getcolumntypebydatafield(r);
                if (!d.jqxDropDownList)
                    throw new Error("jqxGrid: jqxdropdownlist.js is not loaded.");
                var p = t._getfiltersbytype(u);
                if (this._hasdatefilter = !1,
                this._filterpanelwidth = s,
                this.columns && this.columns.records) {
                    for (var f = 0; f < this.columns.records.length; f++)
                        if ("date" == this.columns.records[f].filtertype) {
                            this._hasdatefilter = !0;
                            break
                        }
                } else if (this.columns && !this.columns.records)
                    for (f = 0; f < this.columns.length; f++)
                        if ("date" == this.columns[f].filtertype) {
                            this._hasdatefilter = !0;
                            break
                        }
                this._hasdatefilter = !0;
                var m = e("<div style='margin-top:3px;' class='filter'><input class='filtertext1" + t.element.id + "' style='padding: 3px; height: 17px; margin-top: 3px; margin-bottom: 3px;' type='text'></input></div>")
                  , g = m.find("input");
                g.addClass(this.toThemeProperty("jqx-input")),
                g.addClass(this.toThemeProperty("jqx-filter-input jqx-widget-content")),
                g.addClass(this.toThemeProperty("jqx-rc-all")),
                g.width(s - 18);
                var v = e("<div style='margin-top:3px;' class='filter'><input class='filtertext2" + t.element.id + "' style='padding: 3px; height: 17px; margin-top: 3px;' type='text'></input></div>")
                  , w = v.find("input");
                w.addClass(this.toThemeProperty("jqx-input")),
                w.addClass(this.toThemeProperty("jqx-filter-input jqx-widget-content")),
                w.addClass(this.toThemeProperty("jqx-rc-all")),
                w.width(s - 18),
                t.rtl && (g.css("direction", "rtl"),
                w.css("direction", "rtl"));
                var x = e("<div class='filter' style='height: 25px; text-align:center; margin-top: 12px; margin-left:-2px;'></div>")
                  , b = e('<span tabIndex=0 id="filterbutton' + t.element.id + '" class="filterbutton" style="padding: 4px 12px;">' + t.gridlocalization.filterstring + "</span>");
                x.append(b);
                var y = e('<span tabIndex=0 id="filterclearbutton' + t.element.id + '" class="filterclearbutton" style="position: relative; left: 2px; padding: 4px 12px; margin-left: 7px;">' + t.gridlocalization.filterclearstring + "</span>");
                x.append(y),
                b.jqxButton({
                    height: 20,
                    theme: t.theme
                }),
                y.jqxButton({
                    height: 20,
                    theme: t.theme
                });
                var _ = function(e) {
                    if (e) {
                        if (-1 != e.text().indexOf("case sensitive")) {
                            var i = e.text();
                            i = i.replace("case sensitive", "match case"),
                            e.text(i)
                        }
                        return e.css("font-family", t.host.css("font-family")),
                        e.css("font-size", t.host.css("font-size")),
                        e.css("top", "2px"),
                        e.css("position", "relative"),
                        e
                    }
                    return ""
                };
                if ("default" !== this.filtermode || n) {
                    if ("excel" === this.filtermode || n) {
                        o.append(a),
                        o.append(d),
                        d.attr("tabindex", 0),
                        d.jqxListBox({
                            rtl: t.rtl,
                            _checkForHiddenParent: !1,
                            checkboxes: !0,
                            selectedIndex: 2,
                            width: s - 10,
                            height: 130,
                            theme: t.theme
                        });
                        var q = !0;
                        t.addHandler(d, "checkChange", function(e) {
                            if (q)
                                if (e.args.label != t.gridlocalization.filterselectallstring) {
                                    q = !1,
                                    d.jqxListBox("checkIndex", 0, !0, !1);
                                    var i = d.jqxListBox("getCheckedItems")
                                      , r = d.jqxListBox("getItems");
                                    1 == i.length ? d.jqxListBox("uncheckIndex", 0, !0, !1) : r.length != i.length && d.jqxListBox("indeterminateIndex", 0, !0, !1),
                                    q = !0
                                } else
                                    q = !1,
                                    e.args.checked ? d.jqxListBox("checkAll", !1) : d.jqxListBox("uncheckAll", !1),
                                    q = !0
                        })
                    }
                } else {
                    o.append(a),
                    o.append(d),
                    d.jqxDropDownList({
                        _checkForHiddenParent: !1,
                        autoItemsHeight: !0,
                        rtl: t.rtl,
                        enableBrowserBoundsDetection: !1,
                        selectedIndex: 2,
                        width: s - 10,
                        height: 24,
                        dropDownHeight: 150,
                        dropDownWidth: s - 10,
                        selectionRenderer: _,
                        source: p,
                        theme: t.theme
                    }),
                    o.append(m);
                    var j = new Array;
                    j[0] = t.gridlocalization.filterandconditionstring,
                    j[1] = t.gridlocalization.filterorconditionstring,
                    h.jqxDropDownList({
                        _checkForHiddenParent: !1,
                        rtl: t.rtl,
                        enableBrowserBoundsDetection: !1,
                        autoDropDownHeight: !0,
                        selectedIndex: 0,
                        width: 60,
                        height: 24,
                        source: j,
                        selectionRenderer: _,
                        theme: t.theme
                    }),
                    o.append(h),
                    c.jqxDropDownList({
                        _checkForHiddenParent: !1,
                        autoItemsHeight: !0,
                        rtl: t.rtl,
                        enableBrowserBoundsDetection: !1,
                        selectedIndex: 2,
                        width: s - 10,
                        height: 24,
                        dropDownHeight: 150,
                        dropDownWidth: s - 10,
                        selectionRenderer: _,
                        source: p,
                        theme: t.theme
                    }),
                    o.append(c),
                    o.append(v)
                }
                o.append(x),
                t.updatefilterpanel && t.updatefilterpanel(d, c, h, m, v, b, y, null, null, p)
            }
        })
    }(jqxBaseFramework)
}
, function(e, t) {
    var i;
    (i = jqxBaseFramework).jqx.dataview.sort = function() {
        this.sortby = function(e, t, r) {
            var s = Object.prototype.toString;
            if (null != t || (this.sortdata = null,
            "many" !== this.grid.sortmode ? this.sortcache = {} : this.sortcache[e] && delete this.sortcache[e],
            this.grid._pagescache = new Array,
            this.grid._cellscache = new Array,
            "many" === this.grid.sortmode)) {
                "many" === this.grid.sortmode && (this.grid._pagescache = new Array,
                this.grid._cellscache = new Array),
                null != t && (t = "a" == t || "asc" == t || "ascending" == t || 1 == t);
                var n = e;
                this.sortfield = e,
                this.sortfielddirection = t ? "asc" : "desc",
                null == t && (this.sortfielddirection = null),
                null == this.sortcache && (this.sortcache = {}),
                this.sortdata = [];
                var o = []
                  , a = !1;
                if ("constructor" == n && (n = ""),
                !this.virtualmode && null != this.sortcache[n] && "many" !== this.grid.sortmode) {
                    var l = this.sortcache[n];
                    o = l._sortdata,
                    l.direction == t ? o.reverse() : (!l.direction && t && o.reverse(),
                    a = !0),
                    o.length < this.totalrecords && (this.sortcache = {},
                    a = !1,
                    o = [])
                }
                Object.prototype.toString = "function" == typeof e ? e : function() {
                    return this[e]
                }
                ;
                var d = this.records
                  , h = (this.that,
                "");
                if (this.source.datafields && i.each(this.source.datafields, function() {
                    if (this.name == e)
                        return this.type && (h = this.type),
                        !1
                }),
                0 == o.length)
                    if (d.length) {
                        for (var c = d.length, u = 0; u < c; u++)
                            if (null != (m = d[u])) {
                                var p = (g = m).toString();
                                o.push({
                                    sortkey: p,
                                    value: g,
                                    index: u
                                })
                            }
                    } else {
                        var f = !1;
                        for (obj in d) {
                            var m;
                            if (null == (m = d[obj])) {
                                f = !0;
                                break
                            }
                            var g = m;
                            o.push({
                                sortkey: g.toString(),
                                value: g,
                                index: obj
                            })
                        }
                        f && i.each(d, function(e, t) {
                            o.push({
                                sortkey: t.toString(),
                                value: t,
                                index: e
                            })
                        })
                    }
                if (!a)
                    if (null == r) {
                        this._sortcolumntype = h;
                        var v = this;
                        o.sort(function(e, t) {
                            return v._compare(e, t, h)
                        })
                    } else
                        o.sort(r);
                if (t || o.reverse(),
                Object.prototype.toString = s,
                this.sortdata = o,
                null !== t && (this.sortcache[n] = {
                    _sortdata: o,
                    direction: t,
                    dataType: this._sortcolumntype,
                    dataField: n
                }),
                "many" === this.grid.sortmode) {
                    var w = []
                      , x = []
                      , b = [];
                    for (var y in this.sortcache)
                        "data" !== y && (l = this.sortcache[y],
                        w.push(l.dataField),
                        x.push(l.direction ? "asc" : "desc"),
                        b.push(l.dataType));
                    if (!(w.length > 0))
                        return this.sortcache = {},
                        this.sortdata = null,
                        void this.refresh();
                    var _ = this.multiSort(d, w, x, b);
                    o = [],
                    i.each(_, function(e, t) {
                        o.push({
                            sortkey: n,
                            value: t,
                            index: t.boundindex
                        })
                    }),
                    this.sortdata = o
                }
                this.reload(this.records, this.rows, this.filters, this.updated, !0)
            } else
                this.refresh()
        }
        ,
        this.multiSort = function(e, t, r, s, n) {
            if (0 !== e.length) {
                for (var o = [], a = 0; a < e.length; a++) {
                    var l = i.extend({}, e[a]);
                    o.push(l)
                }
                var d = !1;
                if (o && o.constructor && "ObservableArray" === o.constructor.name && (d = !0),
                !(o && o instanceof Array && 0 !== o.length && t && !(t instanceof Array && 0 === t.length) || d))
                    throw new Error("sort: Missing or Invalid arguments!");
                "string" == typeof t && (t = [t]);
                var h = []
                  , c = [];
                void 0 === r && (r = []);
                var u = function(e, t) {
                    var i;
                    switch (t || typeof e) {
                    case "string":
                    default:
                        i = (new Intl.Collator).compare;
                        break;
                    case "date":
                    case "time":
                    case "datetime":
                    case "number":
                    case "int":
                    case "float":
                        i = function(e, t) {
                            return e - t
                        }
                        ;
                        break;
                    case "boolean":
                        i = function(e, t) {
                            return e === t ? 0 : !1 === e ? -1 : 1
                        }
                        ;
                        break;
                    case "object":
                        e instanceof Date && (i = function(e, t) {
                            return e.getTime() - t.getTime()
                        }
                        )
                    }
                    return i
                };
                for (a = 0; a < t.length; a++) {
                    void 0 === r[a] || "asc" === r[a] || "ascending" === r[a] ? h[a] = 1 : h[a] = -1;
                    var p = o[0][t[a]];
                    c[a] = u(p, s[a])
                }
                if (!n)
                    return o.sort(function(e, i) {
                        for (var r = 0; r < t.length; r++) {
                            var s = c[r](e[t[r]], i[t[r]]);
                            if (0 === s) {
                                if (t[r + 1])
                                    continue;
                                return void 0 !== e._index ? (e._index - i._index) * h[r] : 0
                            }
                            return s * h[r]
                        }
                        if (0 === t.length)
                            return e.boundIndex < i.boundIndex ? -1 : e.boundIndex > i.boundIndex ? 1 : 0
                    }),
                    o;
                n(o, t, r, c)
            }
        }
        ,
        this.clearsortdata = function() {
            this.sortcache = {},
            this.sortdata = null
        }
        ,
        this._compare = function(e, t, r) {
            if (void 0 === (e = e.sortkey) && (e = null),
            void 0 === (t = t.sortkey) && (t = null),
            null === e && null === t)
                return 0;
            if (null === e && null !== t)
                return -1;
            if (null !== e && null === t)
                return 1;
            if (i.jqx.dataFormat)
                if (r && "" != r)
                    switch (r) {
                    case "number":
                    case "int":
                    case "float":
                        return e < t ? -1 : e > t ? 1 : 0;
                    case "date":
                    case "time":
                        return e < t ? -1 : e > t ? 1 : 0;
                    case "string":
                    case "text":
                        e = String(e).toLowerCase(),
                        t = String(t).toLowerCase()
                    }
                else {
                    if (i.jqx.dataFormat.isNumber(e) && i.jqx.dataFormat.isNumber(t))
                        return e < t ? -1 : e > t ? 1 : 0;
                    if (i.jqx.dataFormat.isDate(e) && i.jqx.dataFormat.isDate(t))
                        return e < t ? -1 : e > t ? 1 : 0;
                    i.jqx.dataFormat.isNumber(e) || i.jqx.dataFormat.isNumber(t) || (e = String(e).toLowerCase(),
                    t = String(t).toLowerCase())
                }
            try {
                if (e < t)
                    return -1;
                if (e > t)
                    return 1
            } catch (e) {}
            return 0
        }
        ,
        this._equals = function(e, t) {
            return 0 === this._compare(e, t)
        }
    }
    ,
    i.extend(i.jqx._jqxGrid.prototype, {
        _rendersortcolumn: function() {
            var e = this.that
              , t = this.getsortcolumn();
            if ("many" !== this.sortmode) {
                if (this.sortdirection) {
                    var r = function(t, r) {
                        var s = e.getcolumn(t);
                        s && (r.ascending ? i.jqx.aria(s.element, "aria-sort", "ascending") : r.descending ? i.jqx.aria(s.element, "aria-sort", "descending") : i.jqx.aria(s.element, "aria-sort", "none"))
                    };
                    this._oldsortinfo && this._oldsortinfo.column && r(this._oldsortinfo.column, {
                        ascending: !1,
                        descending: !1
                    }),
                    r(t, this.sortdirection)
                }
                this._oldsortinfo = {
                    column: t,
                    direction: this.sortdirection
                },
                this.sortdirection && i.each(this.columns.records, function(r, s) {
                    var n = i.data(document.body, "groupsortelements" + this.displayfield);
                    null == t || this.displayfield != t ? (i(this.sortasc).hide(),
                    i(this.sortdesc).hide(),
                    i(this.sorticon).css("visibility", "hidden"),
                    i(this.sorticon).removeClass("ascending"),
                    i(this.sorticon).removeClass("descending"),
                    this.element.removeAttribute("sort"),
                    null != n && (n.sortasc.hide(),
                    n.sortdesc.hide())) : (e.isMaterialized() || e.isModern() ? (i(this.sortasc).hide(),
                    i(this.sortdesc).hide(),
                    i(this.sorticon).show(),
                    i(this.sorticon).css("visibility", "inherit"),
                    null != n && (n.sortasc.hide(),
                    n.sortdesc.show()),
                    i(this.sorticon).removeClass("ascending"),
                    i(this.sorticon).removeClass("descending"),
                    e.sortdirection.ascending ? i(this.sorticon).addClass("ascending") : i(this.sorticon).addClass("descending")) : e.sortdirection.ascending ? (i(this.sortasc).show(),
                    i(this.sortdesc).hide(),
                    null != n && (n.sortasc.show(),
                    n.sortdesc.hide())) : (i(this.sortasc).hide(),
                    i(this.sortdesc).show(),
                    null != n && (n.sortasc.hide(),
                    n.sortdesc.show())),
                    this.element.setAttribute("sort", !0))
                })
            } else {
                this.__columnsbydatafield = new Array;
                var s = this.getsortcolumns();
                if (i.each(this.columns.records, function(e, t) {
                    i(this.sortasc).hide(),
                    i(this.sortdesc).hide(),
                    i(this.sorticon).css("visibility", "hidden"),
                    this.element.removeAttribute("sort")
                }),
                s.length > 0)
                    for (var n = 0; n < s.length; n++) {
                        var o = s[n]
                          , a = this._getcolumnbydatafield(o.dataField);
                        a.element.setAttribute("sort", !0),
                        e.isMaterialized() || e.isModern() ? (i(a.sorticon).show(),
                        i(a.sorticon).css("visibility", "inherit"),
                        i(a.sorticon).removeClass("ascending"),
                        i(a.sorticon).removeClass("descending"),
                        o.ascending ? i(a.sorticon).addClass("ascending") : i(a.sorticon).addClass("descending")) : o.ascending ? (i(a.sortasc).show(),
                        i(a.sortdesc).hide()) : !1 === o.ascending && (i(a.sortasc).hide(),
                        i(a.sortdesc).show())
                    }
            }
        },
        getsortcolumns: function() {
            var e = this
              , t = [];
            for (var i in e.dataview.sortcache)
                "data" !== i && t.push({
                    dataField: i,
                    ascending: e.dataview.sortcache[i].direction
                });
            if (0 === t.length)
                for (var r in e.sortcolumns) {
                    var s = e.sortcolumns[r];
                    null !== s && t.push({
                        dataField: r,
                        ascending: s
                    })
                }
            return t
        },
        getsortcolumn: function() {
            return null != this.sortcolumn ? this.sortcolumn : null
        },
        removesort: function() {
            if (this.sortby(null),
            "many" === this.sortmode)
                for (var e in this.sortcolumns)
                    this.sortby(e, null)
        },
        sortby: function(e, t, i, r, s) {
            if (this._loading && !1 !== s)
                throw new Error("jqxGrid: " + this.loadingerrormessage);
            if (null == e && (t = null,
            e = this.sortcolumn),
            null != e) {
                var n = this.that;
                if (null == i && null != n.source.sortcomparer && (i = n.source.sortcomparer),
                void 0 === t && (t = !0),
                ascending = "a" == t || "asc" == t || "ascending" == t || 1 == t,
                n.sortdirection = null != t ? {
                    ascending: ascending,
                    descending: !ascending
                } : {
                    ascending: !1,
                    descending: !1
                },
                n.sortcolumn = null != t ? e : null,
                n.sortcolumns || (n.sortcolumns = []),
                n.sortcolumns[e] = t,
                n.source.sort || n.virtualmode) {
                    if (n.dataview.sortfield = e,
                    n.dataview.sortfielddirection = null == t ? "" : ascending ? "asc" : "desc",
                    n.source.sort && !this._loading)
                        return n.source.sort(e, t, n.sortcolumns),
                        void n._raiseEvent(6, {
                            sortinformation: n.getsortinformation()
                        })
                } else
                    n.dataview.sortby(e, t, i);
                if (!1 === r)
                    return;
                n.groupable && n.groups.length > 0 ? (n._render(!0, !1, !1),
                n._updategroupheadersbounds && n.showgroupsheader && n._updategroupheadersbounds(),
                n._postrender("sort")) : (n.pageable && n.dataview.updateview(),
                n._updaterowsproperties(),
                n.rendergridcontent(!0),
                n._postrender("sort")),
                n._raiseEvent(6, {
                    sortinformation: n.getsortinformation()
                })
            }
        },
        _togglesort: function(e) {
            var t = this.that;
            if (!this.disabled)
                if ("many" !== this.sortmode) {
                    if (e.sortable && t.sortable) {
                        var i = t.getsortinformation();
                        s = null,
                        null != i.sortcolumn && i.sortcolumn == e.displayfield ? (s = i.sortdirection.ascending,
                        s = t.sorttogglestates > 1 ? 1 != s && null : !s) : s = !0,
                        t.sortby(e.displayfield, s, null)
                    }
                } else if (e.sortable && t.sortable) {
                    for (var r = t.getsortcolumns(), s = null, n = 0; n < r.length; n++) {
                        var o = r[n];
                        if (e.displayfield === o.dataField)
                            return s = o.ascending,
                            s = t.sorttogglestates > 1 ? 1 != s && null : !s,
                            void t.sortby(e.displayfield, s, null)
                    }
                    t.sortby(e.displayfield, !0, null)
                }
        }
    })
}
, function(e, t) {
    var i;
    (i = jqxBaseFramework).extend(i.jqx._jqxGrid.prototype, {
        savestate: function(e) {
            var t = this.getstate();
            return void 0 === e || i.isEmptyObject(e) || (-1 == e.indexOf("sort") && (delete t.sortcolumn,
            delete t.sortdirection),
            -1 == e.indexOf("pager") && (delete t.pagenum,
            delete t.pagesizeoptions,
            delete t.pagesize),
            -1 == e.indexOf("selection") && (delete t.selectedcells,
            delete t.selectedrowindexes,
            delete t.selectedrowindex),
            -1 == e.indexOf("grouping") && delete t.groups,
            -1 == e.indexOf("filter") && delete t.filters,
            i.each(this.columns.records, function(i) {
                var r = t.columns[this.datafield];
                -1 == e.indexOf("hidden_columns") && delete r.hidden,
                -1 == e.indexOf("reorder") && delete r.index,
                -1 == e.indexOf("columns_width") && delete r.width,
                -1 == e.indexOf("columns_text") && delete r.text,
                -1 == e.indexOf("alignment") && (delete r.align,
                delete r.cellsalign)
            })),
            window.localStorage && (window.localStorage["jqxGrid" + this.element.id] = this._stringify(t)),
            this._savedstate = t,
            t
        },
        loadstate: function(e, t) {
            var r = "";
            if (null != e && null != e.width ? r = e : window.localStorage ? window.localStorage["jqxGrid" + this.element.id] && (r = i.parseJSON(window.localStorage["jqxGrid" + this.element.id])) : this._savedstate && (r = this._savedstate),
            null != r && "" !== r) {
                (this.virtualmode || this.source._source.url && "" != this.source._source.url) && this.source.beginUpdate();
                var s = r;
                if (void 0 !== s.width && (this.width = s.width),
                void 0 !== s.height && (this.height = s.height),
                this.pageable && (null != s.pagesize && (this.pagesize = s.pagesize,
                this.dataview.pagesize = s.pagesize),
                null != s.pagenum && (this.dataview.pagenum = s.pagenum),
                null != s.pagesizeoptions && (this.pagesizeoptions = s.pagesizeoptions),
                this.pagesizeoptions)) {
                    for (var n = 0, o = 0; o < this.pagesizeoptions.length; o++)
                        this.pagesize >= this.pagesizeoptions[o] && (n = o);
                    this.pagershowrowscombo && this.pagershowrowscombo.jqxDropDownList({
                        selectedIndex: n
                    })
                }
                if (this.sortable)
                    if (this._loading && (this._loading = !1),
                    s.sortdirection) {
                        if (s.sortdirection.ascending || s.sortdirection.descending) {
                            this.dataview.sortfield = s.sortcolumn;
                            var a = s.sortdirection.ascending ? "asc" : "desc";
                            this.dataview.sortfielddirection = a,
                            this.source.sortcolumn = s.sortcolumn,
                            this.source.sortdirection = a,
                            this.sortby(s.sortcolumn, a)
                        }
                    } else
                        null == this.dataview.sortfield || "asc" != this.dataview.sortfielddirection && "desc" != this.dataview.sortfielddirection || this.sortby(this.dataview.sortfield, null);
                this.groupable && s.groups && (this.dataview.groups = s.groups,
                this.groups = s.groups),
                this.loadingstate = !0,
                this.virtualsizeinfo && this._loadselectionandcolumnwidths(s),
                this.loadingstate = !1,
                (this.virtualmode || this.source._source.url && "" != this.source._source.url) && (1 == t ? this.source.endUpdate(!1) : (this.source.endUpdate(!1),
                (this.virtualmode || this.source._source.filter || this.source._source.sort) && this.updatebounddata("state")))
            }
        },
        _loadselectionandcolumnwidths: function(e) {
            this.loadingstate = !0;
            var t = "";
            if (null != e && null != e.width ? t = e : window.localStorage ? window.localStorage["jqxGrid" + this.element.id] && (t = i.parseJSON(window.localStorage["jqxGrid" + this.element.id])) : this._savedstate && (t = this._savedstate),
            null != t && "" != t) {
                var r = this._loading;
                this._loading = !1;
                var s = t
                  , n = this
                  , o = !1
                  , a = [];
                if (a.length = 0,
                i.each(this.columns.records, function(e) {
                    var t = s.columns[this.datafield];
                    if (null != t) {
                        if (this.text != t.text && (o = !0),
                        this.hidden != t.hidden && (o = !0),
                        void 0 !== t.width && (this.width = t.width,
                        this._width && (this._width = null),
                        this._percentagewidth && (this._percentagewidth = null)),
                        void 0 !== t.hidden && (this.hidden = t.hidden),
                        void 0 !== t.pinned && (this.pinned = t.pinned),
                        void 0 !== t.groupable && (this.groupable = t.groupable),
                        void 0 !== t.resizable && (this.resizable = t.resizable),
                        this.draggable = t.draggable,
                        void 0 !== t.text && (this.text = t.text),
                        void 0 !== t.align && (this.align = t.align),
                        void 0 !== t.cellsalign && (this.cellsalign = t.cellsalign),
                        n._columns)
                            for (var i = 0; i < n._columns.length; i++)
                                n._columns[i].datafield == this.datafield && (void 0 !== t.hidden && (n._columns[i].hidden = t.hidden),
                                void 0 !== t.width && (n._columns[i].width = t.width));
                        void 0 !== t.index && (a[this.datafield] = t.index,
                        a.length++)
                    }
                }),
                a.length > 0) {
                    if (this.setcolumnindex) {
                        this.rowdetails,
                        this.groupable && this.groups.length;
                        for (var l = new Array, d = 0; d < this.columns.records.length; d++)
                            l.push(this.columns.records[d]);
                        var h = 0
                          , c = new Array;
                        for (d = 0; d < l.length; d++) {
                            var u = l[d]
                              , p = a[u.datafield];
                            if (this.groupable && u.grouped)
                                h++;
                            else if (0 == d && this.rowdetails)
                                h++;
                            else if (d !== p || this.groupable || this.rowdetails) {
                                var f = h + p;
                                c.push({
                                    column: u,
                                    key: f
                                })
                            }
                        }
                        c.sort(function(e, t) {
                            return e.key < t.key ? -1 : e.key > t.key ? 1 : 0
                        }),
                        c.reverse(),
                        i.each(c, function(e, t) {
                            var i = this.key;
                            n.setcolumnindex(this.column.datafield, i, !1)
                        })
                    }
                    this.prerenderrequired = !0,
                    this.groupable && this._refreshdataview(),
                    this.rendergridcontent(!0),
                    this._updatefilterrowui && this.filterable && this.showfilterrow && this._updatefilterrowui(),
                    this._renderrows(this.virtualsizeinfo)
                }
                if (this.filterable && void 0 !== s.filters) {
                    this.clearfilters && (this._loading = !1,
                    this.clearfilters(!1));
                    var m = ""
                      , g = new i.jqx.filter;
                    for (d = 0; d < s.filters.filterscount; d++) {
                        var v = s.filters["filtercondition" + d]
                          , w = s.filters["filterdatafield" + d];
                        if (u = this.getcolumn(w),
                        w != m && (g = new i.jqx.filter),
                        m = w,
                        u && u.filterable) {
                            var x = s.filters["filtervalue" + d]
                              , b = s.filters["filteroperator" + d];
                            if ("datefilter" == (C = s.filters["filtertype" + d]))
                                var y = g.createfilter(C, x, v, null, u.cellsformat, this.gridlocalization);
                            else
                                y = g.createfilter(C, x, v);
                            if (g.addfilter(b, y),
                            this.showfilterrow) {
                                var _ = u._filterwidget
                                  , q = u._filterwidget.parent();
                                if (null != _)
                                    switch (u.filtertype) {
                                    case "number":
                                        if (q.find("input").val(x),
                                        this.host.jqxDropDownList) {
                                            var j = g.getoperatorsbyfiltertype("numericfilter");
                                            _.find(".filter").jqxDropDownList("selectIndex", j.indexOf(v))
                                        }
                                        break;
                                    case "date":
                                        this.host.jqxDateTimeInput ? i(q.children()[0]).jqxDateTimeInput("setDate", x) : _.val(x);
                                        break;
                                    case "range":
                                        if (this.host.jqxDateTimeInput) {
                                            var S = s.filters["filtervalue" + (d + 1)]
                                              , C = s.filters["filtertype" + d];
                                            y = g.createfilter(C, S, "LESS_THAN_OR_EQUAL"),
                                            g.addfilter(b, y);
                                            var T = new Date(x)
                                              , I = new Date(S);
                                            isNaN(T) && (T = i.jqx.dataFormat.tryparsedate(x)),
                                            isNaN(I) && (I = i.jqx.dataFormat.tryparsedate(x)),
                                            i(q.children()[0]).jqxDateTimeInput("setRange", T, I),
                                            d++
                                        } else
                                            _.val(x);
                                        break;
                                    case "textbox":
                                    case "default":
                                        _.val(x),
                                        n["_oldWriteText" + _[0].id] = x;
                                        break;
                                    case "list":
                                        if (this.host.jqxDropDownList) {
                                            var k = i(q.children()[0]).jqxDropDownList("getItems");
                                            p = -1,
                                            i.each(k, function(e) {
                                                if (this.value == x)
                                                    return p = e,
                                                    !1
                                            }),
                                            i(q.children()[0]).jqxDropDownList("selectIndex", p)
                                        } else
                                            _.val(x);
                                        break;
                                    case "checkedlist":
                                        this.host.jqxDropDownList || _.val(x);
                                        break;
                                    case "bool":
                                    case "boolean":
                                        this.host.jqxCheckBox ? i(q.children()[0]).jqxCheckBox({
                                            checked: x
                                        }) : _.val(x)
                                    }
                            }
                            this.addfilter(w, g)
                        }
                    }
                    s.filters && s.filters.filterscount > 0 && (this.applyfilters(),
                    this.showfilterrow && i.each(this.columns.records, function() {
                        if ("checkedlist" == this.filtertype && this.filterable && n.host.jqxDropDownList) {
                            var e = this
                              , t = e._filterwidget
                              , r = (t.jqxDropDownList("getItems"),
                            t.jqxDropDownList("listBox"));
                            if (r.checkAll(!1),
                            e.filter) {
                                r.uncheckAll(!1);
                                for (var s = e.filter.getfilters(), o = 0; o < r.items.length; o++) {
                                    var a = r.items[o].label;
                                    i.each(s, function() {
                                        if ("NOT_EQUAL" == this.condition)
                                            return !0;
                                        a == this.value && r.checkIndex(o, !1, !1)
                                    })
                                }
                                r._updateCheckedItems();
                                var l = r.getCheckedItems().length;
                                r.items.length != l && l > 0 && r.host.jqxListBox("indeterminateIndex", 0, !0, !1)
                            }
                        }
                    })),
                    this.pageable && void 0 !== s.pagenum && (this.gotopage && !this.virtualmode ? (this.dataview.pagenum = -1,
                    this.gotopage(s.pagenum)) : this.gotopage && this.virtualmode && this.gotopage(s.pagenum))
                }
                if (s.selectedrowindexes && s.selectedrowindexes && s.selectedrowindexes.length > 0 && (this.selectedrowindexes = s.selectedrowindexes,
                this.selectedrowindex = s.selectedrowindex,
                "checkbox" === this.selectionmode && this._updatecheckboxselection()),
                s.selectedcells && this._applycellselection && i.each(s.selectedcells, function() {
                    n._applycellselection(this.rowindex, this.datafield, !0, !1)
                }),
                this.groupable && void 0 !== s.groups)
                    return this._refreshdataview(),
                    this.render(),
                    this._loading = r,
                    void (this.loadingstate = !1);
                if (o) {
                    if (this.prerenderrequired = !0,
                    this.rendergridcontent(!0),
                    this._loading = r,
                    this.loadingstate = !1,
                    this.updating())
                        return !1
                } else
                    this._loading = r,
                    this._updatecolumnwidths(),
                    this._updatecellwidths(),
                    this.loadingstate = !1;
                this.loadingstate = !1,
                this._loading = r,
                this._renderrows(this.virtualsizeinfo)
            }
            this.loadingstate = !1
        },
        getstate: function() {
            var e = this.getdatainformation()
              , t = {};
            if (t.width = this.width,
            t.height = this.height,
            t.pagenum = e.paginginformation.pagenum,
            t.pagesize = e.paginginformation.pagesize,
            t.pagesizeoptions = this.pagesizeoptions,
            t.sortcolumn = e.sortinformation.sortcolumn,
            t.sortdirection = e.sortinformation.sortdirection,
            null != this.selectionmode && this.getselectedcells)
                if (-1 != this.selectionmode.toString().indexOf("cell")) {
                    var r = this.getselectedcells()
                      , s = new Array;
                    i.each(r, function() {
                        s.push({
                            datafield: this.datafield,
                            rowindex: this.rowindex
                        })
                    }),
                    t.selectedcells = s
                } else {
                    var n = this.getselectedrowindexes();
                    t.selectedrowindexes = n,
                    t.selectedrowindex = this.selectedrowindex
                }
            var o = {}
              , a = 0;
            if (this.dataview.filters)
                for (var l = 0; l < this.dataview.filters.length; l++) {
                    var d = this.dataview.filters[l].datafield
                      , h = this.dataview.filters[l].filter
                      , c = h.getfilters();
                    o[d + "operator"] = h.operator;
                    for (var u = 0; u < c.length; u++) {
                        if (c[u].datafield = d,
                        "datefilter" == c[u].type)
                            if (c[u].value && c[u].value.toLocaleString) {
                                var p = this.getcolumn(c[u].datafield);
                                if (p.cellsformat) {
                                    var f = this.source.formatDate(c[u].value, p.cellsformat, this.gridlocalization);
                                    o["filtervalue" + a] = f || c[u].value.toLocaleString()
                                } else
                                    o["filtervalue" + a] = c[u].value.toLocaleString()
                            } else
                                o["filtervalue" + a] = c[u].value;
                        else
                            o["filtervalue" + a] = c[u].value;
                        o["filtercondition" + a] = c[u].condition,
                        o["filteroperator" + a] = c[u].operator,
                        o["filterdatafield" + a] = d,
                        o["filtertype" + a] = c[u].type,
                        a++
                    }
                }
            o.filterscount = a,
            t.filters = o,
            t.groups = this.groups,
            t.columns = {};
            var m = 0;
            return this.columns.records && i.each(this.columns.records, function(e, i) {
                if (!this.datafield)
                    return !0;
                var r = {};
                r.width = this.width,
                r.hidden = this.hidden,
                r.pinned = this.pinned,
                r.groupable = this.groupable,
                r.resizable = this.resizable,
                r.draggable = this.draggable,
                r.text = this.text,
                r.align = this.align,
                r.cellsalign = this.cellsalign,
                r.index = m++,
                t.columns[this.datafield] = r
            }),
            t
        },
        _stringify: function(e) {
            if (window.JSON && "function" == typeof window.JSON.stringify) {
                var t = "";
                try {
                    t = window.JSON.stringify(e)
                } catch (t) {
                    return this._str("", {
                        "": e
                    })
                }
                return t
            }
            return t = this._str("", {
                "": e
            })
        },
        _quote: function(e) {
            var t = {
                "\b": "\\b",
                "\t": "\\t",
                "\n": "\\n",
                "\f": "\\f",
                "\r": "\\r",
                '"': '\\"',
                "\\": "\\\\"
            };
            return '"' + e.replace(/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, function(e) {
                var i = t[e];
                return "string" == typeof i ? i : "\\u" + ("0000" + e.charCodeAt(0).toString(16)).slice(-4)
            }) + '"'
        },
        _stringifyArray: function(e) {
            for (var t = e.length, i = [], r = 0; r < t; r++)
                i.push(this._str(r, e) || "null");
            return "[" + i.join(",") + "]"
        },
        _stringifyObject: function(e) {
            var t, i, r = [];
            for (t in e)
                Object.prototype.hasOwnProperty.call(e, t) && (i = this._str(t, e)) && r.push(this._quote(t) + ":" + i);
            return "{" + r.join(",") + "}"
        },
        _stringifyReference: function(e) {
            switch (Object.prototype.toString.call(e)) {
            case "[object Array]":
                return this._stringifyArray(e)
            }
            return this._stringifyObject(e)
        },
        _stringifyPrimitive: function(e, t) {
            switch (t) {
            case "string":
                return this._quote(e);
            case "number":
                return isFinite(e) ? e : "null";
            case "boolean":
                return e
            }
            return "null"
        },
        _str: function(e, t) {
            var i = t[e]
              , r = typeof i;
            return i && "object" == typeof i && "function" == typeof i.toJSON && (r = typeof (i = i.toJSON(e))),
            /(number|string|boolean)/.test(r) || !i && "object" === r ? this._stringifyPrimitive(i, r) : this._stringifyReference(i)
        }
    })
}
, function(e, t) {
    var i;
    (i = jqxBaseFramework).jqx.dataview.grouping = function() {
        this.loadgrouprecords = function(e, t, r, s, n, o, a, l, d) {
            for (var h = e, c = this, u = new Array, p = 0; p < c.groups.length; p++)
                u[p] = c.generatekey();
            var f = new Array
              , m = 0
              , g = (u = u,
            new Array)
              , v = t
              , w = c.groups.length;
            this.loadedrecords = new Array,
            this.bounditems = new Array,
            this.loadedrecords = new Array,
            this.loadedrootgroups = new Array,
            this.loadedgroups = new Array,
            this.loadedgroupsByKey = new Array,
            this.sortedgroups = new Array;
            var x = null != this.sortdata
              , b = x ? this.sortdata : this.records;
            if (this.pageable) {
                var y = new Array
                  , _ = 0;
                b[t] || (i.each(b, function(e, i) {
                    y[t + e++] = this
                }),
                b = y)
            }
            if (this.virtualmode) {
                for (y = new Array,
                _ = 0,
                v = 0; v < r - t; v++)
                    b[v] ? y[t + _++] = b[v] : b[t + _] && (y[t + _] = b[t + _],
                    _++);
                v = 0,
                b = y
            }
            for (var q = t; q < r; q++) {
                var j = {};
                j = x ? i.extend({}, b[q].value) : i.extend({}, b[q]),
                id = j[c.uniqueId],
                (n >= l || id != a[n][c.uniqueId] || o && o[id]) && (d[d.length] = n);
                var S = new Array
                  , C = 0;
                for (p = 0; p < w; p++) {
                    var T = j[z = c.groups[p]];
                    null == T && (T = ""),
                    S[C++] = {
                        value: T,
                        hash: u[p]
                    }
                }
                if (S.length != w)
                    break;
                for (var I = null, k = "", D = 0; D < S.length; D++) {
                    var P = S[D].value;
                    if (null == g[k = k + "_" + S[D].hash + "_" + P] || null == g[k]) {
                        if (null == I)
                            I = {
                                group: P,
                                subItems: new Array,
                                subGroups: new Array,
                                level: 0
                            },
                            f[m++] = I,
                            I.uniqueid = c.generatekey(),
                            c.loadedgroupsByKey[P] = I;
                        else {
                            var B = {
                                group: P,
                                subItems: new Array,
                                subGroups: new Array,
                                parentItem: I,
                                level: I.level + 1
                            };
                            c.loadedgroupsByKey[I.uniqueid + "_" + P] = B,
                            B.uniqueid = c.generatekey(),
                            I.subGroups[I.subGroups.length++] = B,
                            I = B
                        }
                        g[k] = I
                    } else
                        I = g[k]
                }
                null != I ? (null == j.uid && (j.uid = this.getid(this.source.id, j, v)),
                x ? (j.boundindex = b[q].index,
                this.recordsbyid["id" + j.uid] = b[q].value) : (j.boundindex = v,
                this.recordsbyid["id" + j.uid] = b[q]),
                this.bounditems[j.boundindex] = j,
                this.sortedgroups[v] = j,
                j.uniqueid = c.generatekey(),
                j.parentItem = I,
                j.level = I.level + 1,
                I.subItems[I.subItems.length++] = j) : (null == j.uid && (j.uid = this.getid(this.source.id, j, v)),
                x ? (j.boundindex = b[q].index,
                this.recordsbyid["id" + j.uid] = b[q].value) : (j.boundindex = v,
                this.recordsbyid["id" + j.uid] = b[q]),
                this.sortedgroups[v] = j,
                this.bounditems[j.boundindex] = j,
                j.uniqueid = c.generatekey()),
                n++,
                v++
            }
            var M = function(t, i, r) {
                for (var s = 0; s < i.subItems.length; s++)
                    i.subItems[s].visibleindex = e + r,
                    t.rows[r] = i.subItems[s],
                    t.loadedrecords[r] = i.subItems[s],
                    r++;
                return r
            }
              , H = function(t, i, r) {
                var s = 1
                  , n = t.grid.columns.records ? t.grid.columns.records : t.grid.columns;
                if (1 == t.aggregates)
                    for (var o = 0; o < n.length; o++)
                        n[o].aggregates && (s = Math.max(s, n[o].aggregates.length));
                for (subGroup in i.subGroups) {
                    var a = i.subGroups[subGroup];
                    a.subGroups && (t.loadedgroups[t.loadedgroups.length] = a,
                    a.visibleindex = e + r,
                    t.rows[r] = a,
                    t.loadedrecords[r] = a,
                    r++,
                    a.subGroups.length > 0 ? r = H(t, a, r) : a.subItems.length > 0 && (r = M(t, a, r)))
                }
                return i.subItems.length > 0 && (r = M(t, i, r)),
                function(i) {
                    if (1 == t.aggregates)
                        for (var o = function(s) {
                            var o = i
                              , a = {}
                              , l = function(e) {
                                for (var i = 0; i < n.length; i++)
                                    if (n[i].aggregates)
                                        for (var r = t.grid.getcolumnaggregateddata(n[i].datafield, n[i].aggregates, !0, e), o = 0; o < n[i].aggregates.length; o++)
                                            if (n[i].aggregates[s]) {
                                                var l = n[i]
                                                  , d = n[i].aggregates[s]
                                                  , h = d
                                                  , c = (h = t.grid._getaggregatename(h)) + ":" + r[d];
                                                r[d] ? a[l.datafield] = c : a[l.datafield] = h + ":" + r[h]
                                            }
                            };
                            if (null != o)
                                if (a.level = o.level,
                                a.visibleindex = e + r,
                                a.uniqueid = t.generatekey(),
                                t.rows[r] = a,
                                t.loadedrecords[r++] = a,
                                a.totalsrow = !0,
                                i.subItems.length > 0) {
                                    o = i.subItems[i.subItems.length - 1],
                                    a.parentItem = o.parentItem,
                                    a.parentItem.subItems && (a.parentItem.subItems[a.parentItem.subItems.length] = a);
                                    var d = [];
                                    (h = function() {
                                        for (var e = 0; e < i.subItems.length; e++)
                                            i.subItems[e].totalsrow || (d[d.length] = i.subItems[e])
                                    }
                                    )(i),
                                    l(d)
                                } else if (i.subGroups.length > 0) {
                                    var h;
                                    o = i.subGroups[i.subGroups.length - 1],
                                    a.level = o.level,
                                    a.parentItem = i,
                                    i.subGroups[i.subGroups.length] = a,
                                    d = [],
                                    (h = function(e) {
                                        if (!e.totalsrow) {
                                            for (var t = 0; t < e.subItems.length; t++)
                                                e.subItems[t].totalsrow || (d[d.length] = e.subItems[t]);
                                            for (t = 0; t < e.subGroups.length; t++)
                                                h(e.subGroups[t])
                                        }
                                    }
                                    )(i),
                                    l(d)
                                }
                        }, a = 0; a < s; a++)
                            o(a)
                }(i),
                r
            }
              , O = f.length;
            for (this.loadedgroups = new Array,
            this.rows = new Array,
            h = 0,
            v = 0; v < O; v++) {
                var z = f[v];
                this.loadedrootgroups[v] = z,
                this.loadedgroups[this.loadedgroups.length] = z,
                z.visibleindex = e + h,
                this.rows[h] = z,
                this.loadedrecords[h] = z,
                h = H(this, z, ++h)
            }
            return h
        }
        ,
        this._updategroupsinpage = function(e, t, r, s, n, o, a) {
            var l = new Array
              , d = [];
            if (this.groupable && this.groups.length > 0) {
                for (var h = 0, c = new Array, u = new Array, p = 0; p < e.groups.length; p++)
                    u[p] = e.generatekey();
                var f = 0
                  , m = new Array
                  , g = 0;
                a > this.totalrecords && (a = this.totalrecords);
                for (var v = o; v < a; v++) {
                    var w = i.extend({}, e.sortedgroups[v]);
                    if (id = w[e.uniqueId],
                    !e.pagesize || r >= e.pagesize * e.pagenum && r < e.pagesize * (e.pagenum + 1)) {
                        (s >= n || id != l[s][e.uniqueId] || updated && updated[id]) && (d[d.length] = s);
                        var x = new Array
                          , b = 0;
                        for (p = 0; p < e.groups.length; p++) {
                            var y = w[P = e.groups[p]];
                            null == y && (y = ""),
                            x[b++] = {
                                value: y,
                                hash: u[p]
                            }
                        }
                        if (x.length != e.groups.length)
                            break;
                        for (var _ = null, q = "", j = 0; j < x.length; j++) {
                            var S = x[j].value;
                            if (null == c[q = q + "_" + x[j].hash + "_" + S] || null == c[q]) {
                                if (null == _)
                                    _ = {
                                        group: S,
                                        subItems: new Array,
                                        subGroups: new Array,
                                        level: 0
                                    },
                                    m[g++] = _,
                                    null != (T = e.loadedgroupsByKey[S]) && (_.visibleindex = T.visibleindex,
                                    _.uniqueid = T.uniqueid);
                                else {
                                    var C = {
                                        group: S,
                                        subItems: new Array,
                                        subGroups: new Array,
                                        parentItem: _,
                                        level: _.level + 1
                                    }
                                      , T = e.loadedgroupsByKey[_.uniqueid + "_" + S];
                                    C.visibleindex = T.visibleindex,
                                    C.uniqueid = T.uniqueid,
                                    _.subGroups[_.subGroups.length++] = C,
                                    _ = C
                                }
                                c[q] = _
                            } else
                                _ = c[q]
                        }
                        null != _ && (w.parentItem = _,
                        w.level = _.level + 1,
                        _.subItems[_.subItems.length++] = w),
                        s++
                    }
                    f++,
                    r++
                }
                var I = function(e, t, r) {
                    for (var s = 0; s < t.subItems.length; s++)
                        l[r] = i.extend({}, t.subItems[s]),
                        r++;
                    return r
                }
                  , k = function(e) {
                    var t = !1;
                    for (subGroup in e.subGroups) {
                        var i = e.subGroups[subGroup];
                        if (i.subGroups) {
                            if (i.subGroups.length > 0 && k(i))
                                return t = !0,
                                !0;
                            if (i.subItems.length > 0)
                                return t = !0,
                                !0
                        }
                    }
                    return e.subItems.length > 0 ? (t = !0,
                    !0) : t
                }
                  , D = function(e, t, i) {
                    var r = 1
                      , s = e.grid.columns.records ? e.grid.columns.records : e.grid.columns;
                    if (1 == e.aggregates)
                        for (var n = 0; n < s.length; n++)
                            s[n].aggregates && (r = Math.max(r, s[n].aggregates.length));
                    var o = function(t) {
                        if (1 == e.aggregates)
                            for (var n = function(r) {
                                var n = t
                                  , o = {}
                                  , a = function(t) {
                                    for (var i = 0; i < s.length; i++)
                                        if (s[i].aggregates)
                                            for (var n = e.grid.getcolumnaggregateddata(s[i].datafield, s[i].aggregates, !0, t), a = 0; a < s[i].aggregates.length; a++)
                                                if (s[i].aggregates[r]) {
                                                    var l = s[i]
                                                      , d = s[i].aggregates[r]
                                                      , h = d
                                                      , c = (h = e.grid._getaggregatename(h)) + ":" + n[d];
                                                    o[l.datafield] = c
                                                }
                                };
                                if (null != n)
                                    if (o.level = n.level,
                                    o.visibleindex = i,
                                    o.uniqueid = e.generatekey(),
                                    l[i] = o,
                                    e.loadedrecords[i++] = o,
                                    o.totalsrow = !0,
                                    t.subItems.length > 0) {
                                        n = t.subItems[t.subItems.length - 1],
                                        o.parentItem = n.parentItem,
                                        o.parentItem.subItems && (o.parentItem.subItems[o.parentItem.subItems.length] = o);
                                        var d = [];
                                        (h = function() {
                                            for (var e = 0; e < t.subItems.length; e++)
                                                t.subItems[e].totalsrow || (d[d.length] = t.subItems[e])
                                        }
                                        )(t),
                                        a(d)
                                    } else if (t.subGroups.length > 0) {
                                        var h;
                                        n = t.subGroups[t.subGroups.length - 1],
                                        o.level = n.level,
                                        o.parentItem = t,
                                        t.subGroups[t.subGroups.length] = o,
                                        d = [],
                                        (h = function(e) {
                                            if (!e.totalsrow) {
                                                for (var t = 0; t < e.subItems.length; t++)
                                                    e.subItems[t].totalsrow || (d[d.length] = e.subItems[t]);
                                                for (t = 0; t < e.subGroups.length; t++)
                                                    h(e.subGroups[t])
                                            }
                                        }
                                        )(t),
                                        a(d)
                                    }
                            }, o = 0; o < r; o++)
                                n(o)
                    };
                    for (subGroup in t.subGroups) {
                        var a = t.subGroups[subGroup];
                        a.subGroups && k(a) && (l[i] = a,
                        i++,
                        a.subGroups.length > 0 ? i = D(e, a, i) : a.subItems.length > 0 && (i = I(0, a, i)),
                        o(a))
                    }
                    return t.subItems.length > 0 && (i = I(0, t, i)),
                    o(t),
                    i
                };
                for (f = 0; f < m.length; f++) {
                    var P = m[f];
                    k(P) && (l[h] = P,
                    h = D(this, P, ++h))
                }
            }
            return l
        }
    }
    ,
    i.extend(i.jqx._jqxGrid.prototype, {
        _initgroupsheader: function() {
            if (this.groupsheader.css("visibility", "hidden"),
            this._groupsheader()) {
                this.groupsheader.css("visibility", "inherit");
                var e = this
                  , t = this.gridlocalization.groupsheaderstring;
                this.groupsheaderdiv = this.groupsheaderdiv || i('<div style="width: 100%; position: relative;"></div>'),
                this.groupsheaderdiv.height(this.groupsheaderheight),
                this.groupsheaderdiv.css("top", 0),
                this.groupsheader.append(this.groupsheaderdiv),
                this.groupheadersbounds = new Array;
                var r = this.groups.length;
                this.groupsheaderdiv.children().remove(),
                this.groupsheaderdiv[0].innerHTML = "";
                var s = new Array;
                if (r > 0)
                    i.each(this.groups, function(t) {
                        var n = this
                          , o = e._getColumnText(this).label
                          , a = e._rendergroupcolumn(o, n);
                        if (a.addClass(e.toThemeProperty("jqx-grid-group-column")),
                        e.groupsheaderdiv.append(a),
                        e.closeablegroups) {
                            var l = i(a.find(".jqx-icon-close"));
                            e.isTouchDevice() && !0 !== e.touchmode ? e.addHandler(l, "touchstart", function() {
                                return e.removegroupat(t),
                                !1
                            }) : e.addHandler(l, "click", function() {
                                return e.removegroupat(t),
                                !1
                            })
                        }
                        if (e.sortable && e.addHandler(a, "click", function() {
                            var t = e.getcolumn(n);
                            return null != t && e._togglesort(t),
                            !1
                        }),
                        s[s.length] = a,
                        e._handlegroupstocolumnsdragdrop(this, a),
                        t < r - 1) {
                            var d = a.height()
                              , h = i('<div style="float: left; position: relative;"></div>');
                            e.rtl && h.css("float", "right"),
                            h.width(e.groupindentwidth / 3),
                            h.height(1),
                            h.css("top", d / 2),
                            h.addClass(e.toThemeProperty("jqx-grid-group-column-line")),
                            e.groupsheaderdiv.append(h)
                        }
                    });
                else {
                    var n = i('<div style="position: relative;">' + t + "</div>");
                    this.groupsheaderdiv.append(n),
                    this.rtl && n.addClass(this.toThemeProperty("jqx-rtl"))
                }
                this._groupheaders = s,
                this._updategroupheadersbounds()
            }
        },
        _updategroupheadersbounds: function() {
            var e = this
              , t = this.groupsheaderdiv.children().outerHeight()
              , r = (this.groupsheader.height() - t) / 2;
            this.groupsheaderdiv.css("top", r),
            this.rtl ? (this.groupsheaderdiv.css("left", ""),
            this.groupsheaderdiv.css("right", r)) : (this.groupsheaderdiv.css("left", r),
            this.groupsheaderdiv.css("right", "")),
            this.rtl && this._groupheaders.reverse(),
            i.each(this._groupheaders, function(t) {
                var i = this.coord();
                e.groupheadersbounds[t] = {
                    left: i.left,
                    top: i.top,
                    width: this.outerWidth(),
                    height: this.outerHeight(),
                    index: t
                }
            })
        },
        addgroup: function(e) {
            if (e) {
                var t = this;
                t.groups !== t.dataview.groups && (t.dataview.groups = t.groups),
                t.groups[t.groups.length] = e,
                t.refreshgroups(),
                this._raiseEvent(12, {
                    type: "Add",
                    index: t.groups[t.groups.length],
                    groups: t.groups
                })
            }
        },
        insertgroup: function(e, t) {
            if (null != e && null != e && e >= 0 && e <= this.groups.length && t) {
                var i = this;
                i.groups !== i.dataview.groups && (i.dataview.groups = i.groups),
                i.groups.splice(e, 0, t.toString()),
                i.refreshgroups(),
                this._raiseEvent(12, {
                    type: "Insert",
                    index: e,
                    groups: i.groups
                })
            }
        },
        refreshgroups: function() {
            this._refreshdataview(),
            this._render(!0, !0, !0, !1),
            this._postrender("group")
        },
        _insertaftergroup: function(e, t) {
            var i = this._getGroupIndexByDataField(e);
            this.insertgroup(i + 1, t)
        },
        _insertbeforegroup: function(e, t) {
            var i = this._getGroupIndexByDataField(e);
            this.insertgroup(i, t)
        },
        removegroupat: function(e) {
            if (e >= 0 && null != e && null != e) {
                var t = this;
                return t.groups !== t.dataview.groups && (t.dataview.groups = t.groups),
                t.groups.splice(e, 1),
                t.refreshgroups(),
                t.virtualmode && t.updatebounddata(),
                this._raiseEvent(12, {
                    type: "Remove",
                    index: e,
                    groups: t.groups
                }),
                !0
            }
            return !1
        },
        cleargroups: function() {
            var e = this;
            return e.groups = [],
            e.dataview.groups = e.groups,
            e.refreshgroups(),
            this._raiseEvent(12, {
                type: "Clear",
                index: -1,
                groups: e.groups
            }),
            !0
        },
        removegroup: function(e) {
            if (null == e)
                return !1;
            var t = this.groups.indexOf(e.toString());
            return this.removegroupat(t)
        },
        getrootgroupscount: function() {
            return this.dataview.loadedrootgroups.length
        },
        collapsegroup: function(e) {
            if (e >= 0 && -1 === e.toString().indexOf("."))
                return this._setrootgroupstate(e, !1);
            var t = e.toString().split(".")
              , i = null;
            this.groupsVisibility || (this.groupsVisibility = new Array);
            for (var r = 0; r < t.length; r++)
                if (e = parseInt(t[r]),
                0 == r)
                    i = this.dataview.loadedrootgroups[e],
                    this.groupsVisibility[i.group] = null;
                else {
                    var s = i.subGroups[e];
                    s && (i = s,
                    r == t.length - 1 && (this._setgroupstate(i, !1, !0),
                    this.groupsVisibility[i.group] = null))
                }
        },
        expandgroup: function(e) {
            if (e >= 0 && -1 === e.toString().indexOf("."))
                return this._setrootgroupstate(e, !0);
            for (var t = e.toString().split("."), i = null, r = 0; r < t.length; r++)
                if (e = parseInt(t[r]),
                0 == r)
                    i = this.dataview.loadedrootgroups[e],
                    this._setrootgroupstate(e, !0),
                    this.groupsVisibility || (this.groupsVisibility = new Array),
                    this.groupsVisibility[i.group] = i;
                else {
                    var s = i.subGroups[e];
                    s && (i = s,
                    this._setgroupstate(i, !0, !0),
                    this.groupsVisibility || (this.groupsVisibility = new Array),
                    this.groupsVisibility[i.group] = i)
                }
        },
        collapseallgroups: function(e) {
            this._setbatchgroupstate(!1, e)
        },
        expandallgroups: function(e) {
            this._setbatchgroupstate(!0, e)
        },
        isgroupexpanded: function(e) {
            var t = this.dataview.loadedrootgroups[e];
            return null == t ? null : this.expandedgroups[t.uniqueid].expanded
        },
        getgroup: function(e) {
            var t = this.dataview.loadedrootgroups[e];
            if (null == t)
                return null;
            var r = this.expandedgroups[t.uniqueid].expanded
              , s = t.group
              , n = t.level
              , o = new Array;
            this._getsubgroups(o, t);
            var a = this
              , l = {
                group: s,
                level: n,
                expanded: r,
                subgroups: o
            };
            if (t.subItems) {
                var d = new Array;
                i.each(t.subItems, function() {
                    var e = this.boundindex;
                    d[d.length] = a.getrowdata(e)
                }),
                d.length > 0 && (l.subrows = d)
            }
            return l
        },
        getrootgroups: function() {
            for (var e = this.dataview.loadedrootgroups.length, t = new Array, i = 0; i < e; i++)
                t[i] = this.getgroup(i);
            return t
        },
        _getsubgroups: function(e, t) {
            var r = this;
            for (obj in t.subGroups) {
                var s = t.subGroups[obj]
                  , n = r.expandedgroups[s.uniqueid].expanded
                  , o = s.group
                  , a = s.level;
                if (e[e.length] = {
                    group: o,
                    level: a,
                    expanded: n
                },
                s.subItems) {
                    var l = new Array;
                    i.each(s.subItems, function() {
                        var e = this.boundindex;
                        l[l.length] = r.getrowdata(e)
                    }),
                    e[e.length - 1].subrows = l
                }
                if (s.subGroups) {
                    var d = new Array;
                    r._getsubgroups(d, s)
                }
            }
            return e
        },
        _setbatchgroupstate: function(e, t) {
            var i = this;
            for (obj in this.dataview.loadedrootgroups)
                i._setrootgroupstate(obj, e, !1, !0);
            if (0 == t)
                return i._requiresupdate = !0,
                i._renderrows(i.virtualsizeinfo),
                !0;
            var r = this.vScrollBar[0].style.visibility;
            return this.rendergridcontent(!0, !1),
            (r != this.vScrollBar[0].style.visibility || this._hiddencolumns) && (this._updatecolumnwidths(),
            this._updatecellwidths(),
            this._renderrows(this.virtualsizeinfo)),
            !0
        },
        _setrootgroupstate: function(e, t, i, r) {
            if (null == e || null == e || e < 0)
                return !1;
            if (!this.groupable || 0 == this.groups.length)
                return !1;
            var s = null == i || i;
            if (e >= 0 && e < this.dataview.loadedrootgroups.length) {
                var n = this.dataview.loadedrootgroups[e];
                if (this.pageable) {
                    for (var o = new Array, a = 0; a < this.dataview.rows.length; a++)
                        null != this.dataview.rows[a].group && 0 === this.dataview.rows[a].level && o.push(this.dataview.rows[a]);
                    if (!(n = o[e]))
                        return
                }
                return this._setgroupstate(n, t, s, r)
            }
            return !1
        },
        _togglegroupstate: function(e, t) {
            if (null == e || null == e)
                return !1;
            var i = this.vScrollInstance.value
              , r = this.expandedgroups[e.uniqueid];
            r = !(r = null != r && r.expanded),
            this.groupsVisibility || (this.groupsVisibility = new Array),
            this.groupsVisibility[e.group] = r ? e : null;
            var s = this._setgroupstate(e, r, t);
            return this._newmax = null,
            0 !== i && "hidden" !== this.vScrollBar.css("visibility") && (i <= this.vScrollInstance.max ? this.vScrollInstance.setPosition(i) : this.vScrollInstance.setPosition(this.vScrollInstance.max)),
            s
        },
        _setgroupstate: function(e, t, i, r) {
            if (null == e || null == e)
                return !1;
            var s = !1;
            this.editable && this.editcell && this.endcelledit(this.editcell.row, this.editcell.column, !1, !1);
            var n = this.expandedgroups[e.uniqueid];
            if (null == n && (n = {
                expanded: !1
            },
            s = !0),
            n.expanded != t && (s = !0),
            s) {
                if (this.expandedgroups[e.uniqueid] = {
                    expanded: t,
                    group: e
                },
                this._setsubgroupsvisibility(this, e, !t, r),
                i) {
                    var o = this.vScrollBar[0].style.visibility;
                    this.rendergridcontent(!0, !1),
                    (o != this.vScrollBar[0].style.visibility || this._hiddencolumns) && (this._updatecolumnwidths(),
                    this._updatecellwidths(),
                    this._renderrows(this.virtualsizeinfo))
                }
                return null != this.suspendgroupevents && 0 != this.suspendgroupevents || (t ? this._raiseEvent(4, {
                    group: e.group,
                    parentgroup: e.parentItem ? e.parentItem.group : null,
                    level: e.level,
                    visibleindex: e.visibleindex
                }) : this._raiseEvent(5, {
                    group: e.group,
                    parentgroup: e.parentItem ? e.parentItem.group : null,
                    level: e.level,
                    visibleindex: e.visibleindex
                })),
                !0
            }
            return !1
        },
        _setgroupitemsvisibility: function(e, t, i) {
            for (var r = 0; r < t.subItems.length; r++)
                e._setrowvisibility(t.subItems[r].visibleindex, i, !1)
        },
        _setsubgroupsvisibility: function(e, t, i, r) {
            if (null != t.parentItem) {
                if (this.hiddens[t.parentItem.visibleindex])
                    return
            } else if (null == t.parentItem && this.hiddens[t.visibleindex])
                return;
            for (subGroup in t.subGroups) {
                var s = t.subGroups[subGroup];
                i || e._setrowvisibility(s.visibleindex, i, !1);
                var n = !i;
                r ? this.expandedgroups[s.uniqueid] = {
                    expanded: n,
                    group: s
                } : n = null != e.expandedgroups[s.uniqueid] && e.expandedgroups[s.uniqueid].expanded,
                s.subGroups && (s.subGroups.length > 0 ? e._setsubgroupsvisibility(e, s, !n || i, r) : s.subItems.length > 0 && e._setgroupitemsvisibility(e, s, !n || i)),
                i && e._setrowvisibility(s.visibleindex, i, !1)
            }
            t.subItems && t.subItems.length > 0 && e._setgroupitemsvisibility(e, t, i)
        },
        _handlecolumnsdragdrop: function() {
            var e = this
              , t = -1
              , r = !1;
            if (e.groupable) {
                var s = "mousemove.grouping" + this.element.id
                  , n = (this.element.id,
                "mouseup.grouping" + this.element.id)
                  , o = !1;
                this.isTouchDevice() && !0 !== this.touchmode && (o = !0,
                s = i.jqx.mobile.getTouchEventName("touchmove") + ".grouping" + this.element.id,
                i.jqx.mobile.getTouchEventName("touchstart"),
                this.element.id,
                n = i.jqx.mobile.getTouchEventName("touchend") + ".grouping" + this.element.id),
                this.removeHandler(i(document), s),
                this.addHandler(i(document), s, function(s) {
                    if (!e.showgroupsheader)
                        return !0;
                    if (null != e.dragcolumn) {
                        var n = parseInt(s.pageX)
                          , a = parseInt(s.pageY);
                        if (o) {
                            var l = e.getTouches(s)[0];
                            n = parseInt(l.pageX),
                            a = parseInt(l.pageY)
                        }
                        var d = e.host.coord()
                          , h = parseInt(d.left)
                          , c = parseInt(d.top);
                        null != e.dragmousedownoffset && null != e.dragmousedownoffset || (e.dragmousedownoffset = {
                            left: 0,
                            top: 0
                        });
                        var u = parseInt(n) - parseInt(e.dragmousedownoffset.left)
                          , p = parseInt(a) - parseInt(e.dragmousedownoffset.top);
                        if (e.dragcolumn.css({
                            left: u + "px",
                            top: p + "px"
                        }),
                        r = !1,
                        n >= h && n <= h + e.host.width() && a >= c && a <= c + e.host.height() && (r = !0),
                        t = -1,
                        r) {
                            e.dragcolumnicon.removeClass(e.toThemeProperty("jqx-grid-dragcancel-icon")),
                            e.dragcolumnicon.addClass(e.toThemeProperty("jqx-grid-drag-icon"));
                            var f = e.groupsheader.coord()
                              , m = f.top + e.groupsheader.height()
                              , g = i.data(e.dragcolumn[0], "datarecord");
                            if (g)
                                var v = e.groups.indexOf(g.toString());
                            else
                                v = -1;
                            var w = -1 == v || e.groups.length > 1 && v > -1;
                            null != e.dropline && (a >= f.top && a <= m ? w && (t = e._handlegroupdroplines(n)) : e.dropline.fadeOut("slow"))
                        } else
                            null != e.dropline && e.dropline.fadeOut("slow"),
                            e.dragcolumnicon.removeClass(e.toThemeProperty("jqx-grid-drag-icon")),
                            e.dragcolumnicon.addClass(e.toThemeProperty("jqx-grid-dragcancel-icon"));
                        if (o)
                            return s.preventDefault(),
                            s.stopPropagation(),
                            !1
                    }
                }),
                this.removeHandler(i(document), n),
                this.addHandler(i(document), n, function(s) {
                    if (!e.showgroupsheader)
                        return !0;
                    e.__drag = !1,
                    i(document.body).removeClass("jqx-disableselect"),
                    parseInt(s.pageX);
                    var n = parseInt(s.pageY);
                    if (o) {
                        var a = e.getTouches(s)[0];
                        parseInt(a.pageX),
                        n = parseInt(a.pageY)
                    }
                    var l = e.host.coord()
                      , d = (parseInt(l.left),
                    parseInt(l.top))
                      , h = e.groupsheader.height();
                    if (e.showtoolbar && (d += e.toolbarheight),
                    e.dragstarted = !1,
                    e.dragmousedown = null,
                    null != e.dragcolumn) {
                        var c = i.data(e.dragcolumn[0], "datarecord");
                        if (e.dragcolumn.remove(),
                        e.dragcolumn = null,
                        null != c) {
                            if (!e.getcolumn(c).groupable)
                                return void (null != e.dropline && (e.dropline.remove(),
                                e.dropline = null));
                            if (r)
                                if (-1 != t) {
                                    var u = t.index
                                      , p = e.groups[u];
                                    (f = e._getGroupIndexByDataField(c)) != u && (null != f && f >= 0 && e.groups.splice(f, 1),
                                    "before" == t.position ? e.rtl ? e._insertaftergroup(p, c) : e._insertbeforegroup(p, c) : e.rtl ? e._insertbeforegroup(p, c) : e._insertaftergroup(p, c))
                                } else if (0 == e.groups.length)
                                    n > d && n <= d + h && e.addgroup(c);
                                else if (n > d + h) {
                                    var f = e._getGroupIndexByDataField(c);
                                    e.removegroupat(f)
                                }
                            null != e.dropline && (e.dropline.remove(),
                            e.dropline = null)
                        }
                    }
                })
            }
        },
        _getGroupIndexByDataField: function(e) {
            for (var t = 0; t < this.groups.length; t++)
                if (this.groups[t] == e)
                    return t;
            return -1
        },
        _isColumnInGroups: function(e) {
            for (var t = 0; t < this.groups.length; t++)
                if (this.groups[t] == e)
                    return !0;
            return !1
        },
        _handlegroupdroplines: function(e) {
            var t = this
              , r = -1;
            return i.each(t.groupheadersbounds, function(i) {
                if (e <= this.left + this.width / 2) {
                    var s = this.left - 3;
                    return i > 0 && (s = this.left - 1 - t.groupindentwidth / 6),
                    t.dropline.css("left", s),
                    t.dropline.css("top", this.top),
                    t.dropline.height(this.height),
                    t.dropline.fadeIn("slow"),
                    r = {
                        index: i,
                        position: "before"
                    },
                    t.rtl && (r = {
                        index: t.groupheadersbounds.length - 1 - i,
                        position: "before"
                    }),
                    !1
                }
                e >= this.left + this.width / 2 && (t.dropline.css("left", 1 + this.left + this.width),
                t.dropline.css("top", this.top),
                t.dropline.height(this.height),
                t.dropline.fadeIn("slow"),
                r = {
                    index: i,
                    position: "after"
                },
                t.rtl && (r = {
                    index: t.groupheadersbounds.length - 1 - i,
                    position: "after"
                }))
            }),
            r
        },
        _handlegroupstocolumnsdragdrop: function(e, t) {
            this.dragmousedown = null,
            this.dragmousedownoffset = null,
            this.dragstarted = !1,
            this.dragcolumn = null;
            var r, s = this, n = "mousedown", o = "mousemove", a = !1;
            this.isTouchDevice() && !0 !== this.touchmode && (a = !0,
            n = i.jqx.mobile.getTouchEventName("touchstart"),
            o = i.jqx.mobile.getTouchEventName("touchmove")),
            this.addHandler(t, "dragstart", function(e) {
                return !1
            }),
            this.addHandler(t, n, function(e) {
                if (!s.showgroupsheader)
                    return !0;
                var t = e.pageX
                  , r = e.pageY;
                if (s.__drag = !0,
                s.dragmousedown = {
                    left: t,
                    top: r
                },
                a) {
                    var n = s.getTouches(e)[0];
                    t = n.pageX,
                    r = n.pageY,
                    s.dragmousedown = {
                        left: t,
                        top: r
                    },
                    e.preventDefault && e.preventDefault()
                }
                var o = i(e.target).coord();
                s.dragmousedownoffset = {
                    left: parseInt(t) - parseInt(o.left),
                    top: parseInt(r - o.top)
                }
            }),
            this.addHandler(t, o, function(n) {
                if (!s.showgroupsheader)
                    return !0;
                if (s.dragmousedown) {
                    if (r = {
                        left: n.pageX,
                        top: n.pageY
                    },
                    a) {
                        var o = s.getTouches(n)[0];
                        r = {
                            left: o.pageX,
                            top: o.pageY
                        }
                    }
                    if (!s.dragstarted && null == s.dragcolumn) {
                        var l = Math.abs(r.left - s.dragmousedown.left)
                          , d = Math.abs(r.top - s.dragmousedown.top);
                        (l > 3 || d > 3) && (s._createdragcolumn(t, r, !0),
                        i(document.body).addClass("jqx-disableselect"),
                        i.data(s.dragcolumn[0], "datarecord", e),
                        n.preventDefault && n.preventDefault())
                    }
                }
            })
        },
        _createdragcolumn: function(e, t, r) {
            var s = this
              , n = t;
            s.dragcolumn = i("<div></div>");
            var o = e.clone();
            s.dragcolumn.css("z-index", 999999),
            o.css("border-width", "1px"),
            o.css("opacity", "0.4");
            var a = i(o.find("." + s.toThemeProperty("jqx-grid-column-menubutton")));
            a.length > 0 && a.css("display", "none");
            var l = i(o.find(".jqx-icon-close"));
            l.length > 0 && l.css("display", "none"),
            s.dragcolumnicon = i('<div style="z-index: 9999; position: absolute; left: 100%; top: 50%; margin-left: -18px; margin-top: -7px;"></div>'),
            s.dragcolumnicon.addClass(s.toThemeProperty("jqx-grid-drag-icon")),
            s.dragcolumn.css("float", "left"),
            s.dragcolumn.css("position", "absolute"),
            s.host.coord(),
            o.width(e.width() + 16),
            s.dragcolumn.append(o),
            s.dragcolumn.height(e.height()),
            s.dragcolumn.width(o.width()),
            s.dragcolumn.append(s.dragcolumnicon),
            i(document.body).append(s.dragcolumn),
            o.css("margin-left", 0),
            o.css("left", 0),
            o.css("top", 0),
            s.dragcolumn.css("left", n.left + s.dragmousedown.left),
            s.dragcolumn.css("top", n.top + s.dragmousedown.top),
            null != r && r && (s.dropline = i('<div style="display: none; position: absolute;"></div>'),
            s.dropline.width(2),
            s.dropline.addClass(s.toThemeProperty("jqx-grid-group-drag-line")),
            i(document.body).append(s.dropline))
        },
        iscolumngroupable: function(e) {
            return this._getcolumnproperty(e, "groupable")
        },
        _handlecolumnstogroupsdragdrop: function(e, t) {
            this.dragmousedown = null,
            this.dragmousedownoffset = null,
            this.dragstarted = !1,
            this.dragcolumn = null;
            var r = this
              , s = !1;
            this.isTouchDevice() && !0 !== this.touchmode && (s = !0);
            var n = "mousedown.drag"
              , o = "mousemove.drag";
            s ? (n = i.jqx.mobile.getTouchEventName("touchstart") + ".drag",
            o = i.jqx.mobile.getTouchEventName("touchmove") + ".drag") : this.addHandler(t, "dragstart", function(e) {
                return !1
            }),
            this.addHandler(t, n, function(n) {
                if (!r.showgroupsheader)
                    return !0;
                if (r.__drag = !0,
                r._isColumnInGroups(e.displayfield))
                    return t.css("cursor"),
                    !0;
                if (0 == e.groupable)
                    return !0;
                var o = n.pageX
                  , a = n.pageY;
                if (s) {
                    var l = r.getTouches(n)[0];
                    o = l.pageX,
                    a = l.pageY
                }
                r.dragmousedown = {
                    left: o,
                    top: a
                },
                s && n.preventDefault && n.preventDefault();
                var d = i(n.target).coord();
                r.dragmousedownoffset = {
                    left: parseInt(o) - parseInt(d.left),
                    top: parseInt(a - d.top)
                }
            }),
            this.addHandler(t, o, function(n) {
                if (!r.showgroupsheader)
                    return !0;
                if (r._isColumnInGroups(e.displayfield))
                    return t.css("cursor"),
                    !0;
                if (r.dragmousedown) {
                    var a = n.pageX
                      , l = n.pageY;
                    if (s) {
                        var d = r.getTouches(n)[0];
                        a = d.pageX,
                        l = d.pageY
                    }
                    if (o = {
                        left: a,
                        top: l
                    },
                    !r.dragstarted && null == r.dragcolumn) {
                        var h = Math.abs(o.left - r.dragmousedown.left)
                          , c = Math.abs(o.top - r.dragmousedown.top);
                        (h > 3 || c > 3) && (r._createdragcolumn(t, o, !0),
                        i.data(r.dragcolumn[0], "datarecord", e.displayfield),
                        n.preventDefault && n.preventDefault())
                    }
                }
            })
        },
        _rendergroupcolumn: function(e, t) {
            var r = i('<div style="float: left; position: relative;"></div>');
            if (this.rtl && r.css("float", "right"),
            null != this.groupcolumnrenderer && (r[0].innerHTML = this.groupcolumnrenderer(e),
            r.addClass(this.toThemeProperty("jqx-grid-group-column")),
            r.addClass(this.toThemeProperty("jqx-fill-state-normal"))),
            this.closeablegroups) {
                "" == r[0].innerHTML && (r[0].innerHTML = '<a style="float: left;" href="#">' + e + "</a>"),
                this.rtl && (r[0].innerHTML = '<a style="float: right;" href="#">' + e + "</a>");
                var s = this.rtl ? "left" : "right"
                  , n = '<div style="float: ' + s + '; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 100%; top: 50%; margin-left: -18px; margin-top: -8px; float: none; width: 16px; height: 16px;" class="' + this.toThemeProperty("jqx-icon-close") + '"></div></div>';
                i.jqx.browser.msie && i.jqx.browser.version < 8 && (n = '<div style="float: left; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 100%; top: 50%; margin-left: -18px; margin-top: -8px; float: none; width: 16px; height: 16px;" class="' + this.toThemeProperty("jqx-icon-close") + '"></div></div>'),
                this.rtl && (n = '<div style="float: ' + s + '; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 0px; top: 50%; margin-top: -8px; float: none; width: 16px; height: 16px;" class="' + this.toThemeProperty("jqx-icon-close") + '"></div></div>',
                i.jqx.browser.msie && i.jqx.browser.version < 8 && (n = '<div style="float: left; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 0px; top: 50%; margin-top: -8px; float: none; width: 16px; height: 16px;" class="' + this.toThemeProperty("jqx-icon-close") + '"></div></div>')),
                r[0].innerHTML += n
            } else
                "" == r[0].innerHTML && (r[0].innerHTML = '<a href="#">' + e + "</a>");
            if (this.sortable) {
                var o = i('<div style="float: right; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 100%; top: 50%; margin-left: -16px; margin-top: -8px; float: none; width: 16px; height: 16px;" class="' + this.toThemeProperty("jqx-grid-column-sortascbutton") + '"></div></div>')
                  , a = i('<div style="float: right; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 100%; top: 50%; margin-left: -16px; margin-top: -8px; float: none; width: 16px; height: 16px;" class="' + this.toThemeProperty("jqx-grid-column-sortdescbutton") + '"></div></div>');
                this.closeablegroups && (o = i('<div style="float: right; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 100%; top: 50%; margin-left: -32px; margin-top: -8px; float: none; width: 16px; height: 16px;" class="' + this.toThemeProperty("jqx-grid-column-sortascbutton") + '"></div></div>'),
                a = i('<div style="float: right; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 100%; top: 50%; margin-left: -32px; margin-top: -8px; float: none; width: 16px; height: 16px;" class="' + this.toThemeProperty("jqx-grid-column-sortdescbutton") + '"></div></div>')),
                this.rtl && (o = i('<div style="float: right; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 0px; top: 50%; margin-left: 0px; margin-top: -8px; float: none; width: 16px; height: 16px;" class="' + this.toThemeProperty("jqx-grid-column-sortascbutton") + '"></div></div>'),
                a = i('<div style="float: right; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 0px; top: 50%; margin-left: 0px; margin-top: -8px; float: none; width: 16px; height: 16px;" class="' + this.toThemeProperty("jqx-grid-column-sortdescbutton") + '"></div></div>'),
                this.closeablegroups && (o = i('<div style="float: right; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 0px; top: 50%; margin-left: 16px; margin-top: -8px; float: none; width: 16px; height: 16px;" class="' + this.toThemeProperty("jqx-grid-column-sortascbutton") + '"></div></div>'),
                a = i('<div style="float: right; min-height: 16px; min-width: 18px;"><div style="position: absolute; left: 0px; top: 50%; margin-left: 16px; margin-top: -8px; float: none; width: 16px; height: 16px;" class="' + this.toThemeProperty("jqx-grid-column-sortdescbutton") + '"></div></div>'))),
                o.css("display", "none"),
                a.css("display", "none"),
                i.jqx.browser.msie && i.jqx.browser.version < 8 && (o.css("float", "left"),
                a.css("float", "left")),
                r.append(o),
                r.append(a),
                i.data(document.body, "groupsortelements" + t, {
                    sortasc: o,
                    sortdesc: a
                })
            }
            return r.addClass(this.toThemeProperty("jqx-fill-state-normal")),
            r.addClass(this.toThemeProperty("jqx-grid-group-column")),
            r
        },
        _rendergroup: function(e, t, r, s, n, o, a) {
            var l = t
              , d = t.cells[r.level];
            this.rtl && (d = t.cells[t.cells.length - 1 - r.level]);
            var h = this._findgroupstate(r.uniqueid);
            if (r.bounddata.subGroups.length > 0 || r.bounddata.subItems.length > 0) {
                var c = this.rtl ? "-rtl" : ""
                  , u = this.toThemeProperty("jqx-icon-arrow-right");
                c && (u = this.toThemeProperty("jqx-icon-arrow-left")),
                d.className += h ? " " + this.toThemeProperty("jqx-grid-group-expand" + c) + " " + this.toThemeProperty("jqx-icon-arrow-down") : " " + this.toThemeProperty("jqx-grid-group-collapse" + c) + " " + u
            }
            var p = this._getColumnText(this.groups[r.level]).label
              , f = this.groupindentwidth
              , m = a - (k = this.rowdetails && this.showrowdetailscolumn ? (1 + e) * f : e * f)
              , g = r.level + 1;
            this.rtl && (g = 0);
            for (var v = l.cells[g], w = 2; null != v && "none" == v.style.display && w < l.cells.length - 1; )
                v = l.cells[g + w - 1],
                w++;
            var x = i(v);
            if (v) {
                if (v.style.width = parseInt(m) + "px",
                -1 != v.className.indexOf("jqx-grid-cell-filter") && x.removeClass(this.toThemeProperty("jqx-grid-cell-filter")),
                -1 != v.className.indexOf("jqx-grid-cell-sort") && x.removeClass(this.toThemeProperty("jqx-grid-cell-sort")),
                -1 != v.className.indexOf("jqx-grid-cell-pinned") && x.removeClass(this.toThemeProperty("jqx-grid-cell-pinned")),
                null != this.groupsrenderer) {
                    var b = {
                        group: r.group,
                        level: r.level,
                        parent: r.bounddata.parentItem,
                        subGroups: r.bounddata.subGroups,
                        subItems: r.bounddata.subItems,
                        groupcolumn: this._getColumnText(this.groups[r.level]).column
                    }
                      , y = this.groupsrenderer(p + ": " + r.group, r.group, h, b);
                    if (y)
                        v.innerHTML = y;
                    else {
                        var _ = r.bounddata.subItems.length > 0 ? r.bounddata.subItems.length : r.bounddata.subGroups.length;
                        if (this.showgroupaggregates) {
                            var q = r.bounddata.subItems.length > 0 ? r.bounddata.subItems : r.bounddata.subGroups;
                            _ = 0;
                            for (var j = 0; j < q.length; j++)
                                q[j].totalsrow || _++
                        }
                        v.innerHTML = '<div class="' + this.toThemeProperty("jqx-grid-groups-row") + '" style="position: absolute;"><span>' + p + ': </span><span class="' + this.toThemeProperty("jqx-grid-groups-row-details") + '">' + r.group + " (" + _ + ")</span></div>"
                    }
                } else {
                    var S = this._getcolumnbydatafield(this.groups[r.level])
                      , C = r.group;
                    if (null == S)
                        throw new Error("jqxGrid: Unable to find '" + this.groups[r.level] + "' group in the Grid's columns collection.");
                    if (S.cellsformat && i.jqx.dataFormat && (i.jqx.dataFormat.isDate(C) ? C = i.jqx.dataFormat.formatdate(C, S.cellsformat, this.gridlocalization) : i.jqx.dataFormat.isNumber(C) && (C = i.jqx.dataFormat.formatnumber(C, S.cellsformat, this.gridlocalization))),
                    _ = r.bounddata.subItems.length > 0 ? r.bounddata.subItems.length : r.bounddata.subGroups.length,
                    this.showgroupaggregates)
                        for (q = r.bounddata.subItems.length > 0 ? r.bounddata.subItems : r.bounddata.subGroups,
                        _ = 0,
                        j = 0; j < q.length; j++)
                            q[j].totalsrow || _++;
                    v.innerHTML = '<div class="' + this.toThemeProperty("jqx-grid-groups-row") + '" style="position: absolute;"><span>' + p + ': </span><span class="' + this.toThemeProperty("jqx-grid-groups-row-details") + '">' + C + " (" + _ + ")</span></div>"
                }
                if (this.rtl) {
                    S || (S = this._getcolumnbydatafield(this.groups[r.level]));
                    var T = "hidden" == this.hScrollBar.css("visibility") ? 0 : this.hScrollInstance.max - this.hScrollInstance.value
                      , I = "hidden" == this.vScrollBar.css("visibility") ? 0 : this.scrollbarsize + 6
                      , k = this.rowdetails && this.showrowdetailscolumn ? (2 + r.level) * f : (1 + r.level) * f;
                    v.style.width = a + parseInt(T) - k - I + "px",
                    x.addClass(this.toThemeProperty("jqx-rtl"));
                    var D = i(t.cells[t.cells.length - 1]).css("z-index");
                    x.css("z-index", D);
                    var P = x.find("div");
                    m = P.width(),
                    P.css("left", "100%");
                    var B = null != this.columns.records[t.cells.length - 2 - r.level] && this.columns.records[t.cells.length - 2 - r.level].pinned;
                    this.table.width() < a && (a = this.table.width(),
                    "hidden" != this.vScrollBar.css("visibility") && (a += this.vScrollBar.outerWidth())),
                    S.pinned || B ? (this.rowdetails && this.showrowdetailscolumn && (a += 30),
                    P.css("margin-left", -m),
                    v.style.width = a + T - k - I + "px") : (T = "hidden" == this.hScrollBar.css("visibility") ? 0 : this.hScrollInstance.max,
                    v.style.width = a + T - k - I + "px",
                    m = P.width(),
                    P.css("margin-left", -m))
                }
            }
        }
    })
}
, function(e, t) {
    var i;
    (i = jqxBaseFramework).extend(i.jqx._jqxGrid.prototype, {
        exportdata: function(e, t, r, s, n, o, a) {
            if (!i.jqx.dataAdapter.ArrayExporter)
                throw "jqxGrid: Missing reference to jqxdata.export.js!";
            null == r && (r = !0);
            var l = this;
            if (null == s && 0 == (s = this.getrows()).length)
                throw "No data to export.";
            this.exporting = !0,
            this.pageable || (this.loadondemand = !0),
            this.altrows && this._renderrows(this.virtualsizeinfo);
            var d = null != n && n
              , h = {}
              , c = {}
              , u = this.host.find(".jqx-grid-cell:first")
              , p = this.host.find(".jqx-grid-cell-alt:first");
            u.removeClass(this.toThemeProperty("jqx-grid-cell-selected")),
            u.removeClass(this.toThemeProperty("jqx-fill-state-pressed")),
            p.removeClass(this.toThemeProperty("jqx-grid-cell-selected")),
            p.removeClass(this.toThemeProperty("jqx-fill-state-pressed")),
            u.removeClass(this.toThemeProperty("jqx-grid-cell-hover")),
            u.removeClass(this.toThemeProperty("jqx-fill-state-hover")),
            p.removeClass(this.toThemeProperty("jqx-grid-cell-hover")),
            p.removeClass(this.toThemeProperty("jqx-fill-state-hover"));
            for (var f = "cell", m = 1, g = "column", v = 1, w = [], x = 0; x < this.columns.records.length; x++) {
                var b = this.columns.records[x];
                if ("" != b.cellclassname)
                    if (b.customCellStyles = new Array,
                    "string" == typeof b.cellclassname)
                        for (var y = 0; y < s.length; y++)
                            b.customCellStyles[y] = b.cellclassname;
                    else
                        for (y = 0; y < s.length; y++) {
                            var _ = this.getrowboundindex(y)
                              , q = b.cellclassname(_, b.displayfield, s[y][b.displayfield], s[y]);
                            q && (b.customCellStyles[y] = q)
                        }
            }
            var j = new Array
              , S = null
              , C = null
              , T = null;
            if (i.each(this.columns.records, function(t) {
                var n = i(l.table[0].rows[0].cells[t]);
                if (l.table[0].rows.length > 1) {
                    var o = i(l.table[0].rows[1].cells[t]);
                    T || (T = o)
                }
                C || (C = n);
                var a = this
                  , u = function(e) {
                    if (e.removeClass(l.toThemeProperty("jqx-grid-cell-selected")),
                    e.removeClass(l.toThemeProperty("jqx-fill-state-pressed")),
                    e.removeClass(l.toThemeProperty("jqx-grid-cell-hover")),
                    e.removeClass(l.toThemeProperty("jqx-fill-state-hover")),
                    a.customCellStyles)
                        for (var t in a.customCellStyles)
                            e.removeClass(a.customCellStyles[t])
                };
                if (u(n),
                o && u(o),
                null == this.displayfield)
                    return !0;
                l.showaggregates && l.getcolumnaggregateddata && w.push(l.getcolumnaggregateddata(this.displayfield, this.aggregates, !0, s));
                var p = l._getexportcolumntype(this);
                !this.exportable || this.hidden && !d || (h[this.displayfield] = {},
                h[this.displayfield].text = this.text,
                h[this.displayfield].width = parseInt(this.width),
                isNaN(h[this.displayfield].width) && (h[this.displayfield].width = 60),
                h[this.displayfield].formatString = this.cellsformat,
                h[this.displayfield].localization = l.gridlocalization,
                h[this.displayfield].type = p,
                h[this.displayfield].cellsAlign = this.cellsalign,
                h[this.displayfield].hidden = !r,
                h[this.displayfield].displayfield = this.displayfield,
                j.push(h[this.displayfield])),
                f = "cell" + m;
                var x = i(this.element);
                if (null == this.element && (x = i(this.uielement)),
                S) {
                    if (!a._rendered) {
                        x = S,
                        n = C,
                        o = T;
                        var b = l.toTP("jqx-grid-cell") + " " + l.toTP("jqx-item");
                        n[0].className = b,
                        b += l.toTP("jqx-grid-cell-alt"),
                        o && (o[0].className = b)
                    }
                } else
                    S = x;
                if (g = "column" + v,
                "html" == e || "xls" == e || "pdf" == e) {
                    var y = function(t, i, r, s, n, o, a, l, u) {
                        c[t] = {},
                        null != i && (c[t]["font-size"] = i.css("font-size"),
                        c[t]["font-weight"] = i.css("font-weight"),
                        c[t]["font-style"] = i.css("font-style"),
                        c[t]["background-color"] = o._getexportcolor(i.css("background-color")),
                        c[t].color = o._getexportcolor(i.css("color")),
                        c[t]["border-color"] = o._getexportcolor(i.css("border-top-color")),
                        r ? c[t]["text-align"] = n.align : (c[t]["text-align"] = n.cellsalign,
                        c[t].formatString = n.cellsformat,
                        c[t].dataType = p),
                        "html" != e && "pdf" != e || (c[t]["border-top-width"] = i.css("border-top-width"),
                        c[t]["border-left-width"] = i.css("border-left-width"),
                        c[t]["border-right-width"] = i.css("border-right-width"),
                        c[t]["border-bottom-width"] = i.css("border-bottom-width"),
                        c[t]["border-top-style"] = i.css("border-top-style"),
                        c[t]["border-left-style"] = i.css("border-left-style"),
                        c[t]["border-right-style"] = i.css("border-right-style"),
                        c[t]["border-bottom-style"] = i.css("border-bottom-style"),
                        r ? (0 == a && (c[t]["border-left-width"] = i.css("border-right-width")),
                        c[t]["border-top-width"] = i.css("border-right-width"),
                        c[t]["border-bottom-width"] = i.css("border-bottom-width")) : 0 == a && (c[t]["border-left-width"] = i.css("border-right-width")),
                        c[t].height = i.css("height")),
                        !n.exportable || n.hidden && !d || (1 == l ? (h[n.displayfield].customCellStyles || (h[n.displayfield].customCellStyles = new Array),
                        h[n.displayfield].customCellStyles[u] = t) : r ? h[n.displayfield].style = t : s ? h[n.displayfield].cellAltStyle = t : h[n.displayfield].cellStyle = t))
                    };
                    if (y(g, x, !0, !1, this, l, t),
                    v++,
                    y(f, n, !1, !1, this, l, t),
                    l.altrows && y(f = "cellalt" + m, o, !1, !0, this, l, t),
                    this.customCellStyles) {
                        for (var _ in a.customCellStyles)
                            n.removeClass(a.customCellStyles[_]);
                        for (var _ in a.customCellStyles)
                            n.addClass(a.customCellStyles[_]),
                            y(f + a.customCellStyles[_], n, !1, !1, this, l, t, !0, _),
                            n.removeClass(a.customCellStyles[_])
                    }
                    m++
                }
            }),
            i.each(this.columns.records, function(e) {
                h[this.displayfield] && (h[this.displayfield].columnsDataFields = j)
            }),
            this.showaggregates) {
                var I = []
                  , k = "xls" == e ? "_AG" : ""
                  , D = this.groupable ? this.groups.length : 0;
                this.rowdetails && D++,
                "checkbox" === this.selectionmode && D++,
                w.length > 0 && (i.each(this.columns.records, function(e) {
                    if (this.aggregates)
                        for (var t = 0; t < this.aggregates.length; t++)
                            if (I[t] || (I[t] = {}),
                            I[t]) {
                                var i = l._getaggregatename(this.aggregates[t])
                                  , r = l._getaggregatetype(this.aggregates[t])
                                  , s = w[e - D];
                                s && (I[t][this.displayfield] = k + i + ": " + s[r])
                            }
                }),
                i.each(this.columns.records, function(e) {
                    for (var t = 0; t < I.length; t++)
                        null == I[t][this.displayfield] && (I[t][this.displayfield] = k)
                })),
                i.each(I, function() {
                    s.push(this)
                })
            }
            var P = this
              , B = i.jqx.dataAdapter.ArrayExporter(s, h, c);
            if (null == t) {
                this._renderrows(this.virtualsizeinfo);
                var M = B.exportTo(e);
                return this.showaggregates && i.each(I, function() {
                    s.pop(this)
                }),
                setTimeout(function() {
                    P.exporting = !1
                }, 50),
                M
            }
            B.exportToFile(e, t, o, a),
            this.showaggregates && i.each(I, function() {
                s.pop(this)
            }),
            this._renderrows(this.virtualsizeinfo),
            setTimeout(function() {
                P.exporting = !1
            }, 50)
        },
        _getexportcolor: function(e) {
            var t = e;
            if ("transparent" == e && (t = "#FFFFFF"),
            t && t.toString() || (t = "#FFFFFF"),
            -1 != t.toString().indexOf("rgb")) {
                var i = t.split(",");
                if (-1 != t.toString().indexOf("rgba")) {
                    var r = parseInt(i[0].substring(5))
                      , s = parseInt(i[1])
                      , n = parseInt(i[2])
                      , o = parseInt(i[3].substring(1, 4))
                      , a = {
                        r: r,
                        g: s,
                        b: n
                    }
                      , l = this._rgbToHex(a);
                    return 0 == r && 0 == s && 0 == n && 0 == o ? "#ffffff" : "#" + l
                }
                return a = {
                    r: r = parseInt(i[0].substring(4)),
                    g: s = parseInt(i[1]),
                    b: n = parseInt(i[2].substring(1, 4))
                },
                "#" + (l = this._rgbToHex(a))
            }
            if (-1 != t.toString().indexOf("#") && 4 == t.toString().length) {
                var d = t.toString().substring(1, 4);
                t += d
            }
            return t
        },
        _rgbToHex: function(e) {
            return this._intToHex(e.r) + this._intToHex(e.g) + this._intToHex(e.b)
        },
        _intToHex: function(e) {
            var t = parseInt(e).toString(16);
            return 1 == t.length && (t = "0" + t),
            t.toUpperCase()
        },
        _getexportcolumntype: function(e) {
            var t = this
              , r = "string"
              , s = t.source.datafields || (t.source._source ? t.source._source.datafields : null);
            if (s) {
                var n = "";
                if (i.each(s, function() {
                    if (this.name == e.displayfield)
                        return this.type && (n = this.type),
                        !1
                }),
                n)
                    return n
            }
            if (null != e) {
                if (null == this.dataview.cachedrecords)
                    return r;
                var o = null;
                if (this.virtualmode)
                    i.each(this.dataview.cachedrecords, function() {
                        return o = this[e.displayfield],
                        !1
                    });
                else {
                    if (0 == this.dataview.cachedrecords.length)
                        return r;
                    if (null != (o = this.dataview.cachedrecords[0][e.displayfield]) && "" == o.toString())
                        return "string"
                }
                if (null != o) {
                    if (-1 != e.cellsformat.indexOf("c"))
                        return "number";
                    if (-1 != e.cellsformat.indexOf("n"))
                        return "number";
                    if (-1 != e.cellsformat.indexOf("p"))
                        return "number";
                    if (-1 != e.cellsformat.indexOf("d"))
                        return "date";
                    if (-1 != e.cellsformat.indexOf("y"))
                        return "date";
                    if (-1 != e.cellsformat.indexOf("M"))
                        return "date";
                    if (-1 != e.cellsformat.indexOf("m"))
                        return "date";
                    if (-1 != e.cellsformat.indexOf("t"))
                        return "date";
                    if ("boolean" == typeof o)
                        r = "boolean";
                    else if (i.jqx.dataFormat.isNumber(o))
                        r = "number";
                    else {
                        var a = new Date(o);
                        if ("NaN" == a.toString() || "Invalid Date" == a.toString())
                            if (i.jqx.dataFormat) {
                                if (null != (a = i.jqx.dataFormat.tryparsedate(o))) {
                                    if (a && a.getFullYear() && 1970 == a.getFullYear() && 0 == a.getMonth() && 1 == a.getDate()) {
                                        var l = new Number(o);
                                        return isNaN(l) ? "string" : "number"
                                    }
                                    return "date"
                                }
                                r = "string"
                            } else
                                r = "string";
                        else
                            r = "date"
                    }
                }
            }
            return r
        }
    })
}
, function(e, t) {
    var i;
    (i = jqxBaseFramework).extend(i.jqx._jqxGrid.prototype, {
        autoresizecolumns: function(e, t) {
            "cells" != e && "all" != e && "column" != e && (e = "all");
            var r = this.that
              , s = this.getrows();
            this.pageable && (s = this.dataview.rows,
            this.groupable && (s = this.dataview.records)),
            t = null == t ? 0 : parseInt(t);
            var n = s.length;
            if (null == n && null != s) {
                var o = new Array;
                i.each(s, function(e) {
                    o.push(this)
                }),
                n = (s = o).length
            }
            var a = i("<span></span>");
            a.addClass(this.toThemeProperty("jqx-widget")),
            a.addClass(this.toThemeProperty("jqx-grid-cell")),
            i(document.body).append(a);
            var l = []
              , d = []
              , h = []
              , c = []
              , u = r.host.width();
            "hidden" != r.vScrollBar[0].style.visibility && (u -= this.scrollbarsize + 5),
            u < 0 && (u = 0);
            for (var p = 0; p < n; p++)
                for (var f = s[p], m = 0; m < this.columns.records.length; m++)
                    if (!((j = this.columns.records[m]).hidden || this.groups.length > 0 && m <= this.groups.length - 1)) {
                        null == d[j.displayfield] && (d[j.displayfield] = 0),
                        null == h[j.displayfield] && (h[j.displayfield] = "");
                        var g, v, w = f[j.displayfield];
                        if ("" != j.cellsformat)
                            i.jqx.dataFormat && (i.jqx.dataFormat.isDate(w) ? w = i.jqx.dataFormat.formatdate(w, j.cellsformat, this.gridlocalization) : i.jqx.dataFormat.isNumber(w) && (w = i.jqx.dataFormat.formatnumber(w, j.cellsformat, this.gridlocalization)));
                        else if (j.cellsrenderer) {
                            var x = r._defaultcellsrenderer(w, j)
                              , b = j.cellsrenderer(p, j.datafield, w, x, j.getcolumnproperties(), f);
                            null != b && (w = i(b).text())
                        }
                        if ((null == e || "cells" == e || "all" == e) && null != w) {
                            l = w.toString().length;
                            var y = w.toString().replace(/[^A-Z]/g, "").length;
                            l > d[j.displayfield] && (d[j.displayfield] = l,
                            h[j.displayfield] = w,
                            c[j.displayfield] = y),
                            l > 0 && l >= y && (g = 20 * y + 15 * (l - y)) > (v = 20 * c[j.displayfield] + 15 * (d[j.displayfield] - c[j.displayfield])) && g > 0 && v > 0 && (d[j.displayfield] = l,
                            h[j.displayfield] = w,
                            c[j.displayfield] = y)
                        }
                        if ("column" == e || "all" == e)
                            j.text.toString().length > d[j.displayfield] && (h[j.displayfield] = j.text,
                            d[j.displayfield] = j.text.length,
                            y = j.text.toString().replace(/[^A-Z]/g, "").length,
                            c[j.displayfield] = y),
                            l = (w = j.text).toString().length,
                            y = w.toString().replace(/[^A-Z]/g, "").length,
                            l > 0 && l >= y && (g = 20 * y + 15 * (l - y)) > (v = 20 * c[j.displayfield] + 15 * (d[j.displayfield] - c[j.displayfield])) && g > 0 && v > 0 && (d[j.displayfield] = l,
                            h[j.displayfield] = w,
                            c[j.displayfield] = y)
                    }
            if (this.columns.records) {
                for (m = 0; m < this.columns.records.length; m++)
                    if ((j = this.columns.records[m]).displayfield) {
                        null == h[j.displayfield] && (h[j.displayfield] = j.text),
                        a[0].className.indexOf("jqx-grid-column-header") >= 0 && a.removeClass(this.toThemeProperty("jqx-grid-column-header")),
                        h[j.displayfield] == j.text && a.addClass(this.toThemeProperty("jqx-grid-column-header")),
                        a[0].innerHTML = h[j.displayfield].toString();
                        var _ = a.outerWidth() + 10;
                        if (a.children().length > 0 && (_ = a.children().outerWidth() + 10),
                        i.jqx.browser.msie && i.jqx.browser.version < 8 && (_ += 10),
                        this.filterable && this.showfilterrow && (_ += 5),
                        (_ += t) > j.maxwidth && (_ = j.maxwidth),
                        null != j._width && (j.__width = j._width),
                        j._width = null,
                        "auto" == j.maxwidth || _ <= j.maxwidth) {
                            var q = j.width;
                            _ < j.minwidth && (_ = j.minwidth),
                            j.width = _,
                            null != j._percentagewidth && (j._percentagewidth = null),
                            this._raiseEvent(14, {
                                columntext: j.text,
                                column: j.getcolumnproperties(),
                                datafield: j.datafield,
                                displayfield: j.displayfield,
                                oldwidth: q,
                                newwidth: _
                            })
                        }
                    }
                for (a.remove(),
                this._updatecolumnwidths(),
                this._updatecellwidths(),
                this._renderrows(this.virtualsizeinfo),
                m = 0; m < this.columns.records.length; m++) {
                    var j;
                    null != (j = this.columns.records[m]).__width && (j._width = j.__width)
                }
            }
        },
        autoresizecolumn: function(e, t, r) {
            if ("cells" != t && "all" != t && "column" != t && (t = "all"),
            null == e)
                return !1;
            var s = this.getrows();
            this.pageable && (s = this.dataview.rows,
            this.groupable && (s = this.dataview.records));
            var n = this.getcolumn(e);
            if (null == n)
                return !1;
            r = null == r ? 0 : parseInt(r);
            var o = s.length
              , a = i("<span></span>");
            a.addClass(this.toThemeProperty("jqx-widget")),
            a.addClass(this.toThemeProperty("jqx-grid-cell")),
            i(document.body).append(a);
            var l, d, h = 0, c = "", u = 0, p = this.that, f = p.host.width();
            if ("hidden" != p.vScrollBar[0].style.visibility && (f -= this.scrollbarsize + 5),
            f < 0 && (f = 0),
            null == t || "cells" == t || "all" == t)
                for (var m = 0; m < o; m++) {
                    var g = s[m][n.displayfield];
                    if ("" != n.cellsformat)
                        i.jqx.dataFormat && (i.jqx.dataFormat.isDate(g) ? g = i.jqx.dataFormat.formatdate(g, n.cellsformat, this.gridlocalization) : i.jqx.dataFormat.isNumber(g) && (g = i.jqx.dataFormat.formatnumber(g, n.cellsformat, this.gridlocalization)));
                    else if (n.cellsrenderer) {
                        var v = n.cellsrenderer(m, n, g);
                        null != v && (g = i(v).text())
                    }
                    if (null != g) {
                        var w = g.toString().length
                          , x = g.toString().replace(/[^A-Z]/g, "").length;
                        w > h && (h = w,
                        c = g,
                        u = x),
                        w > 0 && w >= x && (l = 20 * x + 15 * (w - x)) > (d = 20 * u + 15 * (h - u)) && l > 0 && d > 0 && (h = w,
                        c = g,
                        u = x)
                    }
                }
            "column" != t && "all" != t || (n.text.toString().length > h && (c = n.text),
            w = (g = n.text.toString()).toString().length,
            x = g.toString().replace(/[^A-Z]/g, "").length,
            w > 0 && w >= x && (l = 20 * x + 15 * (w - x)) > (d = 20 * u + 15 * (h - u)) && l > 0 && d > 0 && (h = w,
            c = g,
            u = x));
            null == c && (c = n.text),
            a[0].innerHTML = c,
            c == n.text && a.addClass(this.toThemeProperty("jqx-grid-column-header"));
            var b = a.outerWidth() + 10;
            if (i.jqx.browser.msie && i.jqx.browser.version < 8 && (b += 5),
            this.filterable && this.showfilterrow && (b += 5),
            b += r,
            a.remove(),
            b > n.maxwidth && (b = n.maxwidth),
            "auto" == n.maxwidth || b <= n.maxwidth) {
                var y = n.width;
                b < n.minwidth && (b = n.minwidth),
                n.width = b,
                null != n._width && (n.__width = n._width),
                n._width = null,
                null != n._percentagewidth && (n._percentagewidth = null),
                this._updatecolumnwidths(),
                this._updatecellwidths(),
                this._raiseEvent(14, {
                    columntext: n.text,
                    column: n.getcolumnproperties(),
                    datafield: e,
                    displayfield: n.displayfield,
                    oldwidth: y,
                    newwidth: b
                }),
                this._renderrows(this.virtualsizeinfo),
                null != n._width && (n._width = n.__width)
            }
        },
        _handlecolumnsresize: function() {
            var e = this.that;
            if (this.columnsresize) {
                var t = !1;
                e.isTouchDevice() && !0 !== e.touchmode && (t = !0);
                var r = "mousemove.resize" + this.element.id
                  , s = "mousedown.resize" + this.element.id
                  , n = "mouseup.resize" + this.element.id;
                t && (r = i.jqx.mobile.getTouchEventName("touchmove") + ".resize" + this.element.id,
                s = i.jqx.mobile.getTouchEventName("touchstart") + ".resize" + this.element.id,
                n = i.jqx.mobile.getTouchEventName("touchend") + ".resize" + this.element.id),
                this.removeHandler(i(document), r),
                this.addHandler(i(document), r, function(r) {
                    if (null != i.data(document.body, "contextmenu" + e.element.id) && e.autoshowcolumnsmenubutton)
                        return !0;
                    if (null != e.resizablecolumn && !e.disabled && e.resizing && null != e.resizeline) {
                        e.resizablecolumn.columnelement;
                        var s = e.host.coord()
                          , n = parseInt(e.resizestartline.coord().left)
                          , o = n - e._startcolumnwidth
                          , a = e.resizablecolumn.column.minwidth;
                        a = "auto" == a ? 0 : parseInt(a);
                        var l = e.resizablecolumn.column.maxwidth;
                        l = "auto" == l ? 0 : parseInt(l);
                        var d = r.pageX;
                        t && (d = e.getTouches(r)[0].pageX),
                        o += a;
                        var h = l > 0 ? n + l : 0
                          , c = 0 == l || e._startcolumnwidth + d - n < l;
                        if (e.rtl && (c = !0),
                        c)
                            if (e.rtl) {
                                if (d >= s.left && d <= s.left + e.host.width() && (e.resizeline.css("left", d),
                                t))
                                    return !1
                            } else if (d >= s.left && d >= o && (0 != h && r.pageX < h ? e.resizeline.css("left", d) : 0 == h && e.resizeline.css("left", d),
                            t))
                                return !1
                    }
                    return !(!t && null != e.resizablecolumn) && void 0
                }),
                this.removeHandler(i(document), s),
                this.addHandler(i(document), s, function(t) {
                    if (null != i.data(document.body, "contextmenu" + e.element.id) && e.autoshowcolumnsmenubutton)
                        return !0;
                    if (null != e.resizablecolumn && !e.disabled) {
                        var r = e.resizablecolumn.columnelement;
                        if (r.coord().top + r.height() + 5 < t.pageY)
                            return void (e.resizablecolumn = null);
                        if (r.coord().top - 5 > t.pageY)
                            return void (e.resizablecolumn = null);
                        if (e._startcolumnwidth = e.resizablecolumn.column.width,
                        e.resizablecolumn.column._width = null,
                        i(document.body).addClass("jqx-disableselect"),
                        i(document.body).addClass("jqx-position-reset"),
                        e.host.addClass("jqx-disableselect"),
                        e.content.addClass("jqx-disableselect"),
                        e._mouseDownResize = new Date,
                        e.resizing = !0,
                        e._lastmouseDownResize && e.columnsautoresize && e._lastmouseDownResize - e._mouseDownResize < 300 && e._lastmouseDownResize - e._mouseDownResize > -500) {
                            var s = e.resizablecolumn.column;
                            if (s.resizable) {
                                e.resizablecolumn.column.width;
                                var n = e.hScrollBar[0].style.visibility;
                                return e._resizecolumn = null,
                                e.resizeline.hide(),
                                e.resizestartline.hide(),
                                e.resizebackground.remove(),
                                e.resizablecolumn = null,
                                e.columndragstarted = !1,
                                e.dragmousedown = null,
                                e.__drag = !1,
                                e.autoresizecolumn(s.displayfield, "all"),
                                n != e.hScrollBar[0].style.visibility && e.hScrollInstance.setPosition(0),
                                e.rtl && e._arrange(),
                                e.autosavestate && e.savestate && e.savestate(),
                                t.stopPropagation(),
                                e.suspendClick = !0,
                                setTimeout(function() {
                                    e.suspendClick = !1
                                }, 100),
                                !1
                            }
                        }
                        e._lastmouseDownResize = new Date,
                        e._resizecolumn = e.resizablecolumn.column,
                        e.resizeline = e.resizeline || i('<div style="position: absolute;"></div>'),
                        e.resizestartline = e.resizestartline || i('<div style="position: absolute;"></div>'),
                        e.resizebackground = e.resizebackground || i('<div style="position: absolute; left: 0; top: 0; background: #000;"></div>'),
                        e.resizebackground.css("opacity", .01),
                        e.resizebackground.css("cursor", "col-resize"),
                        e.resizeline.css("cursor", "col-resize"),
                        e.resizestartline.css("cursor", "col-resize"),
                        e.resizeline.addClass(e.toThemeProperty("jqx-grid-column-resizeline")),
                        e.resizestartline.addClass(e.toThemeProperty("jqx-grid-column-resizestartline")),
                        i(document.body).append(e.resizeline),
                        i(document.body).append(e.resizestartline),
                        i(document.body).append(e.resizebackground);
                        var o = e.resizablecolumn.columnelement.coord();
                        e.resizebackground.css("left", e.host.coord().left),
                        e.resizebackground.css("top", e.host.coord().top),
                        e.resizebackground.width(e.host.width()),
                        e.resizebackground.height(e.host.height()),
                        e.resizebackground.css("z-index", 9999);
                        var a = function(t) {
                            e.rtl ? t.css("left", parseInt(o.left)) : t.css("left", parseInt(o.left) + e._startcolumnwidth);
                            var i = e._groupsheader() ? e.groupsheader.height() : 0;
                            i += e.showtoolbar ? e.toolbarheight : 0,
                            i += e.showstatusbar ? e.statusbarheight : 0;
                            var r = 0;
                            e.pageable && (r = e.pagerheight);
                            var s = "visible" == e.hScrollBar.css("visibility") ? 17 : 0;
                            t.css("top", parseInt(o.top)),
                            t.css("z-index", 99999),
                            e.columngroups ? t.height(e.host.height() + e.resizablecolumn.columnelement.height() - r - i - s - e.columngroupslevel * e.columnsheight) : t.height(e.host.height() - r - i - s),
                            e.enableanimations ? t.show("fast") : t.show()
                        };
                        a(e.resizeline),
                        a(e.resizestartline),
                        e.dragmousedown = null
                    }
                });
                var o = function() {
                    if (i(document.body).removeClass("jqx-disableselect"),
                    i(document.body).removeClass("jqx-position-reset"),
                    (e.showfilterrow || e.showstatusbar || e.showtoolbar || e.enablebrowserselection) && (e.host.removeClass("jqx-disableselect"),
                    e.content.removeClass("jqx-disableselect")),
                    e.resizing) {
                        if (e._mouseUpResize = new Date,
                        e._mouseUpResize - e._mouseDownResize < 200)
                            return e.resizing = !1,
                            void (null != e._resizecolumn && null != e.resizeline && "block" == e.resizeline.css("display") && (e._resizecolumn = null,
                            e.resizeline.hide(),
                            e.resizestartline.hide(),
                            e.resizebackground.remove()));
                        if (e.resizing = !1,
                        !e.disabled) {
                            var t = e.host.width();
                            if ("hidden" != e.vScrollBar[0].style.visibility && (t -= 20),
                            t < 0 && (t = 0),
                            null != e._resizecolumn && null != e.resizeline && "block" == e.resizeline.css("display")) {
                                var r = parseInt(e.resizeline.css("left"))
                                  , s = parseInt(e.resizestartline.css("left"))
                                  , n = e._startcolumnwidth + r - s;
                                e.rtl && (n = e._startcolumnwidth - r + s);
                                var o = e._resizecolumn.width;
                                e._closemenu(),
                                n < e._resizecolumn.minwidth && (n = e._resizecolumn.minwidth),
                                e._resizecolumn.width = n,
                                null != e._resizecolumn._percentagewidth && (e._resizecolumn._percentagewidth = n / t * 100);
                                for (var a = 0; a < e._columns.length; a++)
                                    if (e._columns[a].datafield === e._resizecolumn.datafield) {
                                        e._columns[a].width = e._resizecolumn.width,
                                        e._columns[a].width < e._resizecolumn.minwidth && (e._columns[a].width = e._resizecolumn.minwidth);
                                        break
                                    }
                                var l = e.hScrollBar[0].style.visibility;
                                e._updatecolumnwidths(),
                                e._updatecellwidths(),
                                e._raiseEvent(14, {
                                    columntext: e._resizecolumn.text,
                                    column: e._resizecolumn.getcolumnproperties(),
                                    datafield: e._resizecolumn.datafield,
                                    oldwidth: o,
                                    newwidth: n
                                }),
                                e._renderrows(e.virtualsizeinfo),
                                e.autosavestate && e.savestate && e.savestate(),
                                l != e.hScrollBar[0].style.visibility && e.hScrollInstance.setPosition(0),
                                e.rtl && e._arrange(),
                                e._resizecolumn = null,
                                e.resizeline.hide(),
                                e.resizestartline.hide(),
                                e.resizebackground.remove(),
                                e.resizablecolumn = null
                            } else
                                e.resizablecolumn = null
                        }
                    }
                };
                try {
                    if ("" != document.referrer || window.frameElement) {
                        var a = null;
                        if (null != window.top && window.top != window.self && window.parent && document.referrer && (a = document.referrer),
                        a && -1 != a.indexOf(document.location.host)) {
                            var l = function(e) {
                                o()
                            };
                            window.top.document.addEventListener ? window.top.document.addEventListener("mouseup", l, !1) : window.top.document.attachEvent && window.top.document.attachEvent("onmouseup", l)
                        }
                    }
                } catch (e) {}
                this.removeHandler(i(document), n),
                this.addHandler(i(document), n, function(t) {
                    if (null != i.data(document.body, "contextmenu" + e.element.id) && e.autoshowcolumnsmenubutton)
                        return !0;
                    o()
                })
            }
        }
    })
}
, function(e, t) {
    var i;
    (i = jqxBaseFramework).extend(i.jqx._jqxGrid.prototype, {
        getcolumnindex: function(e) {
            var t = this.getcolumn(e);
            return this.columns.records.indexOf(t)
        },
        setcolumnindex: function(e, t, r) {
            if (!((u = this.getcolumn(e)).pinned || u.hidden || u.checkboxcolumn || u.grouped)) {
                var s = this.columns.records.indexOf(u);
                this.columns.records.splice(s, 1),
                this.columns.records.splice(t, 0, u);
                var n = 0
                  , o = this.headerZIndex;
                this.columnsrow.children().detach();
                var a = this.toThemeProperty("jqx-grid-cell");
                a += " " + this.toThemeProperty("jqx-grid-cell-pinned"),
                this.filterrow && (i(this.filterrow.children()[0]).children().detach(),
                this.filterrow[0].cells = []);
                var l = this
                  , d = null;
                null != l.filterrow && (d = i(l.filterrow.children()[0])),
                this.columnsrow[0].cells = [];
                var h = !1;
                if (i.each(this.columns.records, function(e, t) {
                    var r = this.uielement;
                    l.columnsrow.append(r),
                    l.rtl ? r.css("z-index", o++) : r.css("z-index", o--);
                    var s = this.width;
                    if (r.css("left", n),
                    l.columnsrow[0].cells[l.columnsrow[0].cells.length] = r[0],
                    l.filterrow) {
                        var c = i('<div style="overflow: hidden; position: absolute; height: 100%;" class="' + a + '"></div>');
                        d.append(c),
                        c.css("left", n),
                        c.css("z-index", o + 1),
                        c.width(this.width),
                        c[0].left = n,
                        c.append(this._filterwidget),
                        l.filterrow[0].cells[l.filterrow[0].cells.length] = c[0]
                    }
                    this.hidden && (h = !0),
                    this.hidden && this.hideable || (n += s)
                }),
                this.groupable) {
                    var c = this.groups.length;
                    c > 0 && s - c >= 0 && (s -= c,
                    t -= c)
                }
                this.rowdetails && s - 1 >= 0 && (s--,
                t--),
                "checkbox" == this.selectionmode && s - 1 >= 0 && (s--,
                t--);
                var u = this._columns[s];
                this._columns.splice(s, 1),
                this._columns.splice(t, 0, u),
                this._raiseEvent(24, {
                    columntext: u.text,
                    datafield: u.datafield,
                    oldindex: s,
                    newindex: t
                }),
                0 != r && (h || "checkbox" == u.columntype ? (this.prerenderrequired = !0,
                this.rendergridcontent(!0, !1),
                this._updatecolumnwidths(),
                this._updatecellwidths()) : (this._updatecolumnwidths(),
                this._updatecellwidths()),
                this._updatefilterrowui && this.filterable && this.showfilterrow && this._updatefilterrowui(),
                this.showeverpresentrow && this._updateaddnewrowui(),
                this._rendercolumngroups(),
                this._renderrows(this.virtualsizeinfo))
            }
        },
        _pinnedColumnsLength: function() {
            var e = 0;
            return i.each(this.columns.records, function() {
                this.pinned && e++,
                this.grouped && e++
            }),
            "checkbox" == this.selectionmode && e++,
            e
        },
        _handlecolumnsreorder: function() {
            var e = this
              , t = -1
              , r = !1;
            if (e.columnsreorder) {
                var s = "mousemove.reorder" + this.element.id
                  , n = "mousedown.reorder" + this.element.id
                  , o = "mouseup.reorder" + this.element.id
                  , a = !1;
                this.isTouchDevice() && !0 !== this.touchmode && (a = !0,
                s = i.jqx.mobile.getTouchEventName("touchmove") + ".reorder" + this.element.id,
                n = i.jqx.mobile.getTouchEventName("touchstart") + ".reorder" + this.element.id,
                o = i.jqx.mobile.getTouchEventName("touchend") + ".reorder" + this.element.id),
                this.removeHandler(i(document), s),
                this.addHandler(i(document), s, function(i) {
                    if (e.resizing)
                        return !0;
                    if (null != e.reordercolumn) {
                        var s = parseInt(i.pageX)
                          , n = parseInt(i.pageY);
                        if (a) {
                            var o = e.getTouches(i)[0];
                            null != o && (s = parseInt(o.pageX),
                            n = parseInt(o.pageY))
                        }
                        var l = e.host.coord()
                          , d = parseInt(l.left)
                          , h = parseInt(l.top);
                        null != e.dragmousedownoffset && null != e.dragmousedownoffset || (e.dragmousedownoffset = {
                            left: 0,
                            top: 0
                        });
                        var c = parseInt(s) - parseInt(e.dragmousedownoffset.left)
                          , u = parseInt(n) - parseInt(e.dragmousedownoffset.top);
                        if (e.reordercolumn.css({
                            left: c + "px",
                            top: u + "px"
                        }),
                        r = !1,
                        s >= d && s <= d + e.host.width() && n >= h && n <= h + e.host.height() && (r = !0),
                        t = -1,
                        r) {
                            e.reordercolumnicon.removeClass(e.toThemeProperty("jqx-grid-dragcancel-icon")),
                            e.reordercolumnicon.addClass(e.toThemeProperty("jqx-grid-drag-icon"));
                            var p = e.columnsheader.coord()
                              , f = p.top + e.columnsheader.height();
                            null != e.columnsdropline && (n >= p.top && n <= f ? t = e._handlereordercolumnsdroplines(s) : e.columnsdropline.fadeOut("slow"))
                        } else
                            null != e.columnsdropline && e.columnsdropline.fadeOut("slow"),
                            e.reordercolumnicon.removeClass(e.toThemeProperty("jqx-grid-drag-icon")),
                            e.reordercolumnicon.addClass(e.toThemeProperty("jqx-grid-dragcancel-icon"));
                        if (a)
                            return i.preventDefault(),
                            i.stopPropagation(),
                            !1
                    }
                }),
                this.columnsbounds = new Array,
                this.removeHandler(i(document), n),
                this.addHandler(i(document), n, function(t) {
                    if (e.resizing)
                        return !0;
                    e.columnsbounds = new Array;
                    var r = e.host.coord().left
                      , s = e.host.coord().top;
                    e.showtoolbar && (s += e.toolbarheight),
                    e.groupable && e.showgroupsheader && (s += e.groupsheaderheight);
                    var n = 0;
                    i.each(e.columns.records, function(t) {
                        var o = this;
                        if (o.hidden)
                            return e.columnsbounds[e.columnsbounds.length] = {
                                top: s,
                                column: o,
                                left: r,
                                width: 0,
                                height: 2 + e.rowsheight
                            },
                            !0;
                        0 == n && (r = e.rtl ? "hidden" != e.hScrollBar.css("visibility") ? parseInt(e.host.coord().left) - e.hScrollInstance.max + e.hScrollInstance.value : "hidden" == e.vScrollBar.css("visibility") ? i(o.element).coord().left : i(o.element).coord().left - e.vScrollBar.width() - e.host.offset().left : parseInt(e.host.coord().left) - e.hScrollInstance.value),
                        n++;
                        var a = 2 + e.columnsheight;
                        e.columnshierarchy && (s = i(o.uielement).coord().top,
                        a = i(o.uielement).height()),
                        e.columnsbounds[e.columnsbounds.length] = {
                            top: s,
                            column: o,
                            left: r,
                            width: o.width,
                            height: a
                        },
                        r += o.width
                    })
                }),
                this.removeHandler(i(document), o),
                this.addHandler(i(document), o, function(s) {
                    if (e.resizing)
                        return !0;
                    if (e.__drag = !1,
                    i(document.body).removeClass("jqx-disableselect"),
                    parseInt(s.pageX),
                    parseInt(s.pageY),
                    a) {
                        var n = e.getTouches(s)[0];
                        parseInt(n.pageX),
                        parseInt(n.pageY)
                    }
                    var o = e.host.coord();
                    if (parseInt(o.left),
                    parseInt(o.top),
                    e.groupsheader.height(),
                    e.showtoolbar && e.toolbarheight,
                    e.columndragstarted = !1,
                    e.dragmousedown = null,
                    null != e.reordercolumn) {
                        var l = i.data(e.reordercolumn[0], "reorderrecord")
                          , d = e.columns.records.indexOf(e.getcolumn(l));
                        e.reordercolumn.remove(),
                        e.reordercolumn = null;
                        var h = 0;
                        if (h += e._pinnedColumnsLength(),
                        null != l) {
                            if (r && -1 != t) {
                                var c = t.index;
                                if (c >= h) {
                                    var u = e.columns.records[c];
                                    if (null != u) {
                                        var p = e.columns.records.indexOf(e.getcolumn(u.datafield));
                                        if (null == u.datafield && (p = e.columns.records.indexOf(e.getcolumnbytext(u.text))),
                                        e.columngroups) {
                                            var f = u;
                                            if (d < p && "before" == t.position && (f = e.columns.records[p - 1]),
                                            f.columngroup != e.getcolumn(l).columngroup)
                                                return void (null != e.columnsdropline && (e.columnsdropline.remove(),
                                                e.columnsdropline = null))
                                        }
                                        d < p ? "before" == t.position ? e.setcolumnindex(l, p - 1) : e.setcolumnindex(l, p) : d > p && e.setcolumnindex(l, p),
                                        e.autosavestate && e.savestate && e.savestate()
                                    }
                                }
                            }
                            null != e.columnsdropline && (e.columnsdropline.remove(),
                            e.columnsdropline = null)
                        }
                    }
                })
            }
        },
        getcolumnbytext: function(e) {
            var t = null;
            return this.columns.records && i.each(this.columns.records, function() {
                if (this.text == e)
                    return t = this,
                    !1
            }),
            t
        },
        _handlereordercolumnsdroplines: function(e) {
            var t = this
              , r = -1
              , s = t._pinnedColumnsLength()
              , n = parseInt(t.host.coord().left) + t.host.width()
              , o = "hidden" != t.vScrollBar.css("visibility") ? 19 : 0;
            return t.rtl || (o = 0),
            i.each(t.columnsbounds, function(i) {
                if (i >= s) {
                    if (0 == this.width)
                        return !0;
                    if (e <= this.left + this.width / 2)
                        return e > n ? (t.columnsdropline.fadeOut(),
                        !1) : (t.columnsdropline.css("left", o + parseInt(this.left) + "px"),
                        t.columnsdropline.css("top", parseInt(this.top) + "px"),
                        t.columnsdropline.height(this.height),
                        t.columnsdropline.fadeIn("slow"),
                        r = {
                            index: i,
                            position: "before"
                        },
                        !1);
                    if (e >= this.left + this.width / 2) {
                        if (this.left + this.width > n)
                            return t.columnsdropline.fadeOut(),
                            !1;
                        t.columnsdropline.css("left", o + 1 + this.left + this.width),
                        t.columnsdropline.css("top", this.top),
                        t.columnsdropline.height(this.height),
                        t.columnsdropline.fadeIn("slow"),
                        r = {
                            index: i,
                            position: "after"
                        }
                    }
                }
            }),
            r
        },
        _createreordercolumn: function(e, t, r) {
            var s = this
              , n = t;
            s.reordercolumn && s.reordercolumn.remove(),
            s.columnsdropline && s.columnsdropline.remove(),
            s.reordercolumn = i("<div></div>");
            var o = e.clone();
            s.reordercolumn.css("z-index", 999999),
            o.css("border-width", "1px"),
            o.css("opacity", "0.4");
            var a = i(o.find("." + s.toThemeProperty("jqx-grid-column-menubutton")));
            a.length > 0 && a.css("display", "none");
            var l = i(o.find(".jqx-icon-close"));
            l.length > 0 && l.css("display", "none"),
            s.reordercolumnicon = i('<div style="z-index: 9999; position: absolute; left: 100%; top: 50%; margin-left: -18px; margin-top: -7px;"></div>'),
            s.reordercolumnicon.addClass(s.toThemeProperty("jqx-grid-drag-icon")),
            s.reordercolumn.css("float", "left"),
            s.reordercolumn.css("position", "absolute"),
            s.host.coord(),
            o.width(e.width() + 16),
            s.reordercolumn.append(o),
            s.reordercolumn.height(e.height()),
            s.reordercolumn.width(o.width()),
            s.reordercolumn.append(s.reordercolumnicon),
            i(document.body).append(s.reordercolumn),
            o.css("margin-left", 0),
            o.css("left", 0),
            o.css("top", 0),
            s.reordercolumn.css("left", n.left + s.dragmousedown.left),
            s.reordercolumn.css("top", n.top + s.dragmousedown.top),
            null != r && r && (s.columnsdropline = i('<div style="z-index: 9999; display: none; position: absolute;"></div>'),
            s.columnsdropline.width(2),
            s.columnsdropline.addClass(s.toThemeProperty("jqx-grid-group-drag-line")),
            i(document.body).append(s.columnsdropline))
        },
        _handlecolumnsdragreorder: function(e, t) {
            this.reordercolumn && this.reordercolumn.remove(),
            this.columnsdropline && this.columnsdropline.remove(),
            this.dragmousedown = null,
            this.dragmousedownoffset = null,
            this.columndragstarted = !1,
            this.reordercolumn = null;
            var r = this
              , s = !1;
            this.isTouchDevice() && !0 !== this.touchmode && (s = !0);
            var n = "mousedown.drag"
              , o = "mousemove.drag";
            s ? (n = i.jqx.mobile.getTouchEventName("touchstart") + ".drag",
            o = i.jqx.mobile.getTouchEventName("touchmove") + ".drag") : this.addHandler(t, "dragstart", function(e) {
                return !1
            }),
            this.addHandler(t, n, function(t) {
                if (0 == e.draggable)
                    return !0;
                if (r.resizing)
                    return !0;
                r.__drag = !0;
                var n = t.pageX
                  , o = t.pageY;
                if (s) {
                    var a = r.getTouches(t)[0];
                    n = a.pageX,
                    o = a.pageY
                }
                r.dragmousedown = {
                    left: n,
                    top: o
                };
                var l = i(t.target).coord();
                return r.dragmousedownoffset = {
                    left: parseInt(n) - parseInt(l.left),
                    top: parseInt(o - l.top)
                },
                !0
            }),
            this.addHandler(t, o, function(n) {
                if (!e.draggable)
                    return !0;
                if (null == e.datafield)
                    return !0;
                if (e.pinned)
                    return !0;
                if (r.resizing)
                    return !0;
                if (r.dragmousedown) {
                    var a = n.pageX
                      , l = n.pageY;
                    if (s) {
                        var d = r.getTouches(n)[0];
                        null != d && (a = d.pageX,
                        l = d.pageY)
                    }
                    if (o = {
                        left: a,
                        top: l
                    },
                    !r.columndragstarted && null == r.reordercolumn) {
                        var h = Math.abs(o.left - r.dragmousedown.left)
                          , c = Math.abs(o.top - r.dragmousedown.top);
                        (h > 3 || c > 3) && (r._createreordercolumn(t, o, !0),
                        i(document.body).addClass("jqx-disableselect"),
                        i.data(r.reordercolumn[0], "reorderrecord", e.datafield))
                    }
                }
            })
        }
    })
}
, function(e, t) {
    var i;
    (i = jqxBaseFramework).extend(i.jqx._jqxGrid.prototype, {
        _calculateaggregate: function(e, t, r, s) {
            var n = e.aggregates;
            if (n || (n = t),
            n) {
                for (var o = new Array, a = 0; a < n.length; a++)
                    "count" != n[a] && (o[o.length] = e.cellsformat);
                if (this.source && this.source.getAggregatedData)
                    return null == s && (s = this.getrows()),
                    this.virtualmode && (s = new Array,
                    i.each(this.source._source.records, function() {
                        s.push(this)
                    })),
                    null == r || 1 == r ? this.source.getAggregatedData([{
                        name: e.datafield,
                        aggregates: n,
                        formatStrings: o
                    }], this.gridlocalization, s) : this.source.getAggregatedData([{
                        name: e.datafield,
                        aggregates: n
                    }], this.gridlocalization, s)
            }
            return null
        },
        getcolumnaggregateddata: function(e, t, i, r) {
            var s = this.getcolumn(e)
              , n = null != i && 0 != i && i;
            if (null == t)
                return "";
            var o = s.aggregates;
            s.aggregates = null;
            var a = this._calculateaggregate(s, t, n, r)
              , l = {};
            return a && (l = a[e]),
            s.aggregates = o,
            l
        },
        refreshaggregates: function() {
            this._updatecolumnsaggregates()
        },
        renderaggregates: function() {
            this._updateaggregates()
        },
        _updatecolumnaggregates: function(e, t, r) {
            var s = this;
            if (t)
                r.children().remove(),
                r.html(""),
                e.aggregatesrenderer ? t && (o = e.aggregatesrenderer(t[e.datafield], e, r, this.getcolumnaggregateddata(e.datafield, t[e.datafield])),
                r.html(o)) : i.each(t, function() {
                    for (n in this) {
                        var e = i('<div style="position: relative; margin: 4px; overflow: hidden;"></div>')
                          , t = n;
                        t = s._getaggregatename(t),
                        e.html(t + ":" + this[n]),
                        s.rtl && e.addClass(s.toThemeProperty("jqx-rtl")),
                        r.append(e)
                    }
                });
            else if (r.children().remove(),
            r.html(""),
            e.aggregatesrenderer) {
                var n = {};
                e.aggregates && (n = this.getcolumnaggregateddata(e.datafield, e.aggregates));
                var o = e.aggregatesrenderer({}, e, r, null);
                r.html(o)
            }
        },
        _getaggregatetype: function(e) {
            switch (e) {
            case "min":
            case "max":
            case "count":
            case "avg":
            case "product":
            case "var":
            case "varp":
            case "stdev":
            case "stdevp":
            case "sum":
                return e
            }
            var t = e;
            for (var i in e) {
                t = i;
                break
            }
            return t
        },
        _getaggregatename: function(e) {
            var t = e;
            switch (e) {
            case "min":
                t = "Min";
                break;
            case "max":
                t = "Max";
                break;
            case "count":
                t = "Count";
                break;
            case "avg":
                t = "Avg";
                break;
            case "product":
                t = "Product";
                break;
            case "var":
                t = "Var";
                break;
            case "stdevp":
                t = "StDevP";
                break;
            case "stdev":
                t = "StDev";
                break;
            case "varp":
                t = "VarP";
            case "sum":
                t = "Sum"
            }
            if (e === t && "string" != typeof t)
                for (var i in e) {
                    t = i;
                    break
                }
            return t
        },
        _updatecolumnsaggregates: function() {
            var e = this.getrows()
              , t = this.columns.records.length;
            if (null != this.statusbar[0].cells)
                for (var r = 0; r < t; r++) {
                    var s = i(this.statusbar[0].cells[r])
                      , n = this.columns.records[r]
                      , o = this._calculateaggregate(n, null, !0, e);
                    this._updatecolumnaggregates(n, o, s)
                }
        },
        _updateaggregates: function() {
            var e = i('<div style="position: relative;" id="statusrow' + this.element.id + '"></div>')
              , t = 0
              , r = this.columns.records.length
              , s = this.toThemeProperty("jqx-grid-cell");
            this.rtl && (s += " " + this.toThemeProperty("jqx-grid-cell-rtl"),
            t = -1),
            s += " " + this.toThemeProperty("jqx-grid-cell-pinned");
            var n = r + 10
              , o = new Array;
            this.statusbar[0].cells = o;
            for (var a = this.getrows(), l = 0; l < r; l++) {
                var d = this.columns.records[l]
                  , h = this._calculateaggregate(d, d.aggregates, !0, a)
                  , c = d.width;
                c < d.minwidth && (c = d.minwidth),
                c > d.maxwidth && (c = d.maxwidth);
                var u = s;
                d.cellsalign && (u += " " + this.toThemeProperty("jqx-" + d.cellsalign + "-align"));
                var p = i('<div style="overflow: hidden; position: absolute; height: 100%;" class="' + u + '"></div>');
                e.append(p),
                p.css("left", t),
                this.rtl ? p.css("z-index", n++) : p.css("z-index", n--),
                p.width(c),
                p[0].left = t,
                d.hidden && d.hideable ? p.css("display", "none") : t += c,
                o[o.length] = p[0],
                this._updatecolumnaggregates(d, h, p)
            }
            i.jqx.browser.msie && i.jqx.browser.version < 8 && e.css("z-index", n--),
            e.width(parseFloat(t) + 2),
            e.height(this.statusbarheight),
            this.statusbar.children().remove(),
            this.statusbar.append(e),
            this.statusbar.removeClass(this.toThemeProperty("jqx-widget-header")),
            this.statusbar.addClass(s),
            this.statusbar.css("border-bottom-color", "transparent"),
            this.statusbar.css("border-top-width", "1px"),
            this.rtl && "hidden" != this.hScrollBar.css("visibility") && this._renderhorizontalscroll(),
            this._arrange()
        }
    })
}
, function(e, t, i) {
    (function(e) {
        var r = void 0 !== e && e || "undefined" != typeof self && self || window
          , s = Function.prototype.apply;
        function n(e, t) {
            this._id = e,
            this._clearFn = t
        }
        t.setTimeout = function() {
            return new n(s.call(setTimeout, r, arguments),clearTimeout)
        }
        ,
        t.setInterval = function() {
            return new n(s.call(setInterval, r, arguments),clearInterval)
        }
        ,
        t.clearTimeout = t.clearInterval = function(e) {
            e && e.close()
        }
        ,
        n.prototype.unref = n.prototype.ref = function() {}
        ,
        n.prototype.close = function() {
            this._clearFn.call(r, this._id)
        }
        ,
        t.enroll = function(e, t) {
            clearTimeout(e._idleTimeoutId),
            e._idleTimeout = t
        }
        ,
        t.unenroll = function(e) {
            clearTimeout(e._idleTimeoutId),
            e._idleTimeout = -1
        }
        ,
        t._unrefActive = t.active = function(e) {
            clearTimeout(e._idleTimeoutId);
            var t = e._idleTimeout;
            t >= 0 && (e._idleTimeoutId = setTimeout(function() {
                e._onTimeout && e._onTimeout()
            }, t))
        }
        ,
        i(33),
        t.setImmediate = "undefined" != typeof self && self.setImmediate || void 0 !== e && e.setImmediate || this && this.setImmediate,
        t.clearImmediate = "undefined" != typeof self && self.clearImmediate || void 0 !== e && e.clearImmediate || this && this.clearImmediate
    }
    ).call(this, i(1))
}
, function(e, t, i) {
    (function(e, t) {
        !function(e, i) {
            "use strict";
            if (!e.setImmediate) {
                var r, s, n, o, a, l = 1, d = {}, h = !1, c = e.document, u = Object.getPrototypeOf && Object.getPrototypeOf(e);
                u = u && u.setTimeout ? u : e,
                "[object process]" === {}.toString.call(e.process) ? r = function(e) {
                    t.nextTick(function() {
                        f(e)
                    })
                }
                : !function() {
                    if (e.postMessage && !e.importScripts) {
                        var t = !0
                          , i = e.onmessage;
                        return e.onmessage = function() {
                            t = !1
                        }
                        ,
                        e.postMessage("", "*"),
                        e.onmessage = i,
                        t
                    }
                }() ? e.MessageChannel ? ((n = new MessageChannel).port1.onmessage = function(e) {
                    f(e.data)
                }
                ,
                r = function(e) {
                    n.port2.postMessage(e)
                }
                ) : c && "onreadystatechange"in c.createElement("script") ? (s = c.documentElement,
                r = function(e) {
                    var t = c.createElement("script");
                    t.onreadystatechange = function() {
                        f(e),
                        t.onreadystatechange = null,
                        s.removeChild(t),
                        t = null
                    }
                    ,
                    s.appendChild(t)
                }
                ) : r = function(e) {
                    setTimeout(f, 0, e)
                }
                : (o = "setImmediate$" + Math.random() + "$",
                a = function(t) {
                    t.source === e && "string" == typeof t.data && 0 === t.data.indexOf(o) && f(+t.data.slice(o.length))
                }
                ,
                e.addEventListener ? e.addEventListener("message", a, !1) : e.attachEvent("onmessage", a),
                r = function(t) {
                    e.postMessage(o + t, "*")
                }
                ),
                u.setImmediate = function(e) {
                    "function" != typeof e && (e = new Function("" + e));
                    for (var t = new Array(arguments.length - 1), i = 0; i < t.length; i++)
                        t[i] = arguments[i + 1];
                    var s = {
                        callback: e,
                        args: t
                    };
                    return d[l] = s,
                    r(l),
                    l++
                }
                ,
                u.clearImmediate = p
            }
            function p(e) {
                delete d[e]
            }
            function f(e) {
                if (h)
                    setTimeout(f, 0, e);
                else {
                    var t = d[e];
                    if (t) {
                        h = !0;
                        try {
                            !function(e) {
                                var t = e.callback
                                  , r = e.args;
                                switch (r.length) {
                                case 0:
                                    t();
                                    break;
                                case 1:
                                    t(r[0]);
                                    break;
                                case 2:
                                    t(r[0], r[1]);
                                    break;
                                case 3:
                                    t(r[0], r[1], r[2]);
                                    break;
                                default:
                                    t.apply(i, r)
                                }
                            }(t)
                        } finally {
                            p(e),
                            h = !1
                        }
                    }
                }
            }
        }("undefined" == typeof self ? void 0 === e ? this : e : self)
    }
    ).call(this, i(1), i(34))
}
, function(e, t) {
    var i, r, s = e.exports = {};
    function n() {
        throw new Error("setTimeout has not been defined")
    }
    function o() {
        throw new Error("clearTimeout has not been defined")
    }
    function a(e) {
        if (i === setTimeout)
            return setTimeout(e, 0);
        if ((i === n || !i) && setTimeout)
            return i = setTimeout,
            setTimeout(e, 0);
        try {
            return i(e, 0)
        } catch (t) {
            try {
                return i.call(null, e, 0)
            } catch (t) {
                return i.call(this, e, 0)
            }
        }
    }
    !function() {
        try {
            i = "function" == typeof setTimeout ? setTimeout : n
        } catch (e) {
            i = n
        }
        try {
            r = "function" == typeof clearTimeout ? clearTimeout : o
        } catch (e) {
            r = o
        }
    }();
    var l, d = [], h = !1, c = -1;
    function u() {
        h && l && (h = !1,
        l.length ? d = l.concat(d) : c = -1,
        d.length && p())
    }
    function p() {
        if (!h) {
            var e = a(u);
            h = !0;
            for (var t = d.length; t; ) {
                for (l = d,
                d = []; ++c < t; )
                    l && l[c].run();
                c = -1,
                t = d.length
            }
            l = null,
            h = !1,
            function(e) {
                if (r === clearTimeout)
                    return clearTimeout(e);
                if ((r === o || !r) && clearTimeout)
                    return r = clearTimeout,
                    clearTimeout(e);
                try {
                    r(e)
                } catch (t) {
                    try {
                        return r.call(null, e)
                    } catch (t) {
                        return r.call(this, e)
                    }
                }
            }(e)
        }
    }
    function f(e, t) {
        this.fun = e,
        this.array = t
    }
    function m() {}
    s.nextTick = function(e) {
        var t = new Array(arguments.length - 1);
        if (arguments.length > 1)
            for (var i = 1; i < arguments.length; i++)
                t[i - 1] = arguments[i];
        d.push(new f(e,t)),
        1 !== d.length || h || a(p)
    }
    ,
    f.prototype.run = function() {
        this.fun.apply(null, this.array)
    }
    ,
    s.title = "browser",
    s.browser = !0,
    s.env = {},
    s.argv = [],
    s.version = "",
    s.versions = {},
    s.on = m,
    s.addListener = m,
    s.once = m,
    s.off = m,
    s.removeListener = m,
    s.removeAllListeners = m,
    s.emit = m,
    s.prependListener = m,
    s.prependOnceListener = m,
    s.listeners = function(e) {
        return []
    }
    ,
    s.binding = function(e) {
        throw new Error("process.binding is not supported")
    }
    ,
    s.cwd = function() {
        return "/"
    }
    ,
    s.chdir = function(e) {
        throw new Error("process.chdir is not supported")
    }
    ,
    s.umask = function() {
        return 0
    }
}
, function(e, t, i) {
    "use strict";
    var r = function() {
        var e = this.$createElement;
        return (this._self._c || e)("div", {
            attrs: {
                id: this.id
            }
        }, [this._t("default")], 2)
    };
    r._withStripped = !0;
    i(5),
    i(6);
    var s = {
        props: {
            disabled: Boolean,
            height: [String, Number],
            imgSrc: String,
            imgWidth: Number,
            imgHeight: Number,
            imgPosition: String,
            roundedCorners: String,
            rtl: Boolean,
            enableDefault: Boolean,
            cursor: Boolean,
            textPosition: String,
            textImageRelation: String,
            theme: String,
            template: String,
            width: [String, Number],
            value: String,
            autoCreate: {
                default: !0,
                type: Boolean
            }
        },
        created: function() {
            this.id = "jqxButton" + JQXLite.generateID(),
            this.componentSelector = "#" + this.id
        },
        mounted: function() {
            this.autoCreate && this.__createComponent__()
        },
        methods: {
            createComponent: function(e) {
                this.autoCreate ? console.warn('Component is already created! If you want to use createComponent, please set "autoCreate" property to "false".') : this.__createComponent__(e)
            },
            setOptions: function(e) {
                JQXLite(this.componentSelector).jqxButton(e)
            },
            getOptions: function() {
                const e = Object.keys(this.__manageProps__())
                  , t = {};
                for (let i = 0; i < e.length; i++)
                    t[e[i]] = JQXLite(this.componentSelector).jqxButton(e[i]);
                return t
            },
            destroy: function() {
                JQXLite(this.componentSelector).jqxButton("destroy")
            },
            focus: function() {
                JQXLite(this.componentSelector).jqxButton("focus")
            },
            render: function() {
                JQXLite(this.componentSelector).jqxButton("render")
            },
            val: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxButton("val");
                JQXLite(this.componentSelector).jqxButton("val", e)
            },
            _disabled: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxButton("disabled");
                JQXLite(this.componentSelector).jqxButton("disabled", e)
            },
            _height: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxButton("height");
                JQXLite(this.componentSelector).jqxButton("height", e)
            },
            _imgSrc: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxButton("imgSrc");
                JQXLite(this.componentSelector).jqxButton("imgSrc", e)
            },
            _imgWidth: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxButton("imgWidth");
                JQXLite(this.componentSelector).jqxButton("imgWidth", e)
            },
            _imgHeight: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxButton("imgHeight");
                JQXLite(this.componentSelector).jqxButton("imgHeight", e)
            },
            _imgPosition: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxButton("imgPosition");
                JQXLite(this.componentSelector).jqxButton("imgPosition", e)
            },
            _roundedCorners: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxButton("roundedCorners");
                JQXLite(this.componentSelector).jqxButton("roundedCorners", e)
            },
            _rtl: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxButton("rtl");
                JQXLite(this.componentSelector).jqxButton("rtl", e)
            },
            _enableDefault: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxButton("enableDefault");
                JQXLite(this.componentSelector).jqxButton("enableDefault", e)
            },
            _cursor: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxButton("cursor");
                JQXLite(this.componentSelector).jqxButton("cursor", e)
            },
            _textPosition: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxButton("textPosition");
                JQXLite(this.componentSelector).jqxButton("textPosition", e)
            },
            _textImageRelation: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxButton("textImageRelation");
                JQXLite(this.componentSelector).jqxButton("textImageRelation", e)
            },
            _theme: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxButton("theme");
                JQXLite(this.componentSelector).jqxButton("theme", e)
            },
            _template: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxButton("template");
                JQXLite(this.componentSelector).jqxButton("template", e)
            },
            _width: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxButton("width");
                JQXLite(this.componentSelector).jqxButton("width", e)
            },
            _value: function(e) {
                if (void 0 === e)
                    return JQXLite(this.componentSelector).jqxButton("value");
                JQXLite(this.componentSelector).jqxButton("value", e)
            },
            __createComponent__: function(e) {
                let t;
                t = e || this.__manageProps__(),
                JQXLite(this.componentSelector).jqxButton(t),
                this.__extendProps__(),
                this.__wireEvents__()
            },
            __manageProps__: function() {
                const e = ["disabled", "height", "imgSrc", "imgWidth", "imgHeight", "imgPosition", "roundedCorners", "rtl", "enableDefault", "cursor", "textPosition", "textImageRelation", "theme", "template", "width", "value"]
                  , t = this.$options.propsData;
                let i = {};
                for (let r in t)
                    -1 !== e.indexOf(r) && (i[r] = t[r]);
                return i
            },
            __extendProps__: function() {
                const e = this;
                Object.defineProperty(e, "disabled", {
                    get: function() {
                        return e._disabled()
                    },
                    set: function(t) {
                        e._disabled(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "height", {
                    get: function() {
                        return e._height()
                    },
                    set: function(t) {
                        e._height(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "imgSrc", {
                    get: function() {
                        return e._imgSrc()
                    },
                    set: function(t) {
                        e._imgSrc(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "imgWidth", {
                    get: function() {
                        return e._imgWidth()
                    },
                    set: function(t) {
                        e._imgWidth(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "imgHeight", {
                    get: function() {
                        return e._imgHeight()
                    },
                    set: function(t) {
                        e._imgHeight(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "imgPosition", {
                    get: function() {
                        return e._imgPosition()
                    },
                    set: function(t) {
                        e._imgPosition(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "roundedCorners", {
                    get: function() {
                        return e._roundedCorners()
                    },
                    set: function(t) {
                        e._roundedCorners(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "rtl", {
                    get: function() {
                        return e._rtl()
                    },
                    set: function(t) {
                        e._rtl(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "enableDefault", {
                    get: function() {
                        return e._enableDefault()
                    },
                    set: function(t) {
                        e._enableDefault(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "cursor", {
                    get: function() {
                        return e._cursor()
                    },
                    set: function(t) {
                        e._cursor(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "textPosition", {
                    get: function() {
                        return e._textPosition()
                    },
                    set: function(t) {
                        e._textPosition(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "textImageRelation", {
                    get: function() {
                        return e._textImageRelation()
                    },
                    set: function(t) {
                        e._textImageRelation(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "theme", {
                    get: function() {
                        return e._theme()
                    },
                    set: function(t) {
                        e._theme(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "template", {
                    get: function() {
                        return e._template()
                    },
                    set: function(t) {
                        e._template(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "width", {
                    get: function() {
                        return e._width()
                    },
                    set: function(t) {
                        e._width(t)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(e, "value", {
                    get: function() {
                        return e._value()
                    },
                    set: function(t) {
                        e._value(t)
                    },
                    enumerable: !0,
                    configurable: !0
                })
            },
            __wireEvents__: function() {
                const e = this;
                JQXLite(this.componentSelector).on("click", function(t) {
                    JQXLite(e.componentSelector).jqxButton("disabled") || e.$emit("click", t)
                })
            }
        }
    }
      , n = i(0)
      , o = Object(n.a)(s, r, [], !1, null, null, null);
    o.options.__file = "node_modules/jqwidgets-scripts/jqwidgets-vue/vue_jqxbuttons.vue";
    t.a = o.exports
}
, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(e, t, i) {
    "use strict";
    i.r(t);
    var r = i(2)
      , s = function() {
        var e = this
          , t = e.$createElement
          , i = e._self._c || t;
        return i("div", {
            staticStyle: {
                "font-size": "13px",
                "font-family": "Verdana",
                float: "left"
            }
        }, [i("JqxGrid", {
            ref: "myGrid",
            attrs: {
                width: e.getWidth,
                source: e.dataAdapter,
                columns: e.columns,
                sortable: !0,
                altrows: !0,
                selectionmode: "multiplecellsadvanced"
            }
        }), e._v(" "), i("div", {
            staticStyle: {
                "margin-top": "20px"
            }
        }, [i("div", {
            staticStyle: {
                float: "left"
            }
        }, [i("JqxButton", {
            on: {
                click: function(t) {
                    return e.excelBtnOnClick()
                }
            }
        }, [e._v("Export to Excel")]), e._v(" "), i("br"), i("br"), e._v(" "), i("JqxButton", {
            on: {
                click: function(t) {
                    return e.xmlBtnOnClick()
                }
            }
        }, [e._v("Export to XML")])], 1), e._v(" "), i("div", {
            staticStyle: {
                float: "left",
                "margin-left": "10px"
            }
        }, [i("JqxButton", {
            on: {
                click: function(t) {
                    return e.csvBtnOnClick()
                }
            }
        }, [e._v("Export to CSV")]), e._v(" "), i("br"), i("br"), e._v(" "), i("JqxButton", {
            on: {
                click: function(t) {
                    return e.tsvBtnOnClick()
                }
            }
        }, [e._v("Export to TSV")])], 1), e._v(" "), i("div", {
            staticStyle: {
                float: "left",
                "margin-left": "10px"
            }
        }, [i("JqxButton", {
            on: {
                click: function(t) {
                    return e.htmlBtnOnClick()
                }
            }
        }, [e._v("Export to HTML")]), e._v(" "), i("br"), i("br"), e._v(" "), i("JqxButton", {
            on: {
                click: function(t) {
                    return e.jsonBtnOnClick()
                }
            }
        }, [e._v("Export to JSON")])], 1), e._v(" "), i("div", {
            staticStyle: {
                float: "left",
                "margin-left": "10px"
            }
        }, [i("JqxButton", {
            on: {
                click: function(t) {
                    return e.pdfBtnOnClick()
                }
            }
        }, [e._v("Export to PDF")])], 1)])], 1)
    };
    s._withStripped = !0;
    var n = i(4)
      , o = i(35)
      , a = {
        components: {
            JqxGrid: n.a,
            JqxButton: o.a
        },
        data: function() {
            return {
                getWidth: getWidth("grid"),
                dataAdapter: new jqx.dataAdapter(this.source),
                columns: [{
                    text: "First Name",
                    datafield: "firstname",
                    width: 130
                }, {
                    text: "Last Name",
                    datafield: "lastname",
                    width: 130
                }, {
                    text: "Product",
                    datafield: "productname",
                    width: 200
                }, {
                    text: "Available",
                    datafield: "available",
                    columntype: "checkbox",
                    width: 67,
                    cellsalign: "center",
                    align: "center"
                }, {
                    text: "Ship Date",
                    datafield: "date",
                    width: 120,
                    align: "right",
                    cellsalign: "right",
                    cellsformat: "d"
                }, {
                    text: "Quantity",
                    datafield: "quantity",
                    width: 70,
                    align: "right",
                    cellsalign: "right"
                }, {
                    text: "Price",
                    datafield: "price",
                    cellsalign: "right",
                    align: "right",
                    cellsformat: "c2"
                }]
            }
        },
        beforeCreate: function() {
            this.source = {
                localdata: generatedata(100, !1),
                datatype: "array",
                datafields: [{
                    name: "firstname",
                    type: "string"
                }, {
                    name: "lastname",
                    type: "string"
                }, {
                    name: "productname",
                    type: "string"
                }, {
                    name: "available",
                    type: "bool"
                }, {
                    name: "date",
                    type: "date"
                }, {
                    name: "quantity",
                    type: "number"
                }, {
                    name: "price",
                    type: "number"
                }]
            }
        },
        methods: {
            excelBtnOnClick: function() {
                this.$refs.myGrid.exportdata("xls", "jqxGrid")
            },
            xmlBtnOnClick: function() {
                this.$refs.myGrid.exportdata("xml", "jqxGrid")
            },
            csvBtnOnClick: function() {
                this.$refs.myGrid.exportdata("csv", "jqxGrid")
            },
            tsvBtnOnClick: function() {
                this.$refs.myGrid.exportdata("tsv", "jqxGrid")
            },
            htmlBtnOnClick: function() {
                this.$refs.myGrid.exportdata("html", "jqxGrid")
            },
            jsonBtnOnClick: function() {
                this.$refs.myGrid.exportdata("json", "jqxGrid")
            },
            pdfBtnOnClick: function() {
                this.$refs.myGrid.exportdata("pdf", "jqxGrid")
            }
        }
    }
      , l = i(0)
      , d = Object(l.a)(a, s, [], !1, null, null, null);
    d.options.__file = "src/grid/dataexport/App.vue";
    var h = d.exports;
    r.a.config.productionTip = !1,
    new r.a({
        el: "#app",
        components: {
            App: h
        },
        template: "<App/>"
    })
}
]);
